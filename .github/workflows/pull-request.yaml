name: cloudbreak-pull-request-test

env:
  APP_NAME: cloudbreak
  namespace: cloudbreak-pr-${{github.event.number}}
  serviceversion: ${{github.sha}}
  PROJECT: cloudbreak/cloudbreak
  BRANCH: ${{github.base_ref}}
  SOURCE_BRANCH: ${{github.head_ref}}
  PULL_REQUEST_NUMBER: ${{ github.event.number }}

on:
  workflow_dispatch:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  jira-update:
    permissions: write-all
    name: Jira Update
    runs-on: [cb-ubi8-jdk21]

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup secrets
        id: build_secrets
        uses: Kitchen/RE-thirdparty-actions/actions/vault@main
        with:
          tlsSkipVerify: true
          url: https://re-vault.infra.cloudera.com/
          method: kubernetes
          path: rke_re_jenkins
          role: cb
          secrets: |
            cb/data/JIRA_TOKEN JIRA_TOKEN | JIRA_TOKEN;
      - name: Update Jira ticket
        run: |-
          #!/bin/bash -x
          export JIRA_TOKEN=$(echo "${{ steps.build_secrets.outputs.JIRA_TOKEN }}")
          export PULL_REQUEST_NUMBER=$PULL_REQUEST_NUMBER
          export BRANCH=$SOURCE_BRANCH
          export PROJECT=$PROJECT
          ./scripts/jira.sh


  unit-test:
    permissions: write-all
    name: Unit Test
    runs-on: [cb-ubi8-jdk21]

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup secrets
        id: build_secrets
        uses: Kitchen/RE-thirdparty-actions/actions/vault@main
        with:
          tlsSkipVerify: true
          url: https://re-vault.infra.cloudera.com/
          method: kubernetes
          path: rke_re_jenkins
          role: cb
          secrets: |
              cb/data/CM_PRIVATE_REPO_PASSWORD CM_PRIVATE_REPO_PASSWORD | CM_PRIVATE_REPO_PASSWORD;
              cb/data/CM_PRIVATE_REPO_USER CM_PRIVATE_REPO_USER | CM_PRIVATE_REPO_USER;
              cb/data/DOCKERHUB_PASSWORD DOCKERHUB_PASSWORD | DOCKERHUB_PASSWORD;
              cb/data/DOCKERHUB_USERNAME DOCKERHUB_USERNAME | DOCKERHUB_USERNAME;
              cb/data/GITHUB_TOKEN GITHUB_TOKEN | GITHUB_TOKEN;
              cb/data/JIRA_TOKEN JIRA_TOKEN | JIRA_TOKEN;
      - name: Cache Java libs
        id: cache-java
        uses: cloudbreak/cloudbreak-github-actions/actions/cache@master
        env:
          cache-name: cache-java-libs
        with:
          path: |
            /home/jenkins/.gradle/caches
            /home/jenkins/.gradle/wrapper
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/build.gradle') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/build.gradle') }}
            ${{ runner.os }}-build-${{ hashFiles('**/build.gradle') }}
            ${{ runner.os }}-${{ hashFiles('**/build.gradle') }}
      - if: ${{ steps.cache-java.outputs.cache-hit != 'true' }}
        name: List the state of java libs
        continue-on-error: true
        run: ./gradlew dependencies
      - name: Gradle build
        run: |-
          #!/bin/bash -x
          export CM_PRIVATE_REPO_PASSWORD=$(echo "${{ steps.build_secrets.outputs.CM_PRIVATE_REPO_PASSWORD}}")
          export CM_PRIVATE_REPO_USER=$(echo "${{ steps.build_secrets.outputs.CM_PRIVATE_REPO_USER}}")
          export DOCKERHUB_PASSWORD=$(echo "${{ steps.build_secrets.outputs.DOCKERHUB_PASSWORD}}")
          export DOCKERHUB_USERNAME=$(echo "${{ steps.build_secrets.outputs.DOCKERHUB_USERNAME}}")
          ./gradlew -Penv=jenkins -b build.gradle --quiet \
            test \
            jacocoTestReport \
            -x checkstyleMain \
            -x checkstyleTest \
            -x spotbugsMain \
            -x spotbugsTest \
            --no-daemon --parallel -Dorg.gradle.jvmargs="-Xmx2048m -XX:MaxMetaspaceSize=256m -XX:+HeapDumpOnOutOfMemoryError"
      - name: Add Test Report
        if: success() || failure()
        id: test-report
        env:
          GITHUB_TOKEN: ${{ steps.build_secrets.outputs.GITHUB_TOKEN}}
        uses: Kitchen/RE-thirdparty-actions/actions/test-reporter@main
        with:
          name: JUnit Test Report
          path: '**/build/test-results/test/TEST-*.xml'
          reporter: java-junit
          list-suites: 'failed'
          list-tests: 'failed'
          fail-on-error: 'true'
          only-summary: 'true'
      - name: Add coverage to PR
        id: jacoco
        uses: cloudbreak/cloudbreak-github-actions/actions/jacoco-report@master
        with:
          paths: |
            core/build/reports/jacoco/test/jacocoTestReport.xml,
            freeipa/build/reports/jacoco/test/jacocoTestReport.xml,
            autoscale/build/reports/jacoco/test/jacocoTestReport.xml,
            datalake/build/reports/jacoco/test/jacocoTestReport.xml,
            environment-api/build/reports/jacoco/test/jacocoTestReport.xml,
            environment-common/build/reports/jacoco/test/jacocoTestReport.xml,
            environment-remote/build/reports/jacoco/test/jacocoTestReport.xml,
            environment/build/reports/jacoco/test/jacocoTestReport.xml,
            externalized-compute/build/reports/jacoco/test/jacocoTestReport.xml,
            flow/build/reports/jacoco/test/jacocoTestReport.xml,
            redbeams/build/reports/jacoco/test/jacocoTestReport.xml,
            secret-engine/build/reports/jacoco/test/jacocoTestReport.xml,
            secret-rotation/build/reports/jacoco/test/jacocoTestReport.xml,
            template-manager-cmtemplate/build/reports/jacoco/test/jacocoTestReport.xml,
            template-manager-core/build/reports/jacoco/test/jacocoTestReport.xml,
            template-manager-recipe/build/reports/jacoco/test/jacocoTestReport.xml,
            template-manager-tag/build/reports/jacoco/test/jacocoTestReport.xml
          token: ${{ steps.build_secrets.outputs.GITHUB_TOKEN}}
          min-coverage-overall: 55
          min-coverage-changed-files: 55
          title: Cloudbreak code coverage report
          update-comment: true

  checkstyle-main:
    permissions: write-all
    name: Checkstyle Main
    runs-on: [cb-ubi8-jdk21]

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup secrets
        id: build_secrets
        uses: Kitchen/RE-thirdparty-actions/actions/vault@main
        with:
          tlsSkipVerify: true
          url: https://re-vault.infra.cloudera.com/
          method: kubernetes
          path: rke_re_jenkins
          role: cb
          secrets: |
              cb/data/CM_PRIVATE_REPO_PASSWORD CM_PRIVATE_REPO_PASSWORD | CM_PRIVATE_REPO_PASSWORD;
              cb/data/CM_PRIVATE_REPO_USER CM_PRIVATE_REPO_USER | CM_PRIVATE_REPO_USER;
              cb/data/DOCKERHUB_PASSWORD DOCKERHUB_PASSWORD | DOCKERHUB_PASSWORD;
              cb/data/DOCKERHUB_USERNAME DOCKERHUB_USERNAME | DOCKERHUB_USERNAME;
      - name: Cache Java libs
        id: cache-java
        uses: cloudbreak/cloudbreak-github-actions/actions/cache@master
        env:
          cache-name: cache-java-libs
        with:
          path: |
            /home/jenkins/.gradle/caches
            /home/jenkins/.gradle/wrapper
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/build.gradle') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/build.gradle') }}
            ${{ runner.os }}-build-${{ hashFiles('**/build.gradle') }}
            ${{ runner.os }}-${{ hashFiles('**/build.gradle') }}
      - if: ${{ steps.cache-java.outputs.cache-hit != 'true' }}
        name: List the state of java libs
        continue-on-error: true
        run: ./gradlew dependencies
      - name: Gradle build
        run: |-
          #!/bin/bash -x
          export CM_PRIVATE_REPO_PASSWORD=$(echo "${{ steps.build_secrets.outputs.CM_PRIVATE_REPO_PASSWORD}}")
          export CM_PRIVATE_REPO_USER=$(echo "${{ steps.build_secrets.outputs.CM_PRIVATE_REPO_USER}}")
          export DOCKERHUB_PASSWORD=$(echo "${{ steps.build_secrets.outputs.DOCKERHUB_PASSWORD}}")
          export DOCKERHUB_USERNAME=$(echo "${{ steps.build_secrets.outputs.DOCKERHUB_USERNAME}}")
          ./gradlew -Penv=jenkins -b build.gradle check -x spotbugsMain -x spotbugsTest -x checkstyleTest -x test --no-daemon -Dorg.gradle.jvmargs="-Xmx2048m -XX:MaxMetaspaceSize=256m -XX:+HeapDumpOnOutOfMemoryError"
      - uses: cloudbreak/cloudbreak-github-actions/actions/checkstyle-github-action@master
        if: success() || failure()
        name: Checkstyle Main Report
        with:
          name: Checkstyle Main Report
          title: Checkstyle Main Report
          path: '**/checkstyle/main.xml'

  checkstyle-test:
    permissions: write-all
    name: Checkstyle Test
    runs-on: [cb-ubi8-jdk21]

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup secrets
        id: build_secrets
        uses: Kitchen/RE-thirdparty-actions/actions/vault@main
        with:
          tlsSkipVerify: true
          url: https://re-vault.infra.cloudera.com/
          method: kubernetes
          path: rke_re_jenkins
          role: cb
          secrets: |
              cb/data/CM_PRIVATE_REPO_PASSWORD CM_PRIVATE_REPO_PASSWORD | CM_PRIVATE_REPO_PASSWORD;
              cb/data/CM_PRIVATE_REPO_USER CM_PRIVATE_REPO_USER | CM_PRIVATE_REPO_USER;
              cb/data/DOCKERHUB_PASSWORD DOCKERHUB_PASSWORD | DOCKERHUB_PASSWORD;
              cb/data/DOCKERHUB_USERNAME DOCKERHUB_USERNAME | DOCKERHUB_USERNAME;
      - name: Cache Java libs
        id: cache-java
        uses: cloudbreak/cloudbreak-github-actions/actions/cache@master
        env:
          cache-name: cache-java-libs
        with:
          path: |
            /home/jenkins/.gradle/caches
            /home/jenkins/.gradle/wrapper
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/build.gradle') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/build.gradle') }}
            ${{ runner.os }}-build-${{ hashFiles('**/build.gradle') }}
            ${{ runner.os }}-${{ hashFiles('**/build.gradle') }}
      - if: ${{ steps.cache-java.outputs.cache-hit != 'true' }}
        name: List the state of java libs
        continue-on-error: true
        run: ./gradlew dependencies
      - name: Gradle build
        run: |-
          #!/bin/bash -x
          export CM_PRIVATE_REPO_PASSWORD=$(echo "${{ steps.build_secrets.outputs.CM_PRIVATE_REPO_PASSWORD}}")
          export CM_PRIVATE_REPO_USER=$(echo "${{ steps.build_secrets.outputs.CM_PRIVATE_REPO_USER}}")
          export DOCKERHUB_PASSWORD=$(echo "${{ steps.build_secrets.outputs.DOCKERHUB_PASSWORD}}")
          export DOCKERHUB_USERNAME=$(echo "${{ steps.build_secrets.outputs.DOCKERHUB_USERNAME}}")
          ./gradlew -Penv=jenkins -b build.gradle check -x spotbugsMain -x spotbugsTest -x checkstyleMain -x test --no-daemon -Dorg.gradle.jvmargs="-Xmx2048m -XX:MaxMetaspaceSize=256m -XX:+HeapDumpOnOutOfMemoryError"
      - uses: cloudbreak/cloudbreak-github-actions/actions/checkstyle-github-action@master
        if: success() || failure()
        name: Checkstyle Test Report
        with:
          name: Checkstyle Test Report
          title: Checkstyle Test Report
          path: '**/checkstyle/test.xml'

  spotbugs-test:
    permissions: write-all
    name: Spotbugs Test
    runs-on: [cb-ubi8-jdk21]

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup secrets
        id: build_secrets
        uses: Kitchen/RE-thirdparty-actions/actions/vault@main
        with:
          tlsSkipVerify: true
          url: https://re-vault.infra.cloudera.com/
          method: kubernetes
          path: rke_re_jenkins
          role: cb
          secrets: |
              cb/data/CM_PRIVATE_REPO_PASSWORD CM_PRIVATE_REPO_PASSWORD | CM_PRIVATE_REPO_PASSWORD;
              cb/data/CM_PRIVATE_REPO_USER CM_PRIVATE_REPO_USER | CM_PRIVATE_REPO_USER;
              cb/data/DOCKERHUB_PASSWORD DOCKERHUB_PASSWORD | DOCKERHUB_PASSWORD;
              cb/data/DOCKERHUB_USERNAME DOCKERHUB_USERNAME | DOCKERHUB_USERNAME;
      - name: Cache Java libs
        id: cache-java
        uses: cloudbreak/cloudbreak-github-actions/actions/cache@master
        env:
          cache-name: cache-java-libs
        with:
          path: |
            /home/jenkins/.gradle/caches
            /home/jenkins/.gradle/wrapper
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/build.gradle') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/build.gradle') }}
            ${{ runner.os }}-build-${{ hashFiles('**/build.gradle') }}
            ${{ runner.os }}-${{ hashFiles('**/build.gradle') }}
      - if: ${{ steps.cache-java.outputs.cache-hit != 'true' }}
        name: List the state of java libs
        continue-on-error: true
        run: ./gradlew dependencies
      - name: Gradle build
        run: |-
          #!/bin/bash -x
          export CM_PRIVATE_REPO_PASSWORD=$(echo "${{ steps.build_secrets.outputs.CM_PRIVATE_REPO_PASSWORD}}")
          export CM_PRIVATE_REPO_USER=$(echo "${{ steps.build_secrets.outputs.CM_PRIVATE_REPO_USER}}")
          export DOCKERHUB_PASSWORD=$(echo "${{ steps.build_secrets.outputs.DOCKERHUB_PASSWORD}}")
          export DOCKERHUB_USERNAME=$(echo "${{ steps.build_secrets.outputs.DOCKERHUB_USERNAME}}")
          ./gradlew -Penv=jenkins -b build.gradle check -x spotbugsMain -x checkstyleTest -x checkstyleMain -x test --no-daemon -Dorg.gradle.jvmargs="-Xmx2048m -XX:MaxMetaspaceSize=256m -XX:+HeapDumpOnOutOfMemoryError"
      - uses: cloudbreak/cloudbreak-github-actions/actions/spotbugs-github-action@master
        if: success() || failure()
        name: SpotBugs Test Report
        with:
          name: SpotBugs Test Report
          title: SpotBugs Test Report
          path: '**/spotbugsXml.xml'

  spotbugs-main:
    permissions: write-all
    name: Spotbugs Main
    runs-on: [cb-ubi8-jdk21]

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup secrets
        id: build_secrets
        uses: Kitchen/RE-thirdparty-actions/actions/vault@main
        with:
          tlsSkipVerify: true
          url: https://re-vault.infra.cloudera.com/
          method: kubernetes
          path: rke_re_jenkins
          role: cb
          secrets: |
              cb/data/CM_PRIVATE_REPO_PASSWORD CM_PRIVATE_REPO_PASSWORD | CM_PRIVATE_REPO_PASSWORD;
              cb/data/CM_PRIVATE_REPO_USER CM_PRIVATE_REPO_USER | CM_PRIVATE_REPO_USER;
              cb/data/DOCKERHUB_PASSWORD DOCKERHUB_PASSWORD | DOCKERHUB_PASSWORD;
              cb/data/DOCKERHUB_USERNAME DOCKERHUB_USERNAME | DOCKERHUB_USERNAME;
      - name: Cache Java libs
        id: cache-java
        uses: cloudbreak/cloudbreak-github-actions/actions/cache@master
        env:
          cache-name: cache-java-libs
        with:
          path: |
            /home/jenkins/.gradle/caches
            /home/jenkins/.gradle/wrapper
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/build.gradle') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/build.gradle') }}
            ${{ runner.os }}-build-${{ hashFiles('**/build.gradle') }}
            ${{ runner.os }}-${{ hashFiles('**/build.gradle') }}
      - if: ${{ steps.cache-java.outputs.cache-hit != 'true' }}
        name: List the state of java libs
        continue-on-error: true
        run: ./gradlew dependencies
      - name: Gradle build
        run: |-
          #!/bin/bash -x
          export CM_PRIVATE_REPO_PASSWORD=$(echo "${{ steps.build_secrets.outputs.CM_PRIVATE_REPO_PASSWORD}}")
          export CM_PRIVATE_REPO_USER=$(echo "${{ steps.build_secrets.outputs.CM_PRIVATE_REPO_USER}}")
          export DOCKERHUB_PASSWORD=$(echo "${{ steps.build_secrets.outputs.DOCKERHUB_PASSWORD}}")
          export DOCKERHUB_USERNAME=$(echo "${{ steps.build_secrets.outputs.DOCKERHUB_USERNAME}}")
          ./gradlew -Penv=jenkins -b build.gradle check -x spotbugsTest -x checkstyleTest -x checkstyleMain -x test --no-daemon -Dorg.gradle.jvmargs="-Xmx2048m -XX:MaxMetaspaceSize=256m -XX:+HeapDumpOnOutOfMemoryError"
      - uses: cloudbreak/cloudbreak-github-actions/actions/spotbugs-github-action@master
        if: success() || failure()
        name: SpotBugs Main Report
        with:
          name: SpotBugs Main Report
          title: SpotBugs Main Report
          path: '**/spotbugsXml.xml'

  auto-approve:
    permissions: write-all
    name: Auto Approve
    runs-on: [ cb-ubi8-jdk21 ]

    if: github.actor == 'dependabot[bot]' || github.actor == 'cloudbreak-jenkins'
    steps:
      - uses: cloudbreak/cloudbreak-github-actions/actions/auto-approve-action@master
        with:
          review-message: "Auto approved pull request."