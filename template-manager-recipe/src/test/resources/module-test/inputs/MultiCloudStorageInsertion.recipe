#!/bin/bash

FOLDER="/tmp/cs"
FILE_NAME="multiCloudStuff"
FULL_PATH="$FOLDER/$FILE_NAME"
mkdir -p $FOLDER

printIfValid() {
	if [[ ! -z $2 ]] && [[ $2 != \{\{\{fileSystemConfigs.* ]]; then
		echo "$1$2" >> "$FULL_PATH"
	fi
}

function printLogic() {
	if {{{#if fileSystemConfigs.s3}}}true{{{else}}}false{{{/if}}}; then
		printIfValid "instanceProfile:                            " "{{{ fileSystemConfigs.s3.instanceProfile }}}"
		printIfValid "storage container:                          " "{{{ fileSystemConfigs.s3.storageContainer}}}"
		printIfValid "Attached cloud storage location parameters: " "{{{#each fileSystemConfigs.s3.locations}}}{{{ this.configFile }}}: [{{{ this.property }}}: {{{ this.value }}}], {{{/each}}}"
		printIfValid "default file system?                        " "{{{ fileSystemConfigs.s3.defaultFs }}}"
	elif {{{#if fileSystemConfigs.gcs}}}true{{{else}}}false{{{/if}}}; then
		printIfValid "service account email address:              " "{{{ fileSystemConfigs.gcs.serviceAccountEmail }}}"
		printIfValid "storage container:                          " "{{{ fileSystemConfigs.gcs.storageContainer}}}"
		printIfValid "Attached cloud storage location parameters: " "{{{#each fileSystemConfigs.gcs.locations}}}{{{ this.configFile }}}: [{{{ this.property }}}: {{{ this.value }}}], {{{/each}}}"
		printIfValid "default file system?                        " "{{{ fileSystemConfigs.gcs.defaultFs }}}"
	elif {{{#if fileSystemConfigs.adls_gen_2}}}true{{{else}}}false{{{/if}}}; then
		printIfValid "account key:                                " "{{{ fileSystemConfigs.adls_gen_2.accountKey }}}"
		printIfValid "account name:                               " "{{{ fileSystemConfigs.adls_gen_2.accountName }}}"
		printIfValid "storage container name:                     " "{{{ fileSystemConfigs.adls_gen_2.storageContainerName }}}"
		printIfValid "storage container:                          " "{{{ fileSystemConfigs.adls_gen_2.storageContainer}}}"
		printIfValid "Attached cloud storage location parameters: " "{{{#each fileSystemConfigs.adladls_gen_2sGen2.locations}}}{{{ this.configFile }}}: [{{{ this.property }}}: {{{ this.value }}}], {{{/each}}}"
		printIfValid "default file system?                        " "{{{ fileSystemConfigs.adls_gen_2.defaultFs }}}"
	elif {{{#if fileSystemConfigs.adls}}}true{{{else}}}false{{{/if}}}; then
		printIfValid "account name:                               " "{{{ fileSystemConfigs.adls.accountName }}}"
		printIfValid "client ID:                                  " "{{{ fileSystemConfigs.adls.clientId }}}"
		printIfValid "credential:                                 " "{{{ fileSystemConfigs.adls.credential }}}"
		printIfValid "tenant ID:                                  " "{{{ fileSystemConfigs.adls.tenantId }}}"
		printIfValid "storage container:                          " "{{{ fileSystemConfigs.adls.storageContainer}}}"
		printIfValid "Attached cloud storage location parameters: " "{{{#each fileSystemConfigs.adls.locations}}}{{{ this.configFile }}}: [{{{ this.property }}}: {{{ this.value }}}], {{{/each}}}"
		printIfValid "default file system?                        " "{{{ fileSystemConfigs.adls.defaultFs }}}"
	elif {{{#if fileSystemConfigs.wasb}}}true{{{else}}}false{{{/if}}}; then
		printIfValid "account key:                                " "{{{ fileSystemConfigs.wasb.accountKey }}}"
		printIfValid "account name:                               " "{{{ fileSystemConfigs.wasb.accountName }}}"
		printIfValid "storage container name:                     " "{{{ fileSystemConfigs.wasb.storageContainerName }}}"
		printIfValid "secure?                                     " "{{{ fileSystemConfigs.wasb.secure }}}"
		printIfValid "Attached cloud storage location parameters: " "{{{#each fileSystemConfigs.wasb.locations}}}{{{ this.configFile }}}: [{{{ this.property }}}: {{{ this.value }}}], {{{/each}}}"
		printIfValid "default file system?                        " "{{{ fileSystemConfigs.wasb.defaultFs }}}"
	fi
}

main() {
	printLogic
	cd $FOLDER
	if [[ ! -s "$FILE_NAME" ]]; then
		echo "The expected file does not exists or exists but it is empty!"
		exit 400
	fi
	echo "The file has successfully created!"
}

[[ "$0" == "$BASH_SOURCE" ]] && main "$@"