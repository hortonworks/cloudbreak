import org.ajoberstar.grgit.Grgit

buildscript {
  repositories {
    maven { url = "$repoUrl" }
    maven { url = "$springRepoUrl" }
    mavenCentral()
  }
  dependencies {
    classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
  }
}

plugins {
    id "maven-publish"
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

bootRun {
  systemProperty 'spring.profiles.active', System.properties['spring.profiles.active']
  systemProperty 'spring.config.location', System.properties['spring.config.location']
  systemProperty 'spring.config.additional-location', System.properties['spring.config.additional-location']
  if (project.hasProperty('jvmArgs')) {
    jvmArgs += project.jvmArgs.split("\\s+").toList()
  }
}

bootRun {
  main = 'com.sequenceiq.it.IntegrationTestApp'
}

bootJar {
  baseName = 'cloudbreak-integration-test'
  archiveName = 'cloudbreak-integration-test.jar'
  manifest {
    def grgit = Grgit.open(currentDir: project.projectDir)
    attributes "Implementation-Version": grgit.describe()
  }
}

publishing {
    publications {
        bootJava(MavenPublication) {
            artifact bootJar
            artifactId "cloudbreak-integration-test"
        }
    }
    repositories {
        maven {
            url = "$System.env.NEXUS_URL"
            allowInsecureProtocol = true
            credentials {
                username = "$System.env.NEXUS_USER"
                password = "$System.env.NEXUS_PASSWORD"
            }
        }
    }
}

dependencies {
  implementation project(':cloud-common')
  implementation project(':core-api')
  implementation (project(':orchestrator-api')) {
    transitive = false;
  }
  implementation (project(':orchestrator-salt')) {
    transitive = false;
  }
  implementation (project(':cloud-api')) {
    transitive = false;
  }
  implementation (project(':autoscale-api')) {
    transitive = false;
  }
  implementation (project(':freeipa-api')) {
    transitive = false;
  }
  implementation (project(':freeipa-client')) {
    transitive = false;
  }
  implementation (project(':environment-api')) {
    transitive = false;
  }
  implementation (project(':custom-configurations-api')) {
    transitive = false;
  }
  implementation (project(':structuredevent-api-cdp')) {
    transitive = false;
  }
  implementation (project(':structuredevent-model')) {
      transitive = false;
  }
  implementation (project(':structuredevent-service-legacy')) {
    transitive = false;
  }
  implementation (project(':authorization-common-api')) {
    transitive = false;
  }
  implementation (project(':datalake-api')) {
    transitive = false;
  }
  implementation (project(':redbeams-api')) {
    transitive = false;
  }
  implementation (project(':audit-connector')) {
    transitive = false;
  }
  implementation (project(':sdx-connector')) {
    transitive = false;
  }
  implementation (project(':auth-distributor-connector')) {
    transitive = false;
  }
  implementation (project(':idbmms-connector')) {
    transitive = false;
  }

  implementation project(':common')
  implementation project(':cloud-gcp')

  implementation group: 'xerces',              name: 'xercesImpl',            version: xerces

  implementation(group: 'com.amazonaws',                 name: 'aws-java-sdk-core',              version: awsSdkVersion) {
    exclude group: 'commons-logging'
  }
  implementation group: 'com.amazonaws',                 name: 'aws-java-sdk-ec2',               version: awsSdkVersion
  implementation group: 'com.amazonaws',                 name: 'aws-java-sdk-lambda',            version: awsSdkVersion
  implementation group: 'com.amazonaws',                 name: 'aws-java-sdk-s3',                version: awsSdkVersion
  implementation group: 'com.amazonaws',                 name: 'aws-java-sdk-cloudformation',    version: awsSdkVersion

  implementation group: 'org.kohsuke', name: 'wordnet-random-name', version: '1.5'
  implementation group: 'com.google.code.gson',          name: 'gson',                           version: gsonVersion
  implementation (group: 'com.microsoft.azure',          name: 'azure',                          version: azureSdkVersion) { exclude group: 'org.slf4j' }
  implementation (group: 'com.google.apis',              name: 'google-api-services-compute',    version: 'v1-rev20230119-2.0.0'){
    exclude group: 'com.google.guava',  module: 'guava'
  }
  implementation group: 'com.google.apis',               name: 'google-api-services-storage',    version: 'v1-rev20220705-2.0.0'
  implementation group: 'com.google.auth',               name: 'google-auth-library-oauth2-http',            version: '1.15.0'
  implementation group: 'com.google.http-client',        name: 'google-http-client-jackson2',                version: '1.42.3'
  implementation (group: 'com.google.cloud',              name: 'google-cloud-storage',           version: '2.16.0') {
    exclude group: "io.grpc"
  }
  implementation group: 'com.microsoft.azure',           name: 'azure-storage',                  version: azureStorageSdkVersion
  implementation group: 'com.microsoft.azure',           name: 'azure-data-lake-store-sdk',      version: '2.1.5'

  implementation group:  'org.springframework.boot',     name: 'spring-boot-starter',            version: springBootVersion
  implementation group:  'org.springframework.boot',     name: 'spring-boot-starter-test',       version: springBootVersion
  implementation group:  'org.springframework.boot',     name: 'spring-boot-starter-web',        version: springBootVersion
  implementation group:  'org.springframework',          name: 'spring-context-support',         version: springFrameworkVersion

  implementation group:  'org.apache.velocity',          name: 'velocity',                       version: '1.7'
  implementation group:  'org.testng',                   name: 'testng',                         version: testNgVersion
  implementation group:  'javax.el',                     name: 'javax.el-api',                   version: '3.0.0'
  implementation group:  'org.apache.commons',           name: 'commons-lang3',                  version: '3.4'
  implementation group:  'org.opentest4j',               name: 'opentest4j',                     version: '1.2.0'

  implementation(group: "org.junit.vintage",             name: "junit-vintage-engine",           version: junitJupiterVersion) {
    exclude group: "org.hamcrest", module: "hamcrest-core"
  }

  implementation ("org.uncommons:reportng:1.1.4") {
    exclude group: "velocity"
  }
  implementation group: 'net.jcip',                      name: 'jcip-annotations',               version: '1.0'
  implementation (group: 'com.cloudera.api.swagger',     name: 'cloudera-manager-api-swagger',   version: cmClientVersion) {
    transitive = false
  }
  implementation (group: 'com.hierynomus',                name: 'sshj',                           version: '0.34.0') {
    exclude group: "net.i2p.crypto"
  }

  implementation(group: 'net.minidev', name: 'json-smart') {
    version {
      strictly jsonSmartVersion
    }
    because 'CVE-2021-31684'
  }
  implementation(group: 'net.minidev', name: 'accessors-smart') {
    version {
      strictly accessorSmartVersion
    }
    because 'because there is no jar for 2.4.3 in maven central repo...'
  }
  implementation group: 'com.fasterxml.jackson.core',    name: 'jackson-databind',               version: jacksonDatabindVersion

}

test {
  useTestNG()
}
