spring:
  freemarker:
    checkTemplateLocation: false
  main:
    allow-circular-references: true

# The logfiles will be created in this directory, LOG_PATH system property will be set and can be used in logback.xml
# http://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-logging.html#boot-features-logging-file-output
logging:
  file:
    path: ${integrationtest.outputdir}

liftie:
  grpc:
    port: 8987
mock:
  server:
    address: localhost
crn:
  partition: cdp
  region: us-west-1
integrationtest:
  threadCount: 8
  parallel: methods
  timeOut: 6000000
  command: suiteurls
  outputdir: .
  publicKeyFile:
  database:
    connectionUrl: jdbc:postgresql://localhost:5432/
    username: postgres
    password: postgres
  cloudbreak:
    server: http://localhost
  periscope:
    server: http://localhost
    port: 8085
  freeipa:
    server: http://localhost
  environment:
    server: http://localhost
  sdx:
    server: http://localhost
  redbeams:
    server: http://localhost
  externalizedcompute:
    server: http://localhost
  remoteenvironment:
    server: http://localhost
  ums:
    host: ums.thunderhead-dev.cloudera.com
    port: 8982
    # Possible values: default, legacy, e2e, e2e_eu
    accountKey: e2e_eu
    # Possible values: dev, int, stage, prod
    deploymentKey: dev
    jsonSecret:
      name: real-ums-users-dev
      version: e556a55296e349f993d324680baa3350
      destinationPath: "./src/main/resources/ums-users/api-credentials.json"
  user:
    accesskey: Y3JuOmFsdHVzOmlhbTp1cy13ZXN0LTE6Y2xvdWRlcmE6dXNlcjptb2NrdXNlckB1bXMubW9jaw==
    secretkey: nHkdxgZR0BaNHaSYM3ooS6rIlpV5E+k1CIkr+jFId2g=
    crn:
    name:
    workloadPassword: "Admin@123"
  userGroup:
    adminGroupName: testgroupa
    adminGroupCrn: "crn:altus:iam:us-west-1:f8e2f110-fc7e-4e46-ae55-381aacc6718c:group:testgroupa/ebc27aff-7d91-4f76-bf98-e81dbbd615e9"
    userGroupName: testgroupb
    userGroupCrn: "crn:altus:iam:us-west-1:f8e2f110-fc7e-4e46-ae55-381aacc6718c:group:testgroupb/b983b572-9774-4f8f-8377-861b511442de"
  testsuite:
    pollingInterval: 1000
    threadPoolSize: 10
    skipRemainingTestsAfterOneFailed: true
    cleanUpOnFailure: false
  sshPublicKey: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC0Rfl2G2vDs6yc19RxCqReunFgpYj+ucyLobpTCBtfDwzIbJot2Fmife6M42mBtiTmAK6x8kcUEeab6CB4MUzsqF7vGTFUjwWirG/XU5pYXFUBhi8xzey+KS9KVrQ+UuKJh/AN9iSQeMV+rgT1yF5+etVH+bK1/37QCKp3+mCqjFzPyQOrvkGZv4sYyRwX7BKBLleQmIVWpofpjT7BfcCxH877RzC5YMIi65aBc82Dl6tH6OEiP7mzByU52yvH6JFuwZ/9fWj1vXCWJzxx2w0F1OU8Zwg8gNNzL+SVb9+xfBE7xBHMpYFg72hBWPh862Ce36F4NZd3MpWMSjMmpDPh"
  defaultPrivateKeyFile:
  subnetCidr: 10.0.0.0/16
  accessCidr: 0.0.0.0/0
  imageCatalogName: cloudbreak-default
  imageCatalogUrl: https://cloudbreak-imagecatalog.s3.amazonaws.com/v3-test-cb-image-catalog.json
  freeipaImageCatalogUrl: https://cloudbreak-imagecatalog.s3.amazonaws.com/v3-test-freeipa-image-catalog.json
  gatewayPort: null
  imageValidation:
    sourceCatalogName:
    sourceCatalogUrl:
  baseImageTest:
    sourceCatalogName: v3-test
    sourceCatalogUrl: https://cloudbreak-imagecatalog.s3.amazonaws.com/v3-test-cb-image-catalog.json
  tags:
    auto: tesztelek
  clusterShape: LIGHT_DUTY
  internalClusterShape: CUSTOM
  internalSdxBlueprintName: "%s - SDX Light Duty: Apache Hive Metastore, Apache Ranger, Apache Atlas"
  dataEngDistroXBlueprintName: "%s - Data Engineering: Apache Spark%s, Apache Hive, Apache Oozie"
  dataMartDistroXBlueprintName: "%s - Data Mart: Apache Impala, Hue"
  streamsHADistroXBlueprintName: "%s - Streams Messaging High Availability: Apache Kafka, Schema Registry, Streams Messaging Manager, Streams Replication Manager, Cruise Control"
  clouderamanager:
    defaultUser: admin
    defaultPassword: cb1STPneh2b6KyJn
    defaultPort: 7180
  cloudProvider: MOCK
  ycloudTest: false
  runtimeVersion: 7.3.1
  upgrade:
    matrix:
      7.2.17: 7.2.16
      7.2.18: 7.2.17
      7.3.1: 7.2.18
      7.3.2: 7.3.1
    currentHARuntimeVersion: 7.2.18
    currentGovHARuntimeVersion: 7.2.18
    currentRuntimeVersion: 7.2.18
    currentGovRuntimeVersion: 7.2.18
    targetRuntimeVersion: 7.3.1
    distroXUpgradeCurrentVersion: 7.2.18
    distroXUpgradeCurrentGovVersion: 7.2.18
    distroXUpgrade3rdPartyCurrentVersion: 7.2.18
    distroXUpgrade3rdPartyCurrentGovVersion: 7.2.18
    distroXUpgradeTargetVersion: 7.3.1
    distroXUpgrade3rdPartyTargetVersion: 7.3.1
    imageCatalogUrl3rdParty: https://cloudbreak-imagecatalog.s3.amazonaws.com/v3-test-cb-image-catalog.json
  upgradeDatabaseServer:
    originalDatabaseMajorVersion: 11
    targetDatabaseMajorVersion: 14
  privateEndpointEnabled: false
  java:
    supportedVersions: 8,17

  spot:
    enabledCloudPlatforms:
    # disabled
    retryEnabled: false

  stackPatch:
    sleepMinutes: 2

  # aws parameters
  aws:
    govCloud: false
    multiaz: false
    externalDatabaseSslEnforcementSupported: true
    region: eu-central-1
    location: eu-central-1
    availabilityZone: eu-central-1a
    verticalScale:
      volumeType: gp2
      supported: true
      datalake:
        group: master
        instanceType: m5.8xlarge
      datahub:
        group: master
        instanceType: m5.4xlarge
      freeipa:
        group: master
        instanceType: m5.2xlarge
    vpcId: vpc-08ebd4ef51a160824
    subnetIds:
      - subnet-072d4a31e010af1bb
      - subnet-0f9fd28e4ce341398
      - subnet-05bc4f37606560b18
    publicKeyId: api-e2e-test
    credential:
      type: role
      roleArn:
      roleArnExtended:
      accessKeyId:
      secretKey:
    instance:
      type: r5.2xlarge
      rootVolumeSize: 200
      volumeSize: 100
      volumeCount: 1
      volumeType: gp3
    storageOptimizedInstance:
      type: m5d.2xlarge
      rootVolumeSize: 200
      volumeSize: 100
      volumeCount: 1
      volumeType: gp3
    arm64Instance:
      type: m7g.2xlarge
      rootVolumeSize: 200
      volumeSize: 100
      volumeCount: 1
      volumeType: gp3
    baseimage:
      imageId:
    dynamoTableName: apitesting
    cloudstorage:
      s3:
        instanceProfile:
      baseLocation:
      fileSystemType: S3
    hybridCloudSecurityGroupID: sg-02bf7840fc64073fa
    freeipa:
      upgrade:
        imageId: ee52a28a-7551-4f56-8b08-a23f155316ba
        catalog: https://cloudbreak-imagecatalog.s3.amazonaws.com/v3-test-freeipa-image-catalog.json
      rebuild:
        fullbackup: s3://cloudbreak-test-persistent/freeipa_rebuild/full/
        databackup: s3://cloudbreak-test-persistent/freeipa_rebuild/hourly/
    diskEncryption:
      environmentKey:
      datahubKey:
    embeddedDbUpgradeSourceVersion: 11

  # azure parameters
  azure:
    availabilityZone:
    externalDatabaseSslEnforcementSupported: true
    region: West US 2
    location: West US 2
    verticalScale:
      volumeType: StandardSSD_LRS
      supported: true
      datalake:
        group: master
        instanceType: Standard_DS14_v2
      datahub:
        group: master
        instanceType: Standard_D8s_v3
      freeipa:
        group: master
        instanceType: Standard_D8s_v3
    network:
      networkId: cloud-daily
      noPublicIp: true
      resourceGroupName: cloud-daily
      subnetIds:
        - cloud-daily.internal.1.westus2
        - cloud-daily.internal.0.westus2
      flexibleServerSubnetIds:
        - subnet_10_124_116_0-23
      databasePrivateDnsZoneId: /subscriptions/3ddda1c7-d1f5-4e7b-ac81-0523f483b3b3/resourceGroups/cloud-daily/providers/Microsoft.Network/privateDnsZones/privatelink.postgres.database.azure.com
    credential:
      appId:
      appPassword:
      subscriptionId:
      tenantId:
    instance:
      type: Standard_DS13_v2
      rootVolumeSize: 200
      volumeSize: 100
      volumeCount: 1
      volumeType: StandardSSD_LRS
    storageOptimizedInstance:
      type: Standard_L8s_v2
      rootVolumeSize: 200
      volumeSize: 100
      volumeCount: 1
      volumeType: StandardSSD_LRS
    baseimage:
      imageId:
    cloudstorage:
      accountKey:
      accountName:
      baseLocation:
      fileSystemType: ADLS_GEN_2
      adlsGen2:
        assumerIdentity:
        loggerIdentity:
      secure: false
    resourcegroup:
      usage: SINGLE_WITH_DEDICATED_STORAGE_ACCOUNT
      name: cb-e2e-westus2-tmp
    marketplace:
      sdx:
        upgrade:
          imageId: 69d1c57e-155f-49a3-9cbb-e670ab31ae75
          catalog: https://cloudbreak-imagecatalog.s3.us-west-1.amazonaws.com/v3-mp-cb-image-catalog.json
      freeipa:
        image:
          uuid: 4c9de617-26b6-404c-990d-a8b6578f74e4
        catalog:
          url: https://cloudbreak-imagecatalog.s3.amazonaws.com/v3-marketplace-freeipa-image-catalog.json
    freeipa:
      upgrade:
        imageId: dc277098-ea7c-48b7-b1a2-89950b989b6a
        catalog: https://cloudbreak-imagecatalog.s3.amazonaws.com/v3-test-freeipa-image-catalog.json
      marketplace:
        upgrade:
            imageId: 5cc93573-4bf2-49f3-927b-b12a52f72dba
            catalog: https://cloudbreak-imagecatalog.s3.us-west-1.amazonaws.com/v3-mp-freeipa-image-catalog.json
      rebuild:
        fullbackup: abfs://rebuild@cloudbreaktestpersistent.dfs.core.windows.net/full/
        databackup: abfs://rebuild@cloudbreaktestpersistent.dfs.core.windows.net/hourly/
    databaseEncryption:
      encryptionKeyUrl:
    diskEncryption:
      encryptionKeyUrl:
      resourceGroupName:
      managedIdentity:
    embeddedDbUpgradeSourceVersion: 11

  # gcp parameters
  gcp:
    baseimage:
      imageId:
    availabilityZone: europe-west2-a
    externalDatabaseSslEnforcementSupported: false
    region: europe-west2
    location: europe-west2
    verticalScale:
      supported: true
      datalake:
        group: master
        instanceType: n1-standard-32
      datahub:
        group: master
        instanceType: n1-standard-16
      freeipa:
        group: master
        instanceType: n1-standard-16
    network:
      sharedProjectId: gcp-eng-network-enterprise
      networkId: ent-private
      noPublicIp: true
      noFirewallRules: true
      subnetId: private-us-west2
    credential:
      type: json
      json:
        base64:
      p12:
        base64:
        serviceAccountId:
        serviceAccountPrivateKey:
        projectId:
    instance:
      type: e2-highmem-8
      rootVolumeSize: 200
      volumeSize: 100
      volumeCount: 1
      volumeType: pd-standard
    storageOptimizedInstance:
      type: n2-highmem-8
      rootVolumeSize: 200
      volumeSize: 375
      volumeCount: 2
      volumeType: local-ssd
    securityAccess:
      knoxSecurityGroup: cloudbreak
      defaultSecurityGroup: cloudbreak
    cloudstorage:
      baseLocation:
      fileSystemType: GCS
      gcs:
        serviceAccountEmail:
    freeipa:
      upgrade:
        imageId: bbc059cd-d7c7-4938-bb34-5c7fc09f1204
        catalog: https://cloudbreak-imagecatalog.s3.amazonaws.com/v3-test-freeipa-image-catalog.json
      rebuild:
        fullbackup: gs://cloudbreak-test-persistent/rebuild/full
        databackup: gs://cloudbreak-test-persistent/rebuild/hourly
    diskEncryption:
      environmentKey:
      datahubKey:
    embeddedDbUpgradeSourceVersion: 14

  # yarn parameters
  yarn:
    defaultBlueprintName: "%s - SDX Light Duty: Apache Hive Metastore, Apache Ranger, Apache Atlas"
    availabilityZone:
    region: default
    location: Frankfurt
    verticalScale:
      supported: false
    credential:
      endpoint: http://dash.yprod.comops.io
    instance:
      cpuCount: 8
      memory: 32768
      rootVolumeSize: 200
      volumeSize: 0
      volumeCount: 0
    queue: infrastructure-services
    networkCidr: 10.140.0.0/16
    baseimage:
      imageCatalogUrl: https://cloudbreak-imagecatalog.s3.amazonaws.com/v3-test-cb-image-catalog.json
      imageId:
      osType:
    diskEncryption:
      environmentKey:
      datahubKey:

  # mock parameters
  mock:
    region: London
    location: London
    availabilityZone: london-a
    vpcId: vpc1
    networkCidr: 192.168.0.0/16
    verticalScale:
      supported: true
    subnetIds:
      - net1
      - net2
    publicKeyId: publicKeyId
    internetGateway: "1.1.1.1"
    credential:
      type: key
      roleArn:
      accessKeyId:
      secretKey:
    instance:
      type: m5.2xlarge
      volumeSize: 100
      volumeCount: 1
      volumeType: gp3
    baseimage:
      redhat7:
        imageId: f6e778fc-7f17-4535-9021-515351df3691
        blueprints:
          - "%s - Data Engineering: Apache Spark, Apache Hive, Apache Oozie"
    cloudstorage:
      s3:
        instanceProfile: "arn:aws:iam::1234567890:instance-profile/mock.testing.instance.profile"
      baseLocation: "s3a://mock-test"
      fileSystemType: S3
    diskEncryption:
      environmentKey:
      datahubKey:

  cleanup:
      retryCount: 3
      cleanupBeforeStart: false

  defaultBlueprintName:

  kibana:
    url: https://logs-dev-7x.sre.cloudera.com/_plugin/kibana/app/discover#/
    cluster:
    app:

  authdistributor:
    host: thunderhead-mock

  meteringingestion:
    host: thunderhead-mock

  telemetry:
    remoteWriteUrl:

altus:
  audit:
    endpoint: localhost:8982
    enabled: false
loadtest:
  config:
    numThreads: 40
    numTenants: 1
    numEnvironmentsPerTenant: 2
    numDataHubsPerEnvironment: 2
    minNodes: 1
    maxNodes: 5
    imageCatalogId: f6e778fc-7f17-4535-9021-515351df3691