spring:
    freemarker:
        checkTemplateLocation: false

# The logfiles will be created in this directory, LOG_PATH system property will be set and can be used in logback.xml
# http://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-logging.html#boot-features-logging-file-output
logging:
    path: ${integrationtest.outputdir}

integrationtest:
    outputdir: .

    publicKeyFile:

    # uaa properties
    uaa:
        server:
        user:
        password:
        autoscale:
          clientId:
          clientSecret:

    # cloudbreak properites
    cloudbreak:
        server:
    # periscope properites
    periscope:
        server:

    # gcp credential details
    gcpcredential:
       name:
       projectId:
       serviceAccountId:
       p12File:
       jsonFile:
       newServiceAccountId:
       newP12File:

    #ambari credentials
    ambari:
       defaultAmbariUser: admin
       defaultAmbariPassword: admin123!@#
       defaultAmbariPort: 8080

    # aws credential details
    awscredential:
       name:
       roleArn:
       accessKey:
       secretKey:

    # openstack Keystone V2 credential details
    openstackcredential:
       name:
       tenantName:
       userName:
       password:
       endpoint:

  # openstack Engineering V2 credential details
    openstackEngcredential:
      tenantName:
      userName:
      password:
      endpoint:

  # openstack Kilo V2 Admin credential details
    openstackAdmincredential:
      tenantName:
      userName:
      password:
      endpoint:

    # openstack Keystone V3 credential details
    openstackFieldcredential:
      name:
      tenantName:
      userDomain:
      userName:
      password:
      endpoint:
      projectDomainName:
      projectName:
      keystoneAuthScope:
      keystoneVersion:
      apiFacing:
      selector:

    # azure rm credential details
    azurermcredential:
      name:
      secretKey:
      accessKey:
      subscriptionId:
      tenantId:
      newAccessKey:
      newSecretKey:

    rdsconfig:
        rdsUser:
        rdsPassword:
        rdsConnectionUrl:

    ldapconfig:
        ldapServerHost:
        bindPassword:

    proxyconfig:
        proxyHost:
        proxyUser:
        proxyPassword:

    filesystemconfig:
        accountKeyWasb:
        accountKeyAbfs:
        accountNameAbfs:

    mockcredential:
        name:

    mockworkspace:
        name:

    customAmbari:
        aws:
          hdf:
            version:
            repoUrl:
            gpgKeyUrl:

    cleanup:
        retryCount: 3
        cleanupBeforeStart: false

    defaultBlueprintName:

    ambariContainer: hortonworks/ambari-agent

    defaultPrivateKeyFile:

    openstack:
        publicNetId:

    testsuite:
        threadPoolSize: 3
        pollingInterval: 10000
        skipRemainingTestsAfterOneFailed: true
        cleanUpOnFailure: true

    logsearch:
      url:
      components:
      timeRangeInterval: 8
      queryTypes:
      - id: cbid
        name: sdi_cb_id
        label: 'Cb Id'
      - id: cbname
        name: sdi_cb_name
        label: 'Cb Name'
      - id: cbowner
        name: sdt_cb_owner
        label: 'Sdt Cb Owner'

    credentialNames:
        GCP: it-gcp-credential
        AWS: it-aws-credential
        AZURE_RM: itazurermcredential
        OPENSTACK: it-openstack-credential
    defaultNetworks:
       GCP: default-gcp-network
       AWS: default-aws-network
       AZURE_RM: default-azure-rm-network
       AZURE: default-azure-network
    defaultSecurityGroups:
       GCP: UNSECURE-gcp-all-services-open
       AWS: UNSECURE-aws-all-services-open
       AZURE_RM: UNSECURE-azure_rm-all-services-open
       OPENSTACK: UNSECURE-openstack-all-services-open
       AZURE: default-azure-only-ssh-and-ssl

mock:
  server:
    address: localhost
  image:
    catalog:
      url: https://localhost:9443/imagecatalog
