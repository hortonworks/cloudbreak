# GCP credential name must be specified
name: Gcp_simple_kerberostest
parameters: {
  cloudProvider: GCP,
  clusterDefinitionName: "EDW-ETL: Apache Hive 1.2.1, Apache Spark 1.6"
}

tests:
  - name: init
    classes:
      - com.sequenceiq.it.TestSuiteInitializer
      - com.sequenceiq.it.cloudbreak.CloudbreakTestSuiteInitializer

  # integratontest.gcpcredential params must be set in application.yml
  - name: gcpkerb_credential_test
    parameters:
      credentialName: its-gcpkerb-credandsmoke-cred-ssud
    classes:
      - com.sequenceiq.it.cloudbreak.GcpCredentialCreationTest

  - name: create gateway template
    parameters:
      gcpName: it-gcpkerb-credandsmoke-gateway-ssud
      gcpInstanceType: n1-standard-4
      volumeType: pd-standard
      volumeCount: 1
      volumeSize: 30
      templateAdditions: "master,1,GATEWAY"
    classes:
      - com.sequenceiq.it.cloudbreak.GcpTemplateCreationTest

  - name: create worker template
    parameters:
      gcpName: it-gcpkerb-credandsmoke-worker-ssud
      gcpInstanceType: n1-highmem-8
      volumeType: pd-standard
      volumeCount: 2
      volumeSize: 100
      templateAdditions: "worker,3;"
    classes:
      - com.sequenceiq.it.cloudbreak.GcpTemplateCreationTest

  - name: create compute template
    parameters:
      gcpName: it-gcpkerb-credandsmoke-compute-ssud
      gcpInstanceType: n1-highcpu-4
      volumeType: pd-ssd
      volumeCount: 3
      volumeSize: 500
      templateAdditions: "compute,1"
    classes:
      - com.sequenceiq.it.cloudbreak.GcpTemplateCreationTest

  - name: create cluster
    parameters: {
      stackName: it-gcp-kerberos-stack,
      region: europe-west1,
      availabilityZone: europe-west1-b,
      clusterName: it-gcp-kerberos-cluster,
      kerberosMasterKey: masterkey,
      kerberosAdmin: admin,
      kerberosPassword: admin
    }
    classes:
      - com.sequenceiq.it.cloudbreak.StackCreationTest


  - name: stop cluster and stack
    classes:
      - com.sequenceiq.it.cloudbreak.startstop.ClusterAndStackStopTest

  - name: start stack and cluster
    classes:
      - com.sequenceiq.it.cloudbreak.startstop.StackAndClusterStartTest

  - name: upscale stack and cluster
    parameters:
     instanceGroup: worker
     scalingAdjustment: 2
    classes:
      - com.sequenceiq.it.cloudbreak.scaling.StackAndClusterUpscaleTest

  - name: downscale cluster and stack
    parameters:
     instanceGroup: worker
     scalingAdjustment: -1
    classes:
      - com.sequenceiq.it.cloudbreak.scaling.ClusterAndStackDownscaleTest