# GCP credential name must be specified
name: Gcp_updown_smoketest
parameters: {
  cloudProvider: GCP
}

tests:
  - name: init
    classes:
      - com.sequenceiq.it.TestSuiteInitializer
      - com.sequenceiq.it.cloudbreak.CloudbreakTestSuiteInitializer

  - name: create gateway template
    parameters: {
      gccName: it-gcp-smoke-gateway-ud,
      gccInstanceType: N1_STANDARD_4,
      volumeType: HDD,
      volumeCount: 1,
      volumeSize: 30,
      templateAdditions: "cbgateway,1,GATEWAY"
    }
    classes:
      - com.sequenceiq.it.cloudbreak.GCCTemplateCreationTest

  - name: create master template
    parameters: {
      gccName: it-gcp-smoke-master-ud,
      gccInstanceType: N1_HIGHMEM_8,
      volumeType: HDD,
      volumeCount: 2,
      volumeSize: 100,
      templateAdditions: "master,1"
    }
    classes:
      - com.sequenceiq.it.cloudbreak.GCCTemplateCreationTest

  - name: create slave template
    parameters: {
      gccName: it-gcp-smoke-slave-ud,
      gccInstanceType: N1_HIGHCPU_4,
      volumeType: SSD,
      volumeCount: 3,
      volumeSize: 500,
      templateAdditions: "slave_1,3"
    }
    classes:
      - com.sequenceiq.it.cloudbreak.GCCTemplateCreationTest

  - name: create cluster
    parameters: {
      stackName: it-gcp-stack-ud,
      region: EUROPE_WEST1_B,
      clusterName: it-gcp-cluster-ud
    }
    classes:
      - com.sequenceiq.it.cloudbreak.StackCreationTest
      - com.sequenceiq.it.cloudbreak.ClusterCreationTest

  - name: upscale
    parameters: {
      instanceGroup: slave_1,
      scalingAdjustment: 3
    }
    classes:
      - com.sequenceiq.it.cloudbreak.ScalingTest

  - name: downscale
    parameters: {
      instanceGroup: slave_1,
      scalingAdjustment: -2
    }
    classes:
      - com.sequenceiq.it.cloudbreak.ScalingTest
