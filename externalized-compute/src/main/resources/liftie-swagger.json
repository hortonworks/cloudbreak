{
    "swagger": "2.0",
    "info": {
        "description": "Liftie provides K8s provisioning across cloud providers.",
        "title": "Liftie API",
        "contact": {
            "name": "Compute Platform Team",
            "url": "https://cloudera.slack.com/messages/CHGPU2EJK"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:9999",
    "paths": {
        "/liftie/api/v1/cluster": {
            "get": {
                "description": "List clusters of a given environment/tenant/cluster-name/status/workload",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "List clusters of a given environment and workload",
                "operationId": "list-cluster-by-query",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "for env filtering, values can be either crn or name. Optional",
                        "name": "env",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "for tenant filtering. Required",
                        "name": "tenant",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "for cluster filtering. Optional",
                        "name": "cluster-name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "for status filtering. Optional",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "for workload filtering. Optional",
                        "name": "workloads",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "for including deleted clusters in the response. Optional.",
                        "name": "include-deleted",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "for list paging. Optional",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size. Optional",
                        "name": "page-size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ListClustersResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    }
                }
            },
            "put": {
                "description": "Register a K8s cluster",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Register a K8s cluster",
                "operationId": "register-cluster",
                "parameters": [
                    {
                        "description": "Register cluster request",
                        "name": "cluster",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.RegisterClusterRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "To perform dryrun",
                        "name": "dry-run",
                        "in": "query"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/common.RegisterClusterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a K8s cluster",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Create a K8s cluster",
                "operationId": "create-cluster",
                "parameters": [
                    {
                        "description": "Create cluster request",
                        "name": "cluster",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.CreateClusterRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/common.CreateClusterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/liftie/api/v1/cluster/{cluster-id}": {
            "get": {
                "description": "Get status of a K8s cluster",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Get status of a K8s cluster",
                "operationId": "get-cluster-status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster cluster-id",
                        "name": "cluster-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ClusterView"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a managed K8s cluster",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Update a managed K8s cluster",
                "operationId": "update-managed-cluster",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster cluster-id",
                        "name": "cluster-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update cluster request",
                        "name": "cluster",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.UpdateClusterRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/common.UpdateClusterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a K8s cluster",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Delete a K8s cluster",
                "operationId": "delete-cluster",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster cluster-id",
                        "name": "cluster-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.DeleteClusterResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a Registered K8s cluster",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Update a Registered K8s cluster",
                "operationId": "update-registered-cluster",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster cluster-id",
                        "name": "cluster-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update cluster request",
                        "name": "cluster",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.UpdateRegisteredClusterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.UpdateRegisteredClusterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/liftie/api/v1/cluster/{cluster-id}/cloud-logs": {
            "get": {
                "description": "Outputs the Cloud Provider Logs",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Provides the cloud provider logs for the given cluster",
                "operationId": "cloud-logs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster cluster-id",
                        "name": "cluster-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Get the Cloud Logs for the given Cluster request",
                        "name": "cluster",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/common.GetCloudLogsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.GetCloudLogsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/liftie/api/v1/cluster/{cluster-id}/deployments": {
            "get": {
                "description": "Gets the helm charts that are available for deployment or have already been deployed in this cluster.",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Gets a cluster's add-on deployments.",
                "operationId": "cluster-get-deployments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster cluster-id",
                        "name": "cluster-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.DeploymentListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/liftie/api/v1/cluster/{cluster-id}/deployments/{namespace}": {
            "get": {
                "description": "Gets the helm charts that are deployed in this cluster for the given namespace.",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Gets a cluster's add-on deployments in a specific namespace.",
                "operationId": "cluster-get-deployments-by-namespace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster cluster-id",
                        "name": "cluster-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Set true to get detailed response. Optional.",
                        "name": "verbose",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.DeploymentListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    }
                }
            },
            "post": {
                "description": "Installs a new deployment in the specified namespace. Although the deployment is free to place its",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Installs a new deployment in the specified namespace.",
                "operationId": "cluster-install-deployment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster cluster-id",
                        "name": "cluster-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Install deployment request",
                        "name": "deployment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.DeploymentInstallRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/common.DeploymentStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/liftie/api/v1/cluster/{cluster-id}/deployments/{namespace}/{deployment-name}": {
            "get": {
                "description": "Gets a single deployment along with its extended history. This can also include all of the known templates.",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Gets a single deployment along with its extended history.",
                "operationId": "cluster-get-deployment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster cluster-id",
                        "name": "cluster-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Deployment deployment-name",
                        "name": "deployment-name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.DeploymentStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates a deployment to a different chart. This will either perform an upgrade or a rollback.",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Updates a deployment to a different chart.",
                "operationId": "cluster-update-deployment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster cluster-id",
                        "name": "cluster-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Deployment deployment-name",
                        "name": "deployment-name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update deployment request",
                        "name": "deployment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.DeploymentUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/common.DeploymentUpdateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a deployment that is currently installed and managed for this cluster",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Delete a deployment from a cluster",
                "operationId": "delete-deployment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster cluster-id",
                        "name": "cluster-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Deployment Name deployment-name",
                        "name": "deployment-name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Delete deployment request",
                        "name": "deployment",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/common.DeploymentDeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.DeploymentDeleteResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/liftie/api/v1/cluster/{cluster-id}/dockerconfig": {
            "put": {
                "description": "Updates the docker configs in the cluster",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Updates the docker configs in the cluster",
                "operationId": "update-docker-config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster cluster-id",
                        "name": "cluster-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/liftie/api/v1/cluster/{cluster-id}/health": {
            "get": {
                "description": "Get health of a K8s cluster",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Get health of a K8s cluster",
                "operationId": "get-cluster-health",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster cluster-id",
                        "name": "cluster-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Gets a detailed cluster health",
                        "name": "verbose",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ClusterHealth"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/liftie/api/v1/cluster/{cluster-id}/instance-groups": {
            "post": {
                "description": "Create one or more instance groups in a managed K8s cluster",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Create one or more instance groups in a managed K8s cluster",
                "operationId": "create-instance-groups",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster clusterId",
                        "name": "cluster-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Create cluster instance groups request body",
                        "name": "instance-group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.CreateInstanceGroupsRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/common.CreateInstanceGroupsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/liftie/api/v1/cluster/{cluster-id}/instance-groups/{instance-group-name}": {
            "put": {
                "description": "Update an instance group of a managed K8s cluster",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Update an instance group of a managed K8s cluster",
                "operationId": "update-instance-group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster clusterId",
                        "name": "cluster-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster instance group name",
                        "name": "instance-group-name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update cluster instance group request body",
                        "name": "instance-group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.UpdateInstanceGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/common.UpdateInstanceGroupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an instance group of a managed K8s cluster",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Delete an instance group of a managed K8s cluster",
                "operationId": "delete-instance-group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster clusterId",
                        "name": "cluster-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster instance group name",
                        "name": "instance-group-name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Cluster State version value",
                        "name": "clusterStateVersion",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/common.DeleteInstanceGroupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/liftie/api/v1/cluster/{cluster-id}/kubeconfig": {
            "get": {
                "description": "Generate kubeconfig for a K8s cluster",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Generate kubeconfig for a K8s cluster",
                "operationId": "generate-kubeconfig",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster cluster-id",
                        "name": "cluster-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "service name",
                        "name": "service",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Gets a kubeconfig with a proxy as the k8s API server",
                        "name": "proxy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/liftie/api/v1/cluster/{cluster-id}/operations": {
            "get": {
                "description": "Gets the list of operations against a cluster",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Gets the list of operations against a cluster",
                "operationId": "list-cluster-operations",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster cluster-id",
                        "name": "cluster-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/common.OperationView"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "404": {
                        "description": "When the cluster cannot be found",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/liftie/api/v1/cluster/{cluster-id}/operations/{operation-id}": {
            "get": {
                "description": "Gets the operation detail for a cluster",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Gets the operation detail for a cluster",
                "operationId": "get-cluster-operation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster cluster-id",
                        "name": "cluster-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Operation id",
                        "name": "operation-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.OperationDetailView"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "404": {
                        "description": "When the cluster cannot be found",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/liftie/api/v1/cluster/{cluster-id}/refresh-service-account-token": {
            "put": {
                "description": "Refreshes service account token for a cluster",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Refreshes service account token for a cluster",
                "operationId": "Refresh-ServiceAccount-token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster cluster-id",
                        "name": "cluster-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/liftie/api/v1/cluster/{cluster-id}/update-machine-user-credentials": {
            "put": {
                "description": "Updates the AccessKeyID and Private Key",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Updates the machine user credentials",
                "operationId": "update-machine-user-cred",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster cluster-id",
                        "name": "cluster-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.UpdateWorkloadMachineUserCredResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/liftie/api/v1/cluster/{cluster-id}/upgrades": {
            "get": {
                "description": "Gets the list of upgrades for a cluster",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Gets the list of upgrades for a cluster",
                "operationId": "list-cluster-upgrades",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster cluster-id",
                        "name": "cluster-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/common.UpgradeListView"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "404": {
                        "description": "When the cluster cannot be found",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    }
                }
            },
            "post": {
                "description": "Upgrades a kubernetes cluster version",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Upgrades a kubernetes cluster version",
                "operationId": "cluster-id",
                "parameters": [
                    {
                        "description": "Upgrade cluster request",
                        "name": "upgrade",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.UpgradeClusterRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Cluster cluster-id",
                        "name": "cluster-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/common.UpgradeClusterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationResponse"
                        }
                    }
                }
            }
        },
        "/liftie/api/v1/cluster/{cluster-id}/user": {
            "get": {
                "description": "List users of the K8s cluster",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "List users of the K8s cluster",
                "operationId": "list-user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster cluster-id",
                        "name": "cluster-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "list only admins",
                        "name": "onlyAdmins",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/common.UserInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    }
                }
            },
            "post": {
                "description": "Adds a user to the K8s cluster",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Add a user to the K8s cluster",
                "operationId": "add-user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster cluster-id",
                        "name": "cluster-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Add user request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.AddUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/common.UserStatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/liftie/api/v1/cluster/{cluster-id}/user/{user-id}": {
            "get": {
                "description": "Describes a user of the K8s cluster",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Describes a user of the K8s cluster",
                "operationId": "get-user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster cluster-id",
                        "name": "cluster-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User id",
                        "name": "user-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.UserInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a user from the K8s cluster",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Deletes a user from the K8s cluster",
                "operationId": "delete-user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster cluster-id",
                        "name": "cluster-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User id",
                        "name": "user-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.UserStatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/liftie/api/v1/cluster/{cluster-id}/versions": {
            "get": {
                "description": "Gets the list of versions for a cluster",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Gets the list of versions for a cluster",
                "operationId": "list-cluster-versions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster cluster-id",
                        "name": "cluster-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/common.OperationView"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "404": {
                        "description": "When the cluster cannot be found",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/liftie/api/v1/cluster/{cluster-id}/versions/{version-id}": {
            "get": {
                "description": "Gets the version detail for a cluster",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Gets the version detail for a cluster",
                "operationId": "get-cluster-version",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster cluster-id",
                        "name": "cluster-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cluster version value",
                        "name": "version-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.OperationDetailView"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "404": {
                        "description": "When the cluster cannot be found",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/liftie/api/v1/clusterfilter": {
            "post": {
                "description": "List clusters of a given status,k8sVersions, cloudPlatforms, fromCreatedTime, toCreatedTime, workloads",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Cluster filter used to restrict the clusters to which the update will apply to.",
                "operationId": "cluster-filter",
                "parameters": [
                    {
                        "description": "List Clusters By Filter request",
                        "name": "cluster",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/common.ListClustersByFilterRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "for list paging. Optional",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size. Optional",
                        "name": "page-size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ListClustersByFilterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/liftie/api/v1/compute-resource-pools": {
            "get": {
                "description": "Get compute resource pools (CRPs)",
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Get compute resource pools (CRPs)",
                "operationId": "get-all-crp",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CRP crp-id of the root of the subtree",
                        "name": "crpId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "CRP full-name of the root of the subtree",
                        "name": "crpFullName",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Depth of the subtree to be returned, empty/negative for entire subtree",
                        "name": "depth",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ListCRPNode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_crp_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_crp_common.StatusMessage"
                        }
                    }
                }
            },
            "post": {
                "description": "Create compute resource pools (CRPs)",
                "consumes": [
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Create compute resource pools (CRPs)",
                "operationId": "create-crp",
                "parameters": [
                    {
                        "description": "Create crp request",
                        "name": "crp",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.CreateCrpRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/common.CreateCrpResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_crp_common.StatusMessage"
                        }
                    },
                    "415": {
                        "description": "Unsupported Media Type",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_crp_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_crp_common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/liftie/api/v1/compute-resource-pools/{crp-id}": {
            "get": {
                "description": "Get compute resource pool (CRP)",
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Get compute resource pool (CRP)",
                "operationId": "get-crp",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CRP crp-id",
                        "name": "crp-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.GetCrpResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_crp_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_crp_common.StatusMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete compute resource pool (CRP)",
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Delete compute resource pool (CRP)",
                "operationId": "delete-crp",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CRP crp-id",
                        "name": "crp-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/common.DeleteCrpResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_crp_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_crp_common.StatusMessage"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update compute resource pool (CRP)",
                "consumes": [
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Update compute resource pool (CRP)",
                "operationId": "update-crp",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CRP crp-id",
                        "name": "crp-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update crp request",
                        "name": "crp",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.UpdateCrpRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/common.UpdateCrpResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_crp_common.StatusMessage"
                        }
                    },
                    "415": {
                        "description": "Unsupported Media Type",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_crp_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_crp_common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/liftie/api/v1/prerequisites": {
            "get": {
                "description": "The static details are generally related to setting up initial policy, template or cloud platform",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Returns all the pre-requisite static details for a given cloud provider as base64 encoded string(s) (Eg: policy, template etc)",
                "operationId": "prerequisite-cloud-platform-details-get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cloud Provider. Required",
                        "name": "cloud-platform",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.CloudPlatformPreReqDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/liftie/api/v1/tenant/{tenant}/env/{env}/cluster": {
            "get": {
                "description": "List clusters of a given environment/tenant/workload",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "List clusters of a given environment and workload",
                "operationId": "list-cluster-by-path",
                "parameters": [
                    {
                        "type": "string",
                        "description": "for env filtering, value can be either crn or name. Required",
                        "name": "env",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "for tenant filtering. Required",
                        "name": "tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "for workload filtering. Optional",
                        "name": "workloads",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "for including deleted clusters in the response. Optional.",
                        "name": "include-deleted",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "for list paging. Optional",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size. Optional",
                        "name": "page-size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ListClustersResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/liftie/api/v1/validate/cluster": {
            "get": {
                "description": "Gets all of the pre-flight validation checks that can run before a cluster is provisioned.",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "List of all validation checks.",
                "operationId": "validation-checks-provisioning-get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/common.Validation"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    }
                }
            },
            "post": {
                "description": "Execute pre-flight validation checks before provisioning a cluster.",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Execute pre-flight validation checks.",
                "operationId": "validation-checks-provisioning-execute",
                "parameters": [
                    {
                        "description": "Create cluster request",
                        "name": "cluster",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.CreateClusterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/liftie/api/v1/validate/instance-groups": {
            "get": {
                "description": "Gets all of the pre-flight validation checks that can run for a create instance group request.",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "List of all create instance group validation checks.",
                "operationId": "validation-checks-create-instance-group-get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/common.Validation"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/liftie/api/v1/validate/instance-groups/{cluster-id}": {
            "post": {
                "description": "Execute pre-flight validation checks for a create instance group request.",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Execute pre-flight instance group validation checks.",
                "operationId": "validation-checks-create-instance-group-execute",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster cluster-id",
                        "name": "cluster-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Create cluster instance groups request body",
                        "name": "instance-group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.CreateInstanceGroupsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/liftie/api/v1/validate/update-cluster": {
            "get": {
                "description": "Gets all of the pre-flight validation checks that can run for an update cluster request.",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "List of all update cluster validation checks.",
                "operationId": "validation-checks-update-cluster-get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/common.Validation"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/liftie/api/v1/validate/update-cluster/{cluster-id}": {
            "post": {
                "description": "Execute pre-flight validation checks for an update cluster request.",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Execute pre-flight update cluster validation checks.",
                "operationId": "validation-checks-update-cluster-execute",
                "parameters": [
                    {
                        "description": "Update cluster request",
                        "name": "updateClusterRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.UpdateClusterRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Cluster cluster-id",
                        "name": "cluster-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/liftie/api/v1/validate/upgrade-cluster": {
            "get": {
                "description": "Gets all of the pre-flight validation checks that can run for an upgrade cluster request.",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "List of all upgrade cluster validation checks.",
                "operationId": "validation-checks-upgrade-cluster-get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/common.Validation"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/liftie/api/v1/validate/upgrade-cluster/{cluster-id}": {
            "post": {
                "description": "Execute pre-flight validation checks for an upgrade cluster request.",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Execute pre-flight upgrade cluster validation checks.",
                "operationId": "validation-checks-upgrade-cluster-execute",
                "parameters": [
                    {
                        "description": "Upgrade cluster request",
                        "name": "upgradeClusterRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.UpgradeClusterRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Cluster cluster-id",
                        "name": "cluster-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ValidationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/liftie/api/v1/version": {
            "get": {
                "description": "Returns Liftie version details",
                "consumes": [
                    "application/json",
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Returns the details for the running version of liftie",
                "operationId": "get-liftie-version",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.LiftieVersionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/quota/api/v1/compute-resource-pools": {
            "get": {
                "description": "Get compute resource pools (CRPs)",
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Get compute resource pools (CRPs)",
                "operationId": "get-all-crp-async",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CRP crp-id of the root of the subtree",
                        "name": "crpId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "CRP full-name of the root of the subtree",
                        "name": "crpFullName",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Depth of the subtree to be returned, empty/negative for entire subtree",
                        "name": "depth",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ListCRPNode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_crp_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_crp_common.StatusMessage"
                        }
                    }
                }
            },
            "post": {
                "description": "Create compute resource pools (CRPs)",
                "consumes": [
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Create compute resource pools (CRPs)",
                "operationId": "create-crp-async",
                "parameters": [
                    {
                        "description": "Create crp request",
                        "name": "crp",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.CreateCrpRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/common.CreateCrpResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_crp_common.StatusMessage"
                        }
                    },
                    "415": {
                        "description": "Unsupported Media Type",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_crp_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_crp_common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/quota/api/v1/compute-resource-pools/{crp-id}": {
            "get": {
                "description": "Get compute resource pool (CRP)",
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Get compute resource pool (CRP)",
                "operationId": "get-crp-async",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CRP crp-id",
                        "name": "crp-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.GetCrpResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_crp_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_crp_common.StatusMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete compute resource pool (CRP)",
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Delete compute resource pool (CRP)",
                "operationId": "delete-crp-async",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CRP crp-id",
                        "name": "crp-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/common.DeleteCrpResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_crp_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_crp_common.StatusMessage"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update compute resource pool (CRP)",
                "consumes": [
                    "application/yaml"
                ],
                "produces": [
                    "application/json",
                    "application/yaml"
                ],
                "summary": "Update compute resource pool (CRP)",
                "operationId": "update-crp-async",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CRP crp-id",
                        "name": "crp-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update crp request",
                        "name": "crp",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.UpdateCrpRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/common.UpdateCrpResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_crp_common.StatusMessage"
                        }
                    },
                    "415": {
                        "description": "Unsupported Media Type",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_crp_common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_crp_common.StatusMessage"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "common.APIServer": {
            "type": "object",
            "properties": {
                "authorizedIPRanges": {
                    "description": "An array of IPv4 CIDR blocks",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enabled": {
                    "type": "boolean"
                }
            }
        },
        "common.AWSCloudLogs": {
            "type": "object",
            "properties": {
                "autoScalingGroupActivityLogs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.AutoScalingGroupActivity"
                    }
                },
                "cloudFormationStackEvents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.StackEvent"
                    }
                },
                "cloudWatchLogs": {
                    "$ref": "#/definitions/common.CloudWatchLogsOutput"
                }
            }
        },
        "common.AWSLogsSource": {
            "type": "object",
            "properties": {
                "autoScalingGroupActivity": {
                    "type": "boolean"
                },
                "cloudFormationStackEvents": {
                    "type": "boolean"
                },
                "cloudWatchLogs": {
                    "type": "boolean"
                }
            }
        },
        "common.Accelerator": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int64"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "common.AddUserRequest": {
            "type": "object",
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "isAdmin": {
                    "type": "boolean"
                },
                "isRole": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "common.Alertmanager": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            }
        },
        "common.AutoScaling": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "max_instance": {
                    "type": "integer",
                    "format": "int64"
                },
                "min_instance": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "common.AutoScalingGroupActivity": {
            "type": "object",
            "properties": {
                "AwsLogType": {
                    "type": "string"
                },
                "activityId": {
                    "type": "string"
                },
                "autoScalingGroupARN": {
                    "type": "string"
                },
                "autoScalingGroupName": {
                    "type": "string"
                },
                "autoScalingGroupState": {
                    "type": "string"
                },
                "cause": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "details": {
                    "type": "string"
                },
                "endTime": {
                    "type": "string"
                },
                "nextPageToken": {
                    "type": "string"
                },
                "progress": {
                    "type": "integer"
                },
                "startTime": {
                    "type": "string"
                },
                "statusCode": {
                    "type": "string"
                },
                "statusMessage": {
                    "type": "string"
                }
            }
        },
        "common.AutoScalingGroupActivityPagination": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "string"
                },
                "pageSize": {
                    "type": "integer"
                }
            }
        },
        "common.Autoscaler": {
            "type": "object",
            "properties": {
                "max_graceful_termination_sec": {
                    "description": "Azure Support",
                    "type": "integer",
                    "format": "int64"
                },
                "scale_down_delay_after_add": {
                    "description": "Azure/AWS Support",
                    "type": "string"
                },
                "scale_down_delay_after_delete": {
                    "description": "Azure/AWS Support",
                    "type": "string"
                },
                "scale_down_delay_after_failure": {
                    "description": "Azure/AWS Support",
                    "type": "string"
                },
                "scale_down_enabled": {
                    "description": "AWS Support",
                    "type": "boolean"
                },
                "scale_down_non_empty_candidates_count": {
                    "description": "AWS Support",
                    "type": "integer"
                },
                "scale_down_unneeded_time": {
                    "description": "Azure/AWS Support",
                    "type": "string"
                },
                "scale_down_unready_time": {
                    "description": "Azure Support",
                    "type": "string"
                },
                "scale_down_utilization_threshold": {
                    "description": "Azure/AWS Support",
                    "type": "number"
                },
                "scan_interval": {
                    "description": "Azure/AWS Support",
                    "type": "string"
                },
                "skip_nodes_with_local_storage": {
                    "description": "AWS Support",
                    "type": "boolean"
                },
                "skip_nodes_with_system_pods": {
                    "description": "AWS Support",
                    "type": "boolean"
                }
            }
        },
        "common.AvailableDeploymentUpgrade": {
            "type": "object",
            "properties": {
                "applicationVersion": {
                    "description": "The version of the components which would be installed from this deployment",
                    "type": "string"
                },
                "deploymentVersion": {
                    "description": "The version of the deployment that this available to upgrade to",
                    "type": "string"
                }
            }
        },
        "common.AwsInstanceGroupConfig": {
            "type": "object",
            "properties": {
                "instance_requirements": {
                    "description": "InstanceRequirements are an alternative to InstanceType/InstanceTypes for EKS InstanceGroups",
                    "$ref": "#/definitions/common.InstanceRequirements"
                }
            }
        },
        "common.AwsNetworking": {
            "type": "object"
        },
        "common.AwsStaticDetailsResponse": {
            "type": "object",
            "properties": {
                "cloudFormationIamCreatorTemplate": {
                    "type": "string"
                },
                "csiPolicy": {
                    "type": "string"
                },
                "policy": {
                    "type": "string"
                }
            }
        },
        "common.AwsVpcCni": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            }
        },
        "common.AzureActivityLog": {
            "type": "object",
            "properties": {
                "correlationId": {
                    "type": "string"
                },
                "eventTimestamp": {
                    "type": "string"
                },
                "logLevel": {
                    "type": "string"
                },
                "operationId": {
                    "type": "string"
                },
                "operationName": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "resourceId": {
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "statusMessage": {
                    "type": "string"
                }
            }
        },
        "common.AzureCloudLogs": {
            "type": "object",
            "properties": {
                "azureLogs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.AzureActivityLog"
                    }
                },
                "azureState": {
                    "$ref": "#/definitions/common.AzureState"
                }
            }
        },
        "common.AzureLogsSource": {
            "type": "object"
        },
        "common.AzureNetworking": {
            "type": "object",
            "properties": {
                "usePublicDnsForPrivateAks": {
                    "description": "Instruct Azure to use public DNS for all DNS records in a private cluster. This is only valid for private AKS clusters.",
                    "type": "boolean"
                }
            }
        },
        "common.AzureState": {
            "type": "object",
            "properties": {
                "subscriptionId": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string"
                }
            }
        },
        "common.AzureStaticDetailsResponse": {
            "type": "object",
            "properties": {
                "policy": {
                    "type": "string"
                }
            }
        },
        "common.AzureUpdateClusterSpec": {
            "type": "object",
            "properties": {
                "updateAksManagedIdentity": {
                    "description": "Updates the ManagedIdentity used by the AKS cluster",
                    "type": "boolean"
                }
            }
        },
        "common.CRPDimension": {
            "type": "object",
            "properties": {
                "dimension": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "common.CRPMetadata": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "clusterId": {
                    "type": "string"
                },
                "entityAssociations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.CRPDimension"
                    }
                },
                "name": {
                    "description": "Fully qualified name",
                    "type": "string"
                }
            }
        },
        "common.CRPSpec": {
            "type": "object",
            "required": [
                "quota"
            ],
            "properties": {
                "namespace": {
                    "description": "TODO Support for array of namespaces? Why not?",
                    "$ref": "#/definitions/common.GenericNamespace"
                },
                "quota": {
                    "description": "Valid for all CRP kinds",
                    "$ref": "#/definitions/common.Quota"
                }
            }
        },
        "common.ChartResponse": {
            "type": "object",
            "properties": {
                "applicationVersion": {
                    "description": "The version (usually of the images) of the components being deployed",
                    "type": "string"
                },
                "deploymentVersion": {
                    "description": "The version of this chart (which is not the version of the components being deployed)",
                    "type": "string"
                },
                "description": {
                    "description": "A chart's description",
                    "type": "string"
                },
                "icon": {
                    "description": "A URL to an SVG or PNG image to be used as an icon (optional).",
                    "type": "string"
                },
                "name": {
                    "description": "A chart's name",
                    "type": "string"
                },
                "values": {
                    "description": "The default values.yaml used for the chart.",
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "common.CloudPlatformPreReqDetailsResponse": {
            "type": "object",
            "properties": {
                "aws": {
                    "$ref": "#/definitions/common.AwsStaticDetailsResponse"
                },
                "azure": {
                    "$ref": "#/definitions/common.AzureStaticDetailsResponse"
                },
                "gcp": {
                    "$ref": "#/definitions/common.GcpStaticDetailsResponse"
                },
                "kcloud": {
                    "$ref": "#/definitions/common.KcloudStaticDetailsResponse"
                },
                "mockDriver": {
                    "$ref": "#/definitions/common.MockDriverStaticDetailsResponse"
                },
                "redhat": {
                    "$ref": "#/definitions/common.RedHatStaticDetailsResponse"
                },
                "rke": {
                    "$ref": "#/definitions/common.RkeStaticDetailsResponse"
                },
                "standard": {
                    "$ref": "#/definitions/common.StandardStaticDetailsResponse"
                }
            }
        },
        "common.CloudProviderDetails": {
            "type": "object",
            "properties": {
                "awsLogs": {
                    "$ref": "#/definitions/common.AWSCloudLogs"
                },
                "azureLogs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.AzureActivityLog"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "common.CloudWatchLog": {
            "type": "object",
            "properties": {
                "awsLogType": {
                    "type": "string"
                },
                "logEventTimeStamp": {
                    "type": "string"
                },
                "logStreamName": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "common.CloudWatchLogsOutput": {
            "type": "object",
            "properties": {
                "logs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.CloudWatchLog"
                    }
                },
                "nextPageToken": {
                    "type": "string"
                }
            }
        },
        "common.CloudWatchLogsPagination": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "string"
                },
                "pageSize": {
                    "type": "integer"
                }
            }
        },
        "common.ClusterHealth": {
            "type": "object",
            "properties": {
                "clusterId": {
                    "type": "string"
                },
                "daemonSets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.DaemonSetInfo"
                    }
                },
                "deployments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.DeploymentInfo"
                    }
                },
                "errorMessages": {
                    "$ref": "#/definitions/common.ErrorMessages"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.NodeInfo"
                    }
                },
                "pods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.PodInfo"
                    }
                },
                "summary": {
                    "$ref": "#/definitions/common.ResourceHealth"
                }
            }
        },
        "common.ClusterMetadata": {
            "type": "object",
            "required": [
                "env",
                "name"
            ],
            "properties": {
                "cluster_owner": {
                    "$ref": "#/definitions/common.ClusterOwner"
                },
                "cluster_type": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "env": {
                    "description": "must be crn",
                    "type": "string"
                },
                "experience_type": {
                    "type": "string"
                },
                "experimental": {
                    "$ref": "#/definitions/common.Experimental"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "owner_email": {
                    "type": "string"
                },
                "tenant": {
                    "type": "string"
                },
                "workloads": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "common.ClusterOwner": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "crn": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first-name": {
                    "type": "string"
                },
                "last-name": {
                    "type": "string"
                },
                "user-id": {
                    "type": "string"
                }
            }
        },
        "common.ClusterSpec": {
            "type": "object",
            "properties": {
                "bootstrap_script": {
                    "type": "string"
                },
                "deployments": {
                    "$ref": "#/definitions/common.Deployments"
                },
                "imageCatalog": {
                    "$ref": "#/definitions/common.ImageCatalog"
                },
                "instance_groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.InstanceGroup"
                    }
                },
                "kubernetes": {
                    "$ref": "#/definitions/common.Kubernetes"
                },
                "network": {
                    "$ref": "#/definitions/common.Network"
                },
                "security": {
                    "$ref": "#/definitions/common.Security"
                },
                "ssh_keypair_name": {
                    "type": "string"
                },
                "storage": {
                    "$ref": "#/definitions/common.StorageSpec"
                },
                "worker_egress_rules": {
                    "description": "Array of egress rules of the form protocol:fromPort[:toPort[:CIDR]]",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "worker_ingress_rules": {
                    "description": "Array of ingress rules of the form protocol:fromPort[:toPort[:CIDR]]",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "common.ClusterView": {
            "type": "object",
            "properties": {
                "api_end_point": {
                    "type": "string"
                },
                "bootstrapScript": {
                    "type": "string"
                },
                "ca_cert": {
                    "type": "string"
                },
                "cloud": {
                    "type": "object"
                },
                "cloudPlatform": {
                    "type": "string"
                },
                "clusterStateVersion": {
                    "type": "integer"
                },
                "cluster_id": {
                    "type": "string"
                },
                "cluster_owner": {
                    "$ref": "#/definitions/common.ClusterOwner"
                },
                "cluster_status": {
                    "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                },
                "cluster_type": {
                    "type": "string"
                },
                "created_time": {
                    "type": "string"
                },
                "dashboardUrl": {
                    "type": "string"
                },
                "deleted_time": {
                    "type": "string"
                },
                "env": {
                    "description": "Env is Deprecated: Use EnvName and EnvCrn.",
                    "type": "string"
                },
                "envCrn": {
                    "type": "string"
                },
                "envName": {
                    "type": "string"
                },
                "failedEvents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.Event"
                    }
                },
                "helm": {
                    "$ref": "#/definitions/common.Helm"
                },
                "imageCatalog": {
                    "$ref": "#/definitions/common.ImageCatalog"
                },
                "image_pull_secrets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "kind": {
                    "type": "string"
                },
                "kubernetes": {
                    "$ref": "#/definitions/common.K8sStats"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "nodeCount": {
                    "type": "integer",
                    "format": "int64"
                },
                "nodeImageUpgrade": {
                    "$ref": "#/definitions/common.NodeImageUpgrade"
                },
                "operation": {
                    "$ref": "#/definitions/common.OperationInfo"
                },
                "proxiedServices": {
                    "$ref": "#/definitions/common.ProxiedServices"
                },
                "proxyEndpoint": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "storage": {
                    "$ref": "#/definitions/common.StorageSpec"
                },
                "tenant": {
                    "type": "string"
                },
                "updated_time": {
                    "type": "string"
                },
                "upgrade": {
                    "$ref": "#/definitions/common.K8sUpgrade"
                },
                "workloads": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "common.ClusterViews": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/common.ClusterView"
            }
        },
        "common.CreateClusterRequest": {
            "type": "object",
            "required": [
                "api_version",
                "kind",
                "metadata"
            ],
            "properties": {
                "api_version": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/common.ClusterMetadata"
                },
                "skipValidation": {
                    "type": "boolean"
                },
                "spec": {
                    "$ref": "#/definitions/common.ClusterSpec"
                }
            }
        },
        "common.CreateClusterResponse": {
            "type": "object",
            "properties": {
                "cluster_id": {
                    "type": "string"
                },
                "cluster_status": {
                    "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                },
                "uri": {
                    "type": "string"
                }
            }
        },
        "common.CreateCrpRequest": {
            "type": "object",
            "required": [
                "apiVersion",
                "kind",
                "metadata",
                "spec"
            ],
            "properties": {
                "apiVersion": {
                    "description": "CHECK(APIVersion = compute.cloud.cloudera.io/v1alpha1)",
                    "type": "string"
                },
                "kind": {
                    "description": "CHECK(Kind IN ('CRP', 'NamespaceCRP'))",
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/common.CRPMetadata"
                },
                "spec": {
                    "$ref": "#/definitions/common.CRPSpec"
                }
            }
        },
        "common.CreateCrpResponse": {
            "type": "object",
            "required": [
                "URI"
            ],
            "properties": {
                "FailedEvents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_crp_common.Event"
                    }
                },
                "Namespaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.Namespace"
                    }
                },
                "URI": {
                    "type": "string"
                },
                "crpID": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "recursiveCreateResults": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.Log"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "common.CreateInstanceGroupsRequest": {
            "type": "object",
            "required": [
                "instanceGroups"
            ],
            "properties": {
                "clusterStateVersion": {
                    "type": "integer",
                    "format": "int64"
                },
                "instanceGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.InstanceGroup"
                    }
                },
                "opType": {
                    "type": "string"
                },
                "skipValidation": {
                    "type": "boolean"
                }
            }
        },
        "common.CreateInstanceGroupsResponse": {
            "type": "object",
            "properties": {
                "clusterId": {
                    "type": "string"
                },
                "clusterStatus": {
                    "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                },
                "uri": {
                    "type": "string"
                }
            }
        },
        "common.DaemonSetInfo": {
            "type": "object",
            "properties": {
                "available": {
                    "description": "Total number of nodes that should be running the daemon pod and have one or more of the daemon pod running and\navailable (ready for at least minReadySeconds)",
                    "type": "integer"
                },
                "desired": {
                    "description": "Total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod).",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "unavailable": {
                    "description": "Total number of nodes that should be running the daemon pod and have none of the daemon pod running\nand available (ready for at least minReadySeconds)",
                    "type": "integer"
                }
            }
        },
        "common.DeleteClusterResponse": {
            "type": "object",
            "properties": {
                "cluster_status": {
                    "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                }
            }
        },
        "common.DeleteCrpResponse": {
            "type": "object",
            "properties": {
                "FailedEvents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_crp_common.Event"
                    }
                },
                "Namespaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.Namespace"
                    }
                },
                "kind": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "recursiveCreateResults": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.Log"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "common.DeleteInstanceGroupResponse": {
            "type": "object",
            "properties": {
                "clusterId": {
                    "type": "string"
                },
                "clusterStatus": {
                    "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                },
                "uri": {
                    "type": "string"
                }
            }
        },
        "common.DeploymentDeleteRequest": {
            "type": "object",
            "properties": {
                "overrideLock": {
                    "description": "Whether we should ignore getting the deployment lock. This will allow for dual operations like force reinstall",
                    "type": "boolean"
                },
                "skipPostAction": {
                    "description": "Whether we should skip the post delete. This is good for dual operations like force reinstall",
                    "type": "boolean"
                },
                "timeout": {
                    "description": "The amount of time, in seconds, to wait before returning a timeout error",
                    "type": "integer"
                },
                "wait": {
                    "description": "true if the request should wait for the action to complete.",
                    "type": "boolean"
                }
            }
        },
        "common.DeploymentDeleteResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "common.DeploymentInfo": {
            "type": "object",
            "properties": {
                "available": {
                    "description": "Total number of available pods (ready for at least minReadySeconds) targeted by this deployment.",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "statusReason": {
                    "type": "string"
                },
                "targeted": {
                    "description": "Total number of non-terminated pods targeted by this deployment (their labels match the selector).",
                    "type": "integer"
                },
                "unavailable": {
                    "description": "Total number of unavailable pods targeted by this deployment.",
                    "type": "integer"
                }
            }
        },
        "common.DeploymentInstallRequest": {
            "type": "object",
            "required": [
                "chartName",
                "name"
            ],
            "properties": {
                "atomic": {
                    "description": "if true, will roll back on failure.",
                    "type": "boolean",
                    "default": false
                },
                "chartName": {
                    "description": "The name of the chart to install",
                    "type": "string"
                },
                "chartVersion": {
                    "description": "The version of the chart to install.",
                    "type": "string"
                },
                "deploymentProfile": {
                    "description": "The deployment profile to use during the install",
                    "type": "string"
                },
                "forceChartVersion": {
                    "description": "if true, will by-pass chartVersion validation, not for use by dataservices, only for use under special conditions like by SRE",
                    "type": "boolean",
                    "default": false
                },
                "name": {
                    "description": "The name of the deployment",
                    "type": "string"
                },
                "overrideLock": {
                    "description": "Whether we should ignore getting the deployment lock. This will allow for dual operations like force reinstall",
                    "type": "boolean"
                },
                "overrides": {
                    "description": "The list of overrides for the deployment's properties.",
                    "type": "object",
                    "additionalProperties": true
                },
                "timeout": {
                    "description": "The amount of time, in seconds, to wait before returning a timeout error",
                    "type": "integer"
                },
                "wait": {
                    "description": "true if the request should wait for the action to complete.",
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "common.DeploymentListResponse": {
            "type": "object",
            "properties": {
                "available": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.ChartResponse"
                    }
                },
                "clusterId": {
                    "type": "string"
                },
                "installed": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.DeploymentResponse"
                    }
                },
                "unavailable": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.ChartResponse"
                    }
                }
            }
        },
        "common.DeploymentResponse": {
            "type": "object",
            "properties": {
                "chart": {
                    "description": "The chart that a deployment was created from",
                    "$ref": "#/definitions/common.ChartResponse"
                },
                "latestOperation": {
                    "description": "The latest deployment operation in Liftie",
                    "type": "string"
                },
                "managed": {
                    "description": "True if Liftie is managing this deployment",
                    "type": "boolean"
                },
                "name": {
                    "description": "A deployment's name",
                    "type": "string"
                },
                "namespace": {
                    "description": "A deployment's namespace",
                    "type": "string"
                },
                "operationStatus": {
                    "description": "The status of the deployment operation in Liftie",
                    "type": "string"
                },
                "overrides": {
                    "description": "The list of overrides for the deployment's properties.",
                    "type": "object",
                    "additionalProperties": true
                },
                "revision": {
                    "description": "The current helm revision we are using",
                    "type": "integer"
                },
                "status": {
                    "description": "The status of a helm deployment",
                    "type": "string",
                    "enum": [
                        "UNKNOWN",
                        "DEPLOYED",
                        "UNINSTALLED",
                        "SUPERSEDED",
                        "FAILED",
                        "PENDING-INSTALL",
                        "PENDING-UPGRADE",
                        "PENDING-ROLLBACK"
                    ]
                },
                "upgrades": {
                    "description": "Any upgrades available for this deployment. An upgrade can be to an older version.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.AvailableDeploymentUpgrade"
                    }
                }
            }
        },
        "common.DeploymentStatusResponse": {
            "type": "object",
            "properties": {
                "chart": {
                    "description": "The chart that a deployment was created from",
                    "$ref": "#/definitions/common.ChartResponse"
                },
                "clusterId": {
                    "type": "string"
                },
                "history": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.DeploymentResponse"
                    }
                },
                "latestOperation": {
                    "description": "The latest deployment operation in Liftie",
                    "type": "string"
                },
                "managed": {
                    "description": "True if Liftie is managing this deployment",
                    "type": "boolean"
                },
                "name": {
                    "description": "A deployment's name",
                    "type": "string"
                },
                "namespace": {
                    "description": "A deployment's namespace",
                    "type": "string"
                },
                "operationStatus": {
                    "description": "The status of the deployment operation in Liftie",
                    "type": "string"
                },
                "overrides": {
                    "description": "The list of overrides for the deployment's properties.",
                    "type": "object",
                    "additionalProperties": true
                },
                "revision": {
                    "description": "The current helm revision we are using",
                    "type": "integer"
                },
                "status": {
                    "description": "The status of a helm deployment",
                    "type": "string",
                    "enum": [
                        "UNKNOWN",
                        "DEPLOYED",
                        "UNINSTALLED",
                        "SUPERSEDED",
                        "FAILED",
                        "PENDING-INSTALL",
                        "PENDING-UPGRADE",
                        "PENDING-ROLLBACK"
                    ]
                },
                "upgrades": {
                    "description": "Any upgrades available for this deployment. An upgrade can be to an older version.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.AvailableDeploymentUpgrade"
                    }
                }
            }
        },
        "common.DeploymentUpdateRequest": {
            "type": "object",
            "properties": {
                "action": {
                    "description": "The action to perform for this deployment update",
                    "type": "string",
                    "enum": [
                        "upgrade",
                        "rollback"
                    ]
                },
                "atomic": {
                    "description": "if true, will roll back on failure. Only valid when using the action type of \"upgrade\"",
                    "type": "boolean"
                },
                "force": {
                    "description": "if true, will force the replacement of resources. Only valid when using the action type of \"upgrade\"",
                    "type": "boolean"
                },
                "forceChartVersion": {
                    "description": "if true, will by-pass chartVersion validation, not for use by dataservices, only for use under special conditions like by SRE",
                    "type": "boolean",
                    "default": false
                },
                "name": {
                    "description": "The name of the deployment",
                    "type": "string"
                },
                "namespace": {
                    "description": "The deployment's namespace",
                    "type": "string"
                },
                "overrideLock": {
                    "description": "Whether we should ignore getting the deployment lock. This will allow for dual operations like force reinstall",
                    "type": "boolean"
                },
                "overrides": {
                    "description": "The list of overrides for the deployment's properties.",
                    "type": "object",
                    "additionalProperties": true
                },
                "revision": {
                    "description": "The revision of the deployment to rollback to. Only valid when using the action type of \"rollback\"",
                    "type": "integer"
                },
                "timeout": {
                    "description": "The amount of time, in seconds, to wait before returning a timeout error",
                    "type": "integer"
                },
                "version": {
                    "description": "The version of the deployment to upgrade to. Only valid when using the action type of \"upgrade\"",
                    "type": "string"
                },
                "wait": {
                    "description": "true if the request should wait for the action to complete.",
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "common.DeploymentUpdateResponse": {
            "type": "object",
            "properties": {
                "chart": {
                    
                    "description": "The chart that a deployment was created from",
                    "$ref": "#/definitions/common.ChartResponse"
                },
                "latestOperation": {
                    "description": "The latest deployment operation in Liftie",
                    "type": "string"
                },
                "managed": {
                    "description": "True if Liftie is managing this deployment",
                    "type": "boolean"
                },
                "message": {
                    "description": "A message returned about the status of the update request",
                    "type": "string"
                },
                "name": {
                    "description": "A deployment's name",
                    "type": "string"
                },
                "namespace": {
                    "description": "A deployment's namespace",
                    "type": "string"
                },
                "operationStatus": {
                    "description": "The status of the deployment operation in Liftie",
                    "type": "string"
                },
                "overrides": {
                    "description": "The list of overrides for the deployment's properties.",
                    "type": "object",
                    "additionalProperties": true
                },
                "revision": {
                    "description": "The current helm revision we are using",
                    "type": "integer"
                },
                "status": {
                    "description": "The status of a helm deployment",
                    "type": "string",
                    "enum": [
                        "UNKNOWN",
                        "DEPLOYED",
                        "UNINSTALLED",
                        "SUPERSEDED",
                        "FAILED",
                        "PENDING-INSTALL",
                        "PENDING-UPGRADE",
                        "PENDING-ROLLBACK"
                    ]
                },
                "upgrades": {
                    "description": "Any upgrades available for this deployment. An upgrade can be to an older version.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.AvailableDeploymentUpgrade"
                    }
                }
            }
        },
        "common.Deployments": {
            "type": "object",
            "properties": {
                "autoscaler": {
                    "$ref": "#/definitions/common.Autoscaler"
                },
                "awsVpcCni": {
                    "$ref": "#/definitions/common.AwsVpcCni"
                },
                "horizontal_pod_autoscaler": {
                    "$ref": "#/definitions/common.HorizontalPodAutoScaler"
                },
                "istio": {
                    "$ref": "#/definitions/common.RequestDeploymentProfileDetails"
                },
                "logging": {
                    "$ref": "#/definitions/common.Logging"
                },
                "metering": {
                    "$ref": "#/definitions/common.Metering"
                },
                "monitoring": {
                    "$ref": "#/definitions/common.Monitoring"
                },
                "nvidia": {
                    "$ref": "#/definitions/common.Nvidia"
                },
                "repository": {
                    "description": "repository for images",
                    "type": "string"
                },
                "telemetry_kms_key_ARN": {
                    "type": "string"
                },
                "yunikorn": {
                    "$ref": "#/definitions/common.YuniKorn"
                }
            }
        },
        "common.DockerConfig": {
            "type": "object",
            "required": [
                "server"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "description": "TODO Make Name binding required as soon as possible",
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "server": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "common.ErrorMessages": {
            "type": "object",
            "properties": {
                "daemonSetError": {
                    "type": "string"
                },
                "deploymentError": {
                    "type": "string"
                },
                "eventsError": {
                    "type": "string"
                },
                "nodeError": {
                    "type": "string"
                },
                "podError": {
                    "type": "string"
                }
            }
        },
        "common.Experimental": {
            "type": "object",
            "properties": {
                "aksManagedIdentity": {
                    "type": "string"
                },
                "deleteClusterOnError": {
                    "type": "boolean"
                },
                "liftieInfraNodeRole": {
                    "description": "example: node.role.kubernetes.io/liftie-infra or foo.bar.baz/liftie-infra",
                    "type": "string"
                }
            }
        },
        "common.GcpStaticDetailsResponse": {
            "type": "object"
        },
        "common.GenericNamespace": {
            "type": "object",
            "properties": {
                "labels": {
                    "$ref": "#/definitions/common.Labels"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "description": "K8s resources like Service Accounts",
                    "$ref": "#/definitions/common.GenericPermissions"
                },
                "resources": {
                    "description": "K8s resources like ResourceQuota",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.GenericResource"
                    }
                }
            }
        },
        "common.GenericPermissions": {
            "type": "object",
            "properties": {
                "roleBindings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.GenericResource"
                    }
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.GenericResource"
                    }
                },
                "serviceAccounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.GenericResource"
                    }
                }
            }
        },
        "common.GenericResource": {
            "type": "object",
            "additionalProperties": true
        },
        "common.GetCloudLogsRequest": {
            "type": "object",
            "properties": {
                "AWSLogsSource": {
                    "$ref": "#/definitions/common.AWSLogsSource"
                },
                "autoScalingActivityPagesInput": {
                    "$ref": "#/definitions/common.AutoScalingGroupActivityPagination"
                },
                "azureLogsSource": {
                    "$ref": "#/definitions/common.AzureLogsSource"
                },
                "cloudWatchLogsPages": {
                    "$ref": "#/definitions/common.CloudWatchLogsPagination"
                },
                "endTime": {
                    "type": "string"
                },
                "filter": {
                    "$ref": "#/definitions/common.LogLevelFilter"
                },
                "stackEventsPagesInput": {
                    "$ref": "#/definitions/common.StackEventsPagination"
                },
                "startTime": {
                    "type": "string"
                }
            }
        },
        "common.GetCloudLogsResponse": {
            "type": "object",
            "properties": {
                "awsLogs": {
                    "$ref": "#/definitions/common.AWSCloudLogs"
                },
                "azureLogs": {
                    "$ref": "#/definitions/common.AzureCloudLogs"
                },
                "cloudProvider": {
                    "type": "string"
                },
                "clusterId": {
                    "type": "string"
                },
                "clusterStatus": {
                    "type": "string"
                },
                "k8sVersion": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "provisioningState": {
                    "type": "string"
                }
            }
        },
        "common.GetCrpResponse": {
            "type": "object",
            "properties": {
                "availableQuota": {
                    "$ref": "#/definitions/common.QuotaAttributes"
                },
                "bookedQuota": {
                    "$ref": "#/definitions/common.QuotaAttributes"
                },
                "clusterID": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "crpID": {
                    "type": "string"
                },
                "entityAssociations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.CRPDimension"
                    }
                },
                "failedEvents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_crp_common.Event"
                    }
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.CRPDimension"
                    }
                },
                "fullyQualifiedCrpName": {
                    "type": "string"
                },
                "isLeaf": {
                    "type": "boolean"
                },
                "kind": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "namespaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.Namespace"
                    }
                },
                "quota": {
                    "$ref": "#/definitions/common.Quota"
                },
                "status": {
                    "type": "string"
                },
                "tenant": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "common.Helm": {
            "type": "object",
            "properties": {
                "upgrade": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "common.HorizontalPodAutoScaler": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            }
        },
        "common.ImageCatalog": {
            "type": "object",
            "properties": {
                "crn": {
                    "description": "The catalog CRN (either CRN or name is required)",
                    "type": "string"
                },
                "name": {
                    "description": "The catalog name (either CRN or name is required)",
                    "type": "string"
                }
            }
        },
        "common.InstanceGroup": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "accelerator": {
                    "description": "used only for GCP clusters. This is used to set GPU type and count for the cluster",
                    "$ref": "#/definitions/common.Accelerator"
                },
                "autoscaling": {
                    "$ref": "#/definitions/common.AutoScaling"
                },
                "aws": {
                    "description": "AWS specific configuration used only for EKS InstanceGroups",
                    "$ref": "#/definitions/common.AwsInstanceGroupConfig"
                },
                "enable_cfs_quota": {
                    "description": "Defaults to true if not specified",
                    "type": "boolean"
                },
                "instance_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "instance_image": {
                    "type": "string"
                },
                "instance_tier": {
                    "type": "string"
                },
                "instance_type": {
                    "description": "General purpose: M4, M5, M5a, M5ad, and M5d\nCompute optimized: C3, C4, C5, C5d, C5n, and cc2.8xlarge\nMemory optimized: cr1.8xlarge, R3, R4, R5, R5a, R5ad, R5d, X1, X1e, and z1d\nStorage optimized: D2, H1, hs1.8xlarge, I2, I3, and I3en\nAccelerated computing: F1, G2, G3, P2, and P3",
                    "type": "string"
                },
                "instance_types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "kube_reserved_cpu": {
                    "description": "Reserved kubelet CPU in millicpu",
                    "type": "integer",
                    "format": "uint64"
                },
                "kube_reserved_memory": {
                    "description": "Reserved kubelet memory in MiB",
                    "type": "integer",
                    "format": "uint64"
                },
                "kube_reserved_storage": {
                    "description": "Reserved kubelet ephemeral storage in MiB",
                    "type": "integer",
                    "format": "uint64"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "root_volume": {
                    "$ref": "#/definitions/common.RootVolume"
                },
                "single_zone": {
                    "description": "Simple boolean for EKS.  AKS is used in conjunction with UseAvailabilityZones",
                    "type": "boolean"
                },
                "system_reserved_cpu": {
                    "description": "Reserved OS CPU in millicpu",
                    "type": "integer",
                    "format": "uint64"
                },
                "system_reserved_memory": {
                    "description": "Reserved OS memory in MiB",
                    "type": "integer",
                    "format": "uint64"
                },
                "system_reserved_storage": {
                    "description": "Reserved OS ephemeral storage in MiB",
                    "type": "integer",
                    "format": "uint64"
                },
                "taints": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "use_availability_zones": {
                    "description": "Availability Zones\nUseAvailabilityZones is used for Azure clusters only",
                    "type": "boolean"
                },
                "user_data": {
                    "type": "string"
                }
            }
        },
        "common.InstanceRequirements": {
            "type": "object",
            "properties": {
                "allowed_instance_types": {
                    "description": "Instance types to exclude.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cpu_max": {
                    "description": "Maximum vCpu count.",
                    "type": "integer"
                },
                "cpu_min": {
                    "description": "Minimum vCpu count.",
                    "type": "integer"
                },
                "cpu_types": {
                    "description": "CPU types required. For eg. intel, amd, amazon-web-services etc.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "excluded_instance_types": {
                    "description": "Instance types to exclude, ignored if AllowedInstanceTypes is set.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "gpu": {
                    "description": "Select GPU instances.",
                    "type": "boolean"
                },
                "memory_max": {
                    "description": "Maximum memory requirement in MiB.",
                    "type": "integer"
                },
                "memory_min": {
                    "description": "Minimum memory requirement in MiB.",
                    "type": "integer"
                }
            }
        },
        "common.K8sProvider": {
            "type": "object",
            "properties": {
                "kubernetesVersion": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "platformVersion": {
                    "type": "string"
                }
            }
        },
        "common.K8sStats": {
            "type": "object",
            "properties": {
                "platformProvider": {
                    "type": "string"
                },
                "platformVersion": {
                    "type": "string"
                },
                "version": {
                    "description": "Kubernetes version (default 1.14)",
                    "type": "string"
                }
            }
        },
        "common.K8sUpgrade": {
            "type": "object",
            "properties": {
                "available": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "$ref": "#/definitions/common.K8sUpgradeStatus"
                }
            }
        },
        "common.K8sUpgradeStatus": {
            "type": "object",
            "properties": {
                "state": {
                    "type": "string"
                }
            }
        },
        "common.KcloudStaticDetailsResponse": {
            "type": "object"
        },
        "common.KubeConfig": {
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "content": {
                    "description": "Path    string `json:\"path,omitempty\" yaml:\"path,omitempty\"`",
                    "type": "string"
                }
            }
        },
        "common.Kubernetes": {
            "type": "object",
            "properties": {
                "version": {
                    "description": "Kubernetes version (default 1.14)",
                    "type": "string"
                }
            }
        },
        "common.Labels": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "common.LiftieVersionResponse": {
            "type": "object",
            "properties": {
                "liftieVersion": {
                    "type": "string"
                },
                "loggingVersion": {
                    "type": "string"
                },
                "meteringVersion": {
                    "type": "string"
                }
            }
        },
        "common.ListCRPNode": {
            "type": "object",
            "properties": {
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.ListCRPNode"
                    }
                },
                "crpFullName": {
                    "type": "string"
                },
                "crpId": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "common.ListClustersByFilterRequest": {
            "type": "object",
            "properties": {
                "cloudPlatforms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "clusterIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "experienceTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "fromCreatedTime": {
                    "type": "string"
                },
                "fromUpdatedTime": {
                    "type": "string"
                },
                "k8sVersions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "toCreatedTime": {
                    "type": "string"
                },
                "toUpdatedTime": {
                    "type": "string"
                },
                "withActiveDeploymentOperations": {
                    "description": "This is used by recovery",
                    "type": "boolean"
                }
            }
        },
        "common.ListClustersByFilterResponse": {
            "type": "object",
            "properties": {
                "clusters": {
                    "$ref": "#/definitions/common.ClusterViews"
                },
                "page": {
                    "$ref": "#/definitions/common.PageStats"
                }
            }
        },
        "common.ListClustersResponse": {
            "type": "object",
            "properties": {
                "clusters": {
                    "$ref": "#/definitions/common.ClusterViews"
                },
                "page": {
                    "$ref": "#/definitions/common.PageStats"
                }
            }
        },
        "common.Log": {
            "type": "object",
            "properties": {
                "crpId": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "common.LogLevelFilter": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "boolean"
                },
                "info": {
                    "type": "boolean"
                },
                "warn": {
                    "type": "boolean"
                }
            }
        },
        "common.Logging": {
            "type": "object",
            "properties": {
                "enabled": {
                    "description": "true to enable Logging installation (default false)",
                    "type": "boolean"
                }
            }
        },
        "common.Metering": {
            "type": "object",
            "properties": {
                "enabled": {
                    "description": "true to enable Metering installation (default false)",
                    "type": "boolean"
                },
                "services": {
                    "description": "Array of services",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.MeteringService"
                    }
                }
            }
        },
        "common.MeteringService": {
            "type": "object",
            "properties": {
                "clusterCRN": {
                    "type": "string"
                },
                "serviceConfiguration": {
                    "type": "string"
                },
                "serviceType": {
                    "type": "string"
                },
                "serviceVersion": {
                    "type": "string"
                },
                "workloadCRN": {
                    "description": "WorkloadCRN is Deprecated: Use ClusterCRN for Metering service.",
                    "type": "string"
                }
            }
        },
        "common.MockDriverStaticDetailsResponse": {
            "type": "object",
            "properties": {
                "policy": {
                    "type": "string"
                }
            }
        },
        "common.Monitoring": {
            "type": "object",
            "properties": {
                "alertmanager": {
                    "$ref": "#/definitions/common.Alertmanager"
                },
                "enabled": {
                    "description": "true to enable Monitoring installation (default false)",
                    "type": "boolean"
                },
                "serverResourceLimits": {
                    "$ref": "#/definitions/common.ResourceLimits"
                }
            }
        },
        "common.Namespace": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "$ref": "#/definitions/common.Permissions"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.Resource"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "common.Network": {
            "type": "object",
            "properties": {
                "aws": {
                    "$ref": "#/definitions/common.AwsNetworking"
                },
                "azure": {
                    "$ref": "#/definitions/common.AzureNetworking"
                },
                "cidr": {
                    "description": "VPC",
                    "type": "string"
                },
                "inboundProxyCidr": {
                    "description": "Allow these CIDR for Inbound communication when using environment proxy settings.  Only if backend supports it.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "outboundType": {
                    "description": "Cluster outbound type.",
                    "type": "string"
                },
                "plugin": {
                    "type": "string"
                },
                "pluginOptions": {
                    "$ref": "#/definitions/common.NetworkPluginOptions"
                },
                "podCidr": {
                    "description": "The pod CIDR to use if the backend provider supports setting this",
                    "type": "string"
                },
                "serviceCidr": {
                    "description": "The CIDR for services declared inside of Kubernetes if the backend provider supports setting this",
                    "type": "string"
                },
                "topology": {
                    "$ref": "#/definitions/common.NetworkTopology"
                }
            }
        },
        "common.NetworkPluginOptions": {
            "type": "object"
        },
        "common.NetworkTopology": {
            "type": "object",
            "properties": {
                "endpointGatewaySubnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "common.NodeImageAvailableUpgrade": {
            "type": "object",
            "properties": {
                "current": {
                    "type": "string"
                },
                "instanceGroup": {
                    "type": "string"
                },
                "upgrades": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "common.NodeImageUpgrade": {
            "type": "object",
            "properties": {
                "available": {
                    "description": "Available shows if node image upgrades are available",
                    "type": "boolean"
                },
                "upgrades": {
                    "description": "Upgrades lists the currently used images and the new upgraded images",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.NodeImageAvailableUpgrade"
                    }
                }
            }
        },
        "common.NodeInfo": {
            "type": "object",
            "properties": {
                "activePods": {
                    "description": "Array of pods running on the node.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.PodInfo"
                    }
                },
                "events": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "instanceType": {
                    "type": "string"
                },
                "isCordoned": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "resourceAllocation": {
                    "$ref": "#/definitions/common.ResourceLimits"
                },
                "resourceUsage": {
                    "$ref": "#/definitions/common.ResourceLimits"
                },
                "status": {
                    "type": "string"
                },
                "statusReason": {
                    "type": "string"
                },
                "taints": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "utilizationPercentage": {
                    "$ref": "#/definitions/common.ResourceLimits"
                }
            }
        },
        "common.Nvidia": {
            "type": "object",
            "properties": {
                "gpuLabelKey": {
                    "type": "string"
                },
                "gpuLabelValue": {
                    "type": "string"
                }
            }
        },
        "common.OperationDetailView": {
            "type": "object",
            "properties": {
                "cluster_id": {
                    "type": "string"
                },
                "cluster_state": {
                    "type": "string"
                },
                "end_status": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "op_type": {
                    "type": "string"
                },
                "request_body": {
                    "type": "string"
                },
                "start_status": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "version": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "common.OperationInfo": {
            "type": "object",
            "properties": {
                "last": {
                    "type": "integer",
                    "format": "int64"
                },
                "last_successful": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "common.OperationView": {
            "type": "object",
            "properties": {
                "cluster_id": {
                    "type": "string"
                },
                "end_status": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "op_type": {
                    "type": "string"
                },
                "start_status": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "version": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "common.PageStats": {
            "type": "object",
            "properties": {
                "number": {
                    "description": "page number, starting at 1",
                    "type": "integer",
                    "format": "uint64"
                },
                "size": {
                    "description": "size of a page",
                    "type": "integer",
                    "format": "uint64"
                },
                "totalElements": {
                    "description": "total items matching the page",
                    "type": "integer",
                    "format": "uint64"
                },
                "totalPages": {
                    "description": "total number of pages",
                    "type": "integer",
                    "format": "uint64"
                }
            }
        },
        "common.Permissions": {
            "type": "object",
            "properties": {
                "roleBindings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.Resource"
                    }
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.Resource"
                    }
                },
                "serviceAccounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.Resource"
                    }
                }
            }
        },
        "common.PodInfo": {
            "type": "object",
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "nodeName": {
                    "type": "string"
                },
                "restarts": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "statusReason": {
                    "type": "string"
                }
            }
        },
        "common.ProxiedService": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "common.ProxiedServices": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/common.ProxiedService"
            }
        },
        "common.Quota": {
            "type": "object",
            "required": [
                "max"
            ],
            "properties": {
                "max": {
                    "$ref": "#/definitions/common.QuotaAttributes"
                },
                "min": {
                    "$ref": "#/definitions/common.QuotaAttributes"
                }
            }
        },
        "common.QuotaAttributes": {
            "type": "object",
            "properties": {
                "cpu": {
                    "type": "string"
                },
                "memory": {
                    "type": "string"
                },
                "nvidia.com/gpu": {
                    "type": "string"
                }
            }
        },
        "common.RedHatStaticDetailsResponse": {
            "type": "object"
        },
        "common.RegisterClusterRequest": {
            "type": "object",
            "required": [
                "apiVersion",
                "kind",
                "metadata",
                "spec"
            ],
            "properties": {
                "apiVersion": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/common.ClusterMetadata"
                },
                "spec": {
                    "$ref": "#/definitions/common.RegisterClusterSpec"
                }
            }
        },
        "common.RegisterClusterResponse": {
            "type": "object",
            "properties": {
                "clusterId": {
                    "type": "string"
                },
                "cluster_status": {
                    "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                },
                "uri": {
                    "type": "string"
                }
            }
        },
        "common.RegisterClusterSpec": {
            "type": "object",
            "required": [
                "dockerConfigs",
                "k8sProvider",
                "kubeConfig"
            ],
            "properties": {
                "deployments": {
                    "$ref": "#/definitions/common.Deployments"
                },
                "dockerConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.DockerConfig"
                    }
                },
                "k8sProvider": {
                    "$ref": "#/definitions/common.K8sProvider"
                },
                "kubeConfig": {
                    "$ref": "#/definitions/common.KubeConfig"
                }
            }
        },
        "common.RequestDeploymentProfileDetails": {
            "type": "object",
            "properties": {
                "deploymentProfile": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                }
            }
        },
        "common.Resource": {
            "type": "object",
            "properties": {
                "apiVersion": {
                    "type": "string"
                },
                "isImplicit": {
                    "description": "IsImplicit\n : false : If resource was was received as part of API call\n :  true : If Liftie internally created it, and was not received as part of API call.",
                    "type": "boolean"
                },
                "isNamespaced": {
                    "type": "boolean"
                },
                "kind": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "common.ResourceHealth": {
            "type": "object",
            "properties": {
                "healthy": {
                    "description": "Map of resource name to healthy resource count",
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "unhealthy": {
                    "description": "Map of resource name to unhealthy resource count",
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                }
            }
        },
        "common.ResourceLimits": {
            "type": "object",
            "properties": {
                "cpu": {
                    "type": "string"
                },
                "memory": {
                    "type": "string"
                }
            }
        },
        "common.RkeStaticDetailsResponse": {
            "type": "object"
        },
        "common.RootVolume": {
            "type": "object",
            "properties": {
                "size": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "common.SecretEncryption": {
            "type": "object",
            "properties": {
                "customerKMSKeyArn": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                }
            }
        },
        "common.Security": {
            "type": "object",
            "properties": {
                "apiServer": {
                    "$ref": "#/definitions/common.APIServer"
                },
                "private": {
                    "type": "boolean"
                },
                "secretEncryption": {
                    "$ref": "#/definitions/common.SecretEncryption"
                },
                "volumeEncryption": {
                    "$ref": "#/definitions/common.VolumeEncryption"
                }
            }
        },
        "common.StackEvent": {
            "type": "object",
            "properties": {
                "awsLogType": {
                    "type": "string"
                },
                "clientRequestToken": {
                    "type": "string"
                },
                "eventId": {
                    "type": "string"
                },
                "hookFailureMode": {
                    "type": "string"
                },
                "hookInvocationPoint": {
                    "type": "string"
                },
                "hookStatus": {
                    "type": "string"
                },
                "hookStatusReason": {
                    "type": "string"
                },
                "hookType": {
                    "type": "string"
                },
                "logicalResourceId": {
                    "type": "string"
                },
                "nextPageToken": {
                    "type": "string"
                },
                "physicalResourceId": {
                    "type": "string"
                },
                "resourceProperties": {
                    "type": "string"
                },
                "resourceStatus": {
                    "type": "string"
                },
                "resourceStatusReason": {
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                },
                "stackEventTimestamp": {
                    "type": "string"
                },
                "stackId": {
                    "type": "string"
                },
                "stackName": {
                    "type": "string"
                }
            }
        },
        "common.StackEventsPagination": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "string"
                },
                "pageSize": {
                    "type": "integer"
                }
            }
        },
        "common.StandardStaticDetailsResponse": {
            "type": "object"
        },
        "common.StorageSpec": {
            "type": "object",
            "properties": {
                "csiEnabled": {
                    "type": "boolean"
                }
            }
        },
        "common.UpdateClusterDeployments": {
            "type": "object",
            "properties": {
                "autoscaler": {
                    "$ref": "#/definitions/common.Autoscaler"
                }
            }
        },
        "common.UpdateClusterMetadata": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "experimental": {
                    "$ref": "#/definitions/common.Experimental"
                }
            }
        },
        "common.UpdateClusterRequest": {
            "type": "object",
            "required": [
                "spec"
            ],
            "properties": {
                "clusterStateVersion": {
                    "type": "integer",
                    "format": "int64"
                },
                "metadata": {
                    "$ref": "#/definitions/common.UpdateClusterMetadata"
                },
                "skipValidation": {
                    "type": "boolean"
                },
                "spec": {
                    "$ref": "#/definitions/common.UpdateClusterSpec"
                }
            }
        },
        "common.UpdateClusterResponse": {
            "type": "object",
            "properties": {
                "clusterId": {
                    "type": "string"
                },
                "clusterStatus": {
                    "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                },
                "uri": {
                    "type": "string"
                }
            }
        },
        "common.UpdateClusterSpec": {
            "type": "object",
            "properties": {
                "azure": {
                    "$ref": "#/definitions/common.AzureUpdateClusterSpec"
                },
                "deployments": {
                    "$ref": "#/definitions/common.UpdateClusterDeployments"
                },
                "helm": {
                    "$ref": "#/definitions/common.Helm"
                },
                "imageCatalog": {
                    "$ref": "#/definitions/common.ImageCatalog"
                },
                "refreshInstanceGroups": {
                    "type": "boolean"
                },
                "security": {
                    "$ref": "#/definitions/common.Security"
                },
                "storage": {
                    "$ref": "#/definitions/common.StorageSpec"
                }
            }
        },
        "common.UpdateCrpRequest": {
            "type": "object",
            "required": [
                "apiVersion",
                "kind",
                "metadata",
                "spec"
            ],
            "properties": {
                "apiVersion": {
                    "description": "CHECK(APIVersion = compute.cloud.cloudera.io/v1alpha1)",
                    "type": "string"
                },
                "crpID": {
                    "type": "string"
                },
                "kind": {
                    "description": "CHECK(Kind IN ('CRP', 'NamespaceCRP'))",
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/common.CRPMetadata"
                },
                "spec": {
                    "$ref": "#/definitions/common.CRPSpec"
                }
            }
        },
        "common.UpdateCrpResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "common.UpdateInstanceGroupRequest": {
            "type": "object",
            "required": [
                "instanceGroup"
            ],
            "properties": {
                "clusterStateVersion": {
                    "type": "integer",
                    "format": "int64"
                },
                "instanceGroup": {
                    "$ref": "#/definitions/common.InstanceGroup"
                },
                "instanceGroupName": {
                    "type": "string"
                },
                "opType": {
                    "type": "string"
                },
                "skipValidation": {
                    "type": "boolean"
                }
            }
        },
        "common.UpdateInstanceGroupResponse": {
            "type": "object",
            "properties": {
                "clusterId": {
                    "type": "string"
                },
                "clusterStatus": {
                    "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                },
                "uri": {
                    "type": "string"
                }
            }
        },
        "common.UpdateRegisteredClusterRequest": {
            "type": "object",
            "required": [
                "apiVersion",
                "kind",
                "metadata",
                "spec"
            ],
            "properties": {
                "apiVersion": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/common.ClusterMetadata"
                },
                "spec": {
                    "$ref": "#/definitions/common.RegisterClusterSpec"
                }
            }
        },
        "common.UpdateRegisteredClusterResponse": {
            "type": "object",
            "properties": {
                "cluster_id": {
                    "type": "string"
                },
                "cluster_status": {
                    "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                },
                "uri": {
                    "type": "string"
                }
            }
        },
        "common.UpdateWorkloadMachineUserCredResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "common.UpgradeClusterRequest": {
            "type": "object",
            "properties": {
                "clusterStateVersion": {
                    "type": "integer",
                    "format": "int64"
                },
                "skipValidation": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "common.UpgradeClusterResponse": {
            "type": "object",
            "properties": {
                "cluster_status": {
                    "$ref": "#/definitions/github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage"
                }
            }
        },
        "common.UpgradeListView": {
            "type": "object",
            "properties": {
                "cluster_id": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "source_version": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "target_version": {
                    "type": "string"
                }
            }
        },
        "common.UserInfo": {
            "type": "object",
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "isAdmin": {
                    "type": "boolean"
                },
                "isRole": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "common.UserStatus": {
            "type": "object",
            "properties": {
                "href": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "common.Validation": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "cloudProviders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "common.ValidationResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                },
                "summary": {
                    "$ref": "#/definitions/common.ValidationSummary"
                },
                "validations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.ValidationResult"
                    }
                }
            }
        },
        "common.ValidationResult": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "cloudProviders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "detailedMessage": {
                    "type": "string"
                },
                "duration": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "common.ValidationSummary": {
            "type": "object",
            "properties": {
                "failed": {
                    "type": "integer"
                },
                "passed": {
                    "type": "integer"
                },
                "skipped": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "warning": {
                    "type": "integer"
                }
            }
        },
        "common.VolumeEncryption": {
            "type": "object",
            "properties": {
                "customerKMSKeyArn": {
                    "type": "string"
                }
            }
        },
        "common.YuniKorn": {
            "type": "object",
            "properties": {
                "appSortingPolicy": {
                    "description": "Deprecated: Field appSortingPolicy is ignored for overrides, will be removed soon",
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "nodeSortingPolicy": {
                    "description": "Deprecated: Field nodeSortingPolicy is ignored for overrides, will be removed soon",
                    "type": "string"
                },
                "pluginEnabled": {
                    "description": "Deprecated: Field pluginEnabled is ignored for overrides, will be removed soon",
                    "type": "boolean"
                },
                "skipNamespaces": {
                    "description": "Deprecated: Field skipNamespaces is ignored for overrides, will be removed soon",
                    "type": "string"
                }
            }
        },
        "github.infra.cloudera.com_liftie_liftie_pkg_common.Event": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "progress": {
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "statusReason": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "github.infra.cloudera.com_liftie_liftie_pkg_common.StatusMessage": {
            "type": "object",
            "properties": {
                "cloudProviderDetails": {
                    "$ref": "#/definitions/common.CloudProviderDetails"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "github.infra.cloudera.com_liftie_liftie_pkg_crp_common.Event": {
            "type": "object",
            "properties": {
                "errorCode": {
                    "type": "integer"
                },
                "eventName": {
                    "type": "string"
                },
                "failedResource": {
                    "type": "string"
                },
                "failureReason": {
                    "type": "string"
                },
                "failureType": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "github.infra.cloudera.com_liftie_liftie_pkg_crp_common.StatusMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    }
}