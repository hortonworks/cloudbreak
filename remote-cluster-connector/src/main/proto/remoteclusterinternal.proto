syntax = "proto3";

package remotecluster;

option java_package = "com.cloudera.thunderhead.service.remotecluster";
option java_outer_classname = "RemoteClusterInternalProto";
option go_package = "com/cloudera/cdp/protobuf";

import "options.proto";
import "remotecluster.proto";

// RemoteClusterInternal Service :: RemoteClusterInternal Service lists RemoteCluster endpoints for internal use only.
service RemoteClusterInternal {

  option (options.ServiceExtension.apiServiceName) = {
    lowercase: "remoteclusterinternal"
    camelcase: "RemoteClusterInternal"
  };

  // ListAllPvcControlPlanes method :: Lists all registered Private Cloud control plane configurations across all accounts.
  rpc ListAllPvcControlPlanes (ListAllPvcControlPlanesRequest)
      returns (ListAllPvcControlPlanesResponse) {
  }

  // GeneratePvcControlPlaneAuthToken method :: Generates an auth token for the requests sent to Private Cloud control plane.
  rpc GeneratePvcControlPlaneAuthToken (GeneratePvcControlPlaneAuthTokenRequest)
      returns (GeneratePvcControlPlaneAuthTokenResponse) {
  }

  // GeneratePvcWorkloadAuthToken method :: Generates a workload auth token for the requests sent to Private Cloud workload.
  rpc GeneratePvcWorkloadAuthToken(GeneratePvcWorkloadAuthTokenRequest)
      returns (GeneratePvcWorkloadAuthTokenResponse) {
  }

  // RegisterPvcBaseCluster method :: Partially registers a base cluster from an already registered PvC Control Plane.
  rpc RegisterPvcBaseCluster (RegisterPvcBaseClusterRequest)
      returns (RegisterPvcBaseClusterResponse) {
  }
}

// Request object for the GeneratePvcWorkloadAuthToken method.
message GeneratePvcWorkloadAuthTokenRequest {
  // The account ID of the Private Cloud control plane.
  string pvcId = 1 [(options.FieldExtension.required) = true];
  // the workload name for the Workload
  string workloadName = 2;
  // the PvC environment CRN, and valid for workload name DF only.
  string environmentCrn = 3;
}

// Response object for the GeneratePvcWorkloadAuthToken method.
message GeneratePvcWorkloadAuthTokenResponse {
  // the endpoint URL for the workload which the token was generated.
  string endpointUrl = 1;
  // The authentication token.
  string token = 2 [(options.FieldExtension.sensitive) = true];
  // When the token  will expire
  string expireAt = 3;
}

// Request object for the ListAllPvcControlPlanes method.
message ListAllPvcControlPlanesRequest {
  // The page size.
  int32 pageSize = 1;
  // A token to specify where to start paginating. This is the nextToken from a previously truncated response.
  string pageToken = 2;
}

// Response object for the ListAllPvcControlPlanes method.
message ListAllPvcControlPlanesResponse {
  // The Private Cloud control plane configurations.
  repeated PvcControlPlaneConfiguration controlPlaneConfigurations = 1;
  // The token to use when requesting the next set of results. If not present, there are no additional results.
  string nextPageToken = 2;
}

// Request object for the GeneratePvcControlPlaneAuthToken method.
message GeneratePvcControlPlaneAuthTokenRequest {
  // The account ID of the Private Cloud control plane.
  string pvcId = 1 [(options.FieldExtension.required) = true];;
}

// Response object for the GeneratePvcControlPlaneAuthToken method.
message GeneratePvcControlPlaneAuthTokenResponse {
  // The authentication token.
  string token = 1 [(options.FieldExtension.sensitive) = true];
}

// Request Object for RegisterPvcBaseCluster method.
message RegisterPvcBaseClusterRequest {
  // The CRN of the Private Cloud control plane.
  string pvcCrn = 1 [(options.FieldExtension.required) = true];
  // The Cloudera Manager Hostname.
  string cmHostname = 2 [(options.FieldExtension.required) = true];
  // The Cloudera Manager Port.
  int32 cmPort = 3 [(options.FieldExtension.required) = true];
  // The Data Center name.
  string dcName = 4 [(options.FieldExtension.required) = true];
  // The boolean to represent if Cloudera Manager is running on HTTP Secure Connection or not.
  bool isHttpSecure = 5 [(options.FieldExtension.required) = true];
  // The optional Knox IP Address.
  string knoxIpAddress = 6;
  // The optional Knox IP Port.
  int32 knoxPort = 7;
  // The Cloudera Manager URL.
  string cmUrl = 8;
  // The optional Knox Gateway URL.
  string knoxGatewayUrl = 9;
}

// Response Object for RegisterPvcBaseCluster method.
message RegisterPvcBaseClusterResponse {
  // The registered PvC Base Cluster CRN.
  string clusterCrn = 1;
}
