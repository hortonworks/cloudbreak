syntax = "proto3";

package sdxsvccommon;

option java_package = "com.cloudera.thunderhead.service.sdxsvccommon";
option java_outer_classname = "SDXSvcCommonProto";

import "options.proto";

// SDX Cloud Platforms
message CloudPlatform {
  // The Cloud Platform Value
  enum Value {
    // AWS Cloud Platform.
    AWS = 0;
  }
}

// SDX Connection types.
message ConnectionType {
  // The Connection Type Value
  enum Value {
    // AWS PrivateLink Endpoint connection.
    AWS_PRIVATELINK = 0;
    AWS_PRIVATELINK_FOR_HMS_DATABASE = 1;
  }
}

// The Mapping of regions to a cloud platform
message CloudPlatformRegion {
  // The cloud platform the region belongs to.
  ConnectionType.Value platform = 1;
  // The region.
  string region = 2;
}

// Generic key-value type
message KeyValuePair {
  // Key
  string key = 1;
  // Value
  string value = 2;
}

// Status of an SDX Instance
message InstanceHighLevelStatus {
  // The Instance Status
  enum Value {
    // Instance is being provisioned.
    PROVISIONING = 0;
    // Instance is healthy
    HEALTHY = 1;
    // Instance is unhealthy
    UNHEALTHY = 2;
    // Instance is being deleted.
    DELETING = 3;
    // Instance is stopped.
    STOPPED = 4;
    // Instance is in an Unknown State
    UNKNOWN = 5;
  }
}

// Status of an SDX Service
message ServiceStatus {
  // The Service Status
  enum Value {
    // Service is being prepared
    PROVISIONING = 0;
    // Service is healthy
    HEALTHY = 1;
    // Service is unhealthy
    UNHEALTHY = 2;
    // Service is upgrading
    UPGRADING = 3;
    // Service is being removed.
    REMOVING = 4;
    // Service is stopped.
    STOPPED = 5;
    // Service is in an Unknown State
    UNKNOWN = 6;
  }
}

// The assignment infor for a service to a RDBMS instance
message DatabaseAssignment {
  // The unique assignment Id.
  string assignmentId = 1;
  // The cloud platform.
  CloudPlatform.Value cloudPlatform = 2;
  // The cloud region the RDS is in.
  string cloudRegion = 3;
  // Admin Username Vault Path
  string usernameVaultPath = 4;
  // Admin Password Vault Path
  string passwordVaultPath = 5;
  // The database name
  string databaseName = 6;
  // The hostname for RDBMS Endpoint.
  string accessHostname = 7;
  // Port for RDBMS Endpoint.
  string accessPort = 8;
  // TLS enabled.
  bool tlsEnabled = 9;
  // The SDX Instance Id the SDX Service's database instance is attached to.
  string instanceId = 10;
  // The SDX Service's Id database instance is attached to.
  string serviceId = 11;
}

// The RDBMS instance information
message RdbmsInstance {
  // The name of the RDS.
  string name = 1;
  // The cloud Id of the RDS.
  string cloudId = 2;
  // The cloud platform.
  CloudPlatform.Value cloudPlatform = 3;
  // The cloud region the RDBMS is in
  string cloudRegion = 4;
  // Hostname for RDBMS Endpoint.
  string accessHostname = 5;
  // Port for RDBMS Endpoint.
  string accessPort = 6;
  // Admin Username Vault Path
  string adminUsernameVaultPath = 7;
  // Admin Password Vault Path
  string adminPasswordVaultPath = 8;
  // Is the RDBMS instance assignable
  bool assignable = 9;
  // Instance Id - unique Id that will be auto generated by the RM on registration
  string id = 10;
  // Timestamp of registration
  int64 registeredTimestamp = 11 [(options.FieldExtension.datetime) = true];
  // The database assignments on this RDBMS Instance.
  repeated DatabaseAssignment assignments = 12;
  // TLS enabled
  bool tlsEnabled = 13;
}

// Assignment info for a SDX Instance to a Operational Environment
message OperationalEnvironmentAssignment {
  // The unique assignment Id.
  string assignmentId = 1;
  // The CRN of the SDX Instance assigned.
  string instanceCrn = 2;
  // The k8s namespace the instance is assigned to.
  string namespace = 3;
  // The timestamp when the SDX Instance was assigned to the Operational Environment.
  int64 assignedTimestamp = 4 [(options.FieldExtension.datetime) = true];
}

// The SDX Operational Environment
message OperationalEnvironment {
  // The name of the Operational Environment.
  string name = 1;
  // The cloud Id of the Operational Environment.
  string cloudId = 2;
  // The cloud region the Operational Environment is in
  string cloudRegion = 3;
  // Hostname for SDX traffic. NLB fronting the SDX ingress for the cluster.
  string sdxTrafficHostname = 4;
  // Admin traffic access hostname.  NLB fronting the admin ingress for the cluster.
  string adminTrafficHostname = 5;
  // The kube-config for the Operational Environment
  string kubeConfig = 6;
  // The K8s API Server Endpoint
  string apiServerEndpoint = 7;
  // The OpenId Connection provider endpoint
  string openIdProviderEndpoint = 8;
  // The CA Cert for the Cluster
  string caCert = 9;
  // Is the Operational Environment assignable
  bool assignable = 10;
  // Instance Id - unique Id that will be auto generated by the RM on registration
  string id = 11;
  // Timestamp of registration
  int64 registeredTimestamp = 12 [(options.FieldExtension.datetime) = true];
  // The assignments on this Operational Environment
  repeated OperationalEnvironmentAssignment assignments = 13;
  // Timestamp of last update
  int64 updatedTimestamp = 14 [(options.FieldExtension.datetime) = true];
}


// SDX Instance and service history event.
message Event {
  // The event Id.
  string id = 1;
  // The request the event is for.
  string requestId = 2;
  // The status when the event occurred.
  string status = 3;
  // The timestamp the history event occurred at.
  int64 occurredAt = 4 [(options.FieldExtension.datetime) = true];
  // The message associated with the history event.
  string message = 5;
  // The details of the event.
  string details = 6;
}

// Deployment information about an SDX Instance.
message InstanceDeployment {
  // The Operational Environment the SDX Instance runs in.
  string operationalEnvironment = 1;
  // The percent of traffic going to this Operational Environment.
  int32 percentTraffic = 2;
  // The SDX Services deployed in the SDX Instance.
  repeated Service services = 3;
}


// A SDX Service deployment in an SDX Instance.
message Service {
  // The base type of the SDX Service
  string serviceType = 1;
  // The deployed name of the SDX Service.
  string name = 2;
  // The CRN of the SDX Service instance.
  string crn = 3;
  // The namespace the SDX Service runs in.
  string namespace = 4;
  // The version of the SDX Service running.
  string version = 5;
  // The helm deployment name for the SDX Service.
  string helmDeployment = 6;
  // The status of the SDX Service.
  ServiceStatus.Value status = 7;
  // The history events for the SDX Service.
  repeated Event history = 8;
}

// An SDX Instance object.
message Instance {
  // Name of the SDX Instance.
  string name = 1;
  // CRN of the SDX Instance.
  string crn = 2;
  // Status of the SDX Instance.
  InstanceHighLevelStatus.Value status = 3;
  // Cloud platform of the SDX Instance.
  CloudPlatform.Value cloudPlatform = 4;
  // Cloud region the SDX Instance is in.
  string cloudRegion = 5;
  // Description of the SDX Instance.
  string description = 6;
  // Creation time of the SDX Instance.
  int64 created = 7 [(options.FieldExtension.datetime) = true];
  // Hostname to reach the SDX Instance
  string hostname = 8;
  // Port to reach the SDX Instance
  int32 port = 9;
  // The environments the SDX Instance is associated with.
  repeated string environments = 10;
  // Deployment info for SDX Instances
  repeated InstanceDeployment deployments = 11;
  // Event history of the SDX Instance.
  repeated Event history = 12;
}

// An SDX Connection object.
message Connection {
  // The name of the SDX Conneciton
  string name = 1;
  // CRN of the SDX Connection.
  string crn = 2;
  // Status of the SDX Connection.
  string status = 3;
  // The type of SDX Connection.
  ConnectionType.Value type = 4;
  // Cloud platform of the SDX Connection.
  string cloudPlatform = 5;
  // Cloud platforms region for the SDX Connection
  string cloudRegion = 6;
  // The cloud platforms identifier for the SDX Connection.
  string cloudId = 7;
  // IP Addresses for the SDX Connection
  repeated string cloudIpAddresses = 8;
  // Creation time of the SDX Instance.
  int64 created = 9 [(options.FieldExtension.datetime) = true];
  // The history events for the SDX Service.
  repeated Event history = 10;
}

// *********************** Search Messages ***************************

// Search by an SDX Instance.
message SearchByInstance {
  // The CRN of the Instance
  string instance = 1;
}

// Search by an SDX Service.
message SearchByService {
  // The name or CRN of the SDX Instance.
  string instance = 1;
  // The name or CRN of the SDX Service.
  string serviceId = 2;
}

// Search by a Cloud Platform.
message SearchByCloudPlatform {
  // The Cloud Platform to search for
  sdxsvccommon.CloudPlatform.Value cloudPlatform = 1;
}

// Search by a CDP Environment.
message SearchByEnvironment {
  // The name or CRN of the CDP environment.
  string environment = 1;
}

// Search by the Operational Environment.
message SearchByOperationalEnvironment {
  // The name or Id of the Operational Environment.
  string operationalEnvironment = 1;
}

// Search by a Cloud Region.
message SearchByCloudRegion {
  // The cloud region.
  string cloudRegion = 1;
}

// Search by Assignability.
message SearchByAssignability {
  // The assignability.
  bool assignable = 1;
}

// An SDX Shared Indexer instance
message Indexer {
  // The name of the Indexer.
  string name = 1;
  // The cloud Id of the Indexer.
  string cloudId = 2;
  // The cloud platform.
  CloudPlatform.Value cloudPlatform = 3;
  // The cloud region the Indexer is in
  string cloudRegion = 4;
  // Hostname for Indexer Endpoint.
  string accessHostname = 5;
  // Port for Indexer Endpoint.
  string accessPort = 6;
  // TLS enabled
  bool tlsEnabled = 7;
  // Admin Username Vault Path
  string adminUsernameVaultPath = 8;
  // Admin Password Vault Path
  string adminPasswordVaultPath = 9;
  // Is the Indexer assignable
  bool assignable = 10;
  // Indexer instance Id - unique Id that will be auto generated by the RM on registration
  string id = 11;
  // Timestamp of registration
  int64 registeredTimestamp = 12 [(options.FieldExtension.datetime) = true];
  // Timestamp of last update
  int64 updatedTimestamp = 13 [(options.FieldExtension.datetime) = true];
  // Assignment to this indexer
  repeated IndexerAssignment assignments = 14;
}

// The assignment info for a service to a Indexer instance
message IndexerAssignment {
  // The unique assignment Id.
  string assignmentId = 1;
  // The cloud platform.
  CloudPlatform.Value cloudPlatform = 2;
  // The cloud region the Indexer is in.
  string cloudRegion = 3;
  // Access Role
  string accessRole = 4;
  // DB name
  string indexPrefix = 5;
  // Hostname for Indexer endpoint.
  string accessHostname = 6;
  // Port for Indexer endpoint.
  string accessPort = 7;
  // TLS enabled
  bool tlsEnabled = 8;
  // The SDX Instance Id the SDX Service's Indexer instance is attached to.
  string instanceId = 9;
  // The SDX Service's Id the Indexer instance is attached to
  string serviceId = 10;
}

// A Storage Root location
message StorageRoot {
  // unique Id that will be auto generated by the RM on registration
  string id = 1;
  // The name of the Storage Root.
  string name = 2;
  // The cloud Id of the Storage Root.
  string cloudId = 3;
  // The cloud platform.
  CloudPlatform.Value cloudPlatform = 4;
  // The cloud region the Storage Root. is in
  string cloudRegion = 5;
  // Timestamp of registration
  int64 registeredTimestamp = 7 [(options.FieldExtension.datetime) = true];
  // Timestamp of last update
  int64 updatedTimestamp = 8 [(options.FieldExtension.datetime) = true];
  // Is the Storage Root assignable
  bool assignable = 9;
  // The Storage assigned to the Storage Root
  repeated StorageAssignment assignedStorage = 10;
}

// The assignment infor for a service to a Indexer instance
message StorageAssignment {
  // The unique assignment Id.
  string assignmentId = 1;
  // The cloud platform.
  CloudPlatform.Value cloudPlatform = 2;
  // The cloud region the Indexer is in.
  string cloudRegion = 3;
  // Access Role
  string accessRole = 4;
  // The path for the storage
  string storagePath = 5;
  // The SDX Instance Id the SDX Service's Indexer instance is attached to.
  string instanceId = 6;
  // The SDX Service's Id the Indexer instance is attached to.
  string serviceId = 7;
  // Timestamp of assginment.
  int64 assignmentTimestamp = 8 [(options.FieldExtension.datetime) = true];
  // The encryption key Id for the storage.
  string encryptionKeyId = 9;
}

