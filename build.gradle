buildscript {
  repositories {
    mavenCentral()
    jcenter()
  }
  dependencies {
    classpath 'org.ajoberstar:grgit:2.1.0'
    classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.1.11'
    classpath 'com.smokejumperit.gradle.license:Gradle-License-Report:0.0.2'
  }
}

plugins {
  id 'org.ajoberstar.grgit' version '2.1.0'
  id 'org.ajoberstar.reckon' version '0.3.0'
}

reckon {
  normal = scopeFromProp()
  preRelease = stageFromProp('dev', 'rc', 'final')
}

def env = project.hasProperty('env') ? project.getProperty('env') : 'local'
ext.config = new ConfigSlurper(env).parse(file("$rootDir/gradle/config/buildConfig.groovy").toURL())

allprojects {
  apply plugin: 'idea'
  apply plugin: 'eclipse'
  group = 'com.sequenceiq'
  configurations {
    testRuntime {
      exclude group: "org.springframework.cloud"
    }
  }

}

subprojects {
  apply plugin: 'java'
  apply plugin: 'maven'
  apply plugin: 'checkstyle'
  apply plugin: 'findbugs'

  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  configurations {
    deployerJars
    all*.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    all*.exclude group: 'com.google.guava', module: 'guava-jdk5'
  }

  dependencies {
    deployerJars("org.springframework.build.aws:org.springframework.build.aws.maven:3.0.0.RELEASE")
  }

  uploadArchives {
    repositories {
      mavenDeployer {
        configuration = configurations.deployerJars
        repository(url: "s3://cloudbreak-maven/releases") {
          authentication(userName: "$System.env.AWS_ACCESS_KEY", passphrase: "$System.env.AWS_SECRET_ACCESS_KEY")
        }
        snapshotRepository(url: "s3://cloudbreak-maven/snapshots") {
          authentication(userName: "$System.env.AWS_ACCESS_KEY", passphrase: "$System.env.AWS_SECRET_ACCESS_KEY")
        }
      }
    }
  }

  findbugs {
    toolVersion = "3.0.1"
    excludeFilter = file("$rootProject.projectDir/config/findbugs/excludeFilter.xml")
  }

  tasks.withType(FindBugs) {
    reports {
        xml.enabled false
        html.enabled true
    }
  }

  checkstyle {
    toolVersion = "7.6"
  }

  checkstyleMain {
    ignoreFailures = false
    configFile = rootProject.file('config/checkstyle/checkstyle.xml')
    configProperties = ['config_loc': "$rootDir/config/checkstyle"]
  }

  checkstyleTest {
    ignoreFailures = false
    configFile = rootProject.file('config/checkstyle/checkstyle.xml')
    configProperties = ['config_loc': "$rootDir/config/checkstyle"]
  }

  test.testLogging.showStandardStreams = project.hasProperty('showStandardStreams')

  dependencies {
    checkstyle('com.puppycrawl.tools:checkstyle:6.11.1') {
      exclude group: 'com.google.guava'
    }
    checkstyle("com.google.guava:guava:21.0") { force = true }
  }

  task allDeps(type: DependencyReportTask) {}

  repositories {
    mavenCentral()
    maven { url "https://cloudbreak-maven.s3.amazonaws.com/releases" }
    maven { url "https://repo.spring.io/release" }
    mavenLocal()
  }
}