server:
  contextPath: "/cb"

spring:
  cloud:
    consul:
      host: consul.service.consul
cb:
  publicip:
  threadpool:
    core.size: 40
    capacity.size: 4000
  intermediate.threadpool:
    core.size: 40
    capacity.size: 4000
  container.threadpool:
    core.size: 40
    capacity.size: 4000
  
  cert:
    dir: /certs/

  tls:
    private.key.file: client-key.pem
    cert.file: client.pem
  
  smtp.sender:
    host:
    port: 25
    username:
    password:
    from: no-reply@sequenceiq.com
  
  db.env:
    user: postgres
    pass:
    db: postgres
  
  aws:
    spotinstances.enabled: true
    hostkey.verify: false
    external.id: provision-ambari
    cf.template.new.path: templates/aws-cf-stack.ftl
    default.inbound.security.group:
    vpc:

  blueprint.defaults: hdp-small-default;hdp-spark-cluster;hdp-streaming-cluster;hdp-etl-edw;hdp25-data-science;hdp25-edw-analytics;hdp25-etl-edw;hdp25-etl-edw-spark2
  template.defaults: minviable-gcp,minviable-azure,minviable-aws
  custom.user.data: |
    touch /tmp/custom-user-data
    date >> /tmp/custom-user-data

  mail:
    smtp:
    auth: true
    type: smtp
    starttls.enable: true
  success.cluster.installer.mail.template.path: templates/cluster-installer-mail-success.ftl
  failed.cluster.installer.mail.template.path: templates/cluster-installer-mail-fail.ftl

  docker:
    container:
      ambari.server: hortonworks/ambari-server:2.4.0-v1
      ambari.agent: hortonworks/ambari-agent:2.4.0-v1
      ambari.db: postgres:9.4.1
      registrator: gliderlabs/registrator:v6
      docker.consul.watch.plugn: sequenceiq/docker-consul-watch-plugn:1.6
      kerberos: sequenceiq/kerberos:1.1
      logrotate: sequenceiq/logrotate:v0.5.1
      munchausen: sequenceiq/munchausen:0.6.0
      haveged: sequenceiq/haveged:1.0
      ldap: sequenceiq/docker-ldap:1.0
      shipyard: shipyard/shipyard:v3.0.0
      shipyard.db: rethinkdb:2.2.4
      certs: ehazlett/cert-tool:0.0.3
      alpine: gliderlabs/alpine:3.1
      consul: gliderlabs/consul:0.6
      gateway: sequenceiq/cb-gateway-nginx:0.3
      swarm: swarm:1.1.0
    env:
      ldap: SLAPD_PASSWORD=cloudbreak|SLAPD_BINDUSER=ambari-qa|SLAPD_BINDPWD=cloudbreak|SLAPD_BINDGROUP=hadoop

  sssd:
    name: cloudbreak-default-ldap
    type: LDAP
    url: ldap://ldap.service.consul
    schema: RFC2307
    base: dc=nodomain

  arm:
    template.path: templates/arm-v2.ftl
    parameter.path: templates/parameters.ftl

  openstack:
    heat.template.path: templates/openstack-heat.ftl
    api.debug: false
  
  max:
    azure.resource.name.length: 120
    gcp.resource.name.length: 63
    aws.resource.name.length: 50
    openstack.resource.name.length: 120
  
  address.resolving.timeout: 60000
  
  eventbus.threadpool.core.size: 100
  cloud.api.executorservice.pool.size: 40

  platform.default.variants: OPENSTACK:HEAT

  gcp:
    hostkey.verify: false

  byos:
    dfs.data.dir: /hadoop/hdfs/data

  nginx:
    port: 9443

  ambari:
    repo:
      version: 2.4.0.1-1
      baseurl: http://public-repo-1.hortonworks.com/ambari/centos7/2.x/updates/2.4.0.1
      gpgkey: http://public-repo-1.hortonworks.com/ambari/centos7/RPM-GPG-KEY/RPM-GPG-KEY-Jenkins
    database:
      vendor: embedded
      host: localhost
      port: 5432
      name: postgres
      username: ambari
      password: bigdata

  smartsense.configure: false
  smartsense.id.pattern: A-9990%s-C-%s

  image.catalog.url: https://s3-eu-west-1.amazonaws.com/cloudbreak-info/cb-image-catalog.json
