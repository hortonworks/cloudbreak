'use strict';


/**
 * delete Flex subscription by id
 * Flex subscriptions could be configured.
 *
 * id Long 
 * no response value expected for this operation
 **/
exports.deleteFlexSubscriptionById = function(id) {
  return new Promise(function(resolve, reject) {
    resolve();
  });
}


/**
 * delete private Flex subscription by name
 * Flex subscriptions could be configured.
 *
 * name String 
 * no response value expected for this operation
 **/
exports.deletePrivateFlexSubscriptionByName = function(name) {
  return new Promise(function(resolve, reject) {
    resolve();
  });
}


/**
 * delete public (owned) or private Flex subscription by name
 * Flex subscriptions could be configured.
 *
 * name String 
 * no response value expected for this operation
 **/
exports.deletePublicFlexSubscriptionByName = function(name) {
  return new Promise(function(resolve, reject) {
    resolve();
  });
}


/**
 * retrieve Flex subscription by id
 * Flex subscriptions could be configured.
 *
 * id Long 
 * returns FlexSubscriptionResponse
 **/
exports.getFlexSubscriptionById = function(id) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "owner" : "owner",
  "publicInAccount" : false,
  "smartSenseSubscriptionId" : 0,
  "usedForController" : false,
  "name" : "name",
  "smartSenseSubscription" : {
    "owner" : "owner",
    "publicInAccount" : false,
    "id" : 1,
    "autoGenerated" : false,
    "subscriptionId" : "subscriptionId",
    "account" : "account"
  },
  "id" : 6,
  "subscriptionId" : "subscriptionId",
  "account" : "account",
  "usedAsDefault" : false
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 * retrieve a private Flex subscription by name
 * Flex subscriptions could be configured.
 *
 * name String 
 * returns FlexSubscriptionResponse
 **/
exports.getPrivateFlexSubscriptionByName = function(name) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "owner" : "owner",
  "publicInAccount" : false,
  "smartSenseSubscriptionId" : 0,
  "usedForController" : false,
  "name" : "name",
  "smartSenseSubscription" : {
    "owner" : "owner",
    "publicInAccount" : false,
    "id" : 1,
    "autoGenerated" : false,
    "subscriptionId" : "subscriptionId",
    "account" : "account"
  },
  "id" : 6,
  "subscriptionId" : "subscriptionId",
  "account" : "account",
  "usedAsDefault" : false
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 * retrieve private Flex subscriptions
 * Flex subscriptions could be configured.
 *
 * returns List
 **/
exports.getPrivateFlexSubscriptions = function() {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = [ {
  "owner" : "owner",
  "publicInAccount" : false,
  "smartSenseSubscriptionId" : 0,
  "usedForController" : false,
  "name" : "name",
  "smartSenseSubscription" : {
    "owner" : "owner",
    "publicInAccount" : false,
    "id" : 1,
    "autoGenerated" : false,
    "subscriptionId" : "subscriptionId",
    "account" : "account"
  },
  "id" : 6,
  "subscriptionId" : "subscriptionId",
  "account" : "account",
  "usedAsDefault" : false
}, {
  "owner" : "owner",
  "publicInAccount" : false,
  "smartSenseSubscriptionId" : 0,
  "usedForController" : false,
  "name" : "name",
  "smartSenseSubscription" : {
    "owner" : "owner",
    "publicInAccount" : false,
    "id" : 1,
    "autoGenerated" : false,
    "subscriptionId" : "subscriptionId",
    "account" : "account"
  },
  "id" : 6,
  "subscriptionId" : "subscriptionId",
  "account" : "account",
  "usedAsDefault" : false
} ];
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 * retrieve a public or private (owned) Flex subscription by name
 * Flex subscriptions could be configured.
 *
 * name String 
 * returns FlexSubscriptionResponse
 **/
exports.getPublicFlexSubscriptionByName = function(name) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "owner" : "owner",
  "publicInAccount" : false,
  "smartSenseSubscriptionId" : 0,
  "usedForController" : false,
  "name" : "name",
  "smartSenseSubscription" : {
    "owner" : "owner",
    "publicInAccount" : false,
    "id" : 1,
    "autoGenerated" : false,
    "subscriptionId" : "subscriptionId",
    "account" : "account"
  },
  "id" : 6,
  "subscriptionId" : "subscriptionId",
  "account" : "account",
  "usedAsDefault" : false
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 * retrieve public and private (owned) Flex subscriptions
 * Flex subscriptions could be configured.
 *
 * returns List
 **/
exports.getPublicFlexSubscriptions = function() {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = [ {
  "owner" : "owner",
  "publicInAccount" : false,
  "smartSenseSubscriptionId" : 0,
  "usedForController" : false,
  "name" : "name",
  "smartSenseSubscription" : {
    "owner" : "owner",
    "publicInAccount" : false,
    "id" : 1,
    "autoGenerated" : false,
    "subscriptionId" : "subscriptionId",
    "account" : "account"
  },
  "id" : 6,
  "subscriptionId" : "subscriptionId",
  "account" : "account",
  "usedAsDefault" : false
}, {
  "owner" : "owner",
  "publicInAccount" : false,
  "smartSenseSubscriptionId" : 0,
  "usedForController" : false,
  "name" : "name",
  "smartSenseSubscription" : {
    "owner" : "owner",
    "publicInAccount" : false,
    "id" : 1,
    "autoGenerated" : false,
    "subscriptionId" : "subscriptionId",
    "account" : "account"
  },
  "id" : 6,
  "subscriptionId" : "subscriptionId",
  "account" : "account",
  "usedAsDefault" : false
} ];
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 * create Flex subscription as private resource
 * Flex subscriptions could be configured.
 *
 * body FlexSubscriptionRequest  (optional)
 * returns FlexSubscriptionResponse
 **/
exports.postPrivateFlexSubscription = function(body) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "owner" : "owner",
  "publicInAccount" : false,
  "smartSenseSubscriptionId" : 0,
  "usedForController" : false,
  "name" : "name",
  "smartSenseSubscription" : {
    "owner" : "owner",
    "publicInAccount" : false,
    "id" : 1,
    "autoGenerated" : false,
    "subscriptionId" : "subscriptionId",
    "account" : "account"
  },
  "id" : 6,
  "subscriptionId" : "subscriptionId",
  "account" : "account",
  "usedAsDefault" : false
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 * create Flex subscription as public resource
 * Flex subscriptions could be configured.
 *
 * body FlexSubscriptionRequest  (optional)
 * returns FlexSubscriptionResponse
 **/
exports.postPublicFlexSubscription = function(body) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "owner" : "owner",
  "publicInAccount" : false,
  "smartSenseSubscriptionId" : 0,
  "usedForController" : false,
  "name" : "name",
  "smartSenseSubscription" : {
    "owner" : "owner",
    "publicInAccount" : false,
    "id" : 1,
    "autoGenerated" : false,
    "subscriptionId" : "subscriptionId",
    "account" : "account"
  },
  "id" : 6,
  "subscriptionId" : "subscriptionId",
  "account" : "account",
  "usedAsDefault" : false
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 * sets the account default flag on the Flex subscription
 * Flex subscriptions could be configured.
 *
 * id Long 
 * no response value expected for this operation
 **/
exports.putDefaultFlexSubscriptionById = function(id) {
  return new Promise(function(resolve, reject) {
    resolve();
  });
}


/**
 * sets the account default flag on the Flex subscription
 * Flex subscriptions could be configured.
 *
 * name String 
 * no response value expected for this operation
 **/
exports.putPublicDefaultFlexSubscriptionByName = function(name) {
  return new Promise(function(resolve, reject) {
    resolve();
  });
}


/**
 * sets the account 'used for controller' flag on the Flex subscription
 * Flex subscriptions could be configured.
 *
 * name String 
 * no response value expected for this operation
 **/
exports.putPublicUsedForControllerFlexSubscriptionByName = function(name) {
  return new Promise(function(resolve, reject) {
    resolve();
  });
}


/**
 * sets the account 'used for controller' flag on the Flex subscription
 * Flex subscriptions could be configured.
 *
 * id Long 
 * no response value expected for this operation
 **/
exports.putUsedForControllerFlexSubscriptionById = function(id) {
  return new Promise(function(resolve, reject) {
    resolve();
  });
}

