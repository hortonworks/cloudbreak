'use strict';


/**
 * delete private SmartSense subscription by subscription ID
 * SmartSense subscriptions could be configured.
 *
 * subscriptionId String 
 * no response value expected for this operation
 **/
exports.deletePrivateSmartSenseSubscriptionBySubscriptionId = function(subscriptionId) {
  return new Promise(function(resolve, reject) {
    resolve();
  });
}


/**
 * delete public (owned) or private SmartSense subscription by subscription ID
 * SmartSense subscriptions could be configured.
 *
 * subscriptionId String 
 * no response value expected for this operation
 **/
exports.deletePublicSmartSenseSubscriptionBySubscriptionId = function(subscriptionId) {
  return new Promise(function(resolve, reject) {
    resolve();
  });
}


/**
 * delete SmartSense subscription by id
 * SmartSense subscriptions could be configured.
 *
 * id Long 
 * no response value expected for this operation
 **/
exports.deleteSmartSenseSubscriptionById = function(id) {
  return new Promise(function(resolve, reject) {
    resolve();
  });
}


/**
 * retrieve private SmartSense subscriptions
 * SmartSense subscriptions could be configured.
 *
 * returns List
 **/
exports.getPrivateSmartSenseSubscriptions = function() {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = [ {
  "owner" : "owner",
  "publicInAccount" : false,
  "id" : 1,
  "autoGenerated" : false,
  "subscriptionId" : "subscriptionId",
  "account" : "account"
}, {
  "owner" : "owner",
  "publicInAccount" : false,
  "id" : 1,
  "autoGenerated" : false,
  "subscriptionId" : "subscriptionId",
  "account" : "account"
} ];
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 * retrieve public and private (owned) SmartSense subscriptions
 * SmartSense subscriptions could be configured.
 *
 * returns List
 **/
exports.getPublicSmartSenseSubscriptions = function() {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = [ {
  "owner" : "owner",
  "publicInAccount" : false,
  "id" : 1,
  "autoGenerated" : false,
  "subscriptionId" : "subscriptionId",
  "account" : "account"
}, {
  "owner" : "owner",
  "publicInAccount" : false,
  "id" : 1,
  "autoGenerated" : false,
  "subscriptionId" : "subscriptionId",
  "account" : "account"
} ];
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 * retrieve default SmartSense subscription
 * SmartSense subscriptions could be configured.
 *
 * returns SmartSenseSubscriptionJson
 **/
exports.getSmartSenseSubscription = function() {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "owner" : "owner",
  "publicInAccount" : false,
  "id" : 1,
  "autoGenerated" : false,
  "subscriptionId" : "subscriptionId",
  "account" : "account"
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 * retrieve SmartSense subscription by id
 * SmartSense subscriptions could be configured.
 *
 * id Long 
 * returns SmartSenseSubscriptionJson
 **/
exports.getSmartSenseSubscriptionById = function(id) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "owner" : "owner",
  "publicInAccount" : false,
  "id" : 1,
  "autoGenerated" : false,
  "subscriptionId" : "subscriptionId",
  "account" : "account"
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 * create SmartSense subscription as private resource
 * SmartSense subscriptions could be configured.
 *
 * body SmartSenseSubscriptionJson  (optional)
 * returns SmartSenseSubscriptionJson
 **/
exports.postPrivateSmartSenseSubscription = function(body) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "owner" : "owner",
  "publicInAccount" : false,
  "id" : 1,
  "autoGenerated" : false,
  "subscriptionId" : "subscriptionId",
  "account" : "account"
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 * create SmartSense subscription as public resource
 * SmartSense subscriptions could be configured.
 *
 * body SmartSenseSubscriptionJson  (optional)
 * returns SmartSenseSubscriptionJson
 **/
exports.postPublicSmartSenseSubscription = function(body) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "owner" : "owner",
  "publicInAccount" : false,
  "id" : 1,
  "autoGenerated" : false,
  "subscriptionId" : "subscriptionId",
  "account" : "account"
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}

