import org.ajoberstar.grgit.Grgit

plugins {
    id "java"
    id "checkstyle"
    id "jacoco"
    id "maven"
    id "org.springframework.boot" version "2.1.2.RELEASE"
}

repositories {
  mavenLocal()
  maven { url = "$repoUrl" }
  maven { url = "$springRepoUrl" }
  mavenCentral()
  jcenter()
}

configurations.all {
    resolutionStrategy {
        force "org.ow2.asm:asm:7.1"
        force "net.bytebuddy:byte-buddy:1.9.13"
    }
}

dependencies {
    implementation     project(":authorization-common")
    implementation     project(":common")
    implementation     project(":secret-engine")
    implementation     project(":flow")
    implementation     project(":auth-connector")
    implementation     project(":environment-api")
    implementation     project(":notification-sender")
    implementation     project(":cloud-reactor")
    implementation     project(":cloud-reactor-api")
    implementation     project(":datalake-api")
    implementation     project(":core-api")
    implementation     project(":cloud-aws")
    implementation     project(":cloud-azure")
    implementation     project(":cloud-mock")
    implementation     project(":cloud-yarn")
    implementation     project(":cloud-gcp")
    implementation     project(":cloud-openstack")
    implementation     project(":core-api")
    implementation     project(":idbmms-connector")
    implementation     project(":redbeams-api")
    implementation     project(":freeipa-api")
    implementation     project(":structuredevent-service-cdp")
    implementation     project(':status-checker')

    implementation     group: "org.yaml",                  name: "snakeyaml",                                version: snakeYamlVersion
    implementation     group: "io.springfox",              name: "springfox-swagger2",                       version: swagger2Version
    implementation     group: "io.springfox",              name: "springfox-core",                           version: swagger2Version
    implementation     group: "io.springfox",              name: "springfox-swagger-ui",                     version: swagger2Version
    implementation     group: "com.google.code.gson",      name: "gson",                                     version: gsonVersion
    implementation     group: "dnsjava",                   name: "dnsjava",                                  version: dnsjavaVersion
    implementation     group: "io.micrometer",             name: "micrometer-core",                          version: micrometerVersion
    implementation     group: "io.micrometer",             name: "micrometer-jersey2",                       version: micrometerVersion
    implementation     group: "io.micrometer",             name: "micrometer-registry-prometheus",           version: micrometerVersion
    implementation     group: "io.springfox",              name: "springfox-swagger2",                       version: swagger2Version
    implementation     group: "io.springfox",              name: "springfox-swagger-ui",                     version: swagger2Version
    implementation    (group: "io.swagger",                name: "swagger-jersey2-jaxrs",                    version: swaggerVersion) {
        exclude group: "org.yaml", module: "snakeyaml"
    }
    implementation     group: "javax.xml.bind",            name: "jaxb-api",                                 version: "2.3.1"
    implementation     group: "org.glassfish.jersey.core", name: "jersey-server",                            version: jerseyCoreVersion
    implementation     group: "org.mybatis",               name: "mybatis-migrations",                       version: mybatisMigrationVersion
    implementation     group: "org.postgresql",            name: "postgresql",                               version: postgreSQLVersion
    implementation     group: "org.springframework.boot",  name: "spring-boot-starter",                      version: springBootVersion
    implementation     group: "org.springframework.boot",  name: "spring-boot-starter-web",                  version: springBootVersion
    implementation     group: "org.springframework.boot",  name: "spring-boot-starter-actuator",             version: springBootVersion
    implementation     group: "org.springframework.boot",  name: "spring-boot-starter-jersey",               version: springBootVersion
    implementation     group: "org.springframework.boot",  name: "spring-boot-starter-data-jpa",             version: springBootVersion
    implementation     group: 'org.springframework.boot',  name: 'spring-boot-starter-quartz',           version: springBootVersion
    implementation     group: "io.projectreactor",         name: "reactor-core",                             version: eventBusVersion
    implementation     group: "io.projectreactor",         name: "reactor-bus",                              version: eventBusVersion
    implementation     group: "io.opentracing.contrib",    name: "opentracing-spring-jaeger-starter",        version: opentracingSpringJaegerStarterVersion
    implementation     group: "io.opentracing.contrib",    name: "opentracing-jaxrs2",                       version: opentracingJaxrs2Version
    implementation     group: "io.opentracing.contrib",    name: "opentracing-jdbc",                         version: opentracingJdbcVersion
    implementation     group: 'com.cloudera.cdp',          name: 'cdp-sdk-java',                             version: cdpSdkVersion
    implementation     group: 'com.dyngr',                 name: 'polling',                                  version: '1.1.3'
    implementation     group: 'net.sourceforge.jregex',    name: 'jregex',                                   version: '1.2_01'

    testImplementation project(path: ':common', configuration: 'tests')
    testImplementation project(path: ':authorization-common', configuration: 'tests')
    testImplementation group: "org.mockito",               name: "mockito-core",                             version: mockitoVersion
    testImplementation(group: "org.springframework.boot",  name: "spring-boot-starter-test",                 version: springBootVersion) {
        exclude group: "junit"
    }

    testImplementation group: 'junit',                     name: 'junit',                                    version: junitVersion
    testImplementation group: "com.openpojo",              name: "openpojo",                                 version: openPojoVersion
    testImplementation group: "org.ow2.asm",               name: "asm",                                      version: asmVersion
    testImplementation group: "com.h2database",            name: "h2",                                       version: h2databaseVersion
    testImplementation group: "org.mockito",               name: "mockito-core",                             version: mockitoVersion
    testImplementation group: "com.google.guava",          name: "guava",                                    version: guavaVersion
    testImplementation group: 'org.assertj',               name: 'assertj-core',                             version: assertjVersion
    testImplementation group: 'org.junit.jupiter',         name: 'junit-jupiter',                            version: junitJupiterVersion
}

bootRun {
  systemProperty "spring.profiles.active", System.properties["spring.profiles.active"]
  systemProperty "spring.config.location", System.properties["spring.config.location"]
  systemProperty 'spring.config.additional-location', System.properties['spring.config.additional-location']

  environment "AWS_ACCESS_KEY_ID", System.getenv('AWS_ACCESS_KEY_ID')
  environment "AWS_SECRET_ACCESS_KEY", System.getenv('AWS_SECRET_ACCESS_KEY')
  environment "CB_AWS_ACCOUNT_ID", System.getenv('CB_AWS_ACCOUNT_ID')
  //Probably will need to add more for AZURE, GOV_CLOUD, GCE, etc

  if (project.hasProperty("jvmArgs")) {
    jvmArgs += project.jvmArgs.split("\\s+").toList()
  }
}

springBoot {
  mainClassName = "com.sequenceiq.environment.EnvironmentApplication"
}

bootJar {
  baseName = "environment"
  archiveName = "environment.jar"
  manifest {
    def grgit = Grgit.open(currentDir: project.projectDir)
    attributes "Implementation-Version": grgit.describe()
  }
}

uploadBootArchives {
  repositories {
    mavenDeployer {
      configuration = configurations.deployerJars
      repository(url: "$System.env.NEXUS_URL") {
        authentication(userName: "$System.env.NEXUS_USER", password: "$System.env.NEXUS_PASSWORD")
      }
    }
  }
}
