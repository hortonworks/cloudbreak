server.servlet.context-path: "/dl"

spring:
  application:
    name: DatalakeService

opentracing:
  jaeger:
    log-spans: false

management:
  endpoints:
    web:
      base-path: "/"
      exposure:
        include: info,health,prometheus
      path-mapping:
        prometheus: metrics
  endpoint:
    metrics:
      enabled: true
      export:
        prometheus:
          enabled: true
    prometheus:
      enabled: true
  metrics:
    distribution:
      sla:
        "[http.server.requests]": "125ms, 250ms, 500ms, 1s, 2s"
      percentiles:
        "[http.server.requests]": "0.5, 0.95"

sdx:
  db:
    aws:
      engineversion: 10.6
      ha:
        backupretentionperiod: 30
      nonha:
        backupretentionperiod: 0
    azure:
      ha:
        backupretentionperiod: 30
        georedundantbackup: true
      nonha:
        backupretentionperiod: 7
        georedundantbackup: false
    gcp:
      ha:
        backupretentionperiod: 30
      nonha:
        backupretentionperiod: 7

  gateway:
    topology:
      name: cdp-proxy
    ssotype: SSO_PROVIDER

altus:
  idbmms:
    host: localhost
  ums:
    host: localhost
  audit:
    enabled: true
    endpoint: localhost:8982

datalake:
  cert.dir: /certs/
  client.id: datalake
  structuredevent:
    rest:
      enabled: false
  cloudbreak:
    url: http://localhost:9091
  environmentservice:
    url: http://localhost:8088
  redbeams:
    url: http://localhost:8087
  freeipa:
    url: http://localhost:8090
    contextPath: /freeipa
  db:
    port.5432.tcp:
      port: 5432
      addr: localhost
    env:
      user: postgres
      pass:
      db: datalakedb
      schema: public
      cert.file: database.crt
      ssl: false
  runtimes:
    default: "7.2.1"
    advertised: "7.1.0,7.2.0,7.2.1,7.2.2"
    supported: "7.0.2,7.1.0,7.2.0,7.2.1,7.2.2"

secret:
  application: sdx/shared
  engine: "com.sequenceiq.cloudbreak.service.secret.vault.VaultKvV2Engine"

vault:
  addr: localhost
  port: 8200
  ssl.enabled: false
  kv.engine.v2.path: secret
  config.enabled: true
  auth:
    type: "token"
    kubernetes:
      service.account.token.path: /var/run/secrets/kubernetes.io/serviceaccount/token
      mount.path: "dps-dev"
      login.role: "cloudbreak.default"

cb:
  authentication:
    disabled: false
  cm:
    client:
      cluster.proxy.timeout: 90000
      connect.timeout.seconds: 100
      read.timeout.seconds: 100
      write.timeout.seconds: 100

notification:
  urls: http://localhost:3000/notifications

clusterProxy:
  url: http://localhost:10180/cluster-proxy
