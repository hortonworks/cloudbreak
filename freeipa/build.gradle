import org.ajoberstar.grgit.Grgit

plugins {
  id "java"
  id "checkstyle"
  id "jacoco"
  id 'maven'
  id "org.springframework.boot" version "2.1.2.RELEASE"
}

repositories {
  mavenLocal()
  maven { url = "$repoUrl" }
  maven { url = "$springRepoUrl" }
  mavenCentral()
  jcenter()
}

dependencies {
  implementation     group: 'com.squareup.okhttp3',      name: 'okhttp',                              version: okhttpVersion

  implementation     group: 'com.google.code.gson',      name: 'gson'
  implementation     group: 'dnsjava',                   name: 'dnsjava'
  implementation     group: 'io.micrometer',             name: 'micrometer-core'
  implementation     group: 'io.micrometer',             name: 'micrometer-jersey2'
  implementation     group: 'io.micrometer',             name: 'micrometer-registry-prometheus'
  implementation     group: 'io.springfox',              name: 'springfox-swagger2'
  implementation     group: 'io.springfox',              name: 'springfox-swagger-ui'
  implementation     ('io.swagger:swagger-jersey2-jaxrs') {
    exclude group: 'org.yaml'
  }
  implementation     group: 'javax.xml.bind',            name: 'jaxb-api'
  implementation     group: 'org.glassfish.jaxb',        name: 'jaxb-runtime',                         version: '2.3.1'
  implementation     group: 'javax.activation',          name: 'activation',                           version: '1.1.1'
  implementation     group: 'org.glassfish.jersey.core', name: 'jersey-server'
  implementation     group: 'org.mybatis',               name: 'mybatis-migrations'
  implementation     group: 'org.postgresql',            name: 'postgresql'
  implementation     group: 'org.springframework.boot',  name: 'spring-boot-starter'
  implementation     group: 'org.springframework.boot',  name: 'spring-boot-starter-web'
  implementation     group: 'org.springframework.boot',  name: 'spring-boot-starter-actuator'
  implementation     group: 'org.springframework.boot',  name: 'spring-boot-starter-jersey'
  implementation     group: 'org.springframework.boot',  name: 'spring-boot-starter-data-jpa'
  implementation     group: 'org.springframework.boot',  name: 'spring-boot-starter-quartz',           version: springBootVersion
  implementation     group: 'io.projectreactor',         name: 'reactor-core',                         version: eventBusVersion
  implementation     group: 'io.projectreactor',         name: 'reactor-bus',                          version: eventBusVersion
  implementation     group: 'io.projectreactor',         name: 'reactor-stream',                       version: eventBusVersion
  implementation     group: 'org.springframework',       name: 'spring-context-support',               version: springFrameworkVersion

  implementation     group: 'io.opentracing.contrib',    name: 'opentracing-spring-jaeger-starter',    version: opentracingSpringJaegerStarterVersion
  implementation     group: 'io.opentracing.contrib',    name: 'opentracing-jaxrs2',                   version: opentracingJaxrs2Version
  implementation     group: 'io.opentracing.contrib',    name: 'opentracing-jdbc',                     version: opentracingJdbcVersion

  implementation     group: 'org.apache.kerby',          name: 'kerb-util',                            version: '2.0.0'
  
  implementation     group: 'com.github.briandilley.jsonrpc4j', name: 'jsonrpc4j',                     version: '1.5.3'

  testImplementation group: "junit",                      name: "junit",                               version: junitVersion
  testImplementation ('org.springframework.boot:spring-boot-starter-test') {
    exclude group: 'junit'
  }

  // mockito juniper depends on ByteBuddy 1.9.7, but hibernate use older version
  implementation group: 'net.bytebuddy', name: 'byte-buddy', version: '1.9.12'

  constraints {
    implementation     group: 'com.google.code.gson',      name: 'gson',                           version: '2.6.2'
    implementation     group: 'dnsjava',                   name: 'dnsjava',                        version: '2.1.7'
    implementation     group: 'io.micrometer',             name: 'micrometer-core',                version: micrometerVersion
    implementation     group: 'io.micrometer',             name: 'micrometer-jersey2',             version: micrometerVersion
    implementation     group: 'io.micrometer',             name: 'micrometer-registry-prometheus', version: micrometerVersion
    implementation     group: 'io.springfox',              name: 'springfox-swagger2',             version: swagger2Version
    implementation     group: 'io.springfox',              name: 'springfox-swagger-ui',           version: swagger2Version
    implementation     group: 'io.swagger',                name: 'swagger-jersey2-jaxrs',          version: '1.5.21'
    implementation     group: 'javax.xml.bind',            name: 'jaxb-api',                       version: '2.3.1'
    implementation     group: 'org.glassfish.jersey.core', name: 'jersey-server',                  version: '2.28'
    implementation     group: 'org.mybatis',               name: 'mybatis-migrations',             version: '3.2.0'
    implementation     group: 'org.postgresql',            name: 'postgresql',                     version: postgreSQLVersion
    implementation     group: 'org.springframework.boot',  name: 'spring-boot-starter',            version: springBootVersion
    implementation     group: 'org.springframework.boot',  name: 'spring-boot-starter-web',        version: springBootVersion
    implementation     group: 'org.springframework.boot',  name: 'spring-boot-starter-actuator',   version: springBootVersion
    implementation     group: 'org.springframework.boot',  name: 'spring-boot-starter-jersey',     version: springBootVersion
    implementation     group: 'org.springframework.boot',  name: 'spring-boot-starter-data-jpa',   version: springBootVersion
    testImplementation group: 'org.springframework.boot',  name: 'spring-boot-starter-test',       version: springBootVersion
    testImplementation group: 'org.mockito',               name: 'mockito-core',                   version: mockitoVersion
  }

  implementation project(':authorization-common')
  implementation project(':cloud-reactor-api')
  implementation project(':cloud-reactor')
  implementation project(':orchestrator-api')
  implementation project(':flow')
  implementation project(':freeipa-api')
  implementation project(':freeipa-client')
  implementation project(':common')
  implementation project(':core-api')
  implementation project(':secret-engine')
  implementation project(':notification-sender')
  implementation project(':environment-api')
  implementation project(':environment-common')
  implementation project(':datalake-api')
  implementation project(':cluster-proxy')
  implementation project(':status-checker')
  implementation project(':template-manager-tag')

  testCompile project(path: ':secret-engine', configuration: 'tests')
  testCompile project(path: ':common', configuration: 'tests')
  runtime project(':orchestrator-salt')
  runtime project(':cloud-openstack')
  runtime project(':cloud-gcp')
  runtime project(':cloud-aws')
  runtime project(':cloud-mock')
  runtime project(':cloud-azure')
  testCompile group: 'com.hubspot.jinjava', name: 'jinjava', version: jinjavaVersion

  testImplementation project(path: ':authorization-common', configuration: 'tests')
}

bootRun {
  systemProperty "spring.profiles.active", System.properties["spring.profiles.active"]
  systemProperty "spring.config.location", System.properties["spring.config.location"]
  systemProperty 'spring.config.additional-location', System.properties['spring.config.additional-location']

  environment "AWS_ACCESS_KEY_ID", System.getenv('AWS_ACCESS_KEY_ID')
  environment "AWS_SECRET_ACCESS_KEY", System.getenv('AWS_SECRET_ACCESS_KEY')
  environment "CB_AWS_ACCOUNT_ID", System.getenv('CB_AWS_ACCOUNT_ID')
  //Probably will need to add more for AZURE, GOV_CLOUD, GCE, etc

  if (project.hasProperty("jvmArgs")) {
    jvmArgs += project.jvmArgs.split("\\s+").toList()
  }
} 

springBoot {
  mainClassName = 'com.sequenceiq.freeipa.FreeIpaApplication'
}

bootJar {
  baseName = 'freeipa'
  archiveName = 'freeipa.jar'
  manifest {
    def grgit = Grgit.open(currentDir: project.projectDir)
    attributes "Implementation-Version": grgit.describe()
  }
}

uploadBootArchives {
  repositories {
    mavenDeployer {
      configuration = configurations.deployerJars
      repository(url: "$System.env.NEXUS_URL") {
        authentication(userName: "$System.env.NEXUS_USER", password: "$System.env.NEXUS_PASSWORD")
      }
    }
  }
}

task execute(type: JavaExec) {
  if (project.hasProperty('mainClass')) {
    main = mainClass
    classpath = sourceSets.main.runtimeClasspath
  }
}
