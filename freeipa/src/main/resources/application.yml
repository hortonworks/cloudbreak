server:
  servlet:
    context-path: "/freeipa"
  shutdown: graceful
  tomcat:
    mbeanregistry:
      enabled: true

management:
  endpoints:
    web:
      base-path: "/"
      exposure:
        include: info,health,prometheus
      path-mapping:
        prometheus: metrics
  endpoint:
    metrics:
      enabled: true
      export:
        prometheus:
          enabled: true
    prometheus:
      enabled: true
    health:
      probes:
        enabled: true
      group:
        readiness:
          include: "readinessState,hikariState"
  metrics:
    distribution:
      sla:
        "[http.server.requests]": "125ms, 250ms, 500ms, 1s, 2s"
      percentiles:
        "[http.server.requests]": "0.5, 0.95"
cdp.structuredevent:
  rest:
    contentlogging: true
freeipa:
  verticalScalingSupported: AWS,GCP,MOCK,AZURE
  cert.dir: /certs/
  client:
    id: freeipa
    retry:
      delay: 500
      multiplier: 2
      retries: 5
  default.gateway.cidr: 0.0.0.0/0
  structuredevent:
    rest:
      enabled: true
  db:
    port: 5432
    env:
      user: postgres
      pass:
      db: freeipadb
      schema: public
      cert.file: database.crt
      ssl: false
  image.catalog:
    default.os: centos7
    cache.ttl: 15
  platform.default.instanceType:
    AWS: m5.large
    AZURE: Standard_DS3_v2
    GCP: e2-standard-2
    MOCK: large
  platform.dnssec.validation:
    AWS: false
    AZURE: false
    GCP: false
  environment:
    url: http://localhost:8088
    contextPath: /environmentservice
  sdx:
    url: http://localhost:8086
    contextPath: /dl
  cloudbreak:
    url: http://localhost:9091
    contextPath: /cb
  intermediate.threadpool:
    core.size: 100
    capacity.size: 4000
  delayed:
    stop-start-sec: 300
    threadpool:
      core:
        size: 25
  passwordpolicy:
    min-password-lenght: 4
    max-password-lenght: 64
    min-character-classes: 4
    max-password-life: 1826
    max-failures-before-lock: 10
    failure-reset-interval: 3
    lockout-duration: 10
  operation:
    cleanup:
      timeout-millis: 3600000
      initial-delay-millis: 60000
      fixed-delay-millis: 180000
      upgrade:
        timeout-millis: 7200000
  max:
    instances: 3
    instance.groups: 1
  usersync:
    max-subjects-per-request: 10
    threadpool:
      core.size: 100
      capacity.size: 4000
    scale.large-group:
      size: 500
      limit: 750
  cloudidsync:
    poller:
      timeoutMs: 4000
      sleepIntervalMs: 400
  healthcheck:
    connectionTimeoutMs: 5000
    readTimeoutMs: 5000
  nodestatus:
    enabled: true
    intervalsec: 1800
    connectionTimeoutMs: 5000
    readTimeoutMs: 5000
  batch:
    partitionsize:
      defaultSize: 100
      operations:
        group_add_member: 25
        group_remove_member: 25
  server.deletion.check:
    maxWaitSeconds: 900
    interval: 10000
  scaling:
    paths:
      NON_HA:
        - HA
        - TWO_NODE_BASED
      TWO_NODE_BASED:
        - HA
      HA:
        - TWO_NODE_BASED
  sudo:
    ruleName: cb-sudo-rule
    allowCommands: >
      /**/*
    denyCommands: >
      /bin/su
  permission.polling:
    interval: 20
    delaymin: 15
info:
  app:
    capabilities:

altus:
  ums:
    host: localhost
    caller: freeipa
  audit:
    enabled: true
    endpoint: localhost:8982

spring:
  application:
    name: FreeIpaService
  freemarker:
    template-loader-path: file:/etc/cloudbreak,classpath:/
    prefer-file-system-access: false
  datasource:
    maxActive: 30
  lifecycle:
    timeout-per-shutdown-phase: 60s

rest:
  debug: false

cert:
  validation: true
  ignorePreValidation: false

secret:
  application: freeipa/shared
  engine: "com.sequenceiq.cloudbreak.service.secret.vault.VaultKvV2Engine"

vault:
  addr: localhost
  port: 8200
  ssl.enabled: false
  kv.engine.v2.path: secret
  config.enabled: true
  auth:
    type: "token"
    kubernetes:
      service.account.token.path: /var/run/secrets/kubernetes.io/serviceaccount/token
      mount.path: "dps-dev"
      login.role: "cloudbreak.default"

cb:
  enabledplatforms: AZURE,AWS,GCP
  platform.default.rootVolumeSize:
    AWS: 100
    AZURE: 100
    GCP: 100
  platform.default.rootVolumeType:
    GCP: SSD
  enabled.linux.types: redhat6,redhat7,redhat8,centos6,centos7,amazonlinux,amazonlinux2
  publicip:
  etc.config.dir: /etc/freeipa

  host.discovery.custom.hostname.enabled: false

  cert:
    dir: /certs/

  aws:
    stopStart.batch.size: 10
    create.batch.size: 8
    spotinstances.enabled: true
    disabled.instance.types:
    hostkey.verify: false
    external.id: provision-ambari
    role.session.name: cdp-provisioning
    cf.template.new.path: templates/aws-cf-stack-freeipa.ftl
    cf.template.newdb.path: templates/aws-cf-dbstack.ftl
    default.inbound.security.group:
    vpc:
    vpcendpoints:
      enabled.gateway.services: s3
    credential.cache.ttl: 60

  azure:
    host.name.prefix.length: 255
    database.template.batchSize: 1

  os:
    enable.autoimport: true
    import:
      root.url.pattern: http://public-repo-1.hortonworks.com/HDP/cloudbreak/%s.img
      from.format: qcow2
      disk.format: qcow2
      container.format: bare

  template.defaults: minviable-gcp,minviable-azure-managed-disks,minviable-aws
  custom.user.data: |
    touch /tmp/custom-user-data
    date >> /tmp/custom-user-data

  arm:
    template.path: templates/arm-v2-freeipa.ftl
    parameter.path: templates/parameters-freeipa.ftl
    storageaccount.template.path: templates/arm-storageaccount.ftl
    marketplace.image.automatic.signer: false

  max:
    azure.resource.name.length: 120
    gcp.resource.name.length: 63
    aws.resource.name.length: 50
    aws.loadbalancer.resource.name.length: 32
    yarn.resource.name.length: 63

    salt.new.service.retry: 180
    salt.new.service.leave.retry: 10
    salt.new.service.retry.onerror: 20
    salt.recipe.execution.retry: 180
    salt.modifygrain:
        maxretry: 30
        maxerrorretry: 10

  address.resolving.timeout: 60000

  cloud.api.executorservice.pool.size: 40

  platform.default:
    variants: AWS:AWS
    govVariants: AWS:AWS_NATIVE_GOV
    regions: AWS:eu-west-1,AZURE:North Europe,GCP:europe-west1,YARN:default,MOCK:USA

  gcp:
    hostkey.verify: false
    disk.encryption.url: https://cloud-certs.storage.googleapis.com/google-cloud-csek-ingress.pem
    stopStart.batch.size: 10
    create.batch.size: 5

  nginx:
    port: 9443
  knox:
    port: 8443
  https:
    port: 443
  ssh:
    port: 22

  structuredevent:
    rest:
      enabled: true
      contentlogging: true

cluster:
  monitoring:
    enabled: true
    databus:
      processing:
        workers: 1
        queueSizeLimit: 2000

clusterProxy:
  url: http://localhost:10180/cluster-proxy
  enabled: true
  disabledPlatforms: MOCK
  readConfigPath: /rpc/readConfig
  registerConfigPath: /rpc/forceRegisterConfig
  updateConfigPath: /rpc/updateConfig
  removeConfigPath: /rpc/removeConfig
  maxAttempts: 20
  maxFailure: 1
  healthCheckV1:
    # the login page returns a 400
    healthStatusEndpoint: /ipa/session/login_password
    healthyStatusCode: 400
    timeoutInSec: 5
    intervalInSec: 5
  healthCheckV2:
    healthStatusEndpoint: /freeipahealthcheck
    healthyStatusCode: 200
    timeoutInSec: 5
    intervalInSec: 5

crn:
  partition: cdp
  region: us-west-1

authdistributor:
  host: localhost
  port: 8982

ccmRevertJob:
  activationInMinutes: 5

wiam:
  host: localhost
  port: 8982
  grpc.timeout.sec: 60
