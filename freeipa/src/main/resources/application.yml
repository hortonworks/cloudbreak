server.servlet.context-path: "/freeipa"

opentracing:
  jaeger:
    log-spans: false

management:
  endpoints:
    web:
      base-path: "/"
      exposure:
        include: info,health,prometheus
      path-mapping:
        prometheus: metrics
  endpoint:
    metrics:
      enabled: true
      export:
        prometheus:
          enabled: true
    prometheus:
      enabled: true

freeipa:
  cert.dir: /certs/
  client.id: freeipa
  structuredevent:
    rest:
      enabled: false
  db:
    port: 5432
    env:
      user: postgres
      pass:
      db: freeipadb
      schema: public
      cert.file: database.crt
      ssl: false
  image.catalog:
    url: https://cloudbreak-imagecatalog.s3.amazonaws.com/freeipa-image-catalog.json
    default.os: centos7
    cache.ttl: 15
  platform.default.instanceType:
    AWS: m5.large
    AZURE: Standard_D3_v2
  security.default:
    ports: 22,443,9443
    cidr: 0.0.0.0/0
  environment:
    url: http://localhost:8088
    contextPath: /environmentservice
  intermediate.threadpool:
    core.size: 100
    capacity.size: 4000
  passwordpolicy:
    min-password-lenght: 4
    max-password-lenght: 64
    min-character-classes: 4
    max-password-life: 1826
    max-failures-before-lock: 10
    failure-reset-interval: 3
    lockout-duration: 10


info:
  app:
    capabilities:

altus:
  ums:
    host: localhost

spring:
  application:
    name: FreeIpaService
  freemarker:
    template-loader-path: file:/etc/cloudbreak,classpath:/
    prefer-file-system-access: false
  datasource:
    maxActive: 30

rest:
  debug: false

cert:
  validation: true
  ignorePreValidation: false

secret:
  application: freeipa/shared
  engine: "com.sequenceiq.cloudbreak.service.secret.vault.VaultKvV2Engine"

vault:
  addr: localhost
  port: 8200
  ssl.enabled: false
  kv.engine.v2.path: secret
  config.enabled: true
  auth:
    type: "token"
    kubernetes:
      service.account.token.path: /var/run/secrets/kubernetes.io/serviceaccount/token
      mount.path: "dps-dev"
      login.role: "cloudbreak.default"

cb:
  enabledplatforms: AZURE,AWS,GCP,OPENSTACK
  platform.default.rootVolumeSize:
    AWS: 50
    AZURE: 30
    GCP: 50
  enabled.linux.types: redhat6,redhat7,centos6,centos7,amazonlinux,amazonlinux2
  publicip:
  etc.config.dir: /etc/freeipa

  host.discovery.custom.hostname.enabled: false

  cert:
    dir: /certs/

  aws:
    spotinstances.enabled: true
    disabled.instance.types: c5d,f1,i3,m5d,p3dn,r5d,z1d
    hostkey.verify: false
    external.id: provision-ambari
    role.session.name: hadoop-provisioning
    cf.template.new.path: templates/aws-cf-stack.ftl
    cf.template.newdb.path: templates/aws-cf-dbstack.ftl
    default.inbound.security.group:
    vpc:

  azure:
    host.name.prefix.length: 255

  os:
    enable.autoimport: true
    import:
      root.url.pattern: http://public-repo-1.hortonworks.com/HDP/cloudbreak/%s.img
      from.format: qcow2
      disk.format: qcow2
      container.format: bare

  template.defaults: minviable-gcp,minviable-azure-managed-disks,minviable-aws
  custom.user.data: |
    touch /tmp/custom-user-data
    date >> /tmp/custom-user-data

  arm:
    template.path: templates/arm-v2.ftl
    parameter.path: templates/parameters.ftl
    app.creation.template:
      command.path: templates/app-creation-command.ftl
      json.path: templates/app-creation.json
      resource:
        app.id: 797f4846-ba00-4fd7-ba43-dac1f8f63013
        access.scope.id: 41094075-9dad-400e-a0bd-54e686782033


  openstack:
    heat.template.path: templates/openstack-heat.ftl
    api.debug: false
    hostkey.verify: false

  max:
    azure.resource.name.length: 120
    gcp.resource.name.length: 63
    aws.resource.name.length: 50
    openstack.resource.name.length: 120
    yarn.resource.name.length: 63

    salt.new.service.retry: 90
    salt.recipe.execution.retry: 90

  address.resolving.timeout: 60000

  cloud.api.executorservice.pool.size: 40

  platform.default:
    variants: OPENSTACK:HEAT
    regions: AWS:eu-west-1,AZURE:North Europe,GCP:europe-west1,YARN:default,CUMULUS_YARN:default,MOCK:USA

  gcp:
    hostkey.verify: false
    disk.encryption.url: https://cloud-certs.storage.googleapis.com/google-cloud-csek-ingress.pem

  nginx:
    port: 9443
  knox:
    port: 8443
  https:
    port: 443
  ssh:
    port: 22

  structuredevent:
    rest:
      enabled: true
      contentlogging: true

clusterProxy:
  url: http://localhost:10080/cluster-proxy
  enabled: false
  registerConfigPath: /rpc/forceRegisterConfig
  updateConfigPath: /rpc/updateConfig
  removeConfigPath: /rpc/removeConfig
