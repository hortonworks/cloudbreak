{
  "inputs": [
    {
      "name": "RANGER_DB_USER",
      "referenceConfiguration": "db_user"
    },
    {
      "name": "RANGER_DB_PASSWORD",
      "referenceConfiguration": "db_password"
    },
    {
      "name": "RANGER_DB_NAME",
      "referenceConfiguration": "db_name"
    },
    {
      "name": "RANGER_DB_HOST",
      "referenceConfiguration": "db_host"
    },
    {
      "name": "RANGER_ADMIN_PASSWORD",
      "referenceConfiguration": "ranger_admin_password"
    },
    {
      "name": "LDAP_URL",
      "referenceConfiguration": "ranger.usersync.ldap.url"
    },
    {
      "name": "LDAP_DOMAIN",
      "referenceConfiguration": "ranger.ldap.ad.domain"
    },
    {
      "name": "LDAP_BIND_DN",
      "referenceConfiguration": "ranger.usersync.ldap.binddn"
    },
    {
      "name": "LDAP_BIND_PASSWORD",
      "referenceConfiguration": "ranger.usersync.ldap.ldapbindpassword"
    },
    {
      "name": "LDAP_NAME_ATTRIBUTE",
      "referenceConfiguration": "ranger.usersync.ldap.user.nameattribute"
    },
    {
      "name": "LDAP_SYNC_SEARCH_BASE",
      "referenceConfiguration": "ranger.usersync.ldap.user.searchbase"
    },
    {
      "name": "LDAP_GROUP_SEARCH_BASE",
      "referenceConfiguration": "hadoop.security.group.mapping.ldap.base"
    },
    {
      "name": "S3_BUCKET",
      "referenceConfiguration": "s3.bucket"
    }
  ],
  "blueprint": {
    "Blueprints": {
      "blueprint_name": "hdp26-shared-services",
      "stack_name": "HDP",
      "stack_version": "2.6"
    },
    "configurations": [
      {
        "admin-properties": {
          "properties": {
            "db_user": "{{ RANGER_DB_USER }}",
            "db_password": "{{ RANGER_DB_PASSWORD }}",
            "db_name": "{{ RANGER_DB_NAME }}",
            "db_host": "{{ RANGER_DB_HOST }}",
            "DB_FLAVOR": "POSTGRES"
          }
        }
      },
      {
        "ranger-env": {
          "properties": {
            "admin_password": "{{ RANGER_ADMIN_PASSWORD }}",
            "ranger_admin_password": "{{ RANGER_ADMIN_PASSWORD }}",
            "is_solrCloud_enabled": "true",
            "ranger-hdfs-plugin-enabled": "No",
            "ranger-hive-plugin-enabled": "No",
            "ranger-yarn-plugin-enabled": "No",
            "ranger_privelege_user_jdbc_url": "jdbc:postgresql://{{ RANGER_DB_HOST }}",
            "ranger-atlas-plugin-enabled": "Yes",
            "create_db_dbuser": "false",
            "ranger_solr_replication_factor": "2"
          }
        }
      },
      {
        "ranger-ugsync-site": {
          "ranger.usersync.enabled": "true",
          "ranger.usersync.source.impl.class": "org.apache.ranger.ldapusersync.process.LdapUserGroupBuilder",
          "ranger.usersync.ldap.url": "{{ LDAP_URL }}",
          "ranger.usersync.ldap.binddn": "{{ LDAP_BIND_DN }}",
          "ranger.usersync.ldap.ldapbindpassword": "{{ LDAP_BIND_PASSWORD }}",
          "ranger.usersync.ldap.user.nameattribute": "{{ LDAP_NAME_ATTRIBUTE }}",
          "ranger.usersync.ldap.user.searchbase": "{{ LDAP_SYNC_SEARCH_BASE }}",
          "ranger.usersync.group.searchenabled": "false",
          "ranger.usersync.ldap.deltasync": "false"
        }
      },
      {
        "ranger-admin-site": {
          "properties": {
            "ranger.jpa.jdbc.driver": "org.postgresql.Driver",
            "ranger.jpa.jdbc.url": "jdbc:postgresql://{{ RANGER_DB_HOST }}/{{ RANGER_DB_NAME }}",
            "ranger.audit.source.type": "solr",
            "ranger.authentication.method": "ACTIVE_DIRECTORY",
            "ranger.ldap.ad.domain": "{{ LDAP_DOMAIN }}",
            "ranger.ldap.ad.base.dn": "{{ LDAP_SYNC_SEARCH_BASE }}"
          }
        }
      },
      {
        "ams-hbase-site": {
          "properties": {
            "hbase.cluster.distributed": "true",
            "hbase.rootdir": "file:///hadoopfs/fs1/metrics/hbase/data"
          }
        }
      },
      {
        "atlas-env": {
          "properties": {
            "atlas_solr_shards": "2",
            "hbase_conf_dir": "/etc/ams-hbase/conf",
            "content": "\n      # The java implementation to use. If JAVA_HOME is not found we expect java and jar to be in path\n      export JAVA_HOME={{java64_home}}\n\n      # any additional java opts you want to set. This will apply to both client and server operations\n      {% if security_enabled %}\n      export ATLAS_OPTS=\"{{metadata_opts}} -Djava.security.auth.login.config={{atlas_jaas_file}}\"\n      {% else %}\n      export ATLAS_OPTS=\"{{metadata_opts}}\"\n      {% endif %}\n\n      # metadata configuration directory\n      export ATLAS_CONF={{conf_dir}}\n\n      # Where log files are stored. Defatult is logs directory under the base install location\n      export ATLAS_LOG_DIR={{log_dir}}\n\n      # additional classpath entries\n      export ATLASCPPATH={{metadata_classpath}}\n\n      # data dir\n      export ATLAS_DATA_DIR={{data_dir}}\n\n      # pid dir\n      export ATLAS_PID_DIR={{pid_dir}}\n\n      # hbase conf dir\n      export HBASE_CONF_DIR=\"/etc/ams-hbase/conf\"\n\n      # Where do you want to expand the war file. By Default it is in /server/webapp dir under the base install dir.\n      export ATLAS_EXPANDED_WEBAPP_DIR={{expanded_war_dir}}\n      export ATLAS_SERVER_OPTS=\"-server -XX:SoftRefLRUPolicyMSPerMB=0 -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC -XX:+CMSParallelRemarkEnabled -XX:+PrintTenuringDistribution -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=$ATLAS_LOG_DIR/atlas_server.hprof -Xloggc:$ATLAS_LOG_DIRgc-worker.log -verbose:gc -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=10 -XX:GCLogFileSize=1m -XX:+PrintGCDetails -XX:+PrintHeapAtGC -XX:+PrintGCTimeStamps\"\n      {% if java_version == 8 %}\n      export ATLAS_SERVER_HEAP=\"-Xms{{atlas_server_xmx}}m -Xmx{{atlas_server_xmx}}m -XX:MaxNewSize={{atlas_server_max_new_size}}m -XX:MetaspaceSize=100m -XX:MaxMetaspaceSize=512m\"\n      {% else %}\n      export ATLAS_SERVER_HEAP=\"-Xms{{atlas_server_xmx}}m -Xmx{{atlas_server_xmx}}m -XX:MaxNewSize={{atlas_server_max_new_size}}m -XX:MaxPermSize=512m\"\n      {% endif %}\n"
          }
        }
      },
      {
        "application-properties": {
          "atlas.authentication.method.ldap.ad.bind.dn": "{{ LDAP_BIND_DN }}",
          "atlas.authentication.method.ldap.type": "ad",
          "atlas.authentication.method.ldap": "true",
          "atlas.authentication.method.ldap.ad.url": "{{ LDAP_URL }}",
          "atlas.authentication.method.ldap.ad.base.dn": "{{ LDAP_SYNC_SEARCH_BASE }}",
          "atlas.authentication.method.ldap.ad.domain": "{{ LDAP_DOMAIN }}",
          "atlas.authentication.method.ldap.ad.bind.password": "{{ LDAP_BIND_PASSWORD }}",
          "atlas.authentication.method.ldap.ugi-groups": "false",
          "atlas.authorizer.impl": "ranger",
          "atlas.audit.hbase.zookeeper.quorum": "{{zookeeper_quorum}}",
          "atlas.audit.zookeeper.znode.parent": "/ams-hbase-unsecure",
          "atlas.graph.storage.hostname": "{{zookeeper_quorum}}",
          "atlas.notification.replicas": "2"
        }
      },
      {
        "ranger-atlas-plugin-properties": {
          "ranger-atlas-plugin-enabled": "Yes"
        }
      },
      {
        "ranger-atlas-audit": {
          "xasecure.audit.is.enabled": "true",
          "xasecure.audit.destination.hdfs": "true",
          "xasecure.audit.destination.hdfs.dir": "s3a://{{ S3_BUCKET }}/{{cluster_name}}/apps/ranger/audit/{{cluster_name}}",
          "xasecure.audit.destination.solr": "true",
          "xasecure.audit.destination.solr.zookeepers": "{{zookeeper_quorum}}"
        }
      }
    ],
    "host_groups": [
      {
        "name": "master",
        "configurations": [
        ],
        "components": [
          {
            "name": "METRICS_COLLECTOR"
          },
          {
            "name": "METRICS_MONITOR"
          },
          {
            "name": "ZOOKEEPER_CLIENT"
          },
          {
            "name": "ZOOKEEPER_SERVER"
          },
          {
            "name": "INFRA_SOLR_CLIENT"
          },
          {
            "name": "RANGER_TAGSYNC"
          },
          {
            "name": "RANGER_USERSYNC"
          },
          {
            "name": "RANGER_ADMIN"
          },
          {
            "name": "INFRA_SOLR"
          },
          {
            "name": "KAFKA_BROKER"
          },
          {
            "name": "ATLAS_SERVER"
          },
          {
            "name": "ATLAS_CLIENT"
          }
        ],
        "cardinality": "1"
      },
      {
        "name": "worker",
        "configurations": [
        ],
        "components": [
          {
            "name": "METRICS_MONITOR"
          },
          {
            "name": "ZOOKEEPER_SERVER"
          },
          {
            "name": "INFRA_SOLR"
          },
          {
            "name": "INFRA_SOLR_CLIENT"
          },
          {
            "name": "KAFKA_BROKER"
          }
        ],
        "cardinality": "1+"
      },
      {
        "name": "compute",
        "configurations": [],
        "components": [
          {
            "name": "METRICS_MONITOR"
          }
        ],
        "cardinality": "1+"
      }
    ]
  }
}