test.message=Hi my dear friend
stack.image.setup=Setting up HDP image
stack.infrastructure.bootstrap=Bootstrapping infrastructure cluster
stack.infrastructure.metadata.setup=Setting up infrastructure metadata
stack.infrastructure.disk.mount=Mounting attached disks
stack.infrastructure.starting=Infrastructure is now starting
stack.infrastructure.started=Infrastructure successfully started
stack.infrastructure.stopping=Infrastructure is now stopping
stack.infrastructure.stopped=Infrastructure successfully stopped
stack.delete.in.progress=Terminating the cluster and its infrastructure
stack.pre.delete.in.progress=Pre-terminating the cluster and its infrastructure
stack.billing.stopped=Billing stopped, the cluster and its infrastructure have been stopped
stack.billing.terminated=Billing terminated, the cluster and its infrastructure have been terminated
stack.billing.started=Billing started, the cluster and its infrastructure have successfully been started
stack.delete.completed=The cluster and its infrastructure have successfully been terminated
stack.forced.delete.completed=The cluster and its infrastructure have been force terminated in CloudBreak. You may need to terminate the cluster manually at the cloud provider.
stack.adding.instances=Adding {0, number, integer} new instances to the infrastructure
stack.removing.instance=Removing instance from the infrastructure
stack.removing.instance.finished=Instance removed
stack.removing.instance.failed=Failed to remove instance
stack.metadata.extend=Infrastructure metadata extension finished
stack.bootstrap.new.nodes=Bootstrapping new nodes
stack.upscale.finished=Stack successfully upscaled
stack.mount.disks.on.new.hosts=Mounting disks on new nodes
stack.downscale.instances=Removing {0} instance(s) from the cluster infrastructure
stack.downscale.success=Cluster infrastructure successfully downscaled. Terminated node(s): {0}
stack.downscale.failed=Cluster infrastructure downscale failed
stack.select.for.downscale=Selected node(s) for downscale: {0}
stack.stop.requested=Cluster infrastructure stop requested
stack.provisioning=Creating infrastructure
stack.infrastructure.time=Infrastructure creation took {0} seconds
stack.setup.time=Image preparation took {0} seconds
stack.setup.start=Image preparation started
stack.infrastructure.subnets.updating=Updating allowed subnets
stack.infrastructure.subnets.updated=Allowed subnets updated
stack.infrastructure.update.failed=Stack update failed. Reason: {0}
stack.infrastructure.create.failed=Infrastructure creation failed. Reason: {0}
stack.infrastructure.rollback.failed=Infrastructure rollback failed. Reason: {0}
stack.infrastructure.delete.failed=Infrastructure termination failed. Reason: {0}
stack.infrastructure.start.failed=Infrastructure start failed. Reason: {0}
stack.infrastructure.stop.failed=Infrastructure stop failed. Reason: {0}
stack.repair.detection.started=Started stack repair. Detecting unhealthy instances.
stack.repair.attempting=Found unhealthy instances, attempting to repair stack.
stack.repair.complete.clean=Completed stack repair. No unhealthy instances found.
stack.repair.failed=Failed to repair cluster. Reason: {0}
stack.repair.triggered=Stack repair triggered.
stack.datalake.update=Update cluster due to changed datalake
stack.datalake.update.finished=Update cluster finished
stack.datalake.update.failed=Failed to update the cluster
stack.metadata.collected=Infrastructure metadata collection finished
flow.stack.provisioned=Infrastructure successfully provisioned
flow.stack.provisioned.billing=Billing started, Infrastructure successfully provisioned
stack.infrastructure.create.rollback=Could not create {0} instance(s), node count is decreased on group {1}. Reason: {2}

cluster.starting=Starting cluster
cluster.building=Building cluster; Cluster manager ip:{0}
cluster.built=Cluster built; Cluster manager ip:{0}
ambari.cluster.created=Ambari cluster created
cluster.started=Cluster started; Cluster manager ip:{0}
cluster.stopping=Stopping cluster
cluster.stopped=Cluster stopped

cluster.regenerate.keytabs=Regenerating kerberos keytabs on cluster
cluster.stop.management.server.started=Stopping cluster management server
cluster.start.management.server.started=Starting cluster management server
cluster.single.master.repair.reinstall.components=Reinstalling components on cluster management server
cluster.restart.all.started=Restarting all components on all hosts
cluster.start.components.started=Starting components
cluster.stop.components.started=Stopping all cluster components

cluster.scaling.up=Scaling up the cluster
cluster.scaled.up=Cluster scaled up
cluster.scaling.down=Scaling down the cluster
cluster.scaled.down=Cluster scaled down
cluster.run.containers=Starting cluster containers
cluster.run.services=Starting cluster services
cluster.reset=Resetting cluster
ambari.cluster.configuring.security=Configuring Ambari cluster security
ambari.cluster.configured.security=Ambari cluster security configured
cluster.start.requested=Cluster start requested
cluster.changing.credential=Changing cluster authentication
cluster.changed.credential=Cluster authentication changed
cluster.change.credentail.failed=Unable to change cluster manager password.
cluster.start.failed=Cluster could not be started. Reason: {0}
cluster.stop.failed=Cluster could not be stopped. Reason: {0}
cluster.create.failed={0}
ambari.cluster.configure.security.failed=Failed to enable security on Ambari cluster. Reason: {0}
cluster.scaling.failed=New node(s) could not be {0} the cluster. Reason {1}
ambari.cluster.mr.smoke.failed=Warning: MapReduce smoke test failed, check your cluster''s configurations!
ambari.cluster.install.failed=Cluster installation failed to complete, please check the Ambari UI for more details. You can try to reinstall the cluster with a different cluster definition or fix the failures in Ambari or Cloudera Manager and sync the cluster with Cloudbreak later.
ambari.cluster.upscale.failed=Cluster upscale failed to complete, please check the Ambari UI for more details. You can try to fix the failures in Ambari and sync the cluster with Cloudbreak later.
ambari.cluster.prepare.dekerberizing.failed=Prepare cluster to dekerberizing failed to complete, please check the Ambari UI for more details.
ambari.cluster.prepare.dekerberizing.error=The de-registration of Kerberos principals couldn''t be done. The Ambari server should run and be reachable by Cloudbreak.
ambari.cluster.disable.kerberos.failed=Cluster dekerberizing failed to complete, please check the Ambari UI for more details.
ambari.cluster.host.join.failed=Error while waiting for hosts to connect.
ambari.cluster.delete.completed=Cluster {0} was terminated.
ambari.cluster.delete.failed=Termination of cluster failed. Reason: {0}
ambari.cluster.services.init.failed=Initializing Ambari services failed.
ambari.regenerate.kerberos.keytabs.failed=Regenerating kerberos keytabs on ambari failed.
ambari.cluster.services.starting=Starting Ambari services.
ambari.cluster.services.start.failed=Starting Ambari services failed.
ambari.cluster.services.started=Ambari services have been started.
ambari.cluster.services.stopping=Stopping Ambari services.
ambari.cluster.services.stop.failed=Stopping Ambari services failed.
ambari.cluster.services.stopped=Ambari services have been stopped.
cluster.autorecovery.requested=Cluster autorecovery requested, failed nodes: {0}
cluster.manualrecovery.requested=Cluster manual recovery requested on entities: {0}
cluster.failednodes.reported=Manual recovery is needed for the following failed nodes: {0}
cluster.gateway.change=Starting primary gateway change
cluster.gateway.changed.successfully=Primary gateway successfully changed to {0}
cluster.gateway.change.failed=Primary gateway change failed. Reason: {0}
ambari.cluster.decommissioning.time=The decommission of the Data nodes will take approximately {0}.

cm.cluster.services.started=Cloudera Manager services have been started.
cm.cluster.services.starting=Starting Cloudera Manager services.
cm.cluster.services.stopping=Stopping Cloudera Manager services.
cm.cluster.services.stopped=Cloudera Manager services have been stopped.

bootstrapper.error.nodes.failed=Bootstrap failed on {0} nodes. These nodes will be terminated
bootstrapper.error.invalide.nodecount=Invalid node count on instance group {0}; Cluster creation failed
bootstrapper.error.deleting.node=Deleting node: {0}. Decreasing the node count on instance group: {1}

cluster.start.ignored=Cluster start request ignored, cluster is already available
cluster.stop.ignored=Cluster stop request ignored, cluster is already stopped
cluster.host.status.updated=Host [name: {0}] state has been updated to: {1}
ambari.cluster.resetting.ambari.database=Resetting Ambari database
ambari.cluster.ambari.database.reset=Ambari database has been reset
ambari.cluster.restarting.ambari.server=Restarting Ambari server
ambari.cluster.restarting.ambari.agent=Restarting Ambari agents
ambari.cluster.ambari.server.restarted=Ambari server restarted
ambari.cluster.ambari.agent.restarted=Ambari agents restarted
cluster.removing.node.from.hostgroup=Removing {0} node(s) from the host group {1}
cluster.force.removing.node.from.hostgroup=Removing forcefully {0} node(s) from the host group {1}
ambari.cluster.adding.node.to.hostgroup=Adding {0} new host(s) to the host group {1}

ambari.cluster.single.master.repair.started=Started repairing ambari on recovered master node
ambari.cluster.single.master.repair.finished=Finished repairing ambari on recovered master node
ambari.cluster.single.master.repair.failed=Repairing ambari on recovered master node failed

stack.instance.terminate=Terminating instance {0}
stack.instance.delete=Deleting node {0}. Decreasing the node count on instance group {1}"

recipes.execute=Execute recipes: {0}
recipes.upload=Upload recipes: {0}

ambari.cluster.could.not.sync=Cluster can''t be synchronized. [ stack status: {0}, cluster status: {1} ]
ambari.cluster.synchronized=The cluster state synchronized with Ambari: {0}
ambari.cluster.sync.instance.different.packages=The following packages are installed with different versions on hosts: {0}
ambari.cluster.sync.instance.missing.package.versions=There are missing package versions on hosts: {0}
ambari.cluster.sync.instance.changed.packages=The following package versions have been changed on hosts: {0} 

stack.stop.ignored=Stop request ignored; cluster infrastructure is already stopped.
stack.start.ignored=Start request ignored; cluster infrastructure is already started.

stack.metadata.setup.billing.changed=Billing changed due to upscaling of cluster infrastructure

stack.scaling.host.deleted=Host {0} deleted
stack.scaling.host.delete.failed=Could not delete host {0} from Ambari
stack.scaling.host.not.found=Host {0} is not found in Ambari
stack.scaling.billing.changed=Billing changed due to downscaling of cluster infrastructure.
stack.scaling.terminating.host.from.hostgroup=Terminating host: {0} from host group: {1}



stack.sync.instance.status.retrieval.failed=Couldn''t retrieve the status of instance {0} from the cloud provider.
stack.sync.instance.status.couldnt.determine=The state of one or more instances couldn''t be determined. Try syncing later.
stack.sync.instance.operation.in.progress=An operation on one or more instances is in progress. Try syncing later.
stack.sync.instance.stopped.on.provider=Some instances were stopped on the cloud provider. Restart or terminate them and try syncing later.
stack.sync.instance.state.synced=Synced instance states with the cloud provider.
stack.sync.host.deleted=Deleted host {0} from Ambari as it is marked as terminated by the cloud provider.
stack.sync.instance.removal.failed=Instance {0} is terminated but couldn''t remove host from Ambari because it still reports the host as healthy. Try syncing later.
stack.sync.host.updated=Host {0} state has been updated to: {1}.
stack.sync.instance.terminated=Instance {0} is marked as terminated by the cloud provider, but couldn''t delete the host from Ambari.
stack.sync.instance.deleted.cbmetadata=Deleted instance {0} from Cloudbreak metadata because it couldn''t be found on the cloud provider.
stack.sync.instance.updated=Updated metadata of instance {0} to {1} as the cloud provider reported it as {1}.
stack.sync.instance.failed=Updated metadata of instance {0} to failed, because update was in progress, but instance isn''t member of the cluster.

cluster.upgrade=Upgrading cluster manager version.
cluster.upgrade.failed=Failed to upgrade cluster manager.
cluster.upgrade.finished=Cluster manager upgrade was successful.

resource.blueprint.created=Blueprint created.
resource.blueprint.deleted=Blueprint deleted.
resource.workspace.created=Workspace created. {0}
resource.workspace.deleted=Workspace deleted. {0}
resource.clustertemplate.created=Cluster template created.
resource.clustertemplate.deleted=Cluster template deleted.
resource.credential.created=Credential created.
resource.credential.deleted=Credential deleted.
resource.credential.modified=Credential modified.
resource.ldap.created=Ldap created.
resource.ldap.deleted=Ldap deleted.
resource.mpack.created=Management pack created.
resource.mpack.deleted=Management pack deleted.
resource.kubernetesconfig.created=Kubernetes config created.
resource.kubernetesconfig.modified=Kubernetes config modified.
resource.kubernetesconfig.deleted=Kubernetes config deleted.
resource.network.created=Network created.
resource.network.deleted=Network deleted.
resource.recipe.created=Recipe created.
resource.recipe.deleted=Recipe deleted.
resource.rdsconfig.created=Rds config created.
resource.rdsconfig.deleted=Rds config deleted.
resource.proxyconfig.created=Proxy config created.
resource.proxyconfig.deleted=Proxy config deleted.
resource.securitygroup.created=Security group created.
resource.securitygroup.deleted=Security group deleted.
resource.template.created=Template created.
resource.template.deleted=Template deleted.
resource.topology.created=Topology created.
resource.topology.deleted=Topology deleted.
resource.imagecatalog.created=Image catalog created.
resource.imagecatalog.deleted=Image catalog deleted.
resource.maintenancemode.enabled=Maintenance mode enabled.
resource.maintenancemode.disabled=Maintenance mode disabled.

stack.image.update.started=Changing stack image
stack.image.update.finished=Stack image change finished
stack.image.update.failed=Image change failed with message: {0}
stack.image.update.packages.different=Missing packages from image: [{0}] Different package versions on image: [{1}] 
stack.image.update.cloudplatform.different=New image platform(s) [{0}] and current Stack platform [{1}] is different.
stack.image.update.osversion.different=New image OS [{0}] and OS type [{1}] is different from current OS [{2}] and OS type [{3}]

maintenance.mode.validation.started=The validation of the repo and image settings has begun
maintenance.mode.validation.finished.warn=Validation finished with warnings: {0}
maintenance.mode.validation.finished.nowarn=Validation finished successfully.
maintenance.mode.validation.failed=Validation failed. Reason: {0}