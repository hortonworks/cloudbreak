server:
  servlet:
    context-path: "/cb"
  shutdown: graceful

opentracing:
  allowed-header-tags: "uber-trace-id,cdp-destination-api,cdp-caller-id,x-b3-parentspanid,x-b3-traceid,x-b3-spanid,x-b3-sampled,user-agent"
  jaeger:
    log-spans: false

management:
  endpoints:
    web:
      base-path: "/"
      exposure:
        include: info,health,prometheus
      path-mapping:
        prometheus: metrics
  endpoint:
    metrics:
      enabled: true
      export:
        prometheus:
          enabled: true
    prometheus:
      enabled: true
    health:
      probes:
        enabled: true
  metrics:
    distribution:
      sla:
        "[http.server.requests]": "125ms, 250ms, 500ms, 1s, 2s"
      percentiles:
        "[http.server.requests]": "0.5, 0.95"

info:
  app:
    capabilities: gov_cloud

spring:
  application:
    name: CloudbreakService
  freemarker:
    template-loader-path: file:/etc/cloudbreak,classpath:/
    prefer-file-system-access: false
  datasource:
    maxActive: 30
  jpa:
    properties:
      hibernate:
        jdbc:
          batch_size: 50
        order_inserts: true
        order_updates: true
  lifecycle:
    timeout-per-shutdown-phase: 60

rest:
  debug: false

cert:
  validation: true
  ignorePreValidation: true

secret:
  application: cb/shared
  engine: "com.sequenceiq.cloudbreak.service.secret.vault.VaultKvV2Engine"

vault:
  addr: localhost
  port: 8200
  ssl.enabled: false
  kv.engine.v2.path: secret
  config.enabled: true
  auth:
    type: "token"
    kubernetes:
      service.account.token.path: /var/run/secrets/kubernetes.io/serviceaccount/token
      mount.path: "dps-dev"
      login.role: "cloudbreak.default"

flow:
  schema:
    migration:
      auto: false

distrox:
  gateway:
    topology:
      name: cdp-proxy
    ssotype: SSO_PROVIDER
  restrict:
    instance:
      types: true

datalake:
  validateAvailability: true

altus:
  audit:
    enabled: true
    endpoint: localhost:8982
  ums:
    caller: cloudbreak

cb:
  enabledplatforms: AZURE,AWS,GCP
  platform.default.rootVolumeSize:
    AWS: 100
    AZURE: 100
    GCP: 100
  enabled.linux.types: redhat6,redhat7,centos6,centos7
  default.gateway.cidr: 0.0.0.0/0
  publicip:
  etc.config.dir: /etc/cloudbreak
  threadpool:
    core.size: 100
    capacity.size: 4000
  intermediate.threadpool:
    core.size: 100
    capacity.size: 4000
  notification:
    endpoint: http://localhost:3000/notifications
  environment:
    url: http://localhost:8088
    contextPath: /environmentservice
  freeipa:
    image.catalog.url: https://cloudbreak-imagecatalog.s3.amazonaws.com/v3-prod-freeipa-image-catalog.json
    url: http://localhost:8090
    contextPath: /freeipa
    dns:
      ttl: 30
  sdx:
    url: http://localhost:8086
    contextPath: /dl
  redbeams:
    url: http://localhost:8087
    contextPath: /redbeams
  runtimes:
    latest: "7.2.15"

  host.discovery.custom.hostname.enabled: false

  cert:
    dir: /certs/

  smtp.sender:
    host:
    port: 25
    username:
    password:
    from: no-reply@sequenceiq.com

  db.env:
    user: postgres
    pass:
    db: cbdb
    schema: public
    cert.file: database.crt
    ssl: false
    embedded.volume:
      size: 100
      platformVolumeTypeMap:
        AWS: gp2
        AZURE: StandardSSD_LRS
        GCP: pd-ssd
        MOCK: magnetic

  externaldatabase.ssl.rootcerts.path: /hadoopfs/fs1/database-cacerts/certs.pem

  limit:
    nodeCountLimits:
      cm: 400
      infrastructure: 500
      upgrade: 200

  aws:
    spotinstances.enabled: true
    disabled.instance.types:
    distrox:
      enabled.instance.types: >
        m5.xlarge,
        m5.2xlarge,
        m5.4xlarge,
        m5.8xlarge,
        m5.12xlarge,
        m5.16xlarge,
        m5.24xlarge,
        m5a.xlarge,
        m5a.2xlarge,
        m5a.4xlarge,
        m5a.8xlarge,
        m5a.12xlarge,
        m5a.16xlarge,
        m5a.24xlarge,
        r5a.4xlarge,
        r5a.8xlarge,
        r5ad.xlarge,
        r5ad.2xlarge,
        r5ad.4xlarge,
        r5ad.8xlarge,
        r5ad.16xlarge,
        c5a.2xlarge,
        c5a.4xlarge,
        c5a.8xlarge,
        c5a.12xlarge,
        r5.2xlarge,
        r5.4xlarge,
        r5.8xlarge,
        r5.16xlarge,
        c5.2xlarge,
        c5.4xlarge,
        c5.9xlarge,
        c5.12xlarge,
        i3.2xlarge,
        i3.4xlarge,
        i3.8xlarge,
        i3en.2xlarge,
        i3en.3xlarge,
        i3en.6xlarge,
        i3en.12xlarge,
        h1.2xlarge,
        h1.4xlarge,
        h1.8xlarge,
        d2.xlarge,
        d2.2xlarge,
        d2.4xlarge,
        d2.8xlarge,
        d3.xlarge,
        d3.2xlarge,
        d3.4xlarge,
        d3.8xlarge,
        d3en.2xlarge,
        d3en.4xlarge,
        d3en.6xlarge,
        d3en.8xlarge,
        r4.xlarge,
        r4.2xlarge,
        r4.4xlarge,
        r4.8xlarge,
        r5d.16xlarge,
        r5d.8xlarge,
        r5d.4xlarge,
        r5d.2xlarge,
        r5d.xlarge,
        m5n.2xlarge,
        m5n.4xlarge,
        m5n.8xlarge,
        r5n.2xlarge,
        r5n.4xlarge,
        r5n.8xlarge,
        r5n.16xlarge,
        r5dn.xlarge,
        r5dn.2xlarge,
        r5dn.4xlarge,
        r5dn.8xlarge,
        r5dn.16xlarge,
        x1e.2xlarge

    hostkey.verify: false
    role.session.name: cdp-provisioning
    cf.template.new.path: templates/aws-cf-stack.ftl
    cf.network.template.path: templates/aws-cf-network.ftl
    cf.template.newdb.path: templates/aws-cf-dbstack.ftl
    default.inbound.security.group:
    vpc:
    vpcendpoints:
      enabled.gateway.services: s3,dynamodb
    externaldatabase:
      ha:
        retentionperiod: 30
      nonha:
        retentionperiod: 0
    credential.cache.ttl: 60

  azure:
    host.name.prefix.length: 255
    poller:
      dns:
        checkinterval: 2000
        maxattempt: 60
        maxfailurenumber: 5
      image:
        checkinterval: 1000
        maxattempt: 100
        maxfailurenumber: 5
      storage:
        checkinterval: 1000
        maxattempt: 30
        maxfailurenumber: 5
    database.template.batchSize: 1
    externaldatabase:
      ha:
        retentionperiod: 30
        georedundantbackup: true
      nonha:
        retentionperiod: 7
        georedundantbackup: false
    distrox:
      enabled.instance.types: >
        Standard_D8_v3,
        Standard_D8s_v3,
        Standard_D16_v3,
        Standard_D16s_v3,
        Standard_D32_v3,
        Standard_D32s_v3,
        Standard_D64_v3,
        Standard_D64s_v3,
        Standard_D64a_v4,
        Standard_D64as_v4,
        Standard_E8_v3,
        Standard_E16_v3,
        Standard_E32_v3,
        Standard_F8s_v2,
        Standard_F16s_v2,
        Standard_F32s_v2,
        Standard_L8s_v2,
        Standard_L16s_v2,
        Standard_L32s_v2,
        Standard_L8s,
        Standard_L16s,
        Standard_L32s,
        Standard_NC6,
        Standard_NC24r,
        Standard_NC6s_v3,
        Standard_NC24s_v3,
        Standard_L48s_v2,
        Standard_D13_v2,
        Standard_D14_v2,
        Standard_D8a_v4,
        Standard_D16a_v4,
        Standard_D32a_v4,
        Standard_D8as_v4,
        Standard_D16as_v4,
        Standard_D32as_v4,
        Standard_E4a_v4,
        Standard_E8a_v4,
        Standard_E16a_v4,
        Standard_E32a_v4,
        Standard_E64a_v4,
        Standard_E64as_v4,
        Standard_E64ds_v4,
        Standard_E8s_v3,
        Standard_E16s_v3,
        Standard_E20s_v3,
        Standard_E32s_v3,
        Standard_E48s_v3,
        Standard_E64s_v3

  os:
    enable.autoimport: true
    import:
      root.url.pattern: http://public-repo-1.hortonworks.com/HDP/cloudbreak/%s.img
      from.format: qcow2
      disk.format: qcow2
      container.format: bare



  yarn:
    domain: default.com
    defaultQueue: "default"
    defaultLifeTime: 604800

  blueprint:
    cm:
      defaults:
        7.1.0: >
          7.1.0 - Data Engineering: Apache Spark, Apache Hive, Apache Oozie=cdp-data-engineering;
          7.1.0 - Data Engineering: HA: Apache Spark, Apache Hive, Apache Oozie=cdp-data-engineering-ha;
          7.1.0 - Data Engineering: Apache Spark3=cdp-data-engineering-spark3;
          7.1.0 - Data Mart: Apache Impala, Hue=cdp-data-mart;
          7.1.0 - Flow Management Light Duty with Apache NiFi, Apache NiFi Registry=cdp-flow-management-small;
          7.1.0 - Flow Management Heavy Duty with Apache NiFi, Apache NiFi Registry=cdp-flow-management;
          7.1.0 - Real-time Data Mart: Apache Impala, Hue, Apache Kudu, Apache Spark=cdp-rt-data-mart;
          7.1.0 - Operational Database: Apache HBase, Phoenix=cdp-opdb;
          7.1.0 - SDX Light Duty: Apache Hive Metastore, Apache Ranger, Apache Atlas=cdp-sdx;
          7.1.0 - Streams Messaging Heavy Duty: Apache Kafka, Schema Registry, Streams Messaging Manager=cdp-streaming;
          7.1.0 - Streams Messaging Light Duty: Apache Kafka, Schema Registry, Streams Messaging Manager=cdp-streaming-small
        7.2.0: >
          7.2.0 - Data Engineering: Apache Spark, Apache Hive, Apache Oozie=cdp-data-engineering;
          7.2.0 - Data Engineering: HA: Apache Spark, Apache Hive, Apache Oozie=cdp-data-engineering-ha;
          7.2.0 - Data Engineering: Apache Spark3=cdp-data-engineering-spark3;
          7.2.0 - Data Mart: Apache Impala, Hue=cdp-data-mart;
          7.2.0 - Real-time Data Mart: Apache Impala, Hue, Apache Kudu, Apache Spark=cdp-rt-data-mart;
          7.2.0 - Operational Database: Apache HBase, Phoenix=cdp-opdb;
          7.2.0 - SDX Light Duty: Apache Hive Metastore, Apache Ranger, Apache Atlas=cdp-sdx;
          7.2.0 - Streams Messaging Heavy Duty: Apache Kafka, Schema Registry, Streams Messaging Manager=cdp-streaming;
          7.2.0 - Streams Messaging Light Duty: Apache Kafka, Schema Registry, Streams Messaging Manager=cdp-streaming-small;
          7.2.0 - Flow Management Light Duty with Apache NiFi, Apache NiFi Registry=cdp-flow-management-small;
          7.2.0 - Flow Management Heavy Duty with Apache NiFi, Apache NiFi Registry=cdp-flow-management;
          7.2.0 - Data Discovery and Exploration=cdp-dde
        7.2.1: >
          7.2.1 - SDX Light Duty: Apache Hive Metastore, Apache Ranger, Apache Atlas=cdp-sdx;
          7.2.1 - Data Engineering: Apache Spark, Apache Hive, Apache Oozie=cdp-data-engineering;
          7.2.1 - Data Engineering: HA: Apache Spark, Apache Hive, Apache Oozie=cdp-data-engineering-ha;
          7.2.1 - Data Engineering: Apache Spark3=cdp-data-engineering-spark3;
          7.2.1 - Data Mart: Apache Impala, Hue=cdp-data-mart;
          7.2.1 - Real-time Data Mart: Apache Impala, Hue, Apache Kudu, Apache Spark=cdp-rt-data-mart;
          7.2.1 - Operational Database: Apache HBase, Phoenix=cdp-opdb;
          7.2.1 - Streams Messaging Heavy Duty: Apache Kafka, Schema Registry, Streams Messaging Manager=cdp-streaming;
          7.2.1 - Streams Messaging Light Duty: Apache Kafka, Schema Registry, Streams Messaging Manager=cdp-streaming-small;
          7.2.1 - Flow Management Light Duty with Apache NiFi, Apache NiFi Registry=cdp-flow-management-small;
          7.2.1 - Flow Management Heavy Duty with Apache NiFi, Apache NiFi Registry=cdp-flow-management;
          7.2.1 - Data Discovery and Exploration=cdp-dde
        7.2.2: >
          7.2.2 - SDX Light Duty: Apache Hive Metastore, Apache Ranger, Apache Atlas=cdp-sdx;
          7.2.2 - SDX Medium Duty: Apache Hive Metastore, Apache Ranger, Apache Atlas=cdp-sdx-medium-ha;
          7.2.2 - Data Engineering: Apache Spark, Apache Hive, Apache Oozie=cdp-data-engineering;
          7.2.2 - Data Engineering: HA: Apache Spark, Apache Hive, Apache Oozie=cdp-data-engineering-ha;
          7.2.2 - Data Engineering: Apache Spark3=cdp-data-engineering-spark3;
          7.2.2 - Data Mart: Apache Impala, Hue=cdp-data-mart;
          7.2.2 - Real-time Data Mart: Apache Impala, Hue, Apache Kudu, Apache Spark=cdp-rt-data-mart;
          7.2.2 - Operational Database: Apache HBase, Phoenix=cdp-opdb;
          7.2.2 - Streams Messaging Heavy Duty: Apache Kafka, Schema Registry, Streams Messaging Manager=cdp-streaming;
          7.2.2 - Streams Messaging Light Duty: Apache Kafka, Schema Registry, Streams Messaging Manager=cdp-streaming-small;
          7.2.2 - Flow Management Light Duty with Apache NiFi, Apache NiFi Registry=cdp-flow-management-small;
          7.2.2 - Flow Management Heavy Duty with Apache NiFi, Apache NiFi Registry=cdp-flow-management;
          7.2.2 - Data Discovery and Exploration=cdp-dde;
          7.2.2 - COD Edge Node=cdp-cod-edge-node
        7.2.6: >
          7.2.6 - SDX Light Duty: Apache Hive Metastore, Apache Ranger, Apache Atlas=cdp-sdx;
          7.2.6 - SDX Medium Duty: Apache Hive Metastore, Apache Ranger, Apache Atlas=cdp-sdx-medium-ha;
          7.2.6 - Data Engineering: Apache Spark, Apache Hive, Apache Oozie=cdp-data-engineering;
          7.2.6 - Data Engineering: HA: Apache Spark, Apache Hive, Apache Oozie=cdp-data-engineering-ha;
          7.2.6 - Data Engineering: Apache Spark3=cdp-data-engineering-spark3;
          7.2.6 - Data Mart: Apache Impala, Hue=cdp-data-mart;
          7.2.6 - Real-time Data Mart: Apache Impala, Hue, Apache Kudu, Apache Spark=cdp-rt-data-mart;
          7.2.6 - Operational Database: Apache HBase, Phoenix=cdp-opdb;
          7.2.6 - Streams Messaging Heavy Duty: Apache Kafka, Schema Registry, Streams Messaging Manager, Streams Replication Manager=cdp-streaming;
          7.2.6 - Streams Messaging Light Duty: Apache Kafka, Schema Registry, Streams Messaging Manager, Streams Replication Manager=cdp-streaming-small;
          7.2.6 - Flow Management Light Duty with Apache NiFi, Apache NiFi Registry=cdp-flow-management-small;
          7.2.6 - Flow Management Heavy Duty with Apache NiFi, Apache NiFi Registry=cdp-flow-management;
          7.2.6 - Data Discovery and Exploration=cdp-dde;
          7.2.6 - COD Edge Node=cdp-cod-edge-node
        7.2.7: >
          7.2.7 - SDX Light Duty: Apache Hive Metastore, Apache Ranger, Apache Atlas=cdp-sdx;
          7.2.7 - SDX Medium Duty: Apache Hive Metastore, Apache Ranger, Apache Atlas=cdp-sdx-medium-ha;
          7.2.7 - Data Engineering: Apache Spark, Apache Hive, Apache Oozie=cdp-data-engineering;
          7.2.7 - Data Engineering: HA: Apache Spark, Apache Hive, Apache Oozie=cdp-data-engineering-ha;
          7.2.7 - Data Engineering: Apache Spark3=cdp-data-engineering-spark3;
          7.2.7 - Data Mart: Apache Impala, Hue=cdp-data-mart;
          7.2.7 - Real-time Data Mart: Apache Impala, Hue, Apache Kudu, Apache Spark=cdp-rt-data-mart;
          7.2.7 - Operational Database: Apache HBase, Phoenix=cdp-opdb;
          7.2.7 - Streams Messaging Heavy Duty: Apache Kafka, Schema Registry, Streams Messaging Manager, Streams Replication Manager=cdp-streaming;
          7.2.7 - Streams Messaging Light Duty: Apache Kafka, Schema Registry, Streams Messaging Manager, Streams Replication Manager=cdp-streaming-small;
          7.2.7 - Flow Management Light Duty with Apache NiFi, Apache NiFi Registry=cdp-flow-management-small;
          7.2.7 - Flow Management Heavy Duty with Apache NiFi, Apache NiFi Registry=cdp-flow-management;
          7.2.7 - Data Discovery and Exploration=cdp-dde;
          7.2.7 - COD Edge Node=cdp-cod-edge-node
        7.2.8: >
          7.2.8 - SDX Light Duty: Apache Hive Metastore, Apache Ranger, Apache Atlas=cdp-sdx;
          7.2.8 - SDX Medium Duty: Apache Hive Metastore, Apache Ranger, Apache Atlas=cdp-sdx-medium-ha;
          7.2.8 - Data Engineering: Apache Spark, Apache Hive, Apache Oozie=cdp-data-engineering;
          7.2.8 - Data Engineering: HA: Apache Spark, Apache Hive, Apache Oozie=cdp-data-engineering-ha;
          7.2.8 - Data Engineering: Apache Spark3=cdp-data-engineering-spark3;
          7.2.8 - Data Mart: Apache Impala, Hue=cdp-data-mart;
          7.2.8 - Real-time Data Mart: Apache Impala, Hue, Apache Kudu, Apache Spark=cdp-rt-data-mart;
          7.2.8 - Operational Database: Apache HBase, Phoenix=cdp-opdb;
          7.2.8 - Streams Messaging Heavy Duty: Apache Kafka, Schema Registry, Streams Messaging Manager, Streams Replication Manager=cdp-streaming;
          7.2.8 - Streams Messaging Light Duty: Apache Kafka, Schema Registry, Streams Messaging Manager, Streams Replication Manager=cdp-streaming-small;
          7.2.8 - Flow Management Light Duty with Apache NiFi, Apache NiFi Registry=cdp-flow-management-small;
          7.2.8 - Flow Management Heavy Duty with Apache NiFi, Apache NiFi Registry=cdp-flow-management;
          7.2.8 - Data Discovery and Exploration=cdp-dde;
          7.2.8 - COD Edge Node=cdp-cod-edge-node
        7.2.9: >
          7.2.9 - SDX Light Duty: Apache Hive Metastore, Apache Ranger, Apache Atlas=cdp-sdx;
          7.2.9 - SDX Medium Duty: Apache Hive Metastore, Apache Ranger, Apache Atlas=cdp-sdx-medium-ha;
          7.2.9 - Data Engineering: Apache Spark, Apache Hive, Apache Oozie=cdp-data-engineering;
          7.2.9 - Data Engineering: HA: Apache Spark, Apache Hive, Apache Oozie=cdp-data-engineering-ha;
          7.2.9 - Data Engineering: Apache Spark3=cdp-data-engineering-spark3;
          7.2.9 - Data Mart: Apache Impala, Hue=cdp-data-mart;
          7.2.9 - Real-time Data Mart: Apache Impala, Hue, Apache Kudu, Apache Spark=cdp-rt-data-mart;
          7.2.9 - Operational Database: Apache HBase, Phoenix=cdp-opdb;
          7.2.9 - Streams Messaging Heavy Duty: Apache Kafka, Schema Registry, Streams Messaging Manager, Streams Replication Manager=cdp-streaming;
          7.2.9 - Streams Messaging Light Duty: Apache Kafka, Schema Registry, Streams Messaging Manager, Streams Replication Manager=cdp-streaming-small;
          7.2.9 - Flow Management Light Duty with Apache NiFi, Apache NiFi Registry=cdp-flow-management-small;
          7.2.9 - Flow Management Heavy Duty with Apache NiFi, Apache NiFi Registry=cdp-flow-management;
          7.2.9 - Data Discovery and Exploration=cdp-dde;
          7.2.9 - COD Edge Node=cdp-cod-edge-node
        7.2.10: >
          7.2.10 - SDX Light Duty: Apache Hive Metastore, Apache Ranger, Apache Atlas=cdp-sdx;
          7.2.10 - SDX Medium Duty: Apache Hive Metastore, Apache Ranger, Apache Atlas=cdp-sdx-medium-ha;
          7.2.10 - Data Engineering: Apache Spark, Apache Hive, Apache Oozie=cdp-data-engineering;
          7.2.10 - Data Engineering: HA: Apache Spark, Apache Hive, Apache Oozie=cdp-data-engineering-ha;
          7.2.10 - Data Engineering: Apache Spark3=cdp-data-engineering-spark3;
          7.2.10 - Data Mart: Apache Impala, Hue=cdp-data-mart;
          7.2.10 - Real-time Data Mart: Apache Impala, Hue, Apache Kudu, Apache Spark=cdp-rt-data-mart;
          7.2.10 - Operational Database: Apache HBase, Phoenix=cdp-opdb;
          7.2.10 - Streams Messaging Heavy Duty: Apache Kafka, Schema Registry, Streams Messaging Manager, Streams Replication Manager=cdp-streaming;
          7.2.10 - Streams Messaging Light Duty: Apache Kafka, Schema Registry, Streams Messaging Manager, Streams Replication Manager=cdp-streaming-small;
          7.2.10 - Flow Management Light Duty with Apache NiFi, Apache NiFi Registry=cdp-flow-management-small;
          7.2.10 - Flow Management Heavy Duty with Apache NiFi, Apache NiFi Registry=cdp-flow-management;
          7.2.10 - Data Discovery and Exploration=cdp-dde;
          7.2.10 - COD Edge Node=cdp-cod-edge-node
        7.2.11: >
          7.2.11 - SDX Light Duty: Apache Hive Metastore, Apache Ranger, Apache Atlas=cdp-sdx;
          7.2.11 - SDX Medium Duty: Apache Hive Metastore, Apache Ranger, Apache Atlas=cdp-sdx-medium-ha;
          7.2.11 - Data Engineering: Apache Spark, Apache Hive, Apache Oozie=cdp-data-engineering;
          7.2.11 - Data Engineering: HA: Apache Spark, Apache Hive, Apache Oozie=cdp-data-engineering-ha;
          7.2.11 - Data Engineering: Apache Spark3=cdp-data-engineering-spark3;
          7.2.11 - Data Mart: Apache Impala, Hue=cdp-data-mart;
          7.2.11 - Real-time Data Mart: Apache Impala, Hue, Apache Kudu, Apache Spark=cdp-rt-data-mart;
          7.2.11 - Operational Database: Apache HBase, Phoenix=cdp-opdb;
          7.2.11 - Streams Messaging Heavy Duty: Apache Kafka, Schema Registry, Streams Messaging Manager, Streams Replication Manager=cdp-streaming;
          7.2.11 - Streams Messaging Light Duty: Apache Kafka, Schema Registry, Streams Messaging Manager, Streams Replication Manager=cdp-streaming-small;
          7.2.11 - Flow Management Light Duty with Apache NiFi, Apache NiFi Registry=cdp-flow-management-small;
          7.2.11 - Flow Management Heavy Duty with Apache NiFi, Apache NiFi Registry=cdp-flow-management;
          7.2.11 - Data Discovery and Exploration=cdp-dde;
          7.2.11 - Streaming Analytics Light Duty with Apache Flink=cdp-flink-light;
          7.2.11 - Streaming Analytics Heavy Duty with Apache Flink=cdp-flink-heavy;
          7.2.11 - COD Edge Node=cdp-cod-edge-node
        7.2.12: >
          7.2.12 - SDX Micro Duty: Apache Hive Metastore, Apache Ranger, Apache Atlas=cdp-sdx-micro;
          7.2.12 - SDX Light Duty: Apache Hive Metastore, Apache Ranger, Apache Atlas=cdp-sdx;
          7.2.12 - SDX Medium Duty: Apache Hive Metastore, Apache Ranger, Apache Atlas=cdp-sdx-medium-ha;
          7.2.12 - Data Engineering: Apache Spark, Apache Hive, Apache Oozie=cdp-data-engineering;
          7.2.12 - Data Engineering: HA: Apache Spark, Apache Hive, Apache Oozie=cdp-data-engineering-ha;
          7.2.12 - Data Engineering: Apache Spark3=cdp-data-engineering-spark3;
          7.2.12 - Data Mart: Apache Impala, Hue=cdp-data-mart;
          7.2.12 - Real-time Data Mart: Apache Impala, Hue, Apache Kudu, Apache Spark=cdp-rt-data-mart;
          7.2.12 - Operational Database: Apache HBase, Phoenix=cdp-opdb;
          7.2.12 - Streams Messaging Heavy Duty: Apache Kafka, Schema Registry, Streams Messaging Manager, Streams Replication Manager, Cruise Control=cdp-streaming;
          7.2.12 - Streams Messaging Light Duty: Apache Kafka, Schema Registry, Streams Messaging Manager, Streams Replication Manager, Cruise Control=cdp-streaming-small;
          7.2.12 - Flow Management Light Duty with Apache NiFi, Apache NiFi Registry=cdp-flow-management-small;
          7.2.12 - Flow Management Heavy Duty with Apache NiFi, Apache NiFi Registry=cdp-flow-management;
          7.2.12 - Data Discovery and Exploration=cdp-dde;
          7.2.12 - Streaming Analytics Light Duty with Apache Flink=cdp-flink-light;
          7.2.12 - Streaming Analytics Heavy Duty with Apache Flink=cdp-flink-heavy;
          7.2.12 - COD Edge Node=cdp-cod-edge-node
        7.2.13: >
          7.2.13 - SDX Micro Duty: Apache Hive Metastore, Apache Ranger, Apache Atlas=cdp-sdx-micro;
          7.2.13 - SDX Light Duty: Apache Hive Metastore, Apache Ranger, Apache Atlas=cdp-sdx;
          7.2.13 - SDX Medium Duty: Apache Hive Metastore, Apache Ranger, Apache Atlas=cdp-sdx-medium-ha;
          7.2.13 - SDX Medium Duty: Apache Hive Metastore, Apache Ranger, Apache Atlas, Profiler Manager=cdp-sdx-medium-ha-profiler;
          7.2.13 - Data Engineering: Apache Spark, Apache Hive, Apache Oozie=cdp-data-engineering;
          7.2.13 - Data Engineering: HA: Apache Spark, Apache Hive, Apache Oozie=cdp-data-engineering-ha;
          7.2.13 - Data Engineering: Apache Spark3=cdp-data-engineering-spark3;
          7.2.13 - Data Mart: Apache Impala, Hue=cdp-data-mart;
          7.2.13 - Real-time Data Mart: Apache Impala, Hue, Apache Kudu, Apache Spark=cdp-rt-data-mart;
          7.2.13 - Operational Database: Apache HBase, Phoenix=cdp-opdb;
          7.2.13 - Streams Messaging Heavy Duty: Apache Kafka, Schema Registry, Streams Messaging Manager, Streams Replication Manager, Cruise Control=cdp-streaming;
          7.2.13 - Streams Messaging Light Duty: Apache Kafka, Schema Registry, Streams Messaging Manager, Streams Replication Manager, Cruise Control=cdp-streaming-small;
          7.2.13 - Flow Management Light Duty with Apache NiFi, Apache NiFi Registry=cdp-flow-management-small;
          7.2.13 - Flow Management Heavy Duty with Apache NiFi, Apache NiFi Registry=cdp-flow-management;
          7.2.13 - Data Discovery and Exploration=cdp-dde;
          7.2.13 - Streaming Analytics Light Duty with Apache Flink=cdp-flink-light;
          7.2.13 - Streaming Analytics Heavy Duty with Apache Flink=cdp-flink-heavy;
          7.2.13 - COD Edge Node=cdp-cod-edge-node
        7.2.14: >
          7.2.14 - SDX Micro Duty: Apache Hive Metastore, Apache Ranger, Apache Atlas=cdp-sdx-micro;
          7.2.14 - SDX Light Duty: Apache Hive Metastore, Apache Ranger, Apache Atlas=cdp-sdx;
          7.2.14 - SDX Medium Duty: Apache Hive Metastore, Apache Ranger, Apache Atlas=cdp-sdx-medium-ha;
          7.2.14 - SDX Medium Duty: Apache Hive Metastore, Apache Ranger, Apache Atlas, Profiler Manager=cdp-sdx-medium-ha-profiler;
          7.2.14 - Data Engineering: Apache Spark, Apache Hive, Apache Oozie=cdp-data-engineering;
          7.2.14 - Data Engineering: HA: Apache Spark, Apache Hive, Apache Oozie=cdp-data-engineering-ha;
          7.2.14 - Data Engineering: Apache Spark3=cdp-data-engineering-spark3;
          7.2.14 - Data Mart: Apache Impala, Hue=cdp-data-mart;
          7.2.14 - Real-time Data Mart: Apache Impala, Hue, Apache Kudu, Apache Spark=cdp-rt-data-mart;
          7.2.14 - Streams Messaging Heavy Duty: Apache Kafka, Schema Registry, Streams Messaging Manager, Streams Replication Manager, Cruise Control=cdp-streaming;
          7.2.14 - Streams Messaging Light Duty: Apache Kafka, Schema Registry, Streams Messaging Manager, Streams Replication Manager, Cruise Control=cdp-streaming-small;
          7.2.14 - Flow Management Light Duty with Apache NiFi, Apache NiFi Registry=cdp-flow-management-small;
          7.2.14 - Flow Management Heavy Duty with Apache NiFi, Apache NiFi Registry=cdp-flow-management;
          7.2.14 - Data Discovery and Exploration=cdp-dde;
          7.2.14 - Streaming Analytics Light Duty with Apache Flink=cdp-flink-light;
          7.2.14 - Streaming Analytics Heavy Duty with Apache Flink=cdp-flink-heavy;
          7.2.14 - COD Edge Node=cdp-cod-edge-node
        7.2.15: >
          7.2.15 - SDX Micro Duty: Apache Hive Metastore, Apache Ranger, Apache Atlas=cdp-sdx-micro;
          7.2.15 - SDX Light Duty: Apache Hive Metastore, Apache Ranger, Apache Atlas=cdp-sdx;
          7.2.15 - SDX Medium Duty: Apache Hive Metastore, Apache Ranger, Apache Atlas=cdp-sdx-medium-ha;
          7.2.15 - SDX Medium Duty: Apache Hive Metastore, Apache Ranger, Apache Atlas, Profiler Manager=cdp-sdx-medium-ha-profiler;
          7.2.15 - Data Engineering: Apache Spark, Apache Hive, Apache Oozie=cdp-data-engineering;
          7.2.15 - Data Engineering: HA: Apache Spark, Apache Hive, Apache Oozie=cdp-data-engineering-ha;
          7.2.15 - Data Engineering: Apache Spark3=cdp-data-engineering-spark3;
          7.2.15 - Data Mart: Apache Impala, Hue=cdp-data-mart;
          7.2.15 - Real-time Data Mart: Apache Impala, Hue, Apache Kudu, Apache Spark=cdp-rt-data-mart;
          7.2.15 - Streams Messaging Heavy Duty: Apache Kafka, Schema Registry, Streams Messaging Manager, Streams Replication Manager, Cruise Control=cdp-streaming;
          7.2.15 - Streams Messaging Light Duty: Apache Kafka, Schema Registry, Streams Messaging Manager, Streams Replication Manager, Cruise Control=cdp-streaming-small;
          7.2.15 - Flow Management Light Duty with Apache NiFi, Apache NiFi Registry=cdp-flow-management-small;
          7.2.15 - Flow Management Heavy Duty with Apache NiFi, Apache NiFi Registry=cdp-flow-management;
          7.2.15 - Data Discovery and Exploration=cdp-dde;
          7.2.15 - Streaming Analytics Light Duty with Apache Flink=cdp-flink-light;
          7.2.15 - Streaming Analytics Heavy Duty with Apache Flink=cdp-flink-heavy;
          7.2.15 - COD Edge Node=cdp-cod-edge-node
  clustertemplate.defaults:
  template.defaults: minviable-gcp,minviable-azure-managed-disks,minviable-aws
  custom.user.data: |
    touch /tmp/custom-user-data
    date >> /tmp/custom-user-data
  mail:
    smtp:
      auth: true
      type: smtp
      starttls.enable: true
  success.cluster.installer.mail.template.path: templates/cluster-installer-mail-success.ftl
  failed.cluster.installer.mail.template.path: templates/cluster-installer-mail-fail.ftl

  arm:
    template.path: templates/arm-v2.ftl
    network.template.path: templates/arm-network.ftl
    parameter.path: templates/parameters.ftl
    database.template.path: templates/arm-database.ftl
    storageaccount.template.path: templates/arm-storageaccount.ftl
    app.creation.template:
      command.path: templates/app-creation-command.ftl
      command.audit.path: templates/app-audit-creation-command.ftl
      json.path: templates/app-creation.json
      resource:
        app.id: 797f4846-ba00-4fd7-ba43-dac1f8f63013
        access.scope.id: 41094075-9dad-400e-a0bd-54e686782033
    marketplace.image.automatic.signer: false

  max:
    azure.resource.name.length: 120
    gcp.resource.name.length: 63
    aws.resource.name.length: 50
    aws.loadbalancer.resource.name.length: 32
    yarn.resource.name.length: 63

    salt.new.service.retry: 180
    salt.new.service.leave.retry: 5
    salt.new.service.retry.onerror: 20
    salt.recipe.execution.retry: 180
    salt.modifygrain:
        maxretry: 30
        maxerrorretry: 10

  address.resolving.timeout: 60000

  cloud.api.executorservice.pool.size: 40
  reactor.executorservice.pool.size: 40

  platform.default:
    variants: AWS:AWS
    regions: AWS:eu-west-1,AZURE:North Europe,GCP:europe-west1,YARN:default,MOCK:USA

  gcp:
    hostkey.verify: false
    disk.encryption.url: https://cloud-certs.storage.googleapis.com/google-cloud-csek-ingress.pem
    stopStart.batch.size: 10
    create.batch.size: 5
    externaldatabase:
      ha:
        retentionperiod: 30
        georedundantbackup: true
      nonha:
        retentionperiod: 7
        georedundantbackup: false
    distrox:
      enabled.instance.types: >
        e2-standard-2,
        e2-standard-4,
        e2-standard-8,
        e2-standard-16,
        e2-standard-32,
        n2-standard-2,
        n2-standard-4,
        n2-standard-8,
        n2-standard-16,
        n2-standard-32,
        n2-standard-48,
        n2-standard-64,
        n2-standard-80,
        n1-standard-2,
        n1-standard-4,
        n1-standard-8,
        n1-standard-16,
        n1-standard-32,
        n1-standard-48,
        n1-standard-64,
        n1-standard-96,
        n2d-standard-2,
        n2d-standard-4,
        n2d-standard-8,
        n2d-standard-16,
        n2d-standard-32,
        n2d-standard-48,
        n2d-standard-64,
        n2d-standard-80,
        n2d-highmem-16,
        n2d-highcpu-8,
        n2d-highcpu-16,
        n2d-highcpu-32,
        n2d-highmem-32,
        n2d-highmem-64,
        e2-highmem-8,
        e2-highmem-16,
        e2-highcpu-8,
        e2-highcpu-16,
        e2-highcpu-32

  nginx:
    port: 9443
  knox:
    port: 8443
  https:
    port: 443
  ssh:
    port: 22
  nfs:
    port: 2049

  hive.database:
    user: hive
    db: hive
    port: 5432

  ranger.database:
    user: ranger
    db: ranger
    port: 5432

  profiler.admin.database:
    user: profiler_agent
    db: profiler_agent
    port: 5432

  profiler.metrics.database:
    user: profiler_metric
    db: profiler_metric
    port: 5432

  recovery:
    database.reuse: hive

  cm:
    admin.role: "ROLE_ADMIN"
    limited.admin.role: "ROLE_LIMITED_CLUSTER_ADMIN"
    dashboard.user.role: "ROLE_DASHBOARD_USER"
    user.role: "ROLE_USER"
    heartbeat.interval: 3
    missed.heartbeat.interval: 30
    kerberos.encryption.type: "aes256-cts"
    client:
      cluster.proxy.timeout: 120000
      connect.timeout.seconds: 125
      read.timeout.seconds: 125
      write.timeout.seconds: 125
      syncCommandPoller:
        interrupt.timeout.seconds: 120

  workspace.service.cache.ttl: 15
  upscale.targeted.cache.ttl: 5

  structuredevent:
    rest:
      enabled: true
      contentlogging: true

  image.catalog:
    cache.ttl: 15
    legacy.enabled: true

  instance:
    packages:
      - name: salt
        prewarmed: false
        grain: saltversion
      - name: salt-bootstrap
        prewarmed: false
        command: "salt-bootstrap version"
        commandVersionPattern: "Version: (.*)"
      - name: stack
        command: "cat /var/lib/cloudera-scm-agent/active_parcels.json | jq -r '.CDH'"
        commandVersionPattern: "(.*)-.*"
        prewarmed: true
      - name: cm
        pkg:
          - name: cloudera-manager-agent
            pattern: "(.*)-.*"
        prewarmed: true
  paywall.url: "https://archive.cloudera.com/p/cdp-public/"
  nodestatus:
    connectionTimeoutMs: 15000
    readTimeoutMs: 30000

  loadBalancer:
    supportedPlatforms: AWS,YARN,AZURE,GCP

  upgrade:
    failure.sync:
      sdx.enabled: false
    validation:
      distrox:
        enabled: true
      sdx:
        enabled: true
    permittedServicesForUpgrade: >
        CORE_SETTINGS: 7.2.7,
        CRUISE_CONTROL: 7.2.7,
        DAS: 7.2.7,
        HBASE: 7.2.7,
        HDFS: 7.2.7,
        HIVE: 7.2.7,
        HIVE_ON_TEZ: 7.2.7,
        HUE: 7.2.7,
        IMPALA: 7.2.7,
        KAFKA: 7.2.7,
        KNOX: 7.2.7,
        KUDU: 7.2.7,
        LIVY: 7.2.7,
        LIVY_FOR_SPARK3: 7.2.7,
        OMID: 7.2.7,
        OOZIE: 7.2.7,
        NIFI: 7.2.7,
        NIFIREGISTRY: 7.2.7,
        PHOENIX: 7.2.7,
        QUEUEMANAGER: 7.2.7,
        SCHEMAREGISTRY: 7.2.7,
        SOLR: 7.2.7,
        SPARK3_ON_YARN: 7.2.7,
        SPARK_ON_YARN: 7.2.7,
        STREAMS_MESSAGING_MANAGER: 7.2.7,
        STREAMS_REPLICATION_MANAGER: 7.2.7,
        SQOOP_CLIENT: 7.2.7,
        TEZ: 7.2.7,
        YARN: 7.2.7,
        ZEPPELIN: 7.2.7,
        ZOOKEEPER: 7.2.7

  stopRestriction:
    restrictedCloudPlatform: AWS
    ephemeralCachingMinVersion: 2.48.0
    ephemeralOnlyMinVersion: 2.53.0
    permittedServiceRoleGroups:
      - name: general
        serviceRoles:
          - service: YARN
            role: NODEMANAGER
            required: false
        roles:
          - role: GATEWAY
            required: false

cluster:
  monitoring:
    enabled: true
    databus:
      processing:
        workers: 1
        queueSizeLimit: 2000

clusterProxy:
  url: http://localhost:10180/cluster-proxy
  enabled: true
  disabledPlatforms: MOCK
  readConfigPath: /rpc/readConfig
  registerConfigPath: /rpc/forceRegisterConfig
  updateConfigPath: /rpc/updateConfig
  removeConfigPath: /rpc/removeConfig

gateway:
  cert:
    generation.enabled: false
    polling:
      attempt: 50
      intervall: 10
    base.domain.name: cloudera.com

notification:
  urls: http://localhost:3000/notifications

crn:
  partition: cdp
  region: us-west-1

existing-stack-patcher:
  intervalInHours: 24
  maxInitialStartDelayInHours: 12
  patch-configs:
    unbound-restart:
      enabled: false
    logging-agent-auto-restart:
      enabled: false
      affected-version-from: 0.2.13
      date-after: 2019-11-24
      date-before: 2022-01-18
    logging-agent-auto-restart-v2:
      enabled: false
    metering-azure-metadata:
      enabled: false
      date-before: 2022-01-18
      custom-rpm-url: https://archive.cloudera.com/cp_clients/thunderhead-metering-heartbeat-application-0.1-SNAPSHOT.x86_64.rpm

clusterdns:
  host: localhost
  port: 8982
