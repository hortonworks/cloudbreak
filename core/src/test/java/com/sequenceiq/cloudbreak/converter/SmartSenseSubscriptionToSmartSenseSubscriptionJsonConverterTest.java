package com.sequenceiq.cloudbreak.converter;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.junit.MockitoJUnitRunner;

import com.sequenceiq.cloudbreak.api.model.SmartSenseSubscriptionJson;
import com.sequenceiq.cloudbreak.domain.SmartSenseSubscription;

@RunWith(MockitoJUnitRunner.class)
public class SmartSenseSubscriptionToSmartSenseSubscriptionJsonConverterTest {

    private SmartSenseSubscriptionToSmartSenseSubscriptionJsonConverter underTest;

    @Before
    public void setUp() throws Exception {
        underTest = new SmartSenseSubscriptionToSmartSenseSubscriptionJsonConverter();
    }

    @Test
    public void convertWithExampleDataSource() {
        SmartSenseSubscription source = mock(SmartSenseSubscription.class);

        Long id = Long.MAX_VALUE;
        String subscriptionId = "A-99900000-C-00000000";
        String owner = "Johnny Bravo";
        String account = "awesomeAccount";

        when(source.getId()).thenReturn(id);
        when(source.getSubscriptionId()).thenReturn(subscriptionId);
        when(source.getOwner()).thenReturn(owner);
        when(source.getAccount()).thenReturn(account);
        when(source.isPublicInAccount()).thenReturn(true);

        SmartSenseSubscriptionJson json = underTest.convert(source);

        assertNotNull("The returning SmartSenseSubscriptionJson should not be null.", json);
        assertEquals("The output ID from the json is not match for the expected.", id, json.getId());
        assertEquals("The output subscription ID from the json is not match for the expected.", subscriptionId, json.getSubscriptionId());
        assertEquals("The output owner from the json is not match for the expected.", owner, json.getOwner());
        assertEquals("The output account from the json is not match for the expected.", account, json.getAccount());
        assertEquals("The output public account value from the json is not match for the expected.", true, json.isPublicInAccount());
        assertEquals("The autoGenerated value from the json is not match for the expected.", true, json.isAutoGenerated());
    }

}
