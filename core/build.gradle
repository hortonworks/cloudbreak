import org.ajoberstar.grgit.Grgit

buildscript {
    repositories {
        mavenLocal()
        maven { url = "$repoUrl" }
        maven { url = "$springRepoUrl" }
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "com.smokejumperit.gradle.license:Gradle-License-Report:0.0.2"
        classpath "gradle.plugin.com.github.jk1:gradle-license-report:0.3.4"
    }
}

plugins {
    id "com.github.jk1.dependency-license-report" version "0.3.4"
    id 'net.ltgt.apt' version '0.14'
    id 'java'
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'info.solidsoft.pitest'
apply plugin: "jacoco"

bootRun {
  systemProperty "spring.profiles.active", System.properties["spring.profiles.active"]
  systemProperty "spring.config.location", System.properties["spring.config.location"]
  systemProperty 'spring.config.additional-location', System.properties['spring.config.additional-location']

  environment "AWS_ACCESS_KEY_ID", System.getenv('AWS_ACCESS_KEY_ID')
  environment "AWS_SECRET_ACCESS_KEY", System.getenv('AWS_SECRET_ACCESS_KEY')
  environment "CB_AWS_ACCOUNT_ID", System.getenv('CB_AWS_ACCOUNT_ID')
  //Probably will need to add more for AZURE, GOV_CLOUD, GCE, etc

  if (project.hasProperty("jvmArgs")) {
    jvmArgs += project.jvmArgs.split("\\s+").toList()
  }
}

springBoot {
  mainClassName = 'com.sequenceiq.cloudbreak.CloudbreakApplication'
}

bootJar {
    baseName = 'cloudbreak'
    archiveName = 'cloudbreak.jar'
    manifest {
      def grgit = Grgit.open(currentDir: project.projectDir)
      attributes "Implementation-Version": grgit.describe()
    }
}

uploadBootArchives {
  repositories {
    mavenDeployer {
      configuration = configurations.deployerJars
      repository(url: "$System.env.NEXUS_URL") {
        authentication(userName: "$System.env.NEXUS_USER", password: "$System.env.NEXUS_PASSWORD")
      }
    }
  }
}

configurations {
  compile {
    resolutionStrategy {
        exclude group: 'org.testng'
    }
  }
}

dependencyManagement {
  dependencies {
    dependencySet(group: 'org.springframework.boot', version: springBootVersion) {
      entry 'spring-boot-starter'
      entry ('spring-boot-starter-web') {
          exclude group: 'com.fasterxml.jackson.core', name: 'jackson-databind'
      }
      entry ('spring-boot-starter-actuator') {
          exclude group: 'com.fasterxml.jackson.core', name: 'jackson-databind'
      }
      entry 'spring-boot-starter-data-jpa'
      entry 'spring-boot-starter-websocket'
      entry 'spring-boot-starter-aop'
      entry 'spring-boot-starter-freemarker'
      entry 'spring-boot-starter-security'
      entry ('spring-boot-starter-jersey') {
          exclude group: 'com.fasterxml.jackson.core', name: 'jackson-databind'
      }
      entry 'spring-boot-starter-test'
      entry 'spring-boot-starter-freemarker'
    }

    dependencySet(group: 'io.projectreactor', version: eventBusVersion) {
      entry 'reactor-core'
      entry 'reactor-bus'
    }

    dependencySet(group: 'io.springfox', version: '2.9.2') {
      entry 'springfox-swagger2'
      entry 'springfox-core'
      entry 'springfox-swagger-ui'
    }

    dependencySet(group: 'org.bouncycastle',  version: bouncycastleVersion) {
      entry 'bcprov-jdk15on'
      entry 'bcpkix-jdk15on'
    }

    dependencySet(group: 'com.jayway.restassured',  version: '2.3.4') {
      entry 'rest-assured'
      entry 'json-path'
    }

    dependencySet(group: 'org.powermock', version: powermockVersion) {
      entry 'powermock-module-junit4'
      entry('powermock-api-mockito2') {
        exclude group: 'org.hamcrest', name: '*'
      }
    }

    dependency (group: 'com.google.oauth-client',           name: 'google-oauth-client-jetty',   version: '1.22.0') {
      exclude group: '*', name: 'servlet-api'
    }

    dependency group: 'com.fasterxml.jackson.core',         name: 'jackson-databind',            version: jacksonVersion
    dependency group: 'activation',                         name: 'activation',                  version: '1.0.2'
    dependency group: 'com.google.code.findbugs',           name: 'annotations',                 version: '3.0.1'
    dependency group: 'com.google.http-client',             name: 'google-http-client-jackson2', version: '1.22.0'
    dependency group: 'com.thoughtworks.xstream',           name: 'xstream',                     version: xStream
    dependency group: 'com.github.fommil',                  name: 'openssh',                     version: '1.0'

    dependency (group: 'io.swagger',                         name: 'swagger-jersey2-jaxrs',       version: swaggerVersion) {
      exclude 'org.yaml:snakeyaml'
    }
    dependency group: 'javax.mail',                         name: 'mail',                        version: '1.5.0-b01'
    dependency group: 'dnsjava',                            name: 'dnsjava',                     version: '2.1.7'

    dependency group: 'org.springframework.retry',          name: 'spring-retry',                version: '1.2.0.RELEASE'
    dependency group: 'org.springframework',                name: 'spring-context-support',      version: springFrameworkVersion

    dependency group: 'com.google.code.gson',               name: 'gson',                        version: '2.6.2'
    dependency group: 'org.freemarker',                     name: 'freemarker',                  version: freemarkerVersion
    dependency group: 'org.postgresql',                     name: 'postgresql',                  version: postgreSQLVersion
    dependency group: 'org.codehaus.jettison',              name: 'jettison',                    version: '1.3.5'
    dependency group: 'org.glassfish.jersey.media',         name: 'jersey-media-multipart',      version: jerseyCoreVersion
    dependency group: 'javax.xml.bind',                     name: 'jaxb-api',                    version: '2.3.0'
    dependency group: 'org.mybatis',                        name: 'mybatis-migrations',          version: '3.2.0'
    dependency group: 'org.mockito',                        name: 'mockito-core',                version: mockitoVersion
    dependency group: 'org.apache.commons',                 name: 'commons-collections4',        version: commonsCollections4Version
    dependency group: 'com.cloudera.cdp',                   name: 'cdp-sdk-java',                version: cdpSdkVersion
  }
}

dependencies {
  compile group: 'com.squareup.okhttp3',               name: 'okhttp',                     version: okhttpVersion
  compile group: 'com.google.code.gson',               name: 'gson'
  compile group: 'com.fasterxml.jackson.core',    name: 'jackson-databind'

  compile group: 'org.springframework.boot',           name: 'spring-boot-starter'
  compile group: 'org.springframework.boot',           name: 'spring-boot-starter-web'
  compile group: 'org.springframework.boot',           name: 'spring-boot-starter-actuator'
  compile group: 'org.springframework.boot',           name: 'spring-boot-starter-data-jpa'
  compile group: 'org.springframework.boot',           name: 'spring-boot-starter-websocket'
  compile group: 'org.springframework.boot',           name: 'spring-boot-starter-aop'
  compile group: 'org.springframework.boot',           name: 'spring-boot-starter-freemarker'
  compile group: 'org.springframework.boot',           name: 'spring-boot-starter-security'
  compile group: 'org.springframework.boot',           name: 'spring-boot-starter-jersey'
  compile group: 'org.springframework.boot',           name: 'spring-boot-starter-quartz'

  compile group: 'org.springframework.retry',          name: 'spring-retry'

  compile group: 'io.projectreactor',                  name: 'reactor-core'
  compile group: 'io.projectreactor',                  name: 'reactor-bus'

  compile group: 'org.apache.commons',                 name: 'commons-collections4'
  compile group: 'org.freemarker',                     name: 'freemarker'
  compile group: 'org.postgresql',                     name: 'postgresql'
  compile group: 'org.codehaus.jettison',              name: 'jettison'
  compile group: 'org.bouncycastle',                   name: 'bcprov-jdk15on'
  compile group: 'org.bouncycastle',                   name: 'bcpkix-jdk15on'
  compile group: 'org.glassfish.jersey.media',         name: 'jersey-media-multipart'
  compile group: 'org.mybatis',                        name: 'mybatis-migrations'

  compile group: 'com.google.oauth-client',            name: 'google-oauth-client-jetty'
  compile group: 'com.google.code.findbugs',           name: 'annotations'
  compile group: 'com.google.http-client',             name: 'google-http-client-jackson2'
  compile group: 'com.thoughtworks.xstream',           name: 'xstream'
  compile group: 'com.github.fommil',                  name: 'openssh'

  compile group: 'javax.mail',                         name: 'mail'
  compile group: 'javax.xml.bind',                     name: 'jaxb-api'
  compile group: 'dnsjava',                            name: 'dnsjava'

  compile group: 'io.springfox',                       name: 'springfox-swagger2'
  compile group: 'io.springfox',                       name: 'springfox-core'
  compile group: 'io.springfox',                       name: 'springfox-swagger-ui'

  compile group: 'io.opentracing.contrib',             name: 'opentracing-spring-jaeger-starter',       version: opentracingSpringJaegerStarterVersion
  compile group: 'io.opentracing.contrib',             name: 'opentracing-jaxrs2',                      version: opentracingJaxrs2Version
  compile group: 'io.opentracing.contrib',             name: 'opentracing-jdbc',                        version: opentracingJdbcVersion
  compile group: 'com.cloudera.cdp',                   name: 'cdp-sdk-java'

  implementation     ('io.swagger:swagger-jersey2-jaxrs') {
    exclude group: 'org.yaml'
  }

  implementation      group: 'com.dyngr',              name: 'polling',                                 version: '1.1.3'

  compile project(':core-model')
  compile project(':orchestrator-api')
  compile project(':cloud-reactor-api')
  compile project(':cloud-reactor')
  compile project(':structuredevent-model')
  compile project(':structuredevent-service-legacy')
  compile project(':template-manager-blueprint')
  compile project(':template-manager-recipe')
  compile project(':template-manager-cmtemplate')
  compile project(':template-manager-tag')
  compile project(':cluster-api')
  compile project(':flow')
  compile project(':common')
  compile project(':common-model')
  compile project(':workspace')
  compile project(':environment-api')
  compile project(':environment-common')
  compile project(':authorization-common')
  compile project(':freeipa-api')
  compile project(':redbeams-api')
  compile project(':datalake-api')
  compile project(':usage-collection')
  compile project(':cluster-dns-connector')
  compile project(':cluster-proxy')
  compile project(':status-checker')

  implementation project(":notification-sender")

  runtime project(':orchestrator-salt')
  runtime project(':orchestrator-yarn')
  runtime project(':cloud-reactor')
  runtime project(':cloud-openstack')
  runtime project(':cloud-gcp')
  runtime project(':cloud-aws')
  runtime project(':cloud-mock')
  runtime project(':cloud-azure')
  runtime project(':cloud-yarn')
  runtime project(':cluster-cm')
  runtime project(':auth-connector')
  compile(project(':audit-connector')) {
    exclude group: 'com.sequenceiq', module: 'structuredevent-service-cdp'
  }
  runtime group: 'activation',                    name: 'activation'

  testCompile project(path: ':core-model', configuration: 'tests')
  testCompile project(path: ':cloud-common', configuration: 'tests')
  testCompile project(path: ':common', configuration: 'tests')
  testCompile project(path: ':authorization-common', configuration: 'tests')

  testCompile group: 'org.powermock',            name: 'powermock-module-junit4'
  testCompile group: 'org.powermock',            name: 'powermock-api-mockito2'
  testCompile (group: 'org.mockito',              name: 'mockito-core') {
    exclude group: 'org.hamcrest'
  }
  testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
  testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-freemarker'
  testCompile group: 'com.jayway.restassured',   name: 'rest-assured'
  testCompile group: 'com.jayway.restassured',   name: 'json-path'
  testCompile group: 'com.h2database',           name: 'h2'
  testImplementation group: 'org.assertj',       name: 'assertj-core',        version: assertjVersion
  testImplementation group: "org.yaml",          name: "snakeyaml"
  testCompile (group: 'org.hamcrest', name: 'java-hamcrest', version: hamcrestVersion)

}

task execute(type: JavaExec) {
    if (project.hasProperty('mainClass')) {
        main = mainClass
        classpath = sourceSets.main.runtimeClasspath
    }
}

sourceSets {
    main {
        java.srcDirs += "${projectDir}/src/main/generated"
    }
}
