buildscript {
    repositories {
        maven { url 'http://repo.spring.io/libs-release' }
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "com.smokejumperit.gradle.license:Gradle-License-Report:0.0.2"
    }
}

apply plugin: 'jacoco'
apply plugin: 'sonar-runner'
apply plugin: 'license-report'
apply plugin: 'spring-boot'

mainClassName = 'com.sequenceiq.cloudbreak.CloudbreakApplication'

jar {
    baseName = 'cloudbreak'
}

dependencies {

    compile("com.sequenceiq:${ambariClientName}:${ambariClientVersion}") {
        exclude group: 'org.slf4j';
    }

    compile "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-websocket:${springBootVersion}"
    compile group: 'org.springframework.security.oauth', name: 'spring-security-oauth2',     version: '2.0.3.RELEASE'
    compile group: 'org.springframework.security',  name: 'spring-security-config',         version: '3.2.3.RELEASE'
    compile group: 'org.springframework.security',  name: 'spring-security-web',            version: '3.2.3.RELEASE'
    compile group: 'org.springframework',           name: 'spring-messaging',               version: '4.0.3.RELEASE'
    compile group: 'org.springframework',           name: 'spring-context-support',         version: '4.0.3.RELEASE'
    compile group: 'io.projectreactor',             name: 'reactor-core',                   version: eventBusVersion
    compile group: 'io.projectreactor',             name: 'reactor-bus',                    version: eventBusVersion
    compile group: 'net.sf.ehcache',                name: 'ehcache',                        version: '2.8.3'
    compile group: 'org.postgresql',                name: 'postgresql',                     version: '9.3-1101-jdbc41'
    compile group: 'org.hibernate',                 name: 'hibernate-validator',            version: '5.1.1.Final'
    compile group: 'org.apache.commons',            name: 'commons-lang3',                  version: '3.3.2'
    compile group: 'com.sequenceiq',                name: 'consul-api',                     version: '1.10'
    compile group: 'com.github.docker-java',        name: 'docker-java',                    version: '1.0.0'
    compile group: 'org.codehaus.jettison',         name: 'jettison',                       version: '1.3.5'
    compile group: 'commons-io',                    name: 'commons-io',                     version: '2.4'
    compile group: 'commons-net',                   name: 'commons-net',                    version: '3.3'
    compile group: 'com.thoughtworks.xstream',      name: 'xstream',                        version: '1.4.7'
    compile group: 'com.github.fommil',             name: 'openssh',                        version: '1.0'
    compile group: 'javax.mail',                    name: 'mail',                           version: '1.5.0-b01'
    compile group: 'org.freemarker',                name: 'freemarker',                     version: '2.3.20'
    compile group: 'com.google.apis',               name: 'google-api-services-compute',    version: 'v1-rev46-1.19.1'
    compile group: 'com.google.apis',               name: 'google-api-services-storage',    version: 'v1-rev6-1.19.0'
    compile group: 'com.google.apis',               name: 'google-api-services-dns',        version: 'v1beta1-rev9-1.19.0'
    compile group: 'org.pacesys',                   name: 'openstack4j',                    version: '2.0.0'
    compile group: 'org.bouncycastle',              name: 'bcprov-jdk15on',                 version: '1.47'
    compile group: 'org.bouncycastle',              name: 'bcpkix-jdk15on',                 version: '1.47'
    compile group: 'org.jasypt',                    name: 'jasypt',                         version: '1.9.2'
    compile group: 'com.google.guava',              name: 'guava',                          version: '16.0.1'
    compile group: 'com.wordnik',                   name: 'swagger-core',                   version: '1.5.2-M1'
    compile group: 'com.mangofactory',              name: 'swagger-springmvc',              version: '1.0.2'
    compile group: 'com.google.http-client',        name: 'google-http-client-jackson2',    version: '1.17.0-rc'
    compile (group: 'com.google.oauth-client',      name: 'google-oauth-client-jetty',      version: '1.17.0-rc')   { exclude module: 'servlet-api' }
    compile ("com.sequenceiq:azure-rest-client:${azureRestClientVersion}")                                          { exclude group: 'log4j' }
    compile (group: 'com.amazonaws',                name: 'aws-java-sdk',                   version: '1.9.35')      { exclude group: 'commons-logging' }
    compile group: 'com.jcraft',                    name: 'jsch',                           version: '0.1.52'
    compile group: 'com.hierynomus',                name: 'sshj',                           version: '0.11.0'


    compile project(':core-model')

    runtime project(':orchestrator-swarm')
    compile project(':orchestrator-api')

    runtime     group: 'activation',                name: 'activation',                     version: '1.0.2'

    testCompile group: 'org.springframework.boot',  name: 'spring-boot-starter-test',       version: '1.1.8.RELEASE'
    testCompile group: 'org.springframework.boot',  name: 'spring-boot-starter-freemarker', version: '1.1.8.RELEASE'
    testCompile group: 'com.jayway.restassured',    name: 'rest-assured',                   version: '2.3.4'
    testCompile group: 'com.jayway.restassured',    name: 'json-path',                      version: '2.3.4'
}

sonarRunner {
    sonarProperties {
        property "sonar.host.url", "$config.sonar_host_url"
        property "sonar.jdbc.url", "$config.sonar_jdbc_url"
        property "sonar.jdbc.driverClassName", "com.mysql.jdbc.Driver"
        property "sonar.jdbc.username", "$System.env.SONAR_USERNAME"
        property "sonar.jdbc.password", "$System.env.SONAR_PASSWORD"
        property "project.reporting.outputEncoding", "UTF-8"
        property "sonar.projectKey", "cloudbreak"
        property "sonar.projectName", "cloudbreak"
    }
}

jacoco {
    toolVersion = "0.7.1.201405082137"
    reportsDir = file("$buildDir/reports/jacoco")
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }
}

test {
    jacoco {
        append = false
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
        classDumpFile = file("$buildDir/jacoco/classpathdumps")
    }
}

task buildInfo(type: BuildInfoTask) {
    destination = file("$buildDir")
    applicationPropertiesPath = "$buildDir"
    basename = jar.baseName
    buildVersion =  projVersion

}

compileJava.dependsOn buildInfo

class BuildInfoTask extends DefaultTask {
    File destination = new File("build.info")
    String applicationPropertiesPath
    String basename
    String buildVersion

    @TaskAction
    def writeBuildInfo() {
        destination.mkdirs()
        File applicationDestination = new File(applicationPropertiesPath + "/resources/main")
        applicationDestination.mkdirs()
        new File(destination, "build.info").withWriter { out ->
            [
                    "ARTIFACT_BASENAME=" + basename,
                    "ARTIFACT_VERSION=" + buildVersion,
            ].each { out.println it }
        }
        new File(applicationDestination, "application.properties").withWriter { out ->
            [
                    "info.app.name=" + basename,
                    "info.app.version=" + buildVersion
            ].each { out.println it }
        }
    }
}