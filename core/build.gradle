import org.ajoberstar.grgit.Grgit

buildscript {
    repositories {
        maven { url = "$repoUrl" }
        maven { url = "$springRepoUrl" }
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "gradle.plugin.com.github.jk1:gradle-license-report:0.3.4"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:${sonarVersion}"
    }
}

plugins {
    id "com.github.jk1.dependency-license-report" version "0.3.4"
    id 'java'
    id 'maven-publish'
    id "org.sonarqube" version "${sonarVersion}"
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "jacoco"
apply plugin: org.sonarqube.gradle.SonarQubePlugin

sonarqube {
  properties {
    property "sonar.sourceEncoding", "UTF-8"
    property "sonar.projectName", "cb-core-service"
    property "sonar.projectKey", "cb-core-service"
    property "sonar.java.coveragePlugin", "plugin"
    property "sonar.sources", "src/main"
    property "sonar.tests", "src/test"
    property "sonar.java.binaries", "build/classes"
    property "sonar.java.libraries", "build/libs/*.jar"
    property "project.reporting.outputEncoding", "UTF-8"
    property "sonar.host.url", "$System.env.SONAR_URL"
    property "sonar.login", "$System.env.SONAR_PASSWORD"
    property "org.gradle.internal.http.socketTimeout", "600000"
    property "org.gradle.internal.http.connectionTimeout", "600000"
    property "sonar.coverage.exclusions", "**/proto/**,**/generated/**"
    property "sonar.exclusions", "**/proto/**,**/generated/**"
  }
}


bootRun {
  systemProperty "spring.profiles.active", System.properties["spring.profiles.active"]
  systemProperty "spring.config.location", System.properties["spring.config.location"]
  systemProperty 'spring.config.additional-location', System.properties['spring.config.additional-location']

  environment "AWS_ACCESS_KEY_ID", System.getenv('AWS_ACCESS_KEY_ID')
  environment "AWS_SECRET_ACCESS_KEY", System.getenv('AWS_SECRET_ACCESS_KEY')
  environment "CB_AWS_ACCOUNT_ID", System.getenv('CB_AWS_ACCOUNT_ID')
  environment "AWS_GOV_ACCESS_KEY_ID", System.getenv('AWS_GOV_ACCESS_KEY_ID')
  environment "AWS_GOV_SECRET_ACCESS_KEY", System.getenv('AWS_GOV_SECRET_ACCESS_KEY')
  environment "CB_AWS_GOV_ACCOUNT_ID", System.getenv('CB_AWS_GOV_ACCOUNT_ID')
  //Probably will need to add more for AZURE, GCE, etc

  if (project.hasProperty("jvmArgs")) {
    jvmArgs += project.jvmArgs.split("\\s+").toList()
  }
  main = 'com.sequenceiq.cloudbreak.CloudbreakApplication'
}

bootJar {
    baseName = 'cloudbreak'
    archiveName = 'cloudbreak.jar'
    manifest {
      def grgit = Grgit.open(currentDir: project.projectDir)
      attributes "Implementation-Version": grgit.describe()
    }
}

publishing {
    publications {
        bootJava(MavenPublication) {
            artifact bootJar
            artifactId "cloudbreak"
        }
    }
    repositories {
        maven {
            url = "$System.env.NEXUS_URL"
            allowInsecureProtocol = true
            credentials {
                username = "$System.env.NEXUS_USER"
                password = "$System.env.NEXUS_PASSWORD"
            }
        }
    }
}

configurations {
  implementation {
    resolutionStrategy {
        exclude group: 'org.testng'
    }
  }
}

dependencyManagement {
  dependencies {
    dependencySet(group: 'org.springframework.boot', version: springBootVersion) {
      entry 'spring-boot-starter'
      entry ('spring-boot-starter-web') {
          exclude group: 'com.fasterxml.jackson.core', name: 'jackson-databind'
      }
      entry ('spring-boot-starter-actuator') {
          exclude group: 'com.fasterxml.jackson.core', name: 'jackson-databind'
      }
      entry 'spring-boot-starter-data-jpa'
      entry 'spring-boot-starter-websocket'
      entry 'spring-boot-starter-aop'
      entry 'spring-boot-starter-freemarker'
      entry 'spring-boot-starter-security'
      entry ('spring-boot-starter-jersey') {
          exclude group: 'com.fasterxml.jackson.core', name: 'jackson-databind'
      }
      entry 'spring-boot-starter-test'
      entry 'spring-boot-starter-freemarker'
    }

    dependencySet(group: 'io.projectreactor', version: eventBusVersion) {
      entry 'reactor-core'
      entry 'reactor-bus'
    }

    dependencySet(group: 'io.springfox', version: swaggerSpringFoxVersion) {
      entry 'springfox-boot-starter'
    }

    dependencySet(group: 'org.bouncycastle',  version: bouncycastleVersion) {
      entry 'bcprov-jdk15on'
      entry 'bcpkix-jdk15on'
    }

    dependencySet(group: 'com.jayway.restassured',  version: '2.3.4') {
      entry 'rest-assured'
      entry 'json-path'
    }

    dependencySet(group: 'org.powermock', version: powermockVersion) {
      entry 'powermock-module-junit4'
      entry('powermock-api-mockito2') {
        exclude group: 'org.hamcrest', name: '*'
      }
    }

    dependency group: 'com.fasterxml.jackson.core',         name: 'jackson-databind',            version: jacksonVersion
    dependency group: 'activation',                         name: 'activation',                  version: '1.0.2'
    dependency group: 'net.jcip',                           name: 'jcip-annotations',            version: '1.0'
    dependency group: 'com.google.http-client',             name: 'google-http-client-jackson2', version: '1.22.0'
    dependency group: 'com.thoughtworks.xstream',           name: 'xstream',                     version: xStream
    dependency group: 'com.github.fommil',                  name: 'openssh',                     version: '1.0'

    dependency (group: 'io.swagger',                        name: 'swagger-jersey2-jaxrs',       version: swaggerVersion) {
      exclude 'org.yaml:snakeyaml'
    }
    dependency group: 'javax.mail',                         name: 'mail',                        version: '1.5.0-b01'
    dependency group: 'dnsjava',                            name: 'dnsjava',                     version: '2.1.7'

    dependency group: 'org.springframework.retry',          name: 'spring-retry',                version: '1.2.0.RELEASE'
    dependency group: 'org.springframework',                name: 'spring-context-support',      version: springFrameworkVersion

    dependency group: 'com.google.code.gson',               name: 'gson',                        version: gsonVersion
    dependency group: 'org.freemarker',                     name: 'freemarker',                  version: freemarkerVersion
    dependency group: 'org.postgresql',                     name: 'postgresql',                  version: postgreSQLVersion
    dependency group: 'org.codehaus.jettison',              name: 'jettison',                    version: '1.3.5'
    dependency group: 'org.glassfish.jersey.media',         name: 'jersey-media-multipart',      version: jerseyCoreVersion
    dependency group: 'javax.xml.bind',                     name: 'jaxb-api',                    version: '2.3.0'
    dependency group: 'org.mybatis',                        name: 'mybatis-migrations',          version: mybatisMigrationVersion
    dependency group: 'org.mockito',                        name: 'mockito-core',                version: mockitoVersion
    dependency group: 'org.apache.commons',                 name: 'commons-collections4',        version: commonsCollections4Version
    dependency group: 'org.apache.commons',                 name: 'commons-lang3',               version: apacheCommonsLangVersion
  }
}

dependencies {
  implementation group: 'com.squareup.okhttp3',               name: 'okhttp',                     version: okhttpVersion
  implementation group: 'com.google.code.gson',               name: 'gson'
  implementation group: 'com.fasterxml.jackson.core',         name: 'jackson-databind'

  implementation group: 'org.springframework.boot',           name: 'spring-boot-starter'
  implementation group: 'org.springframework.boot',           name: 'spring-boot-starter-web'
  implementation group: 'org.springframework.boot',           name: 'spring-boot-starter-actuator'
  implementation group: 'org.springframework.boot',           name: 'spring-boot-starter-data-jpa'
  implementation group: 'org.springframework.boot',           name: 'spring-boot-starter-websocket'
  implementation group: 'org.springframework.boot',           name: 'spring-boot-starter-aop'
  implementation group: 'org.springframework.boot',           name: 'spring-boot-starter-freemarker'
  implementation group: 'org.springframework.boot',           name: 'spring-boot-starter-security'
  implementation group: 'org.springframework.boot',           name: 'spring-boot-starter-jersey'
  implementation group: 'org.springframework.boot',           name: 'spring-boot-starter-quartz'

  implementation group: 'org.springframework.data',           name: 'spring-data-envers',         version: springDataJpaFrameworkVersion

  implementation group: 'org.springframework.kafka',          name: 'spring-kafka',               version: '2.6.4'

  implementation group: 'org.springframework.retry',          name: 'spring-retry'

  implementation group: 'io.projectreactor',                  name: 'reactor-core'
  implementation group: 'io.projectreactor',                  name: 'reactor-bus'

  implementation group: 'org.apache.commons',                 name: 'commons-collections4'
  implementation group: 'org.apache.commons',                 name: 'commons-lang3'
  implementation group: 'org.freemarker',                     name: 'freemarker'
  implementation group: 'org.postgresql',                     name: 'postgresql'
  implementation group: 'org.codehaus.jettison',              name: 'jettison'
  implementation group: 'org.bouncycastle',                   name: 'bcprov-jdk15on'
  implementation group: 'org.bouncycastle',                   name: 'bcpkix-jdk15on'
  implementation group: 'org.glassfish.jersey.media',         name: 'jersey-media-multipart'
  implementation group: 'org.mybatis',                        name: 'mybatis-migrations'

  implementation group: 'net.jcip',                           name: 'jcip-annotations'
  implementation group: 'com.google.http-client',             name: 'google-http-client-jackson2'
  implementation group: 'com.thoughtworks.xstream',           name: 'xstream'
  implementation group: 'com.github.fommil',                  name: 'openssh'

  implementation group: 'javax.mail',                         name: 'mail'
  implementation group: 'javax.xml.bind',                     name: 'jaxb-api'
  implementation group: 'dnsjava',                            name: 'dnsjava'

  implementation group: 'io.springfox',                       name: 'springfox-boot-starter'

  implementation     ('io.swagger:swagger-jersey2-jaxrs') {
    exclude group: 'org.yaml'
  }

  implementation group: 'com.dyngr',                          name: 'polling',                          version: '1.1.3'
  implementation group: 'com.cedarsoftware',                  name: 'json-io',                          version: '4.9.12'
  implementation group: 'com.fasterxml.jackson.core',         name: 'jackson-databind',                 version: jacksonVersion
  implementation group: 'com.google.http-client',             name: 'google-http-client-jackson2',      version: '1.40.1'
  implementation group: 'com.google.auth',                    name: 'google-auth-library-oauth2-http',  version: '1.2.2'
  implementation group: 'org.apache.commons',                 name: 'commons-lang3',                    version: '3.12.0'
  implementation group: 'com.google.guava',                   name: 'guava',                            version: guavaVersion

  implementation(group: 'com.nimbusds', name: 'oauth2-oidc-sdk') {
    version {
      strictly oauth2OidcSdkVersion
    }
    because 'java.lang.NoClassDefFoundError: com/nimbusds/oauth2/sdk/http/CommonContentTypes caused by multiple oauth2-oidc-sdk versions on classpath.'
  }
  implementation(group: 'net.minidev', name: 'json-smart') {
    version {
      strictly jsonSmartVersion
    }
    because 'CVE-2021-31684'
  }
  implementation(group: 'net.minidev', name: 'accessors-smart') {
    version {
      strictly accessorSmartVersion
    }
    because 'because there is no jar for 2.4.3 in maven central repo...'
  }

  implementation project(':core-api')
  implementation project(':core-model')
  implementation project(':orchestrator-api')
  implementation project(':cloud-reactor-api')
  implementation project(':cloud-reactor')
  implementation project(':structuredevent-model')
  implementation project(':structuredevent-service-legacy')
  implementation project(':template-manager-blueprint')
  implementation project(':template-manager-recipe')
  implementation project(':template-manager-cmtemplate')
  implementation project(':template-manager-tag')
  implementation project(':cluster-api')
  implementation project(':databus-connector')
  implementation project(':flow')
  implementation project(':common')
  implementation project(':common-model')
  implementation project(':workspace')
  implementation project(':environment-api')
  implementation project(':environment-common')
  implementation project(':authorization-common')
  implementation project(':freeipa-api')
  implementation project(':redbeams-api')
  implementation project(':datalake-api')
  implementation project(':usage-collection')
  implementation project(':cluster-dns-connector')
  implementation project(':cluster-proxy')
  implementation project(':status-checker')
  implementation project(':node-status-monitor-client')
  implementation project(':telemetry-common')
  implementation project(":notification-sender")
  implementation project(":custom-configurations-api")
  implementation project(":custom-configurations")
  implementation project(':cloud-aws-common')
  implementation project(':cloud-aws-cloudformation')
  implementation project(':cloud-aws-native')
  implementation project(':cloud-aws-gov')
  implementation project(':cloud-azure')
  implementation project(':cloud-gcp')
  implementation project(':cloud-template')
  implementation project(':audit-connector')
  implementation project(':auth-connector')
  implementation project(':secret-engine')
  implementation project(':template-manager-core')

  runtimeOnly project(':orchestrator-salt')
  runtimeOnly project(':orchestrator-yarn')
  runtimeOnly project(':cloud-reactor')
  runtimeOnly project(':cloud-gcp')
  runtimeOnly project(':cloud-mock')
  runtimeOnly project(':cloud-yarn')
  runtimeOnly project(':cluster-cm')
  runtimeOnly project(':audit-connector')
  runtimeOnly group: 'activation',                   name: 'activation'

  testImplementation project(path: ':core-model', configuration: 'tests')
  testImplementation project(path: ':cloud-common', configuration: 'tests')
  testImplementation project(path: ':common', configuration: 'tests')
  testImplementation project(path: ':authorization-common', configuration: 'tests')
  testImplementation project(path: ':flow', configuration: 'tests')
  testImplementation project(path: ':cloud-reactor', configuration: 'tests')

  testImplementation group: 'org.powermock',            name: 'powermock-module-junit4'
  testImplementation group: 'org.powermock',            name: 'powermock-api-mockito2'
  testImplementation (group: 'org.mockito',             name: 'mockito-core') {
    exclude group: 'org.hamcrest'
  }
  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-freemarker'
  testImplementation group: 'com.jayway.restassured',   name: 'rest-assured'
  testImplementation group: 'com.jayway.restassured',   name: 'json-path'
  testImplementation group: 'com.h2database',           name: 'h2'
  testImplementation group: 'org.awaitility',           name: 'awaitility',          version: awaitilityVersion
  testImplementation group: 'org.testcontainers',       name: 'postgresql',          version: testContainersVersion
  testImplementation group: 'org.testcontainers',       name: 'junit-jupiter',       version: testContainersVersion
  testImplementation group: 'org.assertj',       name: 'assertj-core',        version: assertjVersion
  testImplementation group: "org.yaml",          name: "snakeyaml"
  testImplementation group: 'org.hamcrest',      name: 'hamcrest',            version: hamcrestVersion
  testImplementation group: 'com.fasterxml.jackson.core',name: 'jackson-databind', version: jacksonVersion
  testImplementation group: "com.openpojo",                  name: "openpojo",                       version: openPojoVersion
}

task execute(type: JavaExec) {
    if (project.hasProperty('mainClass')) {
        main = mainClass
        classpath = sourceSets.main.runtimeClasspath
    }
}

sourceSets {
    main {
        java.srcDirs += "${projectDir}/src/main/generated"
    }
}
