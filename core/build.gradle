buildscript {
  repositories {
    maven { url 'http://repo.spring.io/libs-release' }
    mavenCentral()
    jcenter()
    maven { url "http://maven.sequenceiq.com/releases" }
  }
  dependencies {
    classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    classpath "com.smokejumperit.gradle.license:Gradle-License-Report:0.0.2"
    classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.0.1"
    classpath "gradle.plugin.com.palantir:jacoco-coverage:0.4.0"
    classpath "gradle.plugin.com.github.jk1:gradle-license-report:0.3.4"
  }
}

plugins {
  id "com.palantir.jacoco-full-report" version "0.4.0"
  id "org.sonarqube" version "2.0.1"
  id "com.github.jk1.dependency-license-report" version "0.3.4"
}

apply plugin: 'org.springframework.boot'

bootRun {
  systemProperty 'spring.profiles.active', System.properties['spring.profiles.active']
  systemProperty 'spring.config.location', System.properties['spring.config.location']
  jvmArgs = ['-XX:MaxPermSize=1024m']
}

jar {
  baseName = 'cloudbreak'
}

dependencies {

    compile("com.sequenceiq:${ambariClientName}:${ambariClientVersion}") {
        exclude group: 'org.slf4j';
    }

    compile group: 'org.springframework.retry',     name: 'spring-retry',                   version: '1.2.0.RELEASE'
    compile group: 'org.springframework.boot',      name: 'spring-boot-starter',            version: springBootVersion
    compile group: 'org.springframework.boot',      name: 'spring-boot-starter-web',        version: springBootVersion
    compile group: 'org.springframework.boot',      name: 'spring-boot-starter-actuator',   version: springBootVersion
    compile group: 'org.springframework.boot',      name: 'spring-boot-starter-data-jpa',   version: springBootVersion
    compile group: 'org.springframework.boot',      name: 'spring-boot-starter-websocket',  version: springBootVersion
    compile group: 'org.springframework.boot',      name: 'spring-boot-starter-aop',        version: springBootVersion
    compile group: 'org.springframework.boot',      name: 'spring-boot-starter-freemarker', version: springBootVersion
    compile group: 'org.springframework.boot',      name: 'spring-boot-starter-security',   version: springBootVersion
    compile group: 'org.springframework.boot',      name: 'spring-boot-starter-jersey',     version: springBootVersion
    compile (group: 'org.springframework.statemachine', name: 'spring-statemachine-core', version: '1.0.1.RELEASE') { exclude group: 'org.springframework' }
    compile group: 'org.springframework.security.oauth', name: 'spring-security-oauth2',    version: springOauthVersion
    compile group: 'io.projectreactor',             name: 'reactor-core',                   version: eventBusVersion
    compile group: 'io.projectreactor',             name: 'reactor-bus',                    version: eventBusVersion
    compile group: 'org.hibernate',                 name: 'hibernate-validator',            version: hibernateValidatorVersion
    compile group: 'org.hibernate',                 name: 'hibernate-core',                 version: hibernateCoreVersion
    compile group: 'org.apache.commons',            name: 'commons-lang3',                  version: apacheCommonsLangVersion
    compile group: 'org.freemarker',                name: 'freemarker',                     version: freemarkerVersion
    compile group: 'org.postgresql',                name: 'postgresql',                     version: '9.4.1212'
    compile group: 'org.codehaus.jettison',         name: 'jettison',                       version: '1.3.5'
    compile group: 'com.thoughtworks.xstream',      name: 'xstream',                        version: '1.4.7'
    compile group: 'com.github.fommil',             name: 'openssh',                        version: '1.0'
    compile group: 'javax.mail',                    name: 'mail',                           version: '1.5.0-b01'
    compile group: 'org.bouncycastle',              name: 'bcprov-jdk15on',                 version: bouncycastleVersion
    compile group: 'org.bouncycastle',              name: 'bcpkix-jdk15on',                 version: bouncycastleVersion
    compile group: 'org.glassfish.jersey.media',    name: 'jersey-media-multipart',         version: jerseyCoreVersion

    compile group: 'io.springfox',                  name: 'springfox-swagger2',             version: '2.5.0'
    compile group: 'io.springfox',                  name: 'springfox-core',                 version: '2.5.0'
    compile group: 'io.springfox',                  name: 'springfox-swagger-ui',           version: '2.5.0'

    compile group: 'io.swagger',                    name: 'swagger-jersey2-jaxrs',          version: swaggerVersion
    compile group: 'com.google.http-client',        name: 'google-http-client-jackson2',    version: '1.22.0'
    compile (group: 'com.google.oauth-client',      name: 'google-oauth-client-jetty',      version: '1.22.0')   { exclude module: 'servlet-api' }
    compile group: 'com.jcraft',                    name: 'jsch',                           version: jschVersion
    compile group: 'com.hierynomus',                name: 'sshj',                           version: '0.15.0'
    compile group: 'dnsjava',                       name: 'dnsjava',                        version: '2.1.7'
    compile group: 'com.icegreen',                  name: 'greenmail',                      version: '1.4.1'
    compile group: 'org.mybatis',                   name: 'mybatis-migrations',             version: '3.2.0'
    compile group: 'com.cedarsoftware',             name: 'json-io',                        version: '4.9.12'
    compile group: 'com.github.spullara.mustache.java',name: 'compiler',                        version: '0.9.2'

    compile project(':core-model')
    compile project(':orchestrator-api')
    compile project(':cloud-reactor-api')
    compile project(':cloud-reactor')

    runtime project(':orchestrator-swarm')
    runtime project(':orchestrator-marathon')
    runtime project(':orchestrator-salt')
    runtime project(':orchestrator-yarn')
    runtime project(':cloud-reactor')
    runtime project(':cloud-openstack')
    runtime project(':cloud-gcp')
    runtime project(':cloud-aws')
    runtime project(':cloud-byos')
    runtime project(':cloud-mock')
    runtime project(':cloud-azure')


    runtime     group: 'activation',                name: 'activation',                     version: '1.0.2'

    testCompile project(path: ':core-model', configuration: 'tests')
    testCompile group: 'org.springframework.boot', name:'spring-boot-starter-test',        version:springBootVersion
    testCompile group: 'org.springframework.boot', name:'spring-boot-starter-freemarker',  version:springBootVersion
    testCompile group: 'com.jayway.restassured',   name: 'rest-assured',                   version: '2.3.4'
    testCompile group: 'com.jayway.restassured',   name: 'json-path',                      version: '2.3.4'

}

sonarqube {
  properties {
    property "sonar.host.url", "$config.sonar_host_url"
    property "sonar.jdbc.driverClassName", "org.postgresql.Driver"
    property "sonar.login", "$config.sonar_host_user"
    property "sonar.password", "$config.sonar_host_password"
    property "sonar.sources", "src/main"
    property "sonar.tests", "src/test"
    property "sonar.java.binaries", "build/classes"
    property "sonar.java.libraries", "build/libs/*.jar"
    property "project.reporting.outputEncoding", "UTF-8"
    property "sonar.projectKey", "cloudbreak"
    property "sonar.projectName", "cloudbreak"
  }
}

jacoco {
  toolVersion = "0.7.1.201405082137"
  reportsDir = file("$buildDir/reports/jacoco")
}

jacocoTestReport {
  reports {
    xml.enabled false
    csv.enabled false
    html.destination "${buildDir}/jacocoHtml"
  }
}

test {
  jacoco {
    append = false
    destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
    classDumpFile = file("$buildDir/jacoco/classpathdumps")
  }
}

task buildInfo(type: BuildInfoTask) {
  destination = file("$buildDir")
  applicationPropertiesPath = "$buildDir"
  basename = jar.baseName
  buildVersion = version
}

springBoot {
  mainClass = 'com.sequenceiq.cloudbreak.CloudbreakApplication'
}

task execute(type: JavaExec) {
  if (project.hasProperty('mainClass')) {
    main = mainClass
    classpath = sourceSets.main.runtimeClasspath
  }
}

compileJava.dependsOn buildInfo

class BuildInfoTask extends DefaultTask {
  File destination = new File("build.info")
  String applicationPropertiesPath
  String basename
  String buildVersion

  @TaskAction
  def writeBuildInfo() {
    destination.mkdirs()
    File applicationDestination = new File(applicationPropertiesPath + "/resources/main")
    applicationDestination.mkdirs()
    new File(destination, "build.info").withWriter { out ->
      [
              "ARTIFACT_BASENAME=" + basename,
              "ARTIFACT_VERSION=" + buildVersion,
      ].each { out.println it }
    }
    new File(applicationDestination, "application.properties").withWriter { out ->
      [
              "info.app.name=" + basename,
              "info.app.version=" + buildVersion
      ].each { out.println it }
    }
  }
}