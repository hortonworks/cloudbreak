/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.16).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.sequenceiq.mock.swagger.v31.api;

import com.sequenceiq.mock.swagger.model.ApiCommand;
import com.sequenceiq.mock.swagger.model.ApiReplicationCommandList;
import com.sequenceiq.mock.swagger.model.ApiReplicationDiagnosticsCollectionArgs;
import com.sequenceiq.mock.swagger.model.ApiReplicationSchedule;
import com.sequenceiq.mock.swagger.model.ApiReplicationScheduleList;
import com.sequenceiq.mock.swagger.model.ApiReplicationState;
import java.math.BigDecimal;
import com.fasterxml.jackson.databind.ObjectMapper;
import io.swagger.annotations.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;
import javax.validation.constraints.*;
import java.io.IOException;
import java.util.List;
import java.util.Optional;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-10-26T08:01:08.932+01:00")

@Api(value = "ReplicationsResource", description = "the ReplicationsResource API")
@RequestMapping(value = "/api/v31")
public interface ReplicationsResourceApi {

    Logger log = LoggerFactory.getLogger(ReplicationsResourceApi.class);

    default Optional<ObjectMapper> getObjectMapper() {
        return Optional.empty();
    }

    default Optional<HttpServletRequest> getRequest() {
        return Optional.empty();
    }

    default Optional<String> getAcceptHeader() {
        return getRequest().map(r -> r.getHeader("Accept"));
    }

    @ApiOperation(value = "Collect diagnostic data for a schedule, optionally for a subset of commands on that schedule, matched by schedule ID.", nickname = "collectDiagnosticData", notes = "Collect diagnostic data for a schedule, optionally for a subset of commands on that schedule, matched by schedule ID.  The returned command's resultDataUrl property, upon the commands completion, will refer to the generated diagnostic data. Available since API v11.", response = ApiCommand.class, authorizations = {
        @Authorization(value = "basic")
    }, tags={ "ReplicationsResource", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Success", response = ApiCommand.class) })
    @RequestMapping(value = "/clusters/{clusterName}/services/{serviceName}/replications/{scheduleId}/collectDiagnosticData",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<ApiCommand> collectDiagnosticData(@ApiParam(value = "",required=true) @PathVariable("clusterName") String clusterName,@ApiParam(value = "Schedule ID",required=true) @PathVariable("scheduleId") BigDecimal scheduleId,@ApiParam(value = "The service name.",required=true) @PathVariable("serviceName") String serviceName,@ApiParam(value = "view to materialize", allowableValues = "EXPORT, EXPORT_REDACTED, FULL, FULL_WITH_HEALTH_CHECK_EXPLANATION, SUMMARY", defaultValue = "summary") @Valid @RequestParam(value = "view", required = false, defaultValue="summary") String view,@ApiParam(value = "Replication collection arguments"  )  @Valid @RequestBody ApiReplicationDiagnosticsCollectionArgs body) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"id\" : 12345,  \"name\" : \"...\",  \"startTime\" : \"...\",  \"endTime\" : \"...\",  \"active\" : true,  \"success\" : true,  \"resultMessage\" : \"...\",  \"resultDataUrl\" : \"...\",  \"clusterRef\" : {    \"clusterName\" : \"...\",    \"displayName\" : \"...\"  },  \"serviceRef\" : {    \"peerName\" : \"...\",    \"clusterName\" : \"...\",    \"serviceName\" : \"...\",    \"serviceDisplayName\" : \"...\",    \"serviceType\" : \"...\"  },  \"roleRef\" : {    \"clusterName\" : \"...\",    \"serviceName\" : \"...\",    \"roleName\" : \"...\"  },  \"hostRef\" : {    \"hostId\" : \"...\",    \"hostname\" : \"...\"  },  \"parent\" : {    \"id\" : 12345,    \"name\" : \"...\",    \"startTime\" : \"...\",    \"endTime\" : \"...\",    \"active\" : true,    \"success\" : true,    \"resultMessage\" : \"...\",    \"resultDataUrl\" : \"...\",    \"clusterRef\" : {      \"clusterName\" : \"...\",      \"displayName\" : \"...\"    },    \"serviceRef\" : {      \"peerName\" : \"...\",      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"serviceDisplayName\" : \"...\",      \"serviceType\" : \"...\"    },    \"roleRef\" : {      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"roleName\" : \"...\"    },    \"hostRef\" : {      \"hostId\" : \"...\",      \"hostname\" : \"...\"    },    \"parent\" : { },    \"children\" : {      \"items\" : [ { }, { } ]    },    \"canRetry\" : true  },  \"children\" : {    \"items\" : [ {      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    }, {      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    } ]  },  \"canRetry\" : true}", ApiCommand.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default ReplicationsResourceApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Creates one or more replication schedules.", nickname = "createSchedules", notes = "Creates one or more replication schedules. <p> Available since API v3. Only available with Cloudera Manager Enterprise Edition.", response = ApiReplicationScheduleList.class, authorizations = {
        @Authorization(value = "basic")
    }, tags={ "ReplicationsResource", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Success", response = ApiReplicationScheduleList.class) })
    @RequestMapping(value = "/clusters/{clusterName}/services/{serviceName}/replications",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<ApiReplicationScheduleList> createSchedules(@ApiParam(value = "",required=true) @PathVariable("clusterName") String clusterName,@ApiParam(value = "The service name.",required=true) @PathVariable("serviceName") String serviceName,@ApiParam(value = "List of the replication schedules to create."  )  @Valid @RequestBody ApiReplicationScheduleList body) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"items\" : [ {    \"hdfsArguments\" : {      \"sourceService\" : { },      \"sourcePath\" : \"...\",      \"destinationPath\" : \"...\",      \"mapreduceServiceName\" : \"...\",      \"schedulerPoolName\" : \"...\",      \"userName\" : \"...\",      \"sourceUser\" : \"...\",      \"numMaps\" : 12345,      \"dryRun\" : true,      \"bandwidthPerMap\" : 12345,      \"abortOnError\" : true,      \"removeMissingFiles\" : true,      \"preserveReplicationCount\" : true,      \"preserveBlockSize\" : true,      \"preservePermissions\" : true,      \"logPath\" : \"...\",      \"skipChecksumChecks\" : true,      \"skipListingChecksumChecks\" : true,      \"skipTrash\" : true,      \"replicationStrategy\" : \"DYNAMIC\",      \"preserveXAttrs\" : true,      \"exclusionFilters\" : [ \"...\", \"...\" ],      \"raiseSnapshotDiffFailures\" : true,      \"destinationCloudAccount\" : \"...\"    },    \"hiveArguments\" : {      \"sourceService\" : { },      \"tableFilters\" : [ { }, { } ],      \"exportDir\" : \"...\",      \"force\" : true,      \"replicateData\" : true,      \"hdfsArguments\" : { },      \"replicateImpalaMetadata\" : true,      \"runInvalidateMetadata\" : true,      \"dryRun\" : true,      \"numThreads\" : 12345,      \"sentryMigration\" : true,      \"skipUrlPermissions\" : true    },    \"hdfsCloudArguments\" : {      \"sourceAccount\" : \"...\",      \"destinationAccount\" : \"...\",      \"sourceService\" : { },      \"sourcePath\" : \"...\",      \"destinationPath\" : \"...\",      \"mapreduceServiceName\" : \"...\",      \"schedulerPoolName\" : \"...\",      \"userName\" : \"...\",      \"sourceUser\" : \"...\",      \"numMaps\" : 12345,      \"dryRun\" : true,      \"bandwidthPerMap\" : 12345,      \"abortOnError\" : true,      \"removeMissingFiles\" : true,      \"preserveReplicationCount\" : true,      \"preserveBlockSize\" : true,      \"preservePermissions\" : true,      \"logPath\" : \"...\",      \"skipChecksumChecks\" : true,      \"skipListingChecksumChecks\" : true,      \"skipTrash\" : true,      \"replicationStrategy\" : \"STATIC\",      \"preserveXAttrs\" : true,      \"exclusionFilters\" : [ \"...\", \"...\" ],      \"raiseSnapshotDiffFailures\" : true,      \"destinationCloudAccount\" : \"...\"    },    \"history\" : [ {      \"hdfsResult\" : { },      \"hiveResult\" : { },      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    }, {      \"hdfsResult\" : { },      \"hiveResult\" : { },      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    } ],    \"active\" : true,    \"hiveCloudArguments\" : {      \"sourceAccount\" : \"...\",      \"destinationAccount\" : \"...\",      \"cloudRootPath\" : \"...\",      \"replicationOption\" : \"KEEP_DATA_IN_CLOUD\",      \"sourceService\" : { },      \"tableFilters\" : [ { }, { } ],      \"exportDir\" : \"...\",      \"force\" : true,      \"replicateData\" : true,      \"hdfsArguments\" : { },      \"replicateImpalaMetadata\" : true,      \"runInvalidateMetadata\" : true,      \"dryRun\" : true,      \"numThreads\" : 12345,      \"sentryMigration\" : true,      \"skipUrlPermissions\" : true    },    \"id\" : 12345,    \"displayName\" : \"...\",    \"description\" : \"...\",    \"startTime\" : \"...\",    \"endTime\" : \"...\",    \"interval\" : 12345,    \"intervalUnit\" : \"YEAR\",    \"nextRun\" : \"...\",    \"paused\" : true,    \"alertOnStart\" : true,    \"alertOnSuccess\" : true,    \"alertOnFail\" : true,    \"alertOnAbort\" : true  }, {    \"hdfsArguments\" : {      \"sourceService\" : { },      \"sourcePath\" : \"...\",      \"destinationPath\" : \"...\",      \"mapreduceServiceName\" : \"...\",      \"schedulerPoolName\" : \"...\",      \"userName\" : \"...\",      \"sourceUser\" : \"...\",      \"numMaps\" : 12345,      \"dryRun\" : true,      \"bandwidthPerMap\" : 12345,      \"abortOnError\" : true,      \"removeMissingFiles\" : true,      \"preserveReplicationCount\" : true,      \"preserveBlockSize\" : true,      \"preservePermissions\" : true,      \"logPath\" : \"...\",      \"skipChecksumChecks\" : true,      \"skipListingChecksumChecks\" : true,      \"skipTrash\" : true,      \"replicationStrategy\" : \"STATIC\",      \"preserveXAttrs\" : true,      \"exclusionFilters\" : [ \"...\", \"...\" ],      \"raiseSnapshotDiffFailures\" : true,      \"destinationCloudAccount\" : \"...\"    },    \"hiveArguments\" : {      \"sourceService\" : { },      \"tableFilters\" : [ { }, { } ],      \"exportDir\" : \"...\",      \"force\" : true,      \"replicateData\" : true,      \"hdfsArguments\" : { },      \"replicateImpalaMetadata\" : true,      \"runInvalidateMetadata\" : true,      \"dryRun\" : true,      \"numThreads\" : 12345,      \"sentryMigration\" : true,      \"skipUrlPermissions\" : true    },    \"hdfsCloudArguments\" : {      \"sourceAccount\" : \"...\",      \"destinationAccount\" : \"...\",      \"sourceService\" : { },      \"sourcePath\" : \"...\",      \"destinationPath\" : \"...\",      \"mapreduceServiceName\" : \"...\",      \"schedulerPoolName\" : \"...\",      \"userName\" : \"...\",      \"sourceUser\" : \"...\",      \"numMaps\" : 12345,      \"dryRun\" : true,      \"bandwidthPerMap\" : 12345,      \"abortOnError\" : true,      \"removeMissingFiles\" : true,      \"preserveReplicationCount\" : true,      \"preserveBlockSize\" : true,      \"preservePermissions\" : true,      \"logPath\" : \"...\",      \"skipChecksumChecks\" : true,      \"skipListingChecksumChecks\" : true,      \"skipTrash\" : true,      \"replicationStrategy\" : \"DYNAMIC\",      \"preserveXAttrs\" : true,      \"exclusionFilters\" : [ \"...\", \"...\" ],      \"raiseSnapshotDiffFailures\" : true,      \"destinationCloudAccount\" : \"...\"    },    \"history\" : [ {      \"hdfsResult\" : { },      \"hiveResult\" : { },      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    }, {      \"hdfsResult\" : { },      \"hiveResult\" : { },      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    } ],    \"active\" : true,    \"hiveCloudArguments\" : {      \"sourceAccount\" : \"...\",      \"destinationAccount\" : \"...\",      \"cloudRootPath\" : \"...\",      \"replicationOption\" : \"METADATA_ONLY\",      \"sourceService\" : { },      \"tableFilters\" : [ { }, { } ],      \"exportDir\" : \"...\",      \"force\" : true,      \"replicateData\" : true,      \"hdfsArguments\" : { },      \"replicateImpalaMetadata\" : true,      \"runInvalidateMetadata\" : true,      \"dryRun\" : true,      \"numThreads\" : 12345,      \"sentryMigration\" : true,      \"skipUrlPermissions\" : true    },    \"id\" : 12345,    \"displayName\" : \"...\",    \"description\" : \"...\",    \"startTime\" : \"...\",    \"endTime\" : \"...\",    \"interval\" : 12345,    \"intervalUnit\" : \"DAY\",    \"nextRun\" : \"...\",    \"paused\" : true,    \"alertOnStart\" : true,    \"alertOnSuccess\" : true,    \"alertOnFail\" : true,    \"alertOnAbort\" : true  } ]}", ApiReplicationScheduleList.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default ReplicationsResourceApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Deletes all existing replication schedules.", nickname = "deleteAllSchedules", notes = "Deletes all existing replication schedules. <p> Available since API v3. Only available with Cloudera Manager Enterprise Edition.", response = ApiReplicationScheduleList.class, authorizations = {
        @Authorization(value = "basic")
    }, tags={ "ReplicationsResource", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "Success", response = ApiReplicationScheduleList.class) })
    @RequestMapping(value = "/clusters/{clusterName}/services/{serviceName}/replications",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    default ResponseEntity<ApiReplicationScheduleList> deleteAllSchedules(@ApiParam(value = "",required=true) @PathVariable("clusterName") String clusterName,@ApiParam(value = "The service name.",required=true) @PathVariable("serviceName") String serviceName) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"items\" : [ {    \"hdfsArguments\" : {      \"sourceService\" : { },      \"sourcePath\" : \"...\",      \"destinationPath\" : \"...\",      \"mapreduceServiceName\" : \"...\",      \"schedulerPoolName\" : \"...\",      \"userName\" : \"...\",      \"sourceUser\" : \"...\",      \"numMaps\" : 12345,      \"dryRun\" : true,      \"bandwidthPerMap\" : 12345,      \"abortOnError\" : true,      \"removeMissingFiles\" : true,      \"preserveReplicationCount\" : true,      \"preserveBlockSize\" : true,      \"preservePermissions\" : true,      \"logPath\" : \"...\",      \"skipChecksumChecks\" : true,      \"skipListingChecksumChecks\" : true,      \"skipTrash\" : true,      \"replicationStrategy\" : \"DYNAMIC\",      \"preserveXAttrs\" : true,      \"exclusionFilters\" : [ \"...\", \"...\" ],      \"raiseSnapshotDiffFailures\" : true,      \"destinationCloudAccount\" : \"...\"    },    \"hiveArguments\" : {      \"sourceService\" : { },      \"tableFilters\" : [ { }, { } ],      \"exportDir\" : \"...\",      \"force\" : true,      \"replicateData\" : true,      \"hdfsArguments\" : { },      \"replicateImpalaMetadata\" : true,      \"runInvalidateMetadata\" : true,      \"dryRun\" : true,      \"numThreads\" : 12345,      \"sentryMigration\" : true,      \"skipUrlPermissions\" : true    },    \"hdfsCloudArguments\" : {      \"sourceAccount\" : \"...\",      \"destinationAccount\" : \"...\",      \"sourceService\" : { },      \"sourcePath\" : \"...\",      \"destinationPath\" : \"...\",      \"mapreduceServiceName\" : \"...\",      \"schedulerPoolName\" : \"...\",      \"userName\" : \"...\",      \"sourceUser\" : \"...\",      \"numMaps\" : 12345,      \"dryRun\" : true,      \"bandwidthPerMap\" : 12345,      \"abortOnError\" : true,      \"removeMissingFiles\" : true,      \"preserveReplicationCount\" : true,      \"preserveBlockSize\" : true,      \"preservePermissions\" : true,      \"logPath\" : \"...\",      \"skipChecksumChecks\" : true,      \"skipListingChecksumChecks\" : true,      \"skipTrash\" : true,      \"replicationStrategy\" : \"STATIC\",      \"preserveXAttrs\" : true,      \"exclusionFilters\" : [ \"...\", \"...\" ],      \"raiseSnapshotDiffFailures\" : true,      \"destinationCloudAccount\" : \"...\"    },    \"history\" : [ {      \"hdfsResult\" : { },      \"hiveResult\" : { },      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    }, {      \"hdfsResult\" : { },      \"hiveResult\" : { },      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    } ],    \"active\" : true,    \"hiveCloudArguments\" : {      \"sourceAccount\" : \"...\",      \"destinationAccount\" : \"...\",      \"cloudRootPath\" : \"...\",      \"replicationOption\" : \"METADATA_AND_DATA\",      \"sourceService\" : { },      \"tableFilters\" : [ { }, { } ],      \"exportDir\" : \"...\",      \"force\" : true,      \"replicateData\" : true,      \"hdfsArguments\" : { },      \"replicateImpalaMetadata\" : true,      \"runInvalidateMetadata\" : true,      \"dryRun\" : true,      \"numThreads\" : 12345,      \"sentryMigration\" : true,      \"skipUrlPermissions\" : true    },    \"id\" : 12345,    \"displayName\" : \"...\",    \"description\" : \"...\",    \"startTime\" : \"...\",    \"endTime\" : \"...\",    \"interval\" : 12345,    \"intervalUnit\" : \"HOUR\",    \"nextRun\" : \"...\",    \"paused\" : true,    \"alertOnStart\" : true,    \"alertOnSuccess\" : true,    \"alertOnFail\" : true,    \"alertOnAbort\" : true  }, {    \"hdfsArguments\" : {      \"sourceService\" : { },      \"sourcePath\" : \"...\",      \"destinationPath\" : \"...\",      \"mapreduceServiceName\" : \"...\",      \"schedulerPoolName\" : \"...\",      \"userName\" : \"...\",      \"sourceUser\" : \"...\",      \"numMaps\" : 12345,      \"dryRun\" : true,      \"bandwidthPerMap\" : 12345,      \"abortOnError\" : true,      \"removeMissingFiles\" : true,      \"preserveReplicationCount\" : true,      \"preserveBlockSize\" : true,      \"preservePermissions\" : true,      \"logPath\" : \"...\",      \"skipChecksumChecks\" : true,      \"skipListingChecksumChecks\" : true,      \"skipTrash\" : true,      \"replicationStrategy\" : \"STATIC\",      \"preserveXAttrs\" : true,      \"exclusionFilters\" : [ \"...\", \"...\" ],      \"raiseSnapshotDiffFailures\" : true,      \"destinationCloudAccount\" : \"...\"    },    \"hiveArguments\" : {      \"sourceService\" : { },      \"tableFilters\" : [ { }, { } ],      \"exportDir\" : \"...\",      \"force\" : true,      \"replicateData\" : true,      \"hdfsArguments\" : { },      \"replicateImpalaMetadata\" : true,      \"runInvalidateMetadata\" : true,      \"dryRun\" : true,      \"numThreads\" : 12345,      \"sentryMigration\" : true,      \"skipUrlPermissions\" : true    },    \"hdfsCloudArguments\" : {      \"sourceAccount\" : \"...\",      \"destinationAccount\" : \"...\",      \"sourceService\" : { },      \"sourcePath\" : \"...\",      \"destinationPath\" : \"...\",      \"mapreduceServiceName\" : \"...\",      \"schedulerPoolName\" : \"...\",      \"userName\" : \"...\",      \"sourceUser\" : \"...\",      \"numMaps\" : 12345,      \"dryRun\" : true,      \"bandwidthPerMap\" : 12345,      \"abortOnError\" : true,      \"removeMissingFiles\" : true,      \"preserveReplicationCount\" : true,      \"preserveBlockSize\" : true,      \"preservePermissions\" : true,      \"logPath\" : \"...\",      \"skipChecksumChecks\" : true,      \"skipListingChecksumChecks\" : true,      \"skipTrash\" : true,      \"replicationStrategy\" : \"DYNAMIC\",      \"preserveXAttrs\" : true,      \"exclusionFilters\" : [ \"...\", \"...\" ],      \"raiseSnapshotDiffFailures\" : true,      \"destinationCloudAccount\" : \"...\"    },    \"history\" : [ {      \"hdfsResult\" : { },      \"hiveResult\" : { },      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    }, {      \"hdfsResult\" : { },      \"hiveResult\" : { },      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    } ],    \"active\" : true,    \"hiveCloudArguments\" : {      \"sourceAccount\" : \"...\",      \"destinationAccount\" : \"...\",      \"cloudRootPath\" : \"...\",      \"replicationOption\" : \"METADATA_ONLY\",      \"sourceService\" : { },      \"tableFilters\" : [ { }, { } ],      \"exportDir\" : \"...\",      \"force\" : true,      \"replicateData\" : true,      \"hdfsArguments\" : { },      \"replicateImpalaMetadata\" : true,      \"runInvalidateMetadata\" : true,      \"dryRun\" : true,      \"numThreads\" : 12345,      \"sentryMigration\" : true,      \"skipUrlPermissions\" : true    },    \"id\" : 12345,    \"displayName\" : \"...\",    \"description\" : \"...\",    \"startTime\" : \"...\",    \"endTime\" : \"...\",    \"interval\" : 12345,    \"intervalUnit\" : \"YEAR\",    \"nextRun\" : \"...\",    \"paused\" : true,    \"alertOnStart\" : true,    \"alertOnSuccess\" : true,    \"alertOnFail\" : true,    \"alertOnAbort\" : true  } ]}", ApiReplicationScheduleList.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default ReplicationsResourceApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Deletes an existing replication schedule.", nickname = "deleteSchedule", notes = "Deletes an existing replication schedule. <p> Available since API v3. Only available with Cloudera Manager Enterprise Edition.", response = ApiReplicationSchedule.class, authorizations = {
        @Authorization(value = "basic")
    }, tags={ "ReplicationsResource", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "Success", response = ApiReplicationSchedule.class) })
    @RequestMapping(value = "/clusters/{clusterName}/services/{serviceName}/replications/{scheduleId}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    default ResponseEntity<ApiReplicationSchedule> deleteSchedule(@ApiParam(value = "",required=true) @PathVariable("clusterName") String clusterName,@ApiParam(value = "Id of an existing replication schedule.",required=true) @PathVariable("scheduleId") BigDecimal scheduleId,@ApiParam(value = "The service name.",required=true) @PathVariable("serviceName") String serviceName) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"hdfsArguments\" : {    \"sourceService\" : {      \"peerName\" : \"...\",      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"serviceDisplayName\" : \"...\",      \"serviceType\" : \"...\"    },    \"sourcePath\" : \"...\",    \"destinationPath\" : \"...\",    \"mapreduceServiceName\" : \"...\",    \"schedulerPoolName\" : \"...\",    \"userName\" : \"...\",    \"sourceUser\" : \"...\",    \"numMaps\" : 12345,    \"dryRun\" : true,    \"bandwidthPerMap\" : 12345,    \"abortOnError\" : true,    \"removeMissingFiles\" : true,    \"preserveReplicationCount\" : true,    \"preserveBlockSize\" : true,    \"preservePermissions\" : true,    \"logPath\" : \"...\",    \"skipChecksumChecks\" : true,    \"skipListingChecksumChecks\" : true,    \"skipTrash\" : true,    \"replicationStrategy\" : \"STATIC\",    \"preserveXAttrs\" : true,    \"exclusionFilters\" : [ \"...\", \"...\" ],    \"raiseSnapshotDiffFailures\" : true,    \"destinationCloudAccount\" : \"...\"  },  \"hiveArguments\" : {    \"sourceService\" : {      \"peerName\" : \"...\",      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"serviceDisplayName\" : \"...\",      \"serviceType\" : \"...\"    },    \"tableFilters\" : [ {      \"database\" : \"...\",      \"tableName\" : \"...\"    }, {      \"database\" : \"...\",      \"tableName\" : \"...\"    } ],    \"exportDir\" : \"...\",    \"force\" : true,    \"replicateData\" : true,    \"hdfsArguments\" : {      \"sourceService\" : { },      \"sourcePath\" : \"...\",      \"destinationPath\" : \"...\",      \"mapreduceServiceName\" : \"...\",      \"schedulerPoolName\" : \"...\",      \"userName\" : \"...\",      \"sourceUser\" : \"...\",      \"numMaps\" : 12345,      \"dryRun\" : true,      \"bandwidthPerMap\" : 12345,      \"abortOnError\" : true,      \"removeMissingFiles\" : true,      \"preserveReplicationCount\" : true,      \"preserveBlockSize\" : true,      \"preservePermissions\" : true,      \"logPath\" : \"...\",      \"skipChecksumChecks\" : true,      \"skipListingChecksumChecks\" : true,      \"skipTrash\" : true,      \"replicationStrategy\" : \"DYNAMIC\",      \"preserveXAttrs\" : true,      \"exclusionFilters\" : [ \"...\", \"...\" ],      \"raiseSnapshotDiffFailures\" : true,      \"destinationCloudAccount\" : \"...\"    },    \"replicateImpalaMetadata\" : true,    \"runInvalidateMetadata\" : true,    \"dryRun\" : true,    \"numThreads\" : 12345,    \"sentryMigration\" : true,    \"skipUrlPermissions\" : true  },  \"hdfsCloudArguments\" : {    \"sourceAccount\" : \"...\",    \"destinationAccount\" : \"...\",    \"sourceService\" : {      \"peerName\" : \"...\",      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"serviceDisplayName\" : \"...\",      \"serviceType\" : \"...\"    },    \"sourcePath\" : \"...\",    \"destinationPath\" : \"...\",    \"mapreduceServiceName\" : \"...\",    \"schedulerPoolName\" : \"...\",    \"userName\" : \"...\",    \"sourceUser\" : \"...\",    \"numMaps\" : 12345,    \"dryRun\" : true,    \"bandwidthPerMap\" : 12345,    \"abortOnError\" : true,    \"removeMissingFiles\" : true,    \"preserveReplicationCount\" : true,    \"preserveBlockSize\" : true,    \"preservePermissions\" : true,    \"logPath\" : \"...\",    \"skipChecksumChecks\" : true,    \"skipListingChecksumChecks\" : true,    \"skipTrash\" : true,    \"replicationStrategy\" : \"STATIC\",    \"preserveXAttrs\" : true,    \"exclusionFilters\" : [ \"...\", \"...\" ],    \"raiseSnapshotDiffFailures\" : true,    \"destinationCloudAccount\" : \"...\"  },  \"history\" : [ {    \"hdfsResult\" : {      \"progress\" : 12345,      \"throughput\" : 12345.0,      \"remainingTime\" : 12345,      \"estimatedCompletionTime\" : \"...\",      \"counters\" : [ { }, { } ],      \"numFilesDryRun\" : 12345,      \"numBytesDryRun\" : 12345,      \"numFilesExpected\" : 12345,      \"numBytesExpected\" : 12345,      \"numFilesCopied\" : 12345,      \"numBytesCopied\" : 12345,      \"numFilesSkipped\" : 12345,      \"numBytesSkipped\" : 12345,      \"numFilesDeleted\" : 12345,      \"numFilesCopyFailed\" : 12345,      \"numBytesCopyFailed\" : 12345,      \"setupError\" : \"...\",      \"jobId\" : \"...\",      \"jobDetailsUri\" : \"...\",      \"dryRun\" : true,      \"snapshottedDirs\" : [ \"...\", \"...\" ],      \"runAsUser\" : \"...\",      \"runOnSourceAsUser\" : \"...\",      \"logPath\" : \"...\",      \"failedFiles\" : [ \"...\", \"...\" ]    },    \"hiveResult\" : {      \"phase\" : \"...\",      \"tableCount\" : 12345,      \"tables\" : [ { }, { } ],      \"impalaUDFCount\" : 12345,      \"hiveUDFCount\" : 12345,      \"impalaUDFs\" : [ { }, { } ],      \"hiveUDFs\" : [ { }, { } ],      \"errorCount\" : 12345,      \"errors\" : [ { }, { } ],      \"dataReplicationResult\" : { },      \"dryRun\" : true,      \"runAsUser\" : \"...\",      \"runOnSourceAsUser\" : \"...\",      \"logPath\" : \"...\",      \"directoryForMetadata\" : \"...\",      \"statsAvailable\" : true,      \"dbProcessed\" : 12345,      \"tableProcessed\" : 12345,      \"partitionProcessed\" : 12345,      \"functionProcessed\" : 12345,      \"indexProcessed\" : 12345,      \"statsProcessed\" : 12345,      \"dbExpected\" : 12345,      \"tableExpected\" : 12345,      \"partitionExpected\" : 12345,      \"functionExpected\" : 12345,      \"indexExpected\" : 12345,      \"statsExpected\" : 12345    },    \"id\" : 12345,    \"name\" : \"...\",    \"startTime\" : \"...\",    \"endTime\" : \"...\",    \"active\" : true,    \"success\" : true,    \"resultMessage\" : \"...\",    \"resultDataUrl\" : \"...\",    \"clusterRef\" : {      \"clusterName\" : \"...\",      \"displayName\" : \"...\"    },    \"serviceRef\" : {      \"peerName\" : \"...\",      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"serviceDisplayName\" : \"...\",      \"serviceType\" : \"...\"    },    \"roleRef\" : {      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"roleName\" : \"...\"    },    \"hostRef\" : {      \"hostId\" : \"...\",      \"hostname\" : \"...\"    },    \"parent\" : {      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    },    \"children\" : {      \"items\" : [ { }, { } ]    },    \"canRetry\" : true  }, {    \"hdfsResult\" : {      \"progress\" : 12345,      \"throughput\" : 12345.0,      \"remainingTime\" : 12345,      \"estimatedCompletionTime\" : \"...\",      \"counters\" : [ { }, { } ],      \"numFilesDryRun\" : 12345,      \"numBytesDryRun\" : 12345,      \"numFilesExpected\" : 12345,      \"numBytesExpected\" : 12345,      \"numFilesCopied\" : 12345,      \"numBytesCopied\" : 12345,      \"numFilesSkipped\" : 12345,      \"numBytesSkipped\" : 12345,      \"numFilesDeleted\" : 12345,      \"numFilesCopyFailed\" : 12345,      \"numBytesCopyFailed\" : 12345,      \"setupError\" : \"...\",      \"jobId\" : \"...\",      \"jobDetailsUri\" : \"...\",      \"dryRun\" : true,      \"snapshottedDirs\" : [ \"...\", \"...\" ],      \"runAsUser\" : \"...\",      \"runOnSourceAsUser\" : \"...\",      \"logPath\" : \"...\",      \"failedFiles\" : [ \"...\", \"...\" ]    },    \"hiveResult\" : {      \"phase\" : \"...\",      \"tableCount\" : 12345,      \"tables\" : [ { }, { } ],      \"impalaUDFCount\" : 12345,      \"hiveUDFCount\" : 12345,      \"impalaUDFs\" : [ { }, { } ],      \"hiveUDFs\" : [ { }, { } ],      \"errorCount\" : 12345,      \"errors\" : [ { }, { } ],      \"dataReplicationResult\" : { },      \"dryRun\" : true,      \"runAsUser\" : \"...\",      \"runOnSourceAsUser\" : \"...\",      \"logPath\" : \"...\",      \"directoryForMetadata\" : \"...\",      \"statsAvailable\" : true,      \"dbProcessed\" : 12345,      \"tableProcessed\" : 12345,      \"partitionProcessed\" : 12345,      \"functionProcessed\" : 12345,      \"indexProcessed\" : 12345,      \"statsProcessed\" : 12345,      \"dbExpected\" : 12345,      \"tableExpected\" : 12345,      \"partitionExpected\" : 12345,      \"functionExpected\" : 12345,      \"indexExpected\" : 12345,      \"statsExpected\" : 12345    },    \"id\" : 12345,    \"name\" : \"...\",    \"startTime\" : \"...\",    \"endTime\" : \"...\",    \"active\" : true,    \"success\" : true,    \"resultMessage\" : \"...\",    \"resultDataUrl\" : \"...\",    \"clusterRef\" : {      \"clusterName\" : \"...\",      \"displayName\" : \"...\"    },    \"serviceRef\" : {      \"peerName\" : \"...\",      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"serviceDisplayName\" : \"...\",      \"serviceType\" : \"...\"    },    \"roleRef\" : {      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"roleName\" : \"...\"    },    \"hostRef\" : {      \"hostId\" : \"...\",      \"hostname\" : \"...\"    },    \"parent\" : {      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    },    \"children\" : {      \"items\" : [ { }, { } ]    },    \"canRetry\" : true  } ],  \"active\" : true,  \"hiveCloudArguments\" : {    \"sourceAccount\" : \"...\",    \"destinationAccount\" : \"...\",    \"cloudRootPath\" : \"...\",    \"replicationOption\" : \"METADATA_AND_DATA\",    \"sourceService\" : {      \"peerName\" : \"...\",      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"serviceDisplayName\" : \"...\",      \"serviceType\" : \"...\"    },    \"tableFilters\" : [ {      \"database\" : \"...\",      \"tableName\" : \"...\"    }, {      \"database\" : \"...\",      \"tableName\" : \"...\"    } ],    \"exportDir\" : \"...\",    \"force\" : true,    \"replicateData\" : true,    \"hdfsArguments\" : {      \"sourceService\" : { },      \"sourcePath\" : \"...\",      \"destinationPath\" : \"...\",      \"mapreduceServiceName\" : \"...\",      \"schedulerPoolName\" : \"...\",      \"userName\" : \"...\",      \"sourceUser\" : \"...\",      \"numMaps\" : 12345,      \"dryRun\" : true,      \"bandwidthPerMap\" : 12345,      \"abortOnError\" : true,      \"removeMissingFiles\" : true,      \"preserveReplicationCount\" : true,      \"preserveBlockSize\" : true,      \"preservePermissions\" : true,      \"logPath\" : \"...\",      \"skipChecksumChecks\" : true,      \"skipListingChecksumChecks\" : true,      \"skipTrash\" : true,      \"replicationStrategy\" : \"DYNAMIC\",      \"preserveXAttrs\" : true,      \"exclusionFilters\" : [ \"...\", \"...\" ],      \"raiseSnapshotDiffFailures\" : true,      \"destinationCloudAccount\" : \"...\"    },    \"replicateImpalaMetadata\" : true,    \"runInvalidateMetadata\" : true,    \"dryRun\" : true,    \"numThreads\" : 12345,    \"sentryMigration\" : true,    \"skipUrlPermissions\" : true  },  \"id\" : 12345,  \"displayName\" : \"...\",  \"description\" : \"...\",  \"startTime\" : \"...\",  \"endTime\" : \"...\",  \"interval\" : 12345,  \"intervalUnit\" : \"MINUTE\",  \"nextRun\" : \"...\",  \"paused\" : true,  \"alertOnStart\" : true,  \"alertOnSuccess\" : true,  \"alertOnFail\" : true,  \"alertOnAbort\" : true}", ApiReplicationSchedule.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default ReplicationsResourceApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "returns the replication state.", nickname = "getReplicationState", notes = "returns the replication state. for example if incremental export is enabled, etc", response = ApiReplicationState.class, authorizations = {
        @Authorization(value = "basic")
    }, tags={ "ReplicationsResource", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = ApiReplicationState.class) })
    @RequestMapping(value = "/clusters/{clusterName}/services/{serviceName}/replications/replicationState",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<ApiReplicationState> getReplicationState(@ApiParam(value = "",required=true) @PathVariable("clusterName") String clusterName,@ApiParam(value = "The service name.",required=true) @PathVariable("serviceName") String serviceName,@ApiParam(value = "view to materialize", allowableValues = "EXPORT, EXPORT_REDACTED, FULL, FULL_WITH_HEALTH_CHECK_EXPLANATION, SUMMARY", defaultValue = "summary") @Valid @RequestParam(value = "view", required = false, defaultValue="summary") String view) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"incrementalExportEnabled\" : true}", ApiReplicationState.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default ReplicationsResourceApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Returns a list of commands triggered by a schedule.", nickname = "readHistory", notes = "Returns a list of commands triggered by a schedule.", response = ApiReplicationCommandList.class, authorizations = {
        @Authorization(value = "basic")
    }, tags={ "ReplicationsResource", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = ApiReplicationCommandList.class) })
    @RequestMapping(value = "/clusters/{clusterName}/services/{serviceName}/replications/{scheduleId}/history",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<ApiReplicationCommandList> readHistory(@ApiParam(value = "",required=true) @PathVariable("clusterName") String clusterName,@ApiParam(value = "Id of an existing replication schedule.",required=true) @PathVariable("scheduleId") BigDecimal scheduleId,@ApiParam(value = "The service name.",required=true) @PathVariable("serviceName") String serviceName,@ApiParam(value = "Maximum number of commands to retrieve.", defaultValue = "20") @Valid @RequestParam(value = "limit", required = false, defaultValue="20") Integer limit,@ApiParam(value = "Index of first command to retrieve.", defaultValue = "0") @Valid @RequestParam(value = "offset", required = false, defaultValue="0") Integer offset,@ApiParam(value = "The view to materialize.", allowableValues = "EXPORT, EXPORT_REDACTED, FULL, FULL_WITH_HEALTH_CHECK_EXPLANATION, SUMMARY", defaultValue = "summary") @Valid @RequestParam(value = "view", required = false, defaultValue="summary") String view) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"items\" : [ {    \"hdfsResult\" : {      \"progress\" : 12345,      \"throughput\" : 12345.0,      \"remainingTime\" : 12345,      \"estimatedCompletionTime\" : \"...\",      \"counters\" : [ { }, { } ],      \"numFilesDryRun\" : 12345,      \"numBytesDryRun\" : 12345,      \"numFilesExpected\" : 12345,      \"numBytesExpected\" : 12345,      \"numFilesCopied\" : 12345,      \"numBytesCopied\" : 12345,      \"numFilesSkipped\" : 12345,      \"numBytesSkipped\" : 12345,      \"numFilesDeleted\" : 12345,      \"numFilesCopyFailed\" : 12345,      \"numBytesCopyFailed\" : 12345,      \"setupError\" : \"...\",      \"jobId\" : \"...\",      \"jobDetailsUri\" : \"...\",      \"dryRun\" : true,      \"snapshottedDirs\" : [ \"...\", \"...\" ],      \"runAsUser\" : \"...\",      \"runOnSourceAsUser\" : \"...\",      \"logPath\" : \"...\",      \"failedFiles\" : [ \"...\", \"...\" ]    },    \"hiveResult\" : {      \"phase\" : \"...\",      \"tableCount\" : 12345,      \"tables\" : [ { }, { } ],      \"impalaUDFCount\" : 12345,      \"hiveUDFCount\" : 12345,      \"impalaUDFs\" : [ { }, { } ],      \"hiveUDFs\" : [ { }, { } ],      \"errorCount\" : 12345,      \"errors\" : [ { }, { } ],      \"dataReplicationResult\" : { },      \"dryRun\" : true,      \"runAsUser\" : \"...\",      \"runOnSourceAsUser\" : \"...\",      \"logPath\" : \"...\",      \"directoryForMetadata\" : \"...\",      \"statsAvailable\" : true,      \"dbProcessed\" : 12345,      \"tableProcessed\" : 12345,      \"partitionProcessed\" : 12345,      \"functionProcessed\" : 12345,      \"indexProcessed\" : 12345,      \"statsProcessed\" : 12345,      \"dbExpected\" : 12345,      \"tableExpected\" : 12345,      \"partitionExpected\" : 12345,      \"functionExpected\" : 12345,      \"indexExpected\" : 12345,      \"statsExpected\" : 12345    },    \"id\" : 12345,    \"name\" : \"...\",    \"startTime\" : \"...\",    \"endTime\" : \"...\",    \"active\" : true,    \"success\" : true,    \"resultMessage\" : \"...\",    \"resultDataUrl\" : \"...\",    \"clusterRef\" : {      \"clusterName\" : \"...\",      \"displayName\" : \"...\"    },    \"serviceRef\" : {      \"peerName\" : \"...\",      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"serviceDisplayName\" : \"...\",      \"serviceType\" : \"...\"    },    \"roleRef\" : {      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"roleName\" : \"...\"    },    \"hostRef\" : {      \"hostId\" : \"...\",      \"hostname\" : \"...\"    },    \"parent\" : {      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    },    \"children\" : {      \"items\" : [ { }, { } ]    },    \"canRetry\" : true  }, {    \"hdfsResult\" : {      \"progress\" : 12345,      \"throughput\" : 12345.0,      \"remainingTime\" : 12345,      \"estimatedCompletionTime\" : \"...\",      \"counters\" : [ { }, { } ],      \"numFilesDryRun\" : 12345,      \"numBytesDryRun\" : 12345,      \"numFilesExpected\" : 12345,      \"numBytesExpected\" : 12345,      \"numFilesCopied\" : 12345,      \"numBytesCopied\" : 12345,      \"numFilesSkipped\" : 12345,      \"numBytesSkipped\" : 12345,      \"numFilesDeleted\" : 12345,      \"numFilesCopyFailed\" : 12345,      \"numBytesCopyFailed\" : 12345,      \"setupError\" : \"...\",      \"jobId\" : \"...\",      \"jobDetailsUri\" : \"...\",      \"dryRun\" : true,      \"snapshottedDirs\" : [ \"...\", \"...\" ],      \"runAsUser\" : \"...\",      \"runOnSourceAsUser\" : \"...\",      \"logPath\" : \"...\",      \"failedFiles\" : [ \"...\", \"...\" ]    },    \"hiveResult\" : {      \"phase\" : \"...\",      \"tableCount\" : 12345,      \"tables\" : [ { }, { } ],      \"impalaUDFCount\" : 12345,      \"hiveUDFCount\" : 12345,      \"impalaUDFs\" : [ { }, { } ],      \"hiveUDFs\" : [ { }, { } ],      \"errorCount\" : 12345,      \"errors\" : [ { }, { } ],      \"dataReplicationResult\" : { },      \"dryRun\" : true,      \"runAsUser\" : \"...\",      \"runOnSourceAsUser\" : \"...\",      \"logPath\" : \"...\",      \"directoryForMetadata\" : \"...\",      \"statsAvailable\" : true,      \"dbProcessed\" : 12345,      \"tableProcessed\" : 12345,      \"partitionProcessed\" : 12345,      \"functionProcessed\" : 12345,      \"indexProcessed\" : 12345,      \"statsProcessed\" : 12345,      \"dbExpected\" : 12345,      \"tableExpected\" : 12345,      \"partitionExpected\" : 12345,      \"functionExpected\" : 12345,      \"indexExpected\" : 12345,      \"statsExpected\" : 12345    },    \"id\" : 12345,    \"name\" : \"...\",    \"startTime\" : \"...\",    \"endTime\" : \"...\",    \"active\" : true,    \"success\" : true,    \"resultMessage\" : \"...\",    \"resultDataUrl\" : \"...\",    \"clusterRef\" : {      \"clusterName\" : \"...\",      \"displayName\" : \"...\"    },    \"serviceRef\" : {      \"peerName\" : \"...\",      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"serviceDisplayName\" : \"...\",      \"serviceType\" : \"...\"    },    \"roleRef\" : {      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"roleName\" : \"...\"    },    \"hostRef\" : {      \"hostId\" : \"...\",      \"hostname\" : \"...\"    },    \"parent\" : {      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    },    \"children\" : {      \"items\" : [ { }, { } ]    },    \"canRetry\" : true  } ]}", ApiReplicationCommandList.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default ReplicationsResourceApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Returns information for a specific replication schedule.", nickname = "readSchedule", notes = "Returns information for a specific replication schedule. <p> Available since API v3. Only available with Cloudera Manager Enterprise Edition.", response = ApiReplicationSchedule.class, authorizations = {
        @Authorization(value = "basic")
    }, tags={ "ReplicationsResource", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = ApiReplicationSchedule.class) })
    @RequestMapping(value = "/clusters/{clusterName}/services/{serviceName}/replications/{scheduleId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<ApiReplicationSchedule> readSchedule(@ApiParam(value = "",required=true) @PathVariable("clusterName") String clusterName,@ApiParam(value = "Id of an existing replication schedule.",required=true) @PathVariable("scheduleId") BigDecimal scheduleId,@ApiParam(value = "The service name.",required=true) @PathVariable("serviceName") String serviceName,@ApiParam(value = "The view to materialize.", allowableValues = "EXPORT, EXPORT_REDACTED, FULL, FULL_WITH_HEALTH_CHECK_EXPLANATION, SUMMARY", defaultValue = "summary") @Valid @RequestParam(value = "view", required = false, defaultValue="summary") String view) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"hdfsArguments\" : {    \"sourceService\" : {      \"peerName\" : \"...\",      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"serviceDisplayName\" : \"...\",      \"serviceType\" : \"...\"    },    \"sourcePath\" : \"...\",    \"destinationPath\" : \"...\",    \"mapreduceServiceName\" : \"...\",    \"schedulerPoolName\" : \"...\",    \"userName\" : \"...\",    \"sourceUser\" : \"...\",    \"numMaps\" : 12345,    \"dryRun\" : true,    \"bandwidthPerMap\" : 12345,    \"abortOnError\" : true,    \"removeMissingFiles\" : true,    \"preserveReplicationCount\" : true,    \"preserveBlockSize\" : true,    \"preservePermissions\" : true,    \"logPath\" : \"...\",    \"skipChecksumChecks\" : true,    \"skipListingChecksumChecks\" : true,    \"skipTrash\" : true,    \"replicationStrategy\" : \"STATIC\",    \"preserveXAttrs\" : true,    \"exclusionFilters\" : [ \"...\", \"...\" ],    \"raiseSnapshotDiffFailures\" : true,    \"destinationCloudAccount\" : \"...\"  },  \"hiveArguments\" : {    \"sourceService\" : {      \"peerName\" : \"...\",      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"serviceDisplayName\" : \"...\",      \"serviceType\" : \"...\"    },    \"tableFilters\" : [ {      \"database\" : \"...\",      \"tableName\" : \"...\"    }, {      \"database\" : \"...\",      \"tableName\" : \"...\"    } ],    \"exportDir\" : \"...\",    \"force\" : true,    \"replicateData\" : true,    \"hdfsArguments\" : {      \"sourceService\" : { },      \"sourcePath\" : \"...\",      \"destinationPath\" : \"...\",      \"mapreduceServiceName\" : \"...\",      \"schedulerPoolName\" : \"...\",      \"userName\" : \"...\",      \"sourceUser\" : \"...\",      \"numMaps\" : 12345,      \"dryRun\" : true,      \"bandwidthPerMap\" : 12345,      \"abortOnError\" : true,      \"removeMissingFiles\" : true,      \"preserveReplicationCount\" : true,      \"preserveBlockSize\" : true,      \"preservePermissions\" : true,      \"logPath\" : \"...\",      \"skipChecksumChecks\" : true,      \"skipListingChecksumChecks\" : true,      \"skipTrash\" : true,      \"replicationStrategy\" : \"STATIC\",      \"preserveXAttrs\" : true,      \"exclusionFilters\" : [ \"...\", \"...\" ],      \"raiseSnapshotDiffFailures\" : true,      \"destinationCloudAccount\" : \"...\"    },    \"replicateImpalaMetadata\" : true,    \"runInvalidateMetadata\" : true,    \"dryRun\" : true,    \"numThreads\" : 12345,    \"sentryMigration\" : true,    \"skipUrlPermissions\" : true  },  \"hdfsCloudArguments\" : {    \"sourceAccount\" : \"...\",    \"destinationAccount\" : \"...\",    \"sourceService\" : {      \"peerName\" : \"...\",      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"serviceDisplayName\" : \"...\",      \"serviceType\" : \"...\"    },    \"sourcePath\" : \"...\",    \"destinationPath\" : \"...\",    \"mapreduceServiceName\" : \"...\",    \"schedulerPoolName\" : \"...\",    \"userName\" : \"...\",    \"sourceUser\" : \"...\",    \"numMaps\" : 12345,    \"dryRun\" : true,    \"bandwidthPerMap\" : 12345,    \"abortOnError\" : true,    \"removeMissingFiles\" : true,    \"preserveReplicationCount\" : true,    \"preserveBlockSize\" : true,    \"preservePermissions\" : true,    \"logPath\" : \"...\",    \"skipChecksumChecks\" : true,    \"skipListingChecksumChecks\" : true,    \"skipTrash\" : true,    \"replicationStrategy\" : \"DYNAMIC\",    \"preserveXAttrs\" : true,    \"exclusionFilters\" : [ \"...\", \"...\" ],    \"raiseSnapshotDiffFailures\" : true,    \"destinationCloudAccount\" : \"...\"  },  \"history\" : [ {    \"hdfsResult\" : {      \"progress\" : 12345,      \"throughput\" : 12345.0,      \"remainingTime\" : 12345,      \"estimatedCompletionTime\" : \"...\",      \"counters\" : [ { }, { } ],      \"numFilesDryRun\" : 12345,      \"numBytesDryRun\" : 12345,      \"numFilesExpected\" : 12345,      \"numBytesExpected\" : 12345,      \"numFilesCopied\" : 12345,      \"numBytesCopied\" : 12345,      \"numFilesSkipped\" : 12345,      \"numBytesSkipped\" : 12345,      \"numFilesDeleted\" : 12345,      \"numFilesCopyFailed\" : 12345,      \"numBytesCopyFailed\" : 12345,      \"setupError\" : \"...\",      \"jobId\" : \"...\",      \"jobDetailsUri\" : \"...\",      \"dryRun\" : true,      \"snapshottedDirs\" : [ \"...\", \"...\" ],      \"runAsUser\" : \"...\",      \"runOnSourceAsUser\" : \"...\",      \"logPath\" : \"...\",      \"failedFiles\" : [ \"...\", \"...\" ]    },    \"hiveResult\" : {      \"phase\" : \"...\",      \"tableCount\" : 12345,      \"tables\" : [ { }, { } ],      \"impalaUDFCount\" : 12345,      \"hiveUDFCount\" : 12345,      \"impalaUDFs\" : [ { }, { } ],      \"hiveUDFs\" : [ { }, { } ],      \"errorCount\" : 12345,      \"errors\" : [ { }, { } ],      \"dataReplicationResult\" : { },      \"dryRun\" : true,      \"runAsUser\" : \"...\",      \"runOnSourceAsUser\" : \"...\",      \"logPath\" : \"...\",      \"directoryForMetadata\" : \"...\",      \"statsAvailable\" : true,      \"dbProcessed\" : 12345,      \"tableProcessed\" : 12345,      \"partitionProcessed\" : 12345,      \"functionProcessed\" : 12345,      \"indexProcessed\" : 12345,      \"statsProcessed\" : 12345,      \"dbExpected\" : 12345,      \"tableExpected\" : 12345,      \"partitionExpected\" : 12345,      \"functionExpected\" : 12345,      \"indexExpected\" : 12345,      \"statsExpected\" : 12345    },    \"id\" : 12345,    \"name\" : \"...\",    \"startTime\" : \"...\",    \"endTime\" : \"...\",    \"active\" : true,    \"success\" : true,    \"resultMessage\" : \"...\",    \"resultDataUrl\" : \"...\",    \"clusterRef\" : {      \"clusterName\" : \"...\",      \"displayName\" : \"...\"    },    \"serviceRef\" : {      \"peerName\" : \"...\",      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"serviceDisplayName\" : \"...\",      \"serviceType\" : \"...\"    },    \"roleRef\" : {      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"roleName\" : \"...\"    },    \"hostRef\" : {      \"hostId\" : \"...\",      \"hostname\" : \"...\"    },    \"parent\" : {      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    },    \"children\" : {      \"items\" : [ { }, { } ]    },    \"canRetry\" : true  }, {    \"hdfsResult\" : {      \"progress\" : 12345,      \"throughput\" : 12345.0,      \"remainingTime\" : 12345,      \"estimatedCompletionTime\" : \"...\",      \"counters\" : [ { }, { } ],      \"numFilesDryRun\" : 12345,      \"numBytesDryRun\" : 12345,      \"numFilesExpected\" : 12345,      \"numBytesExpected\" : 12345,      \"numFilesCopied\" : 12345,      \"numBytesCopied\" : 12345,      \"numFilesSkipped\" : 12345,      \"numBytesSkipped\" : 12345,      \"numFilesDeleted\" : 12345,      \"numFilesCopyFailed\" : 12345,      \"numBytesCopyFailed\" : 12345,      \"setupError\" : \"...\",      \"jobId\" : \"...\",      \"jobDetailsUri\" : \"...\",      \"dryRun\" : true,      \"snapshottedDirs\" : [ \"...\", \"...\" ],      \"runAsUser\" : \"...\",      \"runOnSourceAsUser\" : \"...\",      \"logPath\" : \"...\",      \"failedFiles\" : [ \"...\", \"...\" ]    },    \"hiveResult\" : {      \"phase\" : \"...\",      \"tableCount\" : 12345,      \"tables\" : [ { }, { } ],      \"impalaUDFCount\" : 12345,      \"hiveUDFCount\" : 12345,      \"impalaUDFs\" : [ { }, { } ],      \"hiveUDFs\" : [ { }, { } ],      \"errorCount\" : 12345,      \"errors\" : [ { }, { } ],      \"dataReplicationResult\" : { },      \"dryRun\" : true,      \"runAsUser\" : \"...\",      \"runOnSourceAsUser\" : \"...\",      \"logPath\" : \"...\",      \"directoryForMetadata\" : \"...\",      \"statsAvailable\" : true,      \"dbProcessed\" : 12345,      \"tableProcessed\" : 12345,      \"partitionProcessed\" : 12345,      \"functionProcessed\" : 12345,      \"indexProcessed\" : 12345,      \"statsProcessed\" : 12345,      \"dbExpected\" : 12345,      \"tableExpected\" : 12345,      \"partitionExpected\" : 12345,      \"functionExpected\" : 12345,      \"indexExpected\" : 12345,      \"statsExpected\" : 12345    },    \"id\" : 12345,    \"name\" : \"...\",    \"startTime\" : \"...\",    \"endTime\" : \"...\",    \"active\" : true,    \"success\" : true,    \"resultMessage\" : \"...\",    \"resultDataUrl\" : \"...\",    \"clusterRef\" : {      \"clusterName\" : \"...\",      \"displayName\" : \"...\"    },    \"serviceRef\" : {      \"peerName\" : \"...\",      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"serviceDisplayName\" : \"...\",      \"serviceType\" : \"...\"    },    \"roleRef\" : {      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"roleName\" : \"...\"    },    \"hostRef\" : {      \"hostId\" : \"...\",      \"hostname\" : \"...\"    },    \"parent\" : {      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    },    \"children\" : {      \"items\" : [ { }, { } ]    },    \"canRetry\" : true  } ],  \"active\" : true,  \"hiveCloudArguments\" : {    \"sourceAccount\" : \"...\",    \"destinationAccount\" : \"...\",    \"cloudRootPath\" : \"...\",    \"replicationOption\" : \"METADATA_AND_DATA\",    \"sourceService\" : {      \"peerName\" : \"...\",      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"serviceDisplayName\" : \"...\",      \"serviceType\" : \"...\"    },    \"tableFilters\" : [ {      \"database\" : \"...\",      \"tableName\" : \"...\"    }, {      \"database\" : \"...\",      \"tableName\" : \"...\"    } ],    \"exportDir\" : \"...\",    \"force\" : true,    \"replicateData\" : true,    \"hdfsArguments\" : {      \"sourceService\" : { },      \"sourcePath\" : \"...\",      \"destinationPath\" : \"...\",      \"mapreduceServiceName\" : \"...\",      \"schedulerPoolName\" : \"...\",      \"userName\" : \"...\",      \"sourceUser\" : \"...\",      \"numMaps\" : 12345,      \"dryRun\" : true,      \"bandwidthPerMap\" : 12345,      \"abortOnError\" : true,      \"removeMissingFiles\" : true,      \"preserveReplicationCount\" : true,      \"preserveBlockSize\" : true,      \"preservePermissions\" : true,      \"logPath\" : \"...\",      \"skipChecksumChecks\" : true,      \"skipListingChecksumChecks\" : true,      \"skipTrash\" : true,      \"replicationStrategy\" : \"DYNAMIC\",      \"preserveXAttrs\" : true,      \"exclusionFilters\" : [ \"...\", \"...\" ],      \"raiseSnapshotDiffFailures\" : true,      \"destinationCloudAccount\" : \"...\"    },    \"replicateImpalaMetadata\" : true,    \"runInvalidateMetadata\" : true,    \"dryRun\" : true,    \"numThreads\" : 12345,    \"sentryMigration\" : true,    \"skipUrlPermissions\" : true  },  \"id\" : 12345,  \"displayName\" : \"...\",  \"description\" : \"...\",  \"startTime\" : \"...\",  \"endTime\" : \"...\",  \"interval\" : 12345,  \"intervalUnit\" : \"DAY\",  \"nextRun\" : \"...\",  \"paused\" : true,  \"alertOnStart\" : true,  \"alertOnSuccess\" : true,  \"alertOnFail\" : true,  \"alertOnAbort\" : true}", ApiReplicationSchedule.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default ReplicationsResourceApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Returns information for all replication schedules.", nickname = "readSchedules", notes = "Returns information for all replication schedules. <p> Available since API v32.", response = ApiReplicationScheduleList.class, authorizations = {
        @Authorization(value = "basic")
    }, tags={ "ReplicationsResource", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = ApiReplicationScheduleList.class) })
    @RequestMapping(value = "/clusters/{clusterName}/services/{serviceName}/replications",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<ApiReplicationScheduleList> readSchedules(@ApiParam(value = "",required=true) @PathVariable("clusterName") String clusterName,@ApiParam(value = "The service name.",required=true) @PathVariable("serviceName") String serviceName,@ApiParam(value = "provides summary or detailed view, default is summary", allowableValues = "EXPORT, EXPORT_REDACTED, FULL, FULL_WITH_HEALTH_CHECK_EXPLANATION, SUMMARY", defaultValue = "summary") @Valid @RequestParam(value = "view", required = false, defaultValue="summary") String view) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"items\" : [ {    \"hdfsArguments\" : {      \"sourceService\" : { },      \"sourcePath\" : \"...\",      \"destinationPath\" : \"...\",      \"mapreduceServiceName\" : \"...\",      \"schedulerPoolName\" : \"...\",      \"userName\" : \"...\",      \"sourceUser\" : \"...\",      \"numMaps\" : 12345,      \"dryRun\" : true,      \"bandwidthPerMap\" : 12345,      \"abortOnError\" : true,      \"removeMissingFiles\" : true,      \"preserveReplicationCount\" : true,      \"preserveBlockSize\" : true,      \"preservePermissions\" : true,      \"logPath\" : \"...\",      \"skipChecksumChecks\" : true,      \"skipListingChecksumChecks\" : true,      \"skipTrash\" : true,      \"replicationStrategy\" : \"STATIC\",      \"preserveXAttrs\" : true,      \"exclusionFilters\" : [ \"...\", \"...\" ],      \"raiseSnapshotDiffFailures\" : true,      \"destinationCloudAccount\" : \"...\"    },    \"hiveArguments\" : {      \"sourceService\" : { },      \"tableFilters\" : [ { }, { } ],      \"exportDir\" : \"...\",      \"force\" : true,      \"replicateData\" : true,      \"hdfsArguments\" : { },      \"replicateImpalaMetadata\" : true,      \"runInvalidateMetadata\" : true,      \"dryRun\" : true,      \"numThreads\" : 12345,      \"sentryMigration\" : true,      \"skipUrlPermissions\" : true    },    \"hdfsCloudArguments\" : {      \"sourceAccount\" : \"...\",      \"destinationAccount\" : \"...\",      \"sourceService\" : { },      \"sourcePath\" : \"...\",      \"destinationPath\" : \"...\",      \"mapreduceServiceName\" : \"...\",      \"schedulerPoolName\" : \"...\",      \"userName\" : \"...\",      \"sourceUser\" : \"...\",      \"numMaps\" : 12345,      \"dryRun\" : true,      \"bandwidthPerMap\" : 12345,      \"abortOnError\" : true,      \"removeMissingFiles\" : true,      \"preserveReplicationCount\" : true,      \"preserveBlockSize\" : true,      \"preservePermissions\" : true,      \"logPath\" : \"...\",      \"skipChecksumChecks\" : true,      \"skipListingChecksumChecks\" : true,      \"skipTrash\" : true,      \"replicationStrategy\" : \"STATIC\",      \"preserveXAttrs\" : true,      \"exclusionFilters\" : [ \"...\", \"...\" ],      \"raiseSnapshotDiffFailures\" : true,      \"destinationCloudAccount\" : \"...\"    },    \"history\" : [ {      \"hdfsResult\" : { },      \"hiveResult\" : { },      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    }, {      \"hdfsResult\" : { },      \"hiveResult\" : { },      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    } ],    \"active\" : true,    \"hiveCloudArguments\" : {      \"sourceAccount\" : \"...\",      \"destinationAccount\" : \"...\",      \"cloudRootPath\" : \"...\",      \"replicationOption\" : \"KEEP_DATA_IN_CLOUD\",      \"sourceService\" : { },      \"tableFilters\" : [ { }, { } ],      \"exportDir\" : \"...\",      \"force\" : true,      \"replicateData\" : true,      \"hdfsArguments\" : { },      \"replicateImpalaMetadata\" : true,      \"runInvalidateMetadata\" : true,      \"dryRun\" : true,      \"numThreads\" : 12345,      \"sentryMigration\" : true,      \"skipUrlPermissions\" : true    },    \"id\" : 12345,    \"displayName\" : \"...\",    \"description\" : \"...\",    \"startTime\" : \"...\",    \"endTime\" : \"...\",    \"interval\" : 12345,    \"intervalUnit\" : \"MINUTE\",    \"nextRun\" : \"...\",    \"paused\" : true,    \"alertOnStart\" : true,    \"alertOnSuccess\" : true,    \"alertOnFail\" : true,    \"alertOnAbort\" : true  }, {    \"hdfsArguments\" : {      \"sourceService\" : { },      \"sourcePath\" : \"...\",      \"destinationPath\" : \"...\",      \"mapreduceServiceName\" : \"...\",      \"schedulerPoolName\" : \"...\",      \"userName\" : \"...\",      \"sourceUser\" : \"...\",      \"numMaps\" : 12345,      \"dryRun\" : true,      \"bandwidthPerMap\" : 12345,      \"abortOnError\" : true,      \"removeMissingFiles\" : true,      \"preserveReplicationCount\" : true,      \"preserveBlockSize\" : true,      \"preservePermissions\" : true,      \"logPath\" : \"...\",      \"skipChecksumChecks\" : true,      \"skipListingChecksumChecks\" : true,      \"skipTrash\" : true,      \"replicationStrategy\" : \"DYNAMIC\",      \"preserveXAttrs\" : true,      \"exclusionFilters\" : [ \"...\", \"...\" ],      \"raiseSnapshotDiffFailures\" : true,      \"destinationCloudAccount\" : \"...\"    },    \"hiveArguments\" : {      \"sourceService\" : { },      \"tableFilters\" : [ { }, { } ],      \"exportDir\" : \"...\",      \"force\" : true,      \"replicateData\" : true,      \"hdfsArguments\" : { },      \"replicateImpalaMetadata\" : true,      \"runInvalidateMetadata\" : true,      \"dryRun\" : true,      \"numThreads\" : 12345,      \"sentryMigration\" : true,      \"skipUrlPermissions\" : true    },    \"hdfsCloudArguments\" : {      \"sourceAccount\" : \"...\",      \"destinationAccount\" : \"...\",      \"sourceService\" : { },      \"sourcePath\" : \"...\",      \"destinationPath\" : \"...\",      \"mapreduceServiceName\" : \"...\",      \"schedulerPoolName\" : \"...\",      \"userName\" : \"...\",      \"sourceUser\" : \"...\",      \"numMaps\" : 12345,      \"dryRun\" : true,      \"bandwidthPerMap\" : 12345,      \"abortOnError\" : true,      \"removeMissingFiles\" : true,      \"preserveReplicationCount\" : true,      \"preserveBlockSize\" : true,      \"preservePermissions\" : true,      \"logPath\" : \"...\",      \"skipChecksumChecks\" : true,      \"skipListingChecksumChecks\" : true,      \"skipTrash\" : true,      \"replicationStrategy\" : \"DYNAMIC\",      \"preserveXAttrs\" : true,      \"exclusionFilters\" : [ \"...\", \"...\" ],      \"raiseSnapshotDiffFailures\" : true,      \"destinationCloudAccount\" : \"...\"    },    \"history\" : [ {      \"hdfsResult\" : { },      \"hiveResult\" : { },      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    }, {      \"hdfsResult\" : { },      \"hiveResult\" : { },      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    } ],    \"active\" : true,    \"hiveCloudArguments\" : {      \"sourceAccount\" : \"...\",      \"destinationAccount\" : \"...\",      \"cloudRootPath\" : \"...\",      \"replicationOption\" : \"METADATA_ONLY\",      \"sourceService\" : { },      \"tableFilters\" : [ { }, { } ],      \"exportDir\" : \"...\",      \"force\" : true,      \"replicateData\" : true,      \"hdfsArguments\" : { },      \"replicateImpalaMetadata\" : true,      \"runInvalidateMetadata\" : true,      \"dryRun\" : true,      \"numThreads\" : 12345,      \"sentryMigration\" : true,      \"skipUrlPermissions\" : true    },    \"id\" : 12345,    \"displayName\" : \"...\",    \"description\" : \"...\",    \"startTime\" : \"...\",    \"endTime\" : \"...\",    \"interval\" : 12345,    \"intervalUnit\" : \"YEAR\",    \"nextRun\" : \"...\",    \"paused\" : true,    \"alertOnStart\" : true,    \"alertOnSuccess\" : true,    \"alertOnFail\" : true,    \"alertOnAbort\" : true  } ]}", ApiReplicationScheduleList.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default ReplicationsResourceApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Run the hdfs copy listing command.", nickname = "runCopyListing", notes = "Run the hdfs copy listing command <p> The copy listing command will be triggered with the provided arguments <p> Available since API v18. Only available with Cloudera Manager Enterprise Edition.", response = ApiCommand.class, authorizations = {
        @Authorization(value = "basic")
    }, tags={ "ReplicationsResource", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Success", response = ApiCommand.class) })
    @RequestMapping(value = "/clusters/{clusterName}/services/{serviceName}/replications/hdfsCopyListing",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<ApiCommand> runCopyListing(@ApiParam(value = "",required=true) @PathVariable("clusterName") String clusterName,@ApiParam(value = "The service name.",required=true) @PathVariable("serviceName") String serviceName,@ApiParam(value = ""  )  @Valid @RequestBody String body) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"id\" : 12345,  \"name\" : \"...\",  \"startTime\" : \"...\",  \"endTime\" : \"...\",  \"active\" : true,  \"success\" : true,  \"resultMessage\" : \"...\",  \"resultDataUrl\" : \"...\",  \"clusterRef\" : {    \"clusterName\" : \"...\",    \"displayName\" : \"...\"  },  \"serviceRef\" : {    \"peerName\" : \"...\",    \"clusterName\" : \"...\",    \"serviceName\" : \"...\",    \"serviceDisplayName\" : \"...\",    \"serviceType\" : \"...\"  },  \"roleRef\" : {    \"clusterName\" : \"...\",    \"serviceName\" : \"...\",    \"roleName\" : \"...\"  },  \"hostRef\" : {    \"hostId\" : \"...\",    \"hostname\" : \"...\"  },  \"parent\" : {    \"id\" : 12345,    \"name\" : \"...\",    \"startTime\" : \"...\",    \"endTime\" : \"...\",    \"active\" : true,    \"success\" : true,    \"resultMessage\" : \"...\",    \"resultDataUrl\" : \"...\",    \"clusterRef\" : {      \"clusterName\" : \"...\",      \"displayName\" : \"...\"    },    \"serviceRef\" : {      \"peerName\" : \"...\",      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"serviceDisplayName\" : \"...\",      \"serviceType\" : \"...\"    },    \"roleRef\" : {      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"roleName\" : \"...\"    },    \"hostRef\" : {      \"hostId\" : \"...\",      \"hostname\" : \"...\"    },    \"parent\" : { },    \"children\" : {      \"items\" : [ { }, { } ]    },    \"canRetry\" : true  },  \"children\" : {    \"items\" : [ {      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    }, {      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    } ]  },  \"canRetry\" : true}", ApiCommand.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default ReplicationsResourceApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Run the schedule immediately.", nickname = "runSchedule", notes = "Run the schedule immediately. <p> The replication command will be triggered with the configured arguments, and will be recorded in the schedule's history. <p> Available since API v3. Only available with Cloudera Manager Enterprise Edition.", response = ApiCommand.class, authorizations = {
        @Authorization(value = "basic")
    }, tags={ "ReplicationsResource", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Success", response = ApiCommand.class) })
    @RequestMapping(value = "/clusters/{clusterName}/services/{serviceName}/replications/{scheduleId}/run",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    default ResponseEntity<ApiCommand> runSchedule(@ApiParam(value = "",required=true) @PathVariable("clusterName") String clusterName,@ApiParam(value = "Id of an existing replication schedule.",required=true) @PathVariable("scheduleId") BigDecimal scheduleId,@ApiParam(value = "The service name.",required=true) @PathVariable("serviceName") String serviceName,@ApiParam(value = "Whether to execute a dry run.", defaultValue = "false") @Valid @RequestParam(value = "dryRun", required = false, defaultValue="false") Boolean dryRun) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"id\" : 12345,  \"name\" : \"...\",  \"startTime\" : \"...\",  \"endTime\" : \"...\",  \"active\" : true,  \"success\" : true,  \"resultMessage\" : \"...\",  \"resultDataUrl\" : \"...\",  \"clusterRef\" : {    \"clusterName\" : \"...\",    \"displayName\" : \"...\"  },  \"serviceRef\" : {    \"peerName\" : \"...\",    \"clusterName\" : \"...\",    \"serviceName\" : \"...\",    \"serviceDisplayName\" : \"...\",    \"serviceType\" : \"...\"  },  \"roleRef\" : {    \"clusterName\" : \"...\",    \"serviceName\" : \"...\",    \"roleName\" : \"...\"  },  \"hostRef\" : {    \"hostId\" : \"...\",    \"hostname\" : \"...\"  },  \"parent\" : {    \"id\" : 12345,    \"name\" : \"...\",    \"startTime\" : \"...\",    \"endTime\" : \"...\",    \"active\" : true,    \"success\" : true,    \"resultMessage\" : \"...\",    \"resultDataUrl\" : \"...\",    \"clusterRef\" : {      \"clusterName\" : \"...\",      \"displayName\" : \"...\"    },    \"serviceRef\" : {      \"peerName\" : \"...\",      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"serviceDisplayName\" : \"...\",      \"serviceType\" : \"...\"    },    \"roleRef\" : {      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"roleName\" : \"...\"    },    \"hostRef\" : {      \"hostId\" : \"...\",      \"hostname\" : \"...\"    },    \"parent\" : { },    \"children\" : {      \"items\" : [ { }, { } ]    },    \"canRetry\" : true  },  \"children\" : {    \"items\" : [ {      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    }, {      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    } ]  },  \"canRetry\" : true}", ApiCommand.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default ReplicationsResourceApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Updates an existing replication schedule.", nickname = "updateSchedule", notes = "Updates an existing replication schedule. <p> Available since API v3. Only available with Cloudera Manager Enterprise Edition.", response = ApiReplicationSchedule.class, authorizations = {
        @Authorization(value = "basic")
    }, tags={ "ReplicationsResource", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "Success", response = ApiReplicationSchedule.class) })
    @RequestMapping(value = "/clusters/{clusterName}/services/{serviceName}/replications/{scheduleId}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    default ResponseEntity<ApiReplicationSchedule> updateSchedule(@ApiParam(value = "",required=true) @PathVariable("clusterName") String clusterName,@ApiParam(value = "Id of an existing replication schedule.",required=true) @PathVariable("scheduleId") BigDecimal scheduleId,@ApiParam(value = "The service name.",required=true) @PathVariable("serviceName") String serviceName,@ApiParam(value = ""  )  @Valid @RequestBody ApiReplicationSchedule body) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"hdfsArguments\" : {    \"sourceService\" : {      \"peerName\" : \"...\",      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"serviceDisplayName\" : \"...\",      \"serviceType\" : \"...\"    },    \"sourcePath\" : \"...\",    \"destinationPath\" : \"...\",    \"mapreduceServiceName\" : \"...\",    \"schedulerPoolName\" : \"...\",    \"userName\" : \"...\",    \"sourceUser\" : \"...\",    \"numMaps\" : 12345,    \"dryRun\" : true,    \"bandwidthPerMap\" : 12345,    \"abortOnError\" : true,    \"removeMissingFiles\" : true,    \"preserveReplicationCount\" : true,    \"preserveBlockSize\" : true,    \"preservePermissions\" : true,    \"logPath\" : \"...\",    \"skipChecksumChecks\" : true,    \"skipListingChecksumChecks\" : true,    \"skipTrash\" : true,    \"replicationStrategy\" : \"DYNAMIC\",    \"preserveXAttrs\" : true,    \"exclusionFilters\" : [ \"...\", \"...\" ],    \"raiseSnapshotDiffFailures\" : true,    \"destinationCloudAccount\" : \"...\"  },  \"hiveArguments\" : {    \"sourceService\" : {      \"peerName\" : \"...\",      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"serviceDisplayName\" : \"...\",      \"serviceType\" : \"...\"    },    \"tableFilters\" : [ {      \"database\" : \"...\",      \"tableName\" : \"...\"    }, {      \"database\" : \"...\",      \"tableName\" : \"...\"    } ],    \"exportDir\" : \"...\",    \"force\" : true,    \"replicateData\" : true,    \"hdfsArguments\" : {      \"sourceService\" : { },      \"sourcePath\" : \"...\",      \"destinationPath\" : \"...\",      \"mapreduceServiceName\" : \"...\",      \"schedulerPoolName\" : \"...\",      \"userName\" : \"...\",      \"sourceUser\" : \"...\",      \"numMaps\" : 12345,      \"dryRun\" : true,      \"bandwidthPerMap\" : 12345,      \"abortOnError\" : true,      \"removeMissingFiles\" : true,      \"preserveReplicationCount\" : true,      \"preserveBlockSize\" : true,      \"preservePermissions\" : true,      \"logPath\" : \"...\",      \"skipChecksumChecks\" : true,      \"skipListingChecksumChecks\" : true,      \"skipTrash\" : true,      \"replicationStrategy\" : \"STATIC\",      \"preserveXAttrs\" : true,      \"exclusionFilters\" : [ \"...\", \"...\" ],      \"raiseSnapshotDiffFailures\" : true,      \"destinationCloudAccount\" : \"...\"    },    \"replicateImpalaMetadata\" : true,    \"runInvalidateMetadata\" : true,    \"dryRun\" : true,    \"numThreads\" : 12345,    \"sentryMigration\" : true,    \"skipUrlPermissions\" : true  },  \"hdfsCloudArguments\" : {    \"sourceAccount\" : \"...\",    \"destinationAccount\" : \"...\",    \"sourceService\" : {      \"peerName\" : \"...\",      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"serviceDisplayName\" : \"...\",      \"serviceType\" : \"...\"    },    \"sourcePath\" : \"...\",    \"destinationPath\" : \"...\",    \"mapreduceServiceName\" : \"...\",    \"schedulerPoolName\" : \"...\",    \"userName\" : \"...\",    \"sourceUser\" : \"...\",    \"numMaps\" : 12345,    \"dryRun\" : true,    \"bandwidthPerMap\" : 12345,    \"abortOnError\" : true,    \"removeMissingFiles\" : true,    \"preserveReplicationCount\" : true,    \"preserveBlockSize\" : true,    \"preservePermissions\" : true,    \"logPath\" : \"...\",    \"skipChecksumChecks\" : true,    \"skipListingChecksumChecks\" : true,    \"skipTrash\" : true,    \"replicationStrategy\" : \"DYNAMIC\",    \"preserveXAttrs\" : true,    \"exclusionFilters\" : [ \"...\", \"...\" ],    \"raiseSnapshotDiffFailures\" : true,    \"destinationCloudAccount\" : \"...\"  },  \"history\" : [ {    \"hdfsResult\" : {      \"progress\" : 12345,      \"throughput\" : 12345.0,      \"remainingTime\" : 12345,      \"estimatedCompletionTime\" : \"...\",      \"counters\" : [ { }, { } ],      \"numFilesDryRun\" : 12345,      \"numBytesDryRun\" : 12345,      \"numFilesExpected\" : 12345,      \"numBytesExpected\" : 12345,      \"numFilesCopied\" : 12345,      \"numBytesCopied\" : 12345,      \"numFilesSkipped\" : 12345,      \"numBytesSkipped\" : 12345,      \"numFilesDeleted\" : 12345,      \"numFilesCopyFailed\" : 12345,      \"numBytesCopyFailed\" : 12345,      \"setupError\" : \"...\",      \"jobId\" : \"...\",      \"jobDetailsUri\" : \"...\",      \"dryRun\" : true,      \"snapshottedDirs\" : [ \"...\", \"...\" ],      \"runAsUser\" : \"...\",      \"runOnSourceAsUser\" : \"...\",      \"logPath\" : \"...\",      \"failedFiles\" : [ \"...\", \"...\" ]    },    \"hiveResult\" : {      \"phase\" : \"...\",      \"tableCount\" : 12345,      \"tables\" : [ { }, { } ],      \"impalaUDFCount\" : 12345,      \"hiveUDFCount\" : 12345,      \"impalaUDFs\" : [ { }, { } ],      \"hiveUDFs\" : [ { }, { } ],      \"errorCount\" : 12345,      \"errors\" : [ { }, { } ],      \"dataReplicationResult\" : { },      \"dryRun\" : true,      \"runAsUser\" : \"...\",      \"runOnSourceAsUser\" : \"...\",      \"logPath\" : \"...\",      \"directoryForMetadata\" : \"...\",      \"statsAvailable\" : true,      \"dbProcessed\" : 12345,      \"tableProcessed\" : 12345,      \"partitionProcessed\" : 12345,      \"functionProcessed\" : 12345,      \"indexProcessed\" : 12345,      \"statsProcessed\" : 12345,      \"dbExpected\" : 12345,      \"tableExpected\" : 12345,      \"partitionExpected\" : 12345,      \"functionExpected\" : 12345,      \"indexExpected\" : 12345,      \"statsExpected\" : 12345    },    \"id\" : 12345,    \"name\" : \"...\",    \"startTime\" : \"...\",    \"endTime\" : \"...\",    \"active\" : true,    \"success\" : true,    \"resultMessage\" : \"...\",    \"resultDataUrl\" : \"...\",    \"clusterRef\" : {      \"clusterName\" : \"...\",      \"displayName\" : \"...\"    },    \"serviceRef\" : {      \"peerName\" : \"...\",      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"serviceDisplayName\" : \"...\",      \"serviceType\" : \"...\"    },    \"roleRef\" : {      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"roleName\" : \"...\"    },    \"hostRef\" : {      \"hostId\" : \"...\",      \"hostname\" : \"...\"    },    \"parent\" : {      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    },    \"children\" : {      \"items\" : [ { }, { } ]    },    \"canRetry\" : true  }, {    \"hdfsResult\" : {      \"progress\" : 12345,      \"throughput\" : 12345.0,      \"remainingTime\" : 12345,      \"estimatedCompletionTime\" : \"...\",      \"counters\" : [ { }, { } ],      \"numFilesDryRun\" : 12345,      \"numBytesDryRun\" : 12345,      \"numFilesExpected\" : 12345,      \"numBytesExpected\" : 12345,      \"numFilesCopied\" : 12345,      \"numBytesCopied\" : 12345,      \"numFilesSkipped\" : 12345,      \"numBytesSkipped\" : 12345,      \"numFilesDeleted\" : 12345,      \"numFilesCopyFailed\" : 12345,      \"numBytesCopyFailed\" : 12345,      \"setupError\" : \"...\",      \"jobId\" : \"...\",      \"jobDetailsUri\" : \"...\",      \"dryRun\" : true,      \"snapshottedDirs\" : [ \"...\", \"...\" ],      \"runAsUser\" : \"...\",      \"runOnSourceAsUser\" : \"...\",      \"logPath\" : \"...\",      \"failedFiles\" : [ \"...\", \"...\" ]    },    \"hiveResult\" : {      \"phase\" : \"...\",      \"tableCount\" : 12345,      \"tables\" : [ { }, { } ],      \"impalaUDFCount\" : 12345,      \"hiveUDFCount\" : 12345,      \"impalaUDFs\" : [ { }, { } ],      \"hiveUDFs\" : [ { }, { } ],      \"errorCount\" : 12345,      \"errors\" : [ { }, { } ],      \"dataReplicationResult\" : { },      \"dryRun\" : true,      \"runAsUser\" : \"...\",      \"runOnSourceAsUser\" : \"...\",      \"logPath\" : \"...\",      \"directoryForMetadata\" : \"...\",      \"statsAvailable\" : true,      \"dbProcessed\" : 12345,      \"tableProcessed\" : 12345,      \"partitionProcessed\" : 12345,      \"functionProcessed\" : 12345,      \"indexProcessed\" : 12345,      \"statsProcessed\" : 12345,      \"dbExpected\" : 12345,      \"tableExpected\" : 12345,      \"partitionExpected\" : 12345,      \"functionExpected\" : 12345,      \"indexExpected\" : 12345,      \"statsExpected\" : 12345    },    \"id\" : 12345,    \"name\" : \"...\",    \"startTime\" : \"...\",    \"endTime\" : \"...\",    \"active\" : true,    \"success\" : true,    \"resultMessage\" : \"...\",    \"resultDataUrl\" : \"...\",    \"clusterRef\" : {      \"clusterName\" : \"...\",      \"displayName\" : \"...\"    },    \"serviceRef\" : {      \"peerName\" : \"...\",      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"serviceDisplayName\" : \"...\",      \"serviceType\" : \"...\"    },    \"roleRef\" : {      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"roleName\" : \"...\"    },    \"hostRef\" : {      \"hostId\" : \"...\",      \"hostname\" : \"...\"    },    \"parent\" : {      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    },    \"children\" : {      \"items\" : [ { }, { } ]    },    \"canRetry\" : true  } ],  \"active\" : true,  \"hiveCloudArguments\" : {    \"sourceAccount\" : \"...\",    \"destinationAccount\" : \"...\",    \"cloudRootPath\" : \"...\",    \"replicationOption\" : \"METADATA_AND_DATA\",    \"sourceService\" : {      \"peerName\" : \"...\",      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"serviceDisplayName\" : \"...\",      \"serviceType\" : \"...\"    },    \"tableFilters\" : [ {      \"database\" : \"...\",      \"tableName\" : \"...\"    }, {      \"database\" : \"...\",      \"tableName\" : \"...\"    } ],    \"exportDir\" : \"...\",    \"force\" : true,    \"replicateData\" : true,    \"hdfsArguments\" : {      \"sourceService\" : { },      \"sourcePath\" : \"...\",      \"destinationPath\" : \"...\",      \"mapreduceServiceName\" : \"...\",      \"schedulerPoolName\" : \"...\",      \"userName\" : \"...\",      \"sourceUser\" : \"...\",      \"numMaps\" : 12345,      \"dryRun\" : true,      \"bandwidthPerMap\" : 12345,      \"abortOnError\" : true,      \"removeMissingFiles\" : true,      \"preserveReplicationCount\" : true,      \"preserveBlockSize\" : true,      \"preservePermissions\" : true,      \"logPath\" : \"...\",      \"skipChecksumChecks\" : true,      \"skipListingChecksumChecks\" : true,      \"skipTrash\" : true,      \"replicationStrategy\" : \"STATIC\",      \"preserveXAttrs\" : true,      \"exclusionFilters\" : [ \"...\", \"...\" ],      \"raiseSnapshotDiffFailures\" : true,      \"destinationCloudAccount\" : \"...\"    },    \"replicateImpalaMetadata\" : true,    \"runInvalidateMetadata\" : true,    \"dryRun\" : true,    \"numThreads\" : 12345,    \"sentryMigration\" : true,    \"skipUrlPermissions\" : true  },  \"id\" : 12345,  \"displayName\" : \"...\",  \"description\" : \"...\",  \"startTime\" : \"...\",  \"endTime\" : \"...\",  \"interval\" : 12345,  \"intervalUnit\" : \"MONTH\",  \"nextRun\" : \"...\",  \"paused\" : true,  \"alertOnStart\" : true,  \"alertOnSuccess\" : true,  \"alertOnFail\" : true,  \"alertOnAbort\" : true}", ApiReplicationSchedule.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default ReplicationsResourceApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }

}
