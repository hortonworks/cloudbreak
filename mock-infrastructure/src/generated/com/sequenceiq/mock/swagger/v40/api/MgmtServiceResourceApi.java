/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.16).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.sequenceiq.mock.swagger.v40.api;

import com.sequenceiq.mock.swagger.model.ApiCommand;
import com.sequenceiq.mock.swagger.model.ApiCommandList;
import com.sequenceiq.mock.swagger.model.ApiRoleTypeList;
import com.sequenceiq.mock.swagger.model.ApiService;
import com.sequenceiq.mock.swagger.model.ApiServiceConfig;
import com.fasterxml.jackson.databind.ObjectMapper;
import io.swagger.annotations.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;
import javax.validation.constraints.*;
import java.io.IOException;
import java.util.List;
import java.util.Optional;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-10-26T08:00:53.907+01:00")

@Api(value = "MgmtServiceResource", description = "the MgmtServiceResource API")
@RequestMapping(value = "/api/v40")
public interface MgmtServiceResourceApi {

    Logger log = LoggerFactory.getLogger(MgmtServiceResourceApi.class);

    default Optional<ObjectMapper> getObjectMapper() {
        return Optional.empty();
    }

    default Optional<HttpServletRequest> getRequest() {
        return Optional.empty();
    }

    default Optional<String> getAcceptHeader() {
        return getRequest().map(r -> r.getHeader("Accept"));
    }

    @ApiOperation(value = "Automatically assign roles to hosts and create the roles for the Cloudera Management Service.", nickname = "autoAssignRoles", notes = "Automatically assign roles to hosts and create the roles for the Cloudera Management Service. <p> Assignments are done based on number of hosts in the deployment and hardware specifications. If no hosts are part of the deployment, an exception will be thrown preventing any role assignments. Existing roles will be taken into account and their assignments will be not be modified. The deployment should not have any clusters when calling this endpoint. If it does, an exception will be thrown preventing any role assignments. <p> Available since API v6.", authorizations = {
        @Authorization(value = "basic")
    }, tags={ "MgmtServiceResource", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "Success") })
    @RequestMapping(value = "/cm/service/autoAssignRoles",
        method = RequestMethod.PUT)
    default ResponseEntity<Void> autoAssignRoles() {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default MgmtServiceResourceApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Automatically configures roles of the Cloudera Management Service.", nickname = "autoConfigure", notes = "Automatically configures roles of the Cloudera Management Service. <p> Overwrites some existing configurations. Only default role config groups must exist before calling this endpoint. Other role config groups must not exist. If they do, an exception will be thrown preventing any configuration. Ignores any clusters (and their services and roles) colocated with the Cloudera Management Service. To avoid over-committing the heap on hosts, place the Cloudera Management Service roles on machines not used by any of the clusters. <p> Available since API v6.", authorizations = {
        @Authorization(value = "basic")
    }, tags={ "MgmtServiceResource", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "Success") })
    @RequestMapping(value = "/cm/service/autoConfigure",
        method = RequestMethod.PUT)
    default ResponseEntity<Void> autoConfigure() {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default MgmtServiceResourceApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Delete the Cloudera Management Services.", nickname = "deleteCMS", notes = "Delete the Cloudera Management Services. <p> This method will fail if a CMS instance doesn't already exist.", response = ApiService.class, authorizations = {
        @Authorization(value = "basic")
    }, tags={ "MgmtServiceResource", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "Success", response = ApiService.class) })
    @RequestMapping(value = "/cm/service",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    default ResponseEntity<ApiService> deleteCMS() {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"name\" : \"...\",  \"type\" : \"...\",  \"clusterRef\" : {    \"clusterName\" : \"...\",    \"displayName\" : \"...\"  },  \"serviceState\" : \"STARTING\",  \"healthSummary\" : \"DISABLED\",  \"configStalenessStatus\" : \"STALE\",  \"clientConfigStalenessStatus\" : \"STALE\",  \"healthChecks\" : [ {    \"name\" : \"...\",    \"summary\" : \"BAD\",    \"explanation\" : \"...\",    \"suppressed\" : true  }, {    \"name\" : \"...\",    \"summary\" : \"HISTORY_NOT_AVAILABLE\",    \"explanation\" : \"...\",    \"suppressed\" : true  } ],  \"serviceUrl\" : \"...\",  \"roleInstancesUrl\" : \"...\",  \"maintenanceMode\" : true,  \"maintenanceOwners\" : [ \"SERVICE\", \"ROLE\" ],  \"config\" : {    \"roleTypeConfigs\" : [ {      \"roleType\" : \"...\",      \"items\" : [ { }, { } ]    }, {      \"roleType\" : \"...\",      \"items\" : [ { }, { } ]    } ],    \"items\" : [ {      \"name\" : \"...\",      \"value\" : \"...\",      \"required\" : true,      \"default\" : \"...\",      \"displayName\" : \"...\",      \"description\" : \"...\",      \"relatedName\" : \"...\",      \"sensitive\" : true,      \"validationState\" : \"OK\",      \"validationMessage\" : \"...\",      \"validationWarningsSuppressed\" : true    }, {      \"name\" : \"...\",      \"value\" : \"...\",      \"required\" : true,      \"default\" : \"...\",      \"displayName\" : \"...\",      \"description\" : \"...\",      \"relatedName\" : \"...\",      \"sensitive\" : true,      \"validationState\" : \"ERROR\",      \"validationMessage\" : \"...\",      \"validationWarningsSuppressed\" : true    } ]  },  \"roles\" : [ {    \"name\" : \"...\",    \"type\" : \"...\",    \"hostRef\" : {      \"hostId\" : \"...\",      \"hostname\" : \"...\"    },    \"serviceRef\" : {      \"peerName\" : \"...\",      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"serviceDisplayName\" : \"...\",      \"serviceType\" : \"...\"    },    \"roleState\" : \"STARTED\",    \"commissionState\" : \"COMMISSIONED\",    \"healthSummary\" : \"HISTORY_NOT_AVAILABLE\",    \"configStalenessStatus\" : \"FRESH\",    \"healthChecks\" : [ {      \"name\" : \"...\",      \"summary\" : \"CONCERNING\",      \"explanation\" : \"...\",      \"suppressed\" : true    }, {      \"name\" : \"...\",      \"summary\" : \"NOT_AVAILABLE\",      \"explanation\" : \"...\",      \"suppressed\" : true    } ],    \"haStatus\" : \"UNKNOWN\",    \"roleUrl\" : \"...\",    \"maintenanceMode\" : true,    \"maintenanceOwners\" : [ \"HOST\", \"HOST\" ],    \"config\" : {      \"items\" : [ { }, { } ]    },    \"roleConfigGroupRef\" : {      \"roleConfigGroupName\" : \"...\"    },    \"zooKeeperServerMode\" : \"REPLICATED_LEADER_ELECTION\",    \"entityStatus\" : \"STARTING\",    \"tags\" : [ {      \"name\" : \"...\",      \"value\" : \"...\"    }, {      \"name\" : \"...\",      \"value\" : \"...\"    } ]  }, {    \"name\" : \"...\",    \"type\" : \"...\",    \"hostRef\" : {      \"hostId\" : \"...\",      \"hostname\" : \"...\"    },    \"serviceRef\" : {      \"peerName\" : \"...\",      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"serviceDisplayName\" : \"...\",      \"serviceType\" : \"...\"    },    \"roleState\" : \"STARTING\",    \"commissionState\" : \"UNKNOWN\",    \"healthSummary\" : \"DISABLED\",    \"configStalenessStatus\" : \"STALE\",    \"healthChecks\" : [ {      \"name\" : \"...\",      \"summary\" : \"CONCERNING\",      \"explanation\" : \"...\",      \"suppressed\" : true    }, {      \"name\" : \"...\",      \"summary\" : \"GOOD\",      \"explanation\" : \"...\",      \"suppressed\" : true    } ],    \"haStatus\" : \"STANDBY\",    \"roleUrl\" : \"...\",    \"maintenanceMode\" : true,    \"maintenanceOwners\" : [ \"ROLE\", \"SERVICE\" ],    \"config\" : {      \"items\" : [ { }, { } ]    },    \"roleConfigGroupRef\" : {      \"roleConfigGroupName\" : \"...\"    },    \"zooKeeperServerMode\" : \"STANDALONE\",    \"entityStatus\" : \"NONE\",    \"tags\" : [ {      \"name\" : \"...\",      \"value\" : \"...\"    }, {      \"name\" : \"...\",      \"value\" : \"...\"    } ]  } ],  \"displayName\" : \"...\",  \"roleConfigGroups\" : [ {    \"name\" : \"...\",    \"roleType\" : \"...\",    \"base\" : true,    \"config\" : {      \"items\" : [ { }, { } ]    },    \"displayName\" : \"...\",    \"serviceRef\" : {      \"peerName\" : \"...\",      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"serviceDisplayName\" : \"...\",      \"serviceType\" : \"...\"    }  }, {    \"name\" : \"...\",    \"roleType\" : \"...\",    \"base\" : true,    \"config\" : {      \"items\" : [ { }, { } ]    },    \"displayName\" : \"...\",    \"serviceRef\" : {      \"peerName\" : \"...\",      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"serviceDisplayName\" : \"...\",      \"serviceType\" : \"...\"    }  } ],  \"replicationSchedules\" : [ {    \"hdfsArguments\" : {      \"sourceService\" : { },      \"sourcePath\" : \"...\",      \"destinationPath\" : \"...\",      \"mapreduceServiceName\" : \"...\",      \"schedulerPoolName\" : \"...\",      \"userName\" : \"...\",      \"sourceUser\" : \"...\",      \"numMaps\" : 12345,      \"dryRun\" : true,      \"bandwidthPerMap\" : 12345,      \"abortOnError\" : true,      \"removeMissingFiles\" : true,      \"preserveReplicationCount\" : true,      \"preserveBlockSize\" : true,      \"preservePermissions\" : true,      \"logPath\" : \"...\",      \"skipChecksumChecks\" : true,      \"skipListingChecksumChecks\" : true,      \"skipTrash\" : true,      \"replicationStrategy\" : \"DYNAMIC\",      \"preserveXAttrs\" : true,      \"exclusionFilters\" : [ \"...\", \"...\" ],      \"raiseSnapshotDiffFailures\" : true,      \"destinationCloudAccount\" : \"...\"    },    \"hiveArguments\" : {      \"sourceService\" : { },      \"tableFilters\" : [ { }, { } ],      \"exportDir\" : \"...\",      \"force\" : true,      \"replicateData\" : true,      \"hdfsArguments\" : { },      \"replicateImpalaMetadata\" : true,      \"runInvalidateMetadata\" : true,      \"dryRun\" : true,      \"numThreads\" : 12345,      \"sentryMigration\" : true,      \"skipUrlPermissions\" : true    },    \"hdfsCloudArguments\" : {      \"sourceAccount\" : \"...\",      \"destinationAccount\" : \"...\",      \"sourceService\" : { },      \"sourcePath\" : \"...\",      \"destinationPath\" : \"...\",      \"mapreduceServiceName\" : \"...\",      \"schedulerPoolName\" : \"...\",      \"userName\" : \"...\",      \"sourceUser\" : \"...\",      \"numMaps\" : 12345,      \"dryRun\" : true,      \"bandwidthPerMap\" : 12345,      \"abortOnError\" : true,      \"removeMissingFiles\" : true,      \"preserveReplicationCount\" : true,      \"preserveBlockSize\" : true,      \"preservePermissions\" : true,      \"logPath\" : \"...\",      \"skipChecksumChecks\" : true,      \"skipListingChecksumChecks\" : true,      \"skipTrash\" : true,      \"replicationStrategy\" : \"DYNAMIC\",      \"preserveXAttrs\" : true,      \"exclusionFilters\" : [ \"...\", \"...\" ],      \"raiseSnapshotDiffFailures\" : true,      \"destinationCloudAccount\" : \"...\"    },    \"history\" : [ {      \"hdfsResult\" : { },      \"hiveResult\" : { },      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    }, {      \"hdfsResult\" : { },      \"hiveResult\" : { },      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    } ],    \"active\" : true,    \"hiveCloudArguments\" : {      \"sourceAccount\" : \"...\",      \"destinationAccount\" : \"...\",      \"cloudRootPath\" : \"...\",      \"replicationOption\" : \"METADATA_AND_DATA\",      \"sourceService\" : { },      \"tableFilters\" : [ { }, { } ],      \"exportDir\" : \"...\",      \"force\" : true,      \"replicateData\" : true,      \"hdfsArguments\" : { },      \"replicateImpalaMetadata\" : true,      \"runInvalidateMetadata\" : true,      \"dryRun\" : true,      \"numThreads\" : 12345,      \"sentryMigration\" : true,      \"skipUrlPermissions\" : true    },    \"id\" : 12345,    \"displayName\" : \"...\",    \"description\" : \"...\",    \"startTime\" : \"...\",    \"endTime\" : \"...\",    \"interval\" : 12345,    \"intervalUnit\" : \"YEAR\",    \"nextRun\" : \"...\",    \"paused\" : true,    \"alertOnStart\" : true,    \"alertOnSuccess\" : true,    \"alertOnFail\" : true,    \"alertOnAbort\" : true  }, {    \"hdfsArguments\" : {      \"sourceService\" : { },      \"sourcePath\" : \"...\",      \"destinationPath\" : \"...\",      \"mapreduceServiceName\" : \"...\",      \"schedulerPoolName\" : \"...\",      \"userName\" : \"...\",      \"sourceUser\" : \"...\",      \"numMaps\" : 12345,      \"dryRun\" : true,      \"bandwidthPerMap\" : 12345,      \"abortOnError\" : true,      \"removeMissingFiles\" : true,      \"preserveReplicationCount\" : true,      \"preserveBlockSize\" : true,      \"preservePermissions\" : true,      \"logPath\" : \"...\",      \"skipChecksumChecks\" : true,      \"skipListingChecksumChecks\" : true,      \"skipTrash\" : true,      \"replicationStrategy\" : \"DYNAMIC\",      \"preserveXAttrs\" : true,      \"exclusionFilters\" : [ \"...\", \"...\" ],      \"raiseSnapshotDiffFailures\" : true,      \"destinationCloudAccount\" : \"...\"    },    \"hiveArguments\" : {      \"sourceService\" : { },      \"tableFilters\" : [ { }, { } ],      \"exportDir\" : \"...\",      \"force\" : true,      \"replicateData\" : true,      \"hdfsArguments\" : { },      \"replicateImpalaMetadata\" : true,      \"runInvalidateMetadata\" : true,      \"dryRun\" : true,      \"numThreads\" : 12345,      \"sentryMigration\" : true,      \"skipUrlPermissions\" : true    },    \"hdfsCloudArguments\" : {      \"sourceAccount\" : \"...\",      \"destinationAccount\" : \"...\",      \"sourceService\" : { },      \"sourcePath\" : \"...\",      \"destinationPath\" : \"...\",      \"mapreduceServiceName\" : \"...\",      \"schedulerPoolName\" : \"...\",      \"userName\" : \"...\",      \"sourceUser\" : \"...\",      \"numMaps\" : 12345,      \"dryRun\" : true,      \"bandwidthPerMap\" : 12345,      \"abortOnError\" : true,      \"removeMissingFiles\" : true,      \"preserveReplicationCount\" : true,      \"preserveBlockSize\" : true,      \"preservePermissions\" : true,      \"logPath\" : \"...\",      \"skipChecksumChecks\" : true,      \"skipListingChecksumChecks\" : true,      \"skipTrash\" : true,      \"replicationStrategy\" : \"STATIC\",      \"preserveXAttrs\" : true,      \"exclusionFilters\" : [ \"...\", \"...\" ],      \"raiseSnapshotDiffFailures\" : true,      \"destinationCloudAccount\" : \"...\"    },    \"history\" : [ {      \"hdfsResult\" : { },      \"hiveResult\" : { },      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    }, {      \"hdfsResult\" : { },      \"hiveResult\" : { },      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    } ],    \"active\" : true,    \"hiveCloudArguments\" : {      \"sourceAccount\" : \"...\",      \"destinationAccount\" : \"...\",      \"cloudRootPath\" : \"...\",      \"replicationOption\" : \"KEEP_DATA_IN_CLOUD\",      \"sourceService\" : { },      \"tableFilters\" : [ { }, { } ],      \"exportDir\" : \"...\",      \"force\" : true,      \"replicateData\" : true,      \"hdfsArguments\" : { },      \"replicateImpalaMetadata\" : true,      \"runInvalidateMetadata\" : true,      \"dryRun\" : true,      \"numThreads\" : 12345,      \"sentryMigration\" : true,      \"skipUrlPermissions\" : true    },    \"id\" : 12345,    \"displayName\" : \"...\",    \"description\" : \"...\",    \"startTime\" : \"...\",    \"endTime\" : \"...\",    \"interval\" : 12345,    \"intervalUnit\" : \"MINUTE\",    \"nextRun\" : \"...\",    \"paused\" : true,    \"alertOnStart\" : true,    \"alertOnSuccess\" : true,    \"alertOnFail\" : true,    \"alertOnAbort\" : true  } ],  \"snapshotPolicies\" : [ {    \"name\" : \"...\",    \"description\" : \"...\",    \"hourlySnapshots\" : 12345,    \"dailySnapshots\" : 12345,    \"weeklySnapshots\" : 12345,    \"monthlySnapshots\" : 12345,    \"yearlySnapshots\" : 12345,    \"minuteOfHour\" : 12345,    \"hoursForHourlySnapshots\" : [ 12345, 12345 ],    \"hourOfDay\" : 12345,    \"dayOfWeek\" : 12345,    \"dayOfMonth\" : 12345,    \"monthOfYear\" : 12345,    \"alertOnStart\" : true,    \"alertOnSuccess\" : true,    \"alertOnFail\" : true,    \"alertOnAbort\" : true,    \"hbaseArguments\" : {      \"tableRegExps\" : [ \"...\", \"...\" ],      \"storage\" : \"LOCAL\"    },    \"hdfsArguments\" : {      \"pathPatterns\" : [ \"...\", \"...\" ]    },    \"lastCommand\" : {      \"hbaseResult\" : { },      \"hdfsResult\" : { },      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    },    \"lastSuccessfulCommand\" : {      \"hbaseResult\" : { },      \"hdfsResult\" : { },      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    },    \"paused\" : true  }, {    \"name\" : \"...\",    \"description\" : \"...\",    \"hourlySnapshots\" : 12345,    \"dailySnapshots\" : 12345,    \"weeklySnapshots\" : 12345,    \"monthlySnapshots\" : 12345,    \"yearlySnapshots\" : 12345,    \"minuteOfHour\" : 12345,    \"hoursForHourlySnapshots\" : [ 12345, 12345 ],    \"hourOfDay\" : 12345,    \"dayOfWeek\" : 12345,    \"dayOfMonth\" : 12345,    \"monthOfYear\" : 12345,    \"alertOnStart\" : true,    \"alertOnSuccess\" : true,    \"alertOnFail\" : true,    \"alertOnAbort\" : true,    \"hbaseArguments\" : {      \"tableRegExps\" : [ \"...\", \"...\" ],      \"storage\" : \"LOCAL\"    },    \"hdfsArguments\" : {      \"pathPatterns\" : [ \"...\", \"...\" ]    },    \"lastCommand\" : {      \"hbaseResult\" : { },      \"hdfsResult\" : { },      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    },    \"lastSuccessfulCommand\" : {      \"hbaseResult\" : { },      \"hdfsResult\" : { },      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    },    \"paused\" : true  } ],  \"entityStatus\" : \"NONE\",  \"tags\" : [ {    \"name\" : \"...\",    \"value\" : \"...\"  }, {    \"name\" : \"...\",    \"value\" : \"...\"  } ],  \"serviceVersion\" : \"...\"}", ApiService.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default MgmtServiceResourceApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Put Cloudera Management Service into maintenance mode.", nickname = "enterMaintenanceMode", notes = "Put Cloudera Management Service into maintenance mode. This is a synchronous command. The result is known immediately upon return.  <p>Available since API v18.</p>", response = ApiCommand.class, authorizations = {
        @Authorization(value = "basic")
    }, tags={ "MgmtServiceResource", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Success", response = ApiCommand.class) })
    @RequestMapping(value = "/cm/service/commands/enterMaintenanceMode",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    default ResponseEntity<ApiCommand> enterMaintenanceMode() {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"id\" : 12345,  \"name\" : \"...\",  \"startTime\" : \"...\",  \"endTime\" : \"...\",  \"active\" : true,  \"success\" : true,  \"resultMessage\" : \"...\",  \"resultDataUrl\" : \"...\",  \"clusterRef\" : {    \"clusterName\" : \"...\",    \"displayName\" : \"...\"  },  \"serviceRef\" : {    \"peerName\" : \"...\",    \"clusterName\" : \"...\",    \"serviceName\" : \"...\",    \"serviceDisplayName\" : \"...\",    \"serviceType\" : \"...\"  },  \"roleRef\" : {    \"clusterName\" : \"...\",    \"serviceName\" : \"...\",    \"roleName\" : \"...\"  },  \"hostRef\" : {    \"hostId\" : \"...\",    \"hostname\" : \"...\"  },  \"parent\" : {    \"id\" : 12345,    \"name\" : \"...\",    \"startTime\" : \"...\",    \"endTime\" : \"...\",    \"active\" : true,    \"success\" : true,    \"resultMessage\" : \"...\",    \"resultDataUrl\" : \"...\",    \"clusterRef\" : {      \"clusterName\" : \"...\",      \"displayName\" : \"...\"    },    \"serviceRef\" : {      \"peerName\" : \"...\",      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"serviceDisplayName\" : \"...\",      \"serviceType\" : \"...\"    },    \"roleRef\" : {      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"roleName\" : \"...\"    },    \"hostRef\" : {      \"hostId\" : \"...\",      \"hostname\" : \"...\"    },    \"parent\" : { },    \"children\" : {      \"items\" : [ { }, { } ]    },    \"canRetry\" : true  },  \"children\" : {    \"items\" : [ {      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    }, {      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    } ]  },  \"canRetry\" : true}", ApiCommand.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default MgmtServiceResourceApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Take Cloudera Management Service out of maintenance mode.", nickname = "exitMaintenanceMode", notes = "Take Cloudera Management Service out of maintenance mode. This is a synchronous command. The result is known immediately upon return.  <p>Available since API v18.</p>", response = ApiCommand.class, authorizations = {
        @Authorization(value = "basic")
    }, tags={ "MgmtServiceResource", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Success", response = ApiCommand.class) })
    @RequestMapping(value = "/cm/service/commands/exitMaintenanceMode",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    default ResponseEntity<ApiCommand> exitMaintenanceMode() {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"id\" : 12345,  \"name\" : \"...\",  \"startTime\" : \"...\",  \"endTime\" : \"...\",  \"active\" : true,  \"success\" : true,  \"resultMessage\" : \"...\",  \"resultDataUrl\" : \"...\",  \"clusterRef\" : {    \"clusterName\" : \"...\",    \"displayName\" : \"...\"  },  \"serviceRef\" : {    \"peerName\" : \"...\",    \"clusterName\" : \"...\",    \"serviceName\" : \"...\",    \"serviceDisplayName\" : \"...\",    \"serviceType\" : \"...\"  },  \"roleRef\" : {    \"clusterName\" : \"...\",    \"serviceName\" : \"...\",    \"roleName\" : \"...\"  },  \"hostRef\" : {    \"hostId\" : \"...\",    \"hostname\" : \"...\"  },  \"parent\" : {    \"id\" : 12345,    \"name\" : \"...\",    \"startTime\" : \"...\",    \"endTime\" : \"...\",    \"active\" : true,    \"success\" : true,    \"resultMessage\" : \"...\",    \"resultDataUrl\" : \"...\",    \"clusterRef\" : {      \"clusterName\" : \"...\",      \"displayName\" : \"...\"    },    \"serviceRef\" : {      \"peerName\" : \"...\",      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"serviceDisplayName\" : \"...\",      \"serviceType\" : \"...\"    },    \"roleRef\" : {      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"roleName\" : \"...\"    },    \"hostRef\" : {      \"hostId\" : \"...\",      \"hostname\" : \"...\"    },    \"parent\" : { },    \"children\" : {      \"items\" : [ { }, { } ]    },    \"canRetry\" : true  },  \"children\" : {    \"items\" : [ {      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    }, {      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    } ]  },  \"canRetry\" : true}", ApiCommand.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default MgmtServiceResourceApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "List active Cloudera Management Services commands.", nickname = "listActiveCommands", notes = "List active Cloudera Management Services commands.", response = ApiCommandList.class, authorizations = {
        @Authorization(value = "basic")
    }, tags={ "MgmtServiceResource", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = ApiCommandList.class) })
    @RequestMapping(value = "/cm/service/commands",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<ApiCommandList> listActiveCommands(@ApiParam(value = "The view of the data to materialize, either \"summary\" or \"full\".", allowableValues = "EXPORT, EXPORT_REDACTED, FULL, FULL_WITH_HEALTH_CHECK_EXPLANATION, SUMMARY", defaultValue = "summary") @Valid @RequestParam(value = "view", required = false, defaultValue="summary") String view) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"items\" : [ {    \"id\" : 12345,    \"name\" : \"...\",    \"startTime\" : \"...\",    \"endTime\" : \"...\",    \"active\" : true,    \"success\" : true,    \"resultMessage\" : \"...\",    \"resultDataUrl\" : \"...\",    \"clusterRef\" : {      \"clusterName\" : \"...\",      \"displayName\" : \"...\"    },    \"serviceRef\" : {      \"peerName\" : \"...\",      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"serviceDisplayName\" : \"...\",      \"serviceType\" : \"...\"    },    \"roleRef\" : {      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"roleName\" : \"...\"    },    \"hostRef\" : {      \"hostId\" : \"...\",      \"hostname\" : \"...\"    },    \"parent\" : { },    \"children\" : {      \"items\" : [ { }, { } ]    },    \"canRetry\" : true  }, {    \"id\" : 12345,    \"name\" : \"...\",    \"startTime\" : \"...\",    \"endTime\" : \"...\",    \"active\" : true,    \"success\" : true,    \"resultMessage\" : \"...\",    \"resultDataUrl\" : \"...\",    \"clusterRef\" : {      \"clusterName\" : \"...\",      \"displayName\" : \"...\"    },    \"serviceRef\" : {      \"peerName\" : \"...\",      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"serviceDisplayName\" : \"...\",      \"serviceType\" : \"...\"    },    \"roleRef\" : {      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"roleName\" : \"...\"    },    \"hostRef\" : {      \"hostId\" : \"...\",      \"hostname\" : \"...\"    },    \"parent\" : { },    \"children\" : {      \"items\" : [ { }, { } ]    },    \"canRetry\" : true  } ]}", ApiCommandList.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default MgmtServiceResourceApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "List the supported role types for the Cloudera Management Services.", nickname = "listRoleTypes", notes = "List the supported role types for the Cloudera Management Services.", response = ApiRoleTypeList.class, authorizations = {
        @Authorization(value = "basic")
    }, tags={ "MgmtServiceResource", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = ApiRoleTypeList.class) })
    @RequestMapping(value = "/cm/service/roleTypes",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<ApiRoleTypeList> listRoleTypes() {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"items\" : [ \"...\", \"...\" ]}", ApiRoleTypeList.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default MgmtServiceResourceApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Retrieve information about the Cloudera Management Services.", nickname = "readService", notes = "Retrieve information about the Cloudera Management Services.", response = ApiService.class, authorizations = {
        @Authorization(value = "basic")
    }, tags={ "MgmtServiceResource", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = ApiService.class) })
    @RequestMapping(value = "/cm/service",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<ApiService> readService(@ApiParam(value = "", allowableValues = "EXPORT, EXPORT_REDACTED, FULL, FULL_WITH_HEALTH_CHECK_EXPLANATION, SUMMARY", defaultValue = "summary") @Valid @RequestParam(value = "view", required = false, defaultValue="summary") String view) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"name\" : \"...\",  \"type\" : \"...\",  \"clusterRef\" : {    \"clusterName\" : \"...\",    \"displayName\" : \"...\"  },  \"serviceState\" : \"HISTORY_NOT_AVAILABLE\",  \"healthSummary\" : \"BAD\",  \"configStalenessStatus\" : \"FRESH\",  \"clientConfigStalenessStatus\" : \"STALE\",  \"healthChecks\" : [ {    \"name\" : \"...\",    \"summary\" : \"NOT_AVAILABLE\",    \"explanation\" : \"...\",    \"suppressed\" : true  }, {    \"name\" : \"...\",    \"summary\" : \"CONCERNING\",    \"explanation\" : \"...\",    \"suppressed\" : true  } ],  \"serviceUrl\" : \"...\",  \"roleInstancesUrl\" : \"...\",  \"maintenanceMode\" : true,  \"maintenanceOwners\" : [ \"HOST\", \"HOST\" ],  \"config\" : {    \"roleTypeConfigs\" : [ {      \"roleType\" : \"...\",      \"items\" : [ { }, { } ]    }, {      \"roleType\" : \"...\",      \"items\" : [ { }, { } ]    } ],    \"items\" : [ {      \"name\" : \"...\",      \"value\" : \"...\",      \"required\" : true,      \"default\" : \"...\",      \"displayName\" : \"...\",      \"description\" : \"...\",      \"relatedName\" : \"...\",      \"sensitive\" : true,      \"validationState\" : \"WARNING\",      \"validationMessage\" : \"...\",      \"validationWarningsSuppressed\" : true    }, {      \"name\" : \"...\",      \"value\" : \"...\",      \"required\" : true,      \"default\" : \"...\",      \"displayName\" : \"...\",      \"description\" : \"...\",      \"relatedName\" : \"...\",      \"sensitive\" : true,      \"validationState\" : \"ERROR\",      \"validationMessage\" : \"...\",      \"validationWarningsSuppressed\" : true    } ]  },  \"roles\" : [ {    \"name\" : \"...\",    \"type\" : \"...\",    \"hostRef\" : {      \"hostId\" : \"...\",      \"hostname\" : \"...\"    },    \"serviceRef\" : {      \"peerName\" : \"...\",      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"serviceDisplayName\" : \"...\",      \"serviceType\" : \"...\"    },    \"roleState\" : \"STOPPING\",    \"commissionState\" : \"COMMISSIONED\",    \"healthSummary\" : \"DISABLED\",    \"configStalenessStatus\" : \"FRESH\",    \"healthChecks\" : [ {      \"name\" : \"...\",      \"summary\" : \"HISTORY_NOT_AVAILABLE\",      \"explanation\" : \"...\",      \"suppressed\" : true    }, {      \"name\" : \"...\",      \"summary\" : \"HISTORY_NOT_AVAILABLE\",      \"explanation\" : \"...\",      \"suppressed\" : true    } ],    \"haStatus\" : \"ACTIVE\",    \"roleUrl\" : \"...\",    \"maintenanceMode\" : true,    \"maintenanceOwners\" : [ \"HOST\", \"SERVICE\" ],    \"config\" : {      \"items\" : [ { }, { } ]    },    \"roleConfigGroupRef\" : {      \"roleConfigGroupName\" : \"...\"    },    \"zooKeeperServerMode\" : \"REPLICATED_OBSERVER\",    \"entityStatus\" : \"STOPPED\",    \"tags\" : [ {      \"name\" : \"...\",      \"value\" : \"...\"    }, {      \"name\" : \"...\",      \"value\" : \"...\"    } ]  }, {    \"name\" : \"...\",    \"type\" : \"...\",    \"hostRef\" : {      \"hostId\" : \"...\",      \"hostname\" : \"...\"    },    \"serviceRef\" : {      \"peerName\" : \"...\",      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"serviceDisplayName\" : \"...\",      \"serviceType\" : \"...\"    },    \"roleState\" : \"STOPPING\",    \"commissionState\" : \"UNKNOWN\",    \"healthSummary\" : \"NOT_AVAILABLE\",    \"configStalenessStatus\" : \"STALE\",    \"healthChecks\" : [ {      \"name\" : \"...\",      \"summary\" : \"DISABLED\",      \"explanation\" : \"...\",      \"suppressed\" : true    }, {      \"name\" : \"...\",      \"summary\" : \"DISABLED\",      \"explanation\" : \"...\",      \"suppressed\" : true    } ],    \"haStatus\" : \"UNKNOWN\",    \"roleUrl\" : \"...\",    \"maintenanceMode\" : true,    \"maintenanceOwners\" : [ \"SERVICE\", \"HOST\" ],    \"config\" : {      \"items\" : [ { }, { } ]    },    \"roleConfigGroupRef\" : {      \"roleConfigGroupName\" : \"...\"    },    \"zooKeeperServerMode\" : \"REPLICATED_LEADER_ELECTION\",    \"entityStatus\" : \"HISTORY_NOT_AVAILABLE\",    \"tags\" : [ {      \"name\" : \"...\",      \"value\" : \"...\"    }, {      \"name\" : \"...\",      \"value\" : \"...\"    } ]  } ],  \"displayName\" : \"...\",  \"roleConfigGroups\" : [ {    \"name\" : \"...\",    \"roleType\" : \"...\",    \"base\" : true,    \"config\" : {      \"items\" : [ { }, { } ]    },    \"displayName\" : \"...\",    \"serviceRef\" : {      \"peerName\" : \"...\",      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"serviceDisplayName\" : \"...\",      \"serviceType\" : \"...\"    }  }, {    \"name\" : \"...\",    \"roleType\" : \"...\",    \"base\" : true,    \"config\" : {      \"items\" : [ { }, { } ]    },    \"displayName\" : \"...\",    \"serviceRef\" : {      \"peerName\" : \"...\",      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"serviceDisplayName\" : \"...\",      \"serviceType\" : \"...\"    }  } ],  \"replicationSchedules\" : [ {    \"hdfsArguments\" : {      \"sourceService\" : { },      \"sourcePath\" : \"...\",      \"destinationPath\" : \"...\",      \"mapreduceServiceName\" : \"...\",      \"schedulerPoolName\" : \"...\",      \"userName\" : \"...\",      \"sourceUser\" : \"...\",      \"numMaps\" : 12345,      \"dryRun\" : true,      \"bandwidthPerMap\" : 12345,      \"abortOnError\" : true,      \"removeMissingFiles\" : true,      \"preserveReplicationCount\" : true,      \"preserveBlockSize\" : true,      \"preservePermissions\" : true,      \"logPath\" : \"...\",      \"skipChecksumChecks\" : true,      \"skipListingChecksumChecks\" : true,      \"skipTrash\" : true,      \"replicationStrategy\" : \"STATIC\",      \"preserveXAttrs\" : true,      \"exclusionFilters\" : [ \"...\", \"...\" ],      \"raiseSnapshotDiffFailures\" : true,      \"destinationCloudAccount\" : \"...\"    },    \"hiveArguments\" : {      \"sourceService\" : { },      \"tableFilters\" : [ { }, { } ],      \"exportDir\" : \"...\",      \"force\" : true,      \"replicateData\" : true,      \"hdfsArguments\" : { },      \"replicateImpalaMetadata\" : true,      \"runInvalidateMetadata\" : true,      \"dryRun\" : true,      \"numThreads\" : 12345,      \"sentryMigration\" : true,      \"skipUrlPermissions\" : true    },    \"hdfsCloudArguments\" : {      \"sourceAccount\" : \"...\",      \"destinationAccount\" : \"...\",      \"sourceService\" : { },      \"sourcePath\" : \"...\",      \"destinationPath\" : \"...\",      \"mapreduceServiceName\" : \"...\",      \"schedulerPoolName\" : \"...\",      \"userName\" : \"...\",      \"sourceUser\" : \"...\",      \"numMaps\" : 12345,      \"dryRun\" : true,      \"bandwidthPerMap\" : 12345,      \"abortOnError\" : true,      \"removeMissingFiles\" : true,      \"preserveReplicationCount\" : true,      \"preserveBlockSize\" : true,      \"preservePermissions\" : true,      \"logPath\" : \"...\",      \"skipChecksumChecks\" : true,      \"skipListingChecksumChecks\" : true,      \"skipTrash\" : true,      \"replicationStrategy\" : \"STATIC\",      \"preserveXAttrs\" : true,      \"exclusionFilters\" : [ \"...\", \"...\" ],      \"raiseSnapshotDiffFailures\" : true,      \"destinationCloudAccount\" : \"...\"    },    \"history\" : [ {      \"hdfsResult\" : { },      \"hiveResult\" : { },      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    }, {      \"hdfsResult\" : { },      \"hiveResult\" : { },      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    } ],    \"active\" : true,    \"hiveCloudArguments\" : {      \"sourceAccount\" : \"...\",      \"destinationAccount\" : \"...\",      \"cloudRootPath\" : \"...\",      \"replicationOption\" : \"KEEP_DATA_IN_CLOUD\",      \"sourceService\" : { },      \"tableFilters\" : [ { }, { } ],      \"exportDir\" : \"...\",      \"force\" : true,      \"replicateData\" : true,      \"hdfsArguments\" : { },      \"replicateImpalaMetadata\" : true,      \"runInvalidateMetadata\" : true,      \"dryRun\" : true,      \"numThreads\" : 12345,      \"sentryMigration\" : true,      \"skipUrlPermissions\" : true    },    \"id\" : 12345,    \"displayName\" : \"...\",    \"description\" : \"...\",    \"startTime\" : \"...\",    \"endTime\" : \"...\",    \"interval\" : 12345,    \"intervalUnit\" : \"HOUR\",    \"nextRun\" : \"...\",    \"paused\" : true,    \"alertOnStart\" : true,    \"alertOnSuccess\" : true,    \"alertOnFail\" : true,    \"alertOnAbort\" : true  }, {    \"hdfsArguments\" : {      \"sourceService\" : { },      \"sourcePath\" : \"...\",      \"destinationPath\" : \"...\",      \"mapreduceServiceName\" : \"...\",      \"schedulerPoolName\" : \"...\",      \"userName\" : \"...\",      \"sourceUser\" : \"...\",      \"numMaps\" : 12345,      \"dryRun\" : true,      \"bandwidthPerMap\" : 12345,      \"abortOnError\" : true,      \"removeMissingFiles\" : true,      \"preserveReplicationCount\" : true,      \"preserveBlockSize\" : true,      \"preservePermissions\" : true,      \"logPath\" : \"...\",      \"skipChecksumChecks\" : true,      \"skipListingChecksumChecks\" : true,      \"skipTrash\" : true,      \"replicationStrategy\" : \"STATIC\",      \"preserveXAttrs\" : true,      \"exclusionFilters\" : [ \"...\", \"...\" ],      \"raiseSnapshotDiffFailures\" : true,      \"destinationCloudAccount\" : \"...\"    },    \"hiveArguments\" : {      \"sourceService\" : { },      \"tableFilters\" : [ { }, { } ],      \"exportDir\" : \"...\",      \"force\" : true,      \"replicateData\" : true,      \"hdfsArguments\" : { },      \"replicateImpalaMetadata\" : true,      \"runInvalidateMetadata\" : true,      \"dryRun\" : true,      \"numThreads\" : 12345,      \"sentryMigration\" : true,      \"skipUrlPermissions\" : true    },    \"hdfsCloudArguments\" : {      \"sourceAccount\" : \"...\",      \"destinationAccount\" : \"...\",      \"sourceService\" : { },      \"sourcePath\" : \"...\",      \"destinationPath\" : \"...\",      \"mapreduceServiceName\" : \"...\",      \"schedulerPoolName\" : \"...\",      \"userName\" : \"...\",      \"sourceUser\" : \"...\",      \"numMaps\" : 12345,      \"dryRun\" : true,      \"bandwidthPerMap\" : 12345,      \"abortOnError\" : true,      \"removeMissingFiles\" : true,      \"preserveReplicationCount\" : true,      \"preserveBlockSize\" : true,      \"preservePermissions\" : true,      \"logPath\" : \"...\",      \"skipChecksumChecks\" : true,      \"skipListingChecksumChecks\" : true,      \"skipTrash\" : true,      \"replicationStrategy\" : \"STATIC\",      \"preserveXAttrs\" : true,      \"exclusionFilters\" : [ \"...\", \"...\" ],      \"raiseSnapshotDiffFailures\" : true,      \"destinationCloudAccount\" : \"...\"    },    \"history\" : [ {      \"hdfsResult\" : { },      \"hiveResult\" : { },      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    }, {      \"hdfsResult\" : { },      \"hiveResult\" : { },      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    } ],    \"active\" : true,    \"hiveCloudArguments\" : {      \"sourceAccount\" : \"...\",      \"destinationAccount\" : \"...\",      \"cloudRootPath\" : \"...\",      \"replicationOption\" : \"METADATA_AND_DATA\",      \"sourceService\" : { },      \"tableFilters\" : [ { }, { } ],      \"exportDir\" : \"...\",      \"force\" : true,      \"replicateData\" : true,      \"hdfsArguments\" : { },      \"replicateImpalaMetadata\" : true,      \"runInvalidateMetadata\" : true,      \"dryRun\" : true,      \"numThreads\" : 12345,      \"sentryMigration\" : true,      \"skipUrlPermissions\" : true    },    \"id\" : 12345,    \"displayName\" : \"...\",    \"description\" : \"...\",    \"startTime\" : \"...\",    \"endTime\" : \"...\",    \"interval\" : 12345,    \"intervalUnit\" : \"HOUR\",    \"nextRun\" : \"...\",    \"paused\" : true,    \"alertOnStart\" : true,    \"alertOnSuccess\" : true,    \"alertOnFail\" : true,    \"alertOnAbort\" : true  } ],  \"snapshotPolicies\" : [ {    \"name\" : \"...\",    \"description\" : \"...\",    \"hourlySnapshots\" : 12345,    \"dailySnapshots\" : 12345,    \"weeklySnapshots\" : 12345,    \"monthlySnapshots\" : 12345,    \"yearlySnapshots\" : 12345,    \"minuteOfHour\" : 12345,    \"hoursForHourlySnapshots\" : [ 12345, 12345 ],    \"hourOfDay\" : 12345,    \"dayOfWeek\" : 12345,    \"dayOfMonth\" : 12345,    \"monthOfYear\" : 12345,    \"alertOnStart\" : true,    \"alertOnSuccess\" : true,    \"alertOnFail\" : true,    \"alertOnAbort\" : true,    \"hbaseArguments\" : {      \"tableRegExps\" : [ \"...\", \"...\" ],      \"storage\" : \"REMOTE_S3\"    },    \"hdfsArguments\" : {      \"pathPatterns\" : [ \"...\", \"...\" ]    },    \"lastCommand\" : {      \"hbaseResult\" : { },      \"hdfsResult\" : { },      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    },    \"lastSuccessfulCommand\" : {      \"hbaseResult\" : { },      \"hdfsResult\" : { },      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    },    \"paused\" : true  }, {    \"name\" : \"...\",    \"description\" : \"...\",    \"hourlySnapshots\" : 12345,    \"dailySnapshots\" : 12345,    \"weeklySnapshots\" : 12345,    \"monthlySnapshots\" : 12345,    \"yearlySnapshots\" : 12345,    \"minuteOfHour\" : 12345,    \"hoursForHourlySnapshots\" : [ 12345, 12345 ],    \"hourOfDay\" : 12345,    \"dayOfWeek\" : 12345,    \"dayOfMonth\" : 12345,    \"monthOfYear\" : 12345,    \"alertOnStart\" : true,    \"alertOnSuccess\" : true,    \"alertOnFail\" : true,    \"alertOnAbort\" : true,    \"hbaseArguments\" : {      \"tableRegExps\" : [ \"...\", \"...\" ],      \"storage\" : \"LOCAL\"    },    \"hdfsArguments\" : {      \"pathPatterns\" : [ \"...\", \"...\" ]    },    \"lastCommand\" : {      \"hbaseResult\" : { },      \"hdfsResult\" : { },      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    },    \"lastSuccessfulCommand\" : {      \"hbaseResult\" : { },      \"hdfsResult\" : { },      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    },    \"paused\" : true  } ],  \"entityStatus\" : \"NONE\",  \"tags\" : [ {    \"name\" : \"...\",    \"value\" : \"...\"  }, {    \"name\" : \"...\",    \"value\" : \"...\"  } ],  \"serviceVersion\" : \"...\"}", ApiService.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default MgmtServiceResourceApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Retrieve the configuration of the Cloudera Management Services.", nickname = "readServiceConfig", notes = "Retrieve the configuration of the Cloudera Management Services.", response = ApiServiceConfig.class, authorizations = {
        @Authorization(value = "basic")
    }, tags={ "MgmtServiceResource", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = ApiServiceConfig.class) })
    @RequestMapping(value = "/cm/service/config",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<ApiServiceConfig> readServiceConfig(@ApiParam(value = "The view of the data to materialize, either \"summary\" or \"full\".", allowableValues = "EXPORT, EXPORT_REDACTED, FULL, FULL_WITH_HEALTH_CHECK_EXPLANATION, SUMMARY", defaultValue = "summary") @Valid @RequestParam(value = "view", required = false, defaultValue="summary") String view) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"roleTypeConfigs\" : [ {    \"roleType\" : \"...\",    \"items\" : [ {      \"name\" : \"...\",      \"value\" : \"...\",      \"required\" : true,      \"default\" : \"...\",      \"displayName\" : \"...\",      \"description\" : \"...\",      \"relatedName\" : \"...\",      \"sensitive\" : true,      \"validationState\" : \"ERROR\",      \"validationMessage\" : \"...\",      \"validationWarningsSuppressed\" : true    }, {      \"name\" : \"...\",      \"value\" : \"...\",      \"required\" : true,      \"default\" : \"...\",      \"displayName\" : \"...\",      \"description\" : \"...\",      \"relatedName\" : \"...\",      \"sensitive\" : true,      \"validationState\" : \"OK\",      \"validationMessage\" : \"...\",      \"validationWarningsSuppressed\" : true    } ]  }, {    \"roleType\" : \"...\",    \"items\" : [ {      \"name\" : \"...\",      \"value\" : \"...\",      \"required\" : true,      \"default\" : \"...\",      \"displayName\" : \"...\",      \"description\" : \"...\",      \"relatedName\" : \"...\",      \"sensitive\" : true,      \"validationState\" : \"ERROR\",      \"validationMessage\" : \"...\",      \"validationWarningsSuppressed\" : true    }, {      \"name\" : \"...\",      \"value\" : \"...\",      \"required\" : true,      \"default\" : \"...\",      \"displayName\" : \"...\",      \"description\" : \"...\",      \"relatedName\" : \"...\",      \"sensitive\" : true,      \"validationState\" : \"WARNING\",      \"validationMessage\" : \"...\",      \"validationWarningsSuppressed\" : true    } ]  } ],  \"items\" : [ {    \"name\" : \"...\",    \"value\" : \"...\",    \"required\" : true,    \"default\" : \"...\",    \"displayName\" : \"...\",    \"description\" : \"...\",    \"relatedName\" : \"...\",    \"sensitive\" : true,    \"validationState\" : \"WARNING\",    \"validationMessage\" : \"...\",    \"validationWarningsSuppressed\" : true  }, {    \"name\" : \"...\",    \"value\" : \"...\",    \"required\" : true,    \"default\" : \"...\",    \"displayName\" : \"...\",    \"description\" : \"...\",    \"relatedName\" : \"...\",    \"sensitive\" : true,    \"validationState\" : \"OK\",    \"validationMessage\" : \"...\",    \"validationWarningsSuppressed\" : true  } ]}", ApiServiceConfig.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default MgmtServiceResourceApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Restart the Cloudera Management Services.", nickname = "restartCommand", notes = "Restart the Cloudera Management Services.", response = ApiCommand.class, authorizations = {
        @Authorization(value = "basic")
    }, tags={ "MgmtServiceResource", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Success", response = ApiCommand.class) })
    @RequestMapping(value = "/cm/service/commands/restart",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    default ResponseEntity<ApiCommand> restartCommand() {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"id\" : 12345,  \"name\" : \"...\",  \"startTime\" : \"...\",  \"endTime\" : \"...\",  \"active\" : true,  \"success\" : true,  \"resultMessage\" : \"...\",  \"resultDataUrl\" : \"...\",  \"clusterRef\" : {    \"clusterName\" : \"...\",    \"displayName\" : \"...\"  },  \"serviceRef\" : {    \"peerName\" : \"...\",    \"clusterName\" : \"...\",    \"serviceName\" : \"...\",    \"serviceDisplayName\" : \"...\",    \"serviceType\" : \"...\"  },  \"roleRef\" : {    \"clusterName\" : \"...\",    \"serviceName\" : \"...\",    \"roleName\" : \"...\"  },  \"hostRef\" : {    \"hostId\" : \"...\",    \"hostname\" : \"...\"  },  \"parent\" : {    \"id\" : 12345,    \"name\" : \"...\",    \"startTime\" : \"...\",    \"endTime\" : \"...\",    \"active\" : true,    \"success\" : true,    \"resultMessage\" : \"...\",    \"resultDataUrl\" : \"...\",    \"clusterRef\" : {      \"clusterName\" : \"...\",      \"displayName\" : \"...\"    },    \"serviceRef\" : {      \"peerName\" : \"...\",      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"serviceDisplayName\" : \"...\",      \"serviceType\" : \"...\"    },    \"roleRef\" : {      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"roleName\" : \"...\"    },    \"hostRef\" : {      \"hostId\" : \"...\",      \"hostname\" : \"...\"    },    \"parent\" : { },    \"children\" : {      \"items\" : [ { }, { } ]    },    \"canRetry\" : true  },  \"children\" : {    \"items\" : [ {      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    }, {      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    } ]  },  \"canRetry\" : true}", ApiCommand.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default MgmtServiceResourceApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Setup the Cloudera Management Services.", nickname = "setupCMS", notes = "Setup the Cloudera Management Services. <p> Configure the CMS instance and create all the management roles. The provided configuration data can be used to set up host mappings for each role, and required configuration such as database connection information for specific roles. <p> Regardless of the list of roles provided in the input data, all management roles are created by this call. The input is used to override any default settings for the specific roles. <p> This method needs a valid CM license to be installed beforehand. <p> This method does not start any services or roles. <p> This method will fail if a CMS instance already exists. <p> Available role types: <ul> <li>SERVICEMONITOR</li> <li>ACTIVITYMONITOR</li> <li>HOSTMONITOR</li> <li>REPORTSMANAGER</li> <li>EVENTSERVER</li> <li>ALERTPUBLISHER</li> <li>NAVIGATOR</li> <li>NAVIGATORMETASERVER</li> </ul>  <p/> REPORTSMANAGER, NAVIGATOR and NAVIGATORMETASERVER are only available with Cloudera Manager Enterprise Edition.", response = ApiService.class, authorizations = {
        @Authorization(value = "basic")
    }, tags={ "MgmtServiceResource", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "Success", response = ApiService.class) })
    @RequestMapping(value = "/cm/service",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    default ResponseEntity<ApiService> setupCMS(@ApiParam(value = "Role configuration overrides."  )  @Valid @RequestBody ApiService body) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"name\" : \"...\",  \"type\" : \"...\",  \"clusterRef\" : {    \"clusterName\" : \"...\",    \"displayName\" : \"...\"  },  \"serviceState\" : \"STOPPED\",  \"healthSummary\" : \"CONCERNING\",  \"configStalenessStatus\" : \"STALE\",  \"clientConfigStalenessStatus\" : \"STALE_REFRESHABLE\",  \"healthChecks\" : [ {    \"name\" : \"...\",    \"summary\" : \"CONCERNING\",    \"explanation\" : \"...\",    \"suppressed\" : true  }, {    \"name\" : \"...\",    \"summary\" : \"CONCERNING\",    \"explanation\" : \"...\",    \"suppressed\" : true  } ],  \"serviceUrl\" : \"...\",  \"roleInstancesUrl\" : \"...\",  \"maintenanceMode\" : true,  \"maintenanceOwners\" : [ \"SERVICE\", \"SERVICE\" ],  \"config\" : {    \"roleTypeConfigs\" : [ {      \"roleType\" : \"...\",      \"items\" : [ { }, { } ]    }, {      \"roleType\" : \"...\",      \"items\" : [ { }, { } ]    } ],    \"items\" : [ {      \"name\" : \"...\",      \"value\" : \"...\",      \"required\" : true,      \"default\" : \"...\",      \"displayName\" : \"...\",      \"description\" : \"...\",      \"relatedName\" : \"...\",      \"sensitive\" : true,      \"validationState\" : \"OK\",      \"validationMessage\" : \"...\",      \"validationWarningsSuppressed\" : true    }, {      \"name\" : \"...\",      \"value\" : \"...\",      \"required\" : true,      \"default\" : \"...\",      \"displayName\" : \"...\",      \"description\" : \"...\",      \"relatedName\" : \"...\",      \"sensitive\" : true,      \"validationState\" : \"OK\",      \"validationMessage\" : \"...\",      \"validationWarningsSuppressed\" : true    } ]  },  \"roles\" : [ {    \"name\" : \"...\",    \"type\" : \"...\",    \"hostRef\" : {      \"hostId\" : \"...\",      \"hostname\" : \"...\"    },    \"serviceRef\" : {      \"peerName\" : \"...\",      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"serviceDisplayName\" : \"...\",      \"serviceType\" : \"...\"    },    \"roleState\" : \"STOPPED\",    \"commissionState\" : \"OFFLINED\",    \"healthSummary\" : \"HISTORY_NOT_AVAILABLE\",    \"configStalenessStatus\" : \"FRESH\",    \"healthChecks\" : [ {      \"name\" : \"...\",      \"summary\" : \"HISTORY_NOT_AVAILABLE\",      \"explanation\" : \"...\",      \"suppressed\" : true    }, {      \"name\" : \"...\",      \"summary\" : \"CONCERNING\",      \"explanation\" : \"...\",      \"suppressed\" : true    } ],    \"haStatus\" : \"STANDBY\",    \"roleUrl\" : \"...\",    \"maintenanceMode\" : true,    \"maintenanceOwners\" : [ \"SERVICE\", \"SERVICE\" ],    \"config\" : {      \"items\" : [ { }, { } ]    },    \"roleConfigGroupRef\" : {      \"roleConfigGroupName\" : \"...\"    },    \"zooKeeperServerMode\" : \"REPLICATED_LEADER\",    \"entityStatus\" : \"DOWN\",    \"tags\" : [ {      \"name\" : \"...\",      \"value\" : \"...\"    }, {      \"name\" : \"...\",      \"value\" : \"...\"    } ]  }, {    \"name\" : \"...\",    \"type\" : \"...\",    \"hostRef\" : {      \"hostId\" : \"...\",      \"hostname\" : \"...\"    },    \"serviceRef\" : {      \"peerName\" : \"...\",      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"serviceDisplayName\" : \"...\",      \"serviceType\" : \"...\"    },    \"roleState\" : \"STARTING\",    \"commissionState\" : \"OFFLINED\",    \"healthSummary\" : \"NOT_AVAILABLE\",    \"configStalenessStatus\" : \"STALE_REFRESHABLE\",    \"healthChecks\" : [ {      \"name\" : \"...\",      \"summary\" : \"BAD\",      \"explanation\" : \"...\",      \"suppressed\" : true    }, {      \"name\" : \"...\",      \"summary\" : \"NOT_AVAILABLE\",      \"explanation\" : \"...\",      \"suppressed\" : true    } ],    \"haStatus\" : \"UNKNOWN\",    \"roleUrl\" : \"...\",    \"maintenanceMode\" : true,    \"maintenanceOwners\" : [ \"ROLE\", \"SERVICE\" ],    \"config\" : {      \"items\" : [ { }, { } ]    },    \"roleConfigGroupRef\" : {      \"roleConfigGroupName\" : \"...\"    },    \"zooKeeperServerMode\" : \"REPLICATED_LEADER_ELECTION\",    \"entityStatus\" : \"UNKNOWN\",    \"tags\" : [ {      \"name\" : \"...\",      \"value\" : \"...\"    }, {      \"name\" : \"...\",      \"value\" : \"...\"    } ]  } ],  \"displayName\" : \"...\",  \"roleConfigGroups\" : [ {    \"name\" : \"...\",    \"roleType\" : \"...\",    \"base\" : true,    \"config\" : {      \"items\" : [ { }, { } ]    },    \"displayName\" : \"...\",    \"serviceRef\" : {      \"peerName\" : \"...\",      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"serviceDisplayName\" : \"...\",      \"serviceType\" : \"...\"    }  }, {    \"name\" : \"...\",    \"roleType\" : \"...\",    \"base\" : true,    \"config\" : {      \"items\" : [ { }, { } ]    },    \"displayName\" : \"...\",    \"serviceRef\" : {      \"peerName\" : \"...\",      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"serviceDisplayName\" : \"...\",      \"serviceType\" : \"...\"    }  } ],  \"replicationSchedules\" : [ {    \"hdfsArguments\" : {      \"sourceService\" : { },      \"sourcePath\" : \"...\",      \"destinationPath\" : \"...\",      \"mapreduceServiceName\" : \"...\",      \"schedulerPoolName\" : \"...\",      \"userName\" : \"...\",      \"sourceUser\" : \"...\",      \"numMaps\" : 12345,      \"dryRun\" : true,      \"bandwidthPerMap\" : 12345,      \"abortOnError\" : true,      \"removeMissingFiles\" : true,      \"preserveReplicationCount\" : true,      \"preserveBlockSize\" : true,      \"preservePermissions\" : true,      \"logPath\" : \"...\",      \"skipChecksumChecks\" : true,      \"skipListingChecksumChecks\" : true,      \"skipTrash\" : true,      \"replicationStrategy\" : \"DYNAMIC\",      \"preserveXAttrs\" : true,      \"exclusionFilters\" : [ \"...\", \"...\" ],      \"raiseSnapshotDiffFailures\" : true,      \"destinationCloudAccount\" : \"...\"    },    \"hiveArguments\" : {      \"sourceService\" : { },      \"tableFilters\" : [ { }, { } ],      \"exportDir\" : \"...\",      \"force\" : true,      \"replicateData\" : true,      \"hdfsArguments\" : { },      \"replicateImpalaMetadata\" : true,      \"runInvalidateMetadata\" : true,      \"dryRun\" : true,      \"numThreads\" : 12345,      \"sentryMigration\" : true,      \"skipUrlPermissions\" : true    },    \"hdfsCloudArguments\" : {      \"sourceAccount\" : \"...\",      \"destinationAccount\" : \"...\",      \"sourceService\" : { },      \"sourcePath\" : \"...\",      \"destinationPath\" : \"...\",      \"mapreduceServiceName\" : \"...\",      \"schedulerPoolName\" : \"...\",      \"userName\" : \"...\",      \"sourceUser\" : \"...\",      \"numMaps\" : 12345,      \"dryRun\" : true,      \"bandwidthPerMap\" : 12345,      \"abortOnError\" : true,      \"removeMissingFiles\" : true,      \"preserveReplicationCount\" : true,      \"preserveBlockSize\" : true,      \"preservePermissions\" : true,      \"logPath\" : \"...\",      \"skipChecksumChecks\" : true,      \"skipListingChecksumChecks\" : true,      \"skipTrash\" : true,      \"replicationStrategy\" : \"DYNAMIC\",      \"preserveXAttrs\" : true,      \"exclusionFilters\" : [ \"...\", \"...\" ],      \"raiseSnapshotDiffFailures\" : true,      \"destinationCloudAccount\" : \"...\"    },    \"history\" : [ {      \"hdfsResult\" : { },      \"hiveResult\" : { },      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    }, {      \"hdfsResult\" : { },      \"hiveResult\" : { },      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    } ],    \"active\" : true,    \"hiveCloudArguments\" : {      \"sourceAccount\" : \"...\",      \"destinationAccount\" : \"...\",      \"cloudRootPath\" : \"...\",      \"replicationOption\" : \"METADATA_ONLY\",      \"sourceService\" : { },      \"tableFilters\" : [ { }, { } ],      \"exportDir\" : \"...\",      \"force\" : true,      \"replicateData\" : true,      \"hdfsArguments\" : { },      \"replicateImpalaMetadata\" : true,      \"runInvalidateMetadata\" : true,      \"dryRun\" : true,      \"numThreads\" : 12345,      \"sentryMigration\" : true,      \"skipUrlPermissions\" : true    },    \"id\" : 12345,    \"displayName\" : \"...\",    \"description\" : \"...\",    \"startTime\" : \"...\",    \"endTime\" : \"...\",    \"interval\" : 12345,    \"intervalUnit\" : \"YEAR\",    \"nextRun\" : \"...\",    \"paused\" : true,    \"alertOnStart\" : true,    \"alertOnSuccess\" : true,    \"alertOnFail\" : true,    \"alertOnAbort\" : true  }, {    \"hdfsArguments\" : {      \"sourceService\" : { },      \"sourcePath\" : \"...\",      \"destinationPath\" : \"...\",      \"mapreduceServiceName\" : \"...\",      \"schedulerPoolName\" : \"...\",      \"userName\" : \"...\",      \"sourceUser\" : \"...\",      \"numMaps\" : 12345,      \"dryRun\" : true,      \"bandwidthPerMap\" : 12345,      \"abortOnError\" : true,      \"removeMissingFiles\" : true,      \"preserveReplicationCount\" : true,      \"preserveBlockSize\" : true,      \"preservePermissions\" : true,      \"logPath\" : \"...\",      \"skipChecksumChecks\" : true,      \"skipListingChecksumChecks\" : true,      \"skipTrash\" : true,      \"replicationStrategy\" : \"DYNAMIC\",      \"preserveXAttrs\" : true,      \"exclusionFilters\" : [ \"...\", \"...\" ],      \"raiseSnapshotDiffFailures\" : true,      \"destinationCloudAccount\" : \"...\"    },    \"hiveArguments\" : {      \"sourceService\" : { },      \"tableFilters\" : [ { }, { } ],      \"exportDir\" : \"...\",      \"force\" : true,      \"replicateData\" : true,      \"hdfsArguments\" : { },      \"replicateImpalaMetadata\" : true,      \"runInvalidateMetadata\" : true,      \"dryRun\" : true,      \"numThreads\" : 12345,      \"sentryMigration\" : true,      \"skipUrlPermissions\" : true    },    \"hdfsCloudArguments\" : {      \"sourceAccount\" : \"...\",      \"destinationAccount\" : \"...\",      \"sourceService\" : { },      \"sourcePath\" : \"...\",      \"destinationPath\" : \"...\",      \"mapreduceServiceName\" : \"...\",      \"schedulerPoolName\" : \"...\",      \"userName\" : \"...\",      \"sourceUser\" : \"...\",      \"numMaps\" : 12345,      \"dryRun\" : true,      \"bandwidthPerMap\" : 12345,      \"abortOnError\" : true,      \"removeMissingFiles\" : true,      \"preserveReplicationCount\" : true,      \"preserveBlockSize\" : true,      \"preservePermissions\" : true,      \"logPath\" : \"...\",      \"skipChecksumChecks\" : true,      \"skipListingChecksumChecks\" : true,      \"skipTrash\" : true,      \"replicationStrategy\" : \"STATIC\",      \"preserveXAttrs\" : true,      \"exclusionFilters\" : [ \"...\", \"...\" ],      \"raiseSnapshotDiffFailures\" : true,      \"destinationCloudAccount\" : \"...\"    },    \"history\" : [ {      \"hdfsResult\" : { },      \"hiveResult\" : { },      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    }, {      \"hdfsResult\" : { },      \"hiveResult\" : { },      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    } ],    \"active\" : true,    \"hiveCloudArguments\" : {      \"sourceAccount\" : \"...\",      \"destinationAccount\" : \"...\",      \"cloudRootPath\" : \"...\",      \"replicationOption\" : \"METADATA_AND_DATA\",      \"sourceService\" : { },      \"tableFilters\" : [ { }, { } ],      \"exportDir\" : \"...\",      \"force\" : true,      \"replicateData\" : true,      \"hdfsArguments\" : { },      \"replicateImpalaMetadata\" : true,      \"runInvalidateMetadata\" : true,      \"dryRun\" : true,      \"numThreads\" : 12345,      \"sentryMigration\" : true,      \"skipUrlPermissions\" : true    },    \"id\" : 12345,    \"displayName\" : \"...\",    \"description\" : \"...\",    \"startTime\" : \"...\",    \"endTime\" : \"...\",    \"interval\" : 12345,    \"intervalUnit\" : \"MINUTE\",    \"nextRun\" : \"...\",    \"paused\" : true,    \"alertOnStart\" : true,    \"alertOnSuccess\" : true,    \"alertOnFail\" : true,    \"alertOnAbort\" : true  } ],  \"snapshotPolicies\" : [ {    \"name\" : \"...\",    \"description\" : \"...\",    \"hourlySnapshots\" : 12345,    \"dailySnapshots\" : 12345,    \"weeklySnapshots\" : 12345,    \"monthlySnapshots\" : 12345,    \"yearlySnapshots\" : 12345,    \"minuteOfHour\" : 12345,    \"hoursForHourlySnapshots\" : [ 12345, 12345 ],    \"hourOfDay\" : 12345,    \"dayOfWeek\" : 12345,    \"dayOfMonth\" : 12345,    \"monthOfYear\" : 12345,    \"alertOnStart\" : true,    \"alertOnSuccess\" : true,    \"alertOnFail\" : true,    \"alertOnAbort\" : true,    \"hbaseArguments\" : {      \"tableRegExps\" : [ \"...\", \"...\" ],      \"storage\" : \"REMOTE_S3\"    },    \"hdfsArguments\" : {      \"pathPatterns\" : [ \"...\", \"...\" ]    },    \"lastCommand\" : {      \"hbaseResult\" : { },      \"hdfsResult\" : { },      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    },    \"lastSuccessfulCommand\" : {      \"hbaseResult\" : { },      \"hdfsResult\" : { },      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    },    \"paused\" : true  }, {    \"name\" : \"...\",    \"description\" : \"...\",    \"hourlySnapshots\" : 12345,    \"dailySnapshots\" : 12345,    \"weeklySnapshots\" : 12345,    \"monthlySnapshots\" : 12345,    \"yearlySnapshots\" : 12345,    \"minuteOfHour\" : 12345,    \"hoursForHourlySnapshots\" : [ 12345, 12345 ],    \"hourOfDay\" : 12345,    \"dayOfWeek\" : 12345,    \"dayOfMonth\" : 12345,    \"monthOfYear\" : 12345,    \"alertOnStart\" : true,    \"alertOnSuccess\" : true,    \"alertOnFail\" : true,    \"alertOnAbort\" : true,    \"hbaseArguments\" : {      \"tableRegExps\" : [ \"...\", \"...\" ],      \"storage\" : \"LOCAL\"    },    \"hdfsArguments\" : {      \"pathPatterns\" : [ \"...\", \"...\" ]    },    \"lastCommand\" : {      \"hbaseResult\" : { },      \"hdfsResult\" : { },      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    },    \"lastSuccessfulCommand\" : {      \"hbaseResult\" : { },      \"hdfsResult\" : { },      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    },    \"paused\" : true  } ],  \"entityStatus\" : \"DOWN\",  \"tags\" : [ {    \"name\" : \"...\",    \"value\" : \"...\"  }, {    \"name\" : \"...\",    \"value\" : \"...\"  } ],  \"serviceVersion\" : \"...\"}", ApiService.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default MgmtServiceResourceApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Start the Cloudera Management Services.", nickname = "startCommand", notes = "Start the Cloudera Management Services.", response = ApiCommand.class, authorizations = {
        @Authorization(value = "basic")
    }, tags={ "MgmtServiceResource", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Success", response = ApiCommand.class) })
    @RequestMapping(value = "/cm/service/commands/start",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    default ResponseEntity<ApiCommand> startCommand() {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"id\" : 12345,  \"name\" : \"...\",  \"startTime\" : \"...\",  \"endTime\" : \"...\",  \"active\" : true,  \"success\" : true,  \"resultMessage\" : \"...\",  \"resultDataUrl\" : \"...\",  \"clusterRef\" : {    \"clusterName\" : \"...\",    \"displayName\" : \"...\"  },  \"serviceRef\" : {    \"peerName\" : \"...\",    \"clusterName\" : \"...\",    \"serviceName\" : \"...\",    \"serviceDisplayName\" : \"...\",    \"serviceType\" : \"...\"  },  \"roleRef\" : {    \"clusterName\" : \"...\",    \"serviceName\" : \"...\",    \"roleName\" : \"...\"  },  \"hostRef\" : {    \"hostId\" : \"...\",    \"hostname\" : \"...\"  },  \"parent\" : {    \"id\" : 12345,    \"name\" : \"...\",    \"startTime\" : \"...\",    \"endTime\" : \"...\",    \"active\" : true,    \"success\" : true,    \"resultMessage\" : \"...\",    \"resultDataUrl\" : \"...\",    \"clusterRef\" : {      \"clusterName\" : \"...\",      \"displayName\" : \"...\"    },    \"serviceRef\" : {      \"peerName\" : \"...\",      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"serviceDisplayName\" : \"...\",      \"serviceType\" : \"...\"    },    \"roleRef\" : {      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"roleName\" : \"...\"    },    \"hostRef\" : {      \"hostId\" : \"...\",      \"hostname\" : \"...\"    },    \"parent\" : { },    \"children\" : {      \"items\" : [ { }, { } ]    },    \"canRetry\" : true  },  \"children\" : {    \"items\" : [ {      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    }, {      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    } ]  },  \"canRetry\" : true}", ApiCommand.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default MgmtServiceResourceApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Stop the Cloudera Management Services.", nickname = "stopCommand", notes = "Stop the Cloudera Management Services.", response = ApiCommand.class, authorizations = {
        @Authorization(value = "basic")
    }, tags={ "MgmtServiceResource", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Success", response = ApiCommand.class) })
    @RequestMapping(value = "/cm/service/commands/stop",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    default ResponseEntity<ApiCommand> stopCommand() {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"id\" : 12345,  \"name\" : \"...\",  \"startTime\" : \"...\",  \"endTime\" : \"...\",  \"active\" : true,  \"success\" : true,  \"resultMessage\" : \"...\",  \"resultDataUrl\" : \"...\",  \"clusterRef\" : {    \"clusterName\" : \"...\",    \"displayName\" : \"...\"  },  \"serviceRef\" : {    \"peerName\" : \"...\",    \"clusterName\" : \"...\",    \"serviceName\" : \"...\",    \"serviceDisplayName\" : \"...\",    \"serviceType\" : \"...\"  },  \"roleRef\" : {    \"clusterName\" : \"...\",    \"serviceName\" : \"...\",    \"roleName\" : \"...\"  },  \"hostRef\" : {    \"hostId\" : \"...\",    \"hostname\" : \"...\"  },  \"parent\" : {    \"id\" : 12345,    \"name\" : \"...\",    \"startTime\" : \"...\",    \"endTime\" : \"...\",    \"active\" : true,    \"success\" : true,    \"resultMessage\" : \"...\",    \"resultDataUrl\" : \"...\",    \"clusterRef\" : {      \"clusterName\" : \"...\",      \"displayName\" : \"...\"    },    \"serviceRef\" : {      \"peerName\" : \"...\",      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"serviceDisplayName\" : \"...\",      \"serviceType\" : \"...\"    },    \"roleRef\" : {      \"clusterName\" : \"...\",      \"serviceName\" : \"...\",      \"roleName\" : \"...\"    },    \"hostRef\" : {      \"hostId\" : \"...\",      \"hostname\" : \"...\"    },    \"parent\" : { },    \"children\" : {      \"items\" : [ { }, { } ]    },    \"canRetry\" : true  },  \"children\" : {    \"items\" : [ {      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    }, {      \"id\" : 12345,      \"name\" : \"...\",      \"startTime\" : \"...\",      \"endTime\" : \"...\",      \"active\" : true,      \"success\" : true,      \"resultMessage\" : \"...\",      \"resultDataUrl\" : \"...\",      \"clusterRef\" : { },      \"serviceRef\" : { },      \"roleRef\" : { },      \"hostRef\" : { },      \"parent\" : { },      \"children\" : { },      \"canRetry\" : true    } ]  },  \"canRetry\" : true}", ApiCommand.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default MgmtServiceResourceApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Update the Cloudera Management Services configuration.", nickname = "updateServiceConfig", notes = "Update the Cloudera Management Services configuration. <p> If a value is set in the given configuration, it will be added to the service's configuration, replacing any existing entries. If a value is unset (its value is null), the existing configuration for the attribute will be erased, if any. <p> Attributes that are not listed in the input will maintain their current values in the configuration.", response = ApiServiceConfig.class, authorizations = {
        @Authorization(value = "basic")
    }, tags={ "MgmtServiceResource", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "Success", response = ApiServiceConfig.class) })
    @RequestMapping(value = "/cm/service/config",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    default ResponseEntity<ApiServiceConfig> updateServiceConfig(@ApiParam(value = "Optional message describing the changes.") @Valid @RequestParam(value = "message", required = false) String message,@ApiParam(value = "Configuration changes."  )  @Valid @RequestBody ApiServiceConfig body) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"roleTypeConfigs\" : [ {    \"roleType\" : \"...\",    \"items\" : [ {      \"name\" : \"...\",      \"value\" : \"...\",      \"required\" : true,      \"default\" : \"...\",      \"displayName\" : \"...\",      \"description\" : \"...\",      \"relatedName\" : \"...\",      \"sensitive\" : true,      \"validationState\" : \"OK\",      \"validationMessage\" : \"...\",      \"validationWarningsSuppressed\" : true    }, {      \"name\" : \"...\",      \"value\" : \"...\",      \"required\" : true,      \"default\" : \"...\",      \"displayName\" : \"...\",      \"description\" : \"...\",      \"relatedName\" : \"...\",      \"sensitive\" : true,      \"validationState\" : \"ERROR\",      \"validationMessage\" : \"...\",      \"validationWarningsSuppressed\" : true    } ]  }, {    \"roleType\" : \"...\",    \"items\" : [ {      \"name\" : \"...\",      \"value\" : \"...\",      \"required\" : true,      \"default\" : \"...\",      \"displayName\" : \"...\",      \"description\" : \"...\",      \"relatedName\" : \"...\",      \"sensitive\" : true,      \"validationState\" : \"OK\",      \"validationMessage\" : \"...\",      \"validationWarningsSuppressed\" : true    }, {      \"name\" : \"...\",      \"value\" : \"...\",      \"required\" : true,      \"default\" : \"...\",      \"displayName\" : \"...\",      \"description\" : \"...\",      \"relatedName\" : \"...\",      \"sensitive\" : true,      \"validationState\" : \"ERROR\",      \"validationMessage\" : \"...\",      \"validationWarningsSuppressed\" : true    } ]  } ],  \"items\" : [ {    \"name\" : \"...\",    \"value\" : \"...\",    \"required\" : true,    \"default\" : \"...\",    \"displayName\" : \"...\",    \"description\" : \"...\",    \"relatedName\" : \"...\",    \"sensitive\" : true,    \"validationState\" : \"ERROR\",    \"validationMessage\" : \"...\",    \"validationWarningsSuppressed\" : true  }, {    \"name\" : \"...\",    \"value\" : \"...\",    \"required\" : true,    \"default\" : \"...\",    \"displayName\" : \"...\",    \"description\" : \"...\",    \"relatedName\" : \"...\",    \"sensitive\" : true,    \"validationState\" : \"ERROR\",    \"validationMessage\" : \"...\",    \"validationWarningsSuppressed\" : true  } ]}", ApiServiceConfig.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default MgmtServiceResourceApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }

}
