{%- from 'telemetry/settings.sls' import telemetry with context %}
{%- from 'monitoring/settings.sls' import monitoring with context %}
{%- set instance_name = salt['grains.get']('fqdn') %}
{%- if telemetry.platform in ["AWS", "AZURE", "GCP"] %}
  {%- set get_instance_cmd = "python3 /opt/salt/scripts/instanceid_retriever.py " +  telemetry.platform %}
  {%- set instance_cmd_output = salt.cmd.run(get_instance_cmd) %}
  {%- if instance_cmd_output %}
    {%- set instance_name = instance_cmd_output %}
  {%- endif %}
{%- endif %}
port: {{ monitoring.requestSignerPort }}
endpoint: "{{ monitoring.remoteWriteUrl }}"
credential:
  file: "/opt/cdp-request-signer/conf/monitoring_credential"
  profile: dbus
  access_key_name: monitoring_access_key_id
  secret_key_name: monitoring_access_secret_key
sign:
  auth_header_name: "x-altus-auth"
  date_header_name: "x-altus-date"
  msg_header_name: "x-altus-msg"
  token_header_name: "x-altus-token"
  token_date_file: "/opt/cdp-request-signer/conf/token_exp"
  token_validity_min: {{ monitoring.requestSignerTokenValidityMin }}
  use_token_header: {{ monitoring.requestSignerUseToken }}
  use_msg_header: true
  resource_crn_header: "{{ telemetry.clusterCrn }}"
  instance_header: "{{ instance_name }}"
client:
  dump: false
tls:
  key: "/opt/cdp-request-signer/conf/request-signer.key"
  cert: "/opt/cdp-request-signer/conf/request-signer.crt"
auth:
  username: "{{ monitoring.requestSignerUser }}"
  password: "{{ monitoring.localPassword }}"
logger:
  level: debug
  file: true
{%- if telemetry.proxyUrl %}
proxy:
{%- if monitoring.remoteWriteUrl.startswith('https://') %}
  https_proxy: "{{ telemetry.proxyUrl }}"
{%- else %}
  http_proxy: "{{ telemetry.proxyUrl }}"
{%- endif %}
{%- if telemetry.noProxyHosts %}
  no_proxy: "{{ telemetry.noProxyHosts }}"
{%- endif %}
{%- endif %}