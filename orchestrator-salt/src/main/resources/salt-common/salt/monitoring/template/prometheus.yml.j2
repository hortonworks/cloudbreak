{%- from 'telemetry/settings.sls' import telemetry with context %}
{%- from 'monitoring/settings.sls' import monitoring with context %}
{%- set hostgroup = salt['grains.get']('hostgroup') %}
{%- set cdp_prometheus_installed = salt['file.directory_exists' ]('/opt/cdp-prometheus') %}
{%- set instance_name = salt['grains.get']('fqdn') %}
{%- if telemetry.platform in ["AWS", "AZURE", "GCP"]  %}
  {%- set get_instance_cmd = "python3 /opt/salt/scripts/instanceid_retriever.py " +  telemetry.platform %}
  {%- set instance_cmd_output = salt.cmd.run(get_instance_cmd) %}
  {%- if instance_cmd_output %}
    {%- set instance_name = instance_cmd_output %}
  {%- endif %}
  {%- if salt['pkg.version_cmp'](telemetry.cdpTelemetryPackageVersion,'0.4.29-1') >= 0 %}
    {%- set get_doctor_addresses = "cdp-doctor network addresses --format json --cloud-provider {}".format(telemetry.platform) %}
    {%- if telemetry.databusEndpoint is defined and telemetry.databusEndpoint|length %}
      {%- set get_doctor_addresses = "{} --databus-url {}".format(get_doctor_addresses, telemetry.databusEndpoint) %}
    {%- endif %}
    {%- if telemetry.databusS3Endpoint is defined and telemetry.databusS3Endpoint|length %}
          {%- set get_doctor_addresses = "{} --databus-s3-url {}".format(get_doctor_addresses, telemetry.databusS3Endpoint) %}
    {%- endif %}
    {%- set doctorNetworkAddresses = salt.cmd.run(get_doctor_addresses) | load_json %}
    {%- set blackboxClouderaUrls = doctorNetworkAddresses['cloudera'] %}
    {%- set blackboxCloudUrls = doctorNetworkAddresses['cloud'] %}
  {%- endif %}
{%- endif %}
global:
  scrape_interval: {{ monitoring.scrapeIntervalSeconds }}s
{%- if cdp_prometheus_installed %}
remote_write:
  {%- if monitoring.requestSignerEnabled %}
  - url: https://localhost:{{ monitoring.requestSignerPort }}
    basic_auth:
      username: {{ monitoring.requestSignerUser }}
      password_file: /opt/cdp-prometheus/request_signer_pwd_file
  {%- else %}
  - url: {{ monitoring.remoteWriteUrl }}
    {%- if telemetry.proxyUrl %}
    proxy_url: {{ telemetry.proxyUrl }}
    {%- endif %}
    {%- if monitoring.username %}
    basic_auth:
      username: {{ monitoring.username }}
      {%- if monitoring.password %}
      password_file: /opt/cdp-prometheus/remote_pwd_file
      {%- endif %}
    {%- elif monitoring.token %}
    authorization:
      credentials_file: /opt/cdp-prometheus/remote_token_file
    {%- endif %}
  {%- endif %}
    queue_config:
      min_backoff: {{ monitoring.minBackoff }}
      max_backoff: {{ monitoring.maxBackoff }}
    tls_config:
      insecure_skip_verify: true
{%- endif %}
scrape_configs:
  - job_name: node_exporter
    scheme: 'https'
    static_configs:
     - targets: ['localhost:{{ monitoring.nodeExporterPort }}']
       labels:
         resource_crn: {{ telemetry.clusterCrn }}
         platform: {{ telemetry.platform }}
{%- if hostgroup %}
         hostgroup: {{ hostgroup }}
{%- endif %}
    relabel_configs:
      - target_label: instance
        replacement: {{ instance_name }}:{{ monitoring.nodeExporterPort }}
{%- if monitoring.localPassword %}
    basic_auth:
      username: {{ monitoring.nodeExporterUser }}
      password: {{ monitoring.localPassword }}
{%- endif %}
    tls_config:
       insecure_skip_verify: true
{%- if (monitoring.type == "cloudera_manager" and "manager_server" in grains.get('roles', [])) or monitoring.blackboxExporterCheckOnAllNodes %}
{%- if blackboxClouderaUrls is defined and blackboxClouderaUrls|length > 0 %}
  - job_name: 'blackbox-cloudera'
    scrape_interval: {{ monitoring.blackboxExporterClouderaIntervalSeconds }}s
    metrics_path: /probe
    scheme: 'https'
    params:
      module: [http_2xx]
    static_configs:
      - targets: {{ blackboxClouderaUrls }}
        labels:
          resource_crn: {{ telemetry.clusterCrn }}
          platform: {{ telemetry.platform }}
{%- if hostgroup %}
          hostgroup: {{ hostgroup }}
{%- endif %}
          proxy: {% if telemetry.proxyUrl %}yes{%- else %}no{% endif %}
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: address
      - target_label: __address__
        replacement: 127.0.0.1:{{ monitoring.blackboxExporterPort }}
      - target_label: instance
        replacement: {{ instance_name }}:{{ monitoring.blackboxExporterPort }}
{%- if monitoring.localPassword %}
    basic_auth:
      username: {{ monitoring.blackboxExporterUser }}
      password: {{ monitoring.localPassword }}
{%- endif %}
    tls_config:
      insecure_skip_verify: true
{%- else %}
  - job_name: 'blackbox'
    metrics_path: /probe
    scheme: 'https'
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - https://archive.cloudera.com
        labels:
          resource_crn: {{ telemetry.clusterCrn }}
          platform: {{ telemetry.platform }}
{%- if hostgroup %}
          hostgroup: {{ hostgroup }}
{%- endif %}
          proxy: {% if telemetry.proxyUrl %}yes{%- else %}no{% endif %}
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: address
      - target_label: __address__
        replacement: 127.0.0.1:{{ monitoring.blackboxExporterPort }}
      - target_label: instance
        replacement: {{ instance_name }}:{{ monitoring.blackboxExporterPort }}
{%- if monitoring.localPassword %}
    basic_auth:
      username: {{ monitoring.blackboxExporterUser }}
      password: {{ monitoring.localPassword }}
{%- endif %}
    tls_config:
      insecure_skip_verify: true
{%- endif %}
{%- if blackboxCloudUrls is defined and blackboxCloudUrls|length > 0 %}
  - job_name: 'blackbox-cloud'
    scrape_interval: {{ monitoring.blackboxExporterCloudIntervalSeconds }}s
    metrics_path: /probe
    scheme: 'https'
    params:
      module: [http_2xx]
    static_configs:
      - targets: {{ blackboxCloudUrls }}
        labels:
          resource_crn: {{ telemetry.clusterCrn }}
          platform: {{ telemetry.platform }}
{%- if hostgroup %}
          hostgroup: {{ hostgroup }}
{%- endif %}
          proxy: {% if telemetry.proxyUrl %}yes{%- else %}no{% endif %}
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: address
      - target_label: __address__
        replacement: 127.0.0.1:{{ monitoring.blackboxExporterPort }}
      - target_label: instance
        replacement: {{ instance_name }}:{{ monitoring.blackboxExporterPort }}
{%- if monitoring.localPassword %}
    basic_auth:
      username: {{ monitoring.blackboxExporterUser }}
      password: {{ monitoring.localPassword }}
{%- endif %}
    tls_config:
      insecure_skip_verify: true
{%- endif %}
{%- endif %}
{%- if monitoring.type == "cloudera_manager" and "manager_server" in grains.get('roles', []) %}
  - job_name: 'smon_health'
    scheme: {% if monitoring.cmAutoTls %}'https'{% else %}'http'{% endif %}
    static_configs:
      - targets: ['localhost:{{ monitoring.cmMetricsExporterPort }}']
        labels:
          resource_crn: {{ telemetry.clusterCrn }}
          platform: {{ telemetry.platform }}
    relabel_configs:
      - target_label: instance
        replacement: {{ instance_name }}:{{ monitoring.cmMetricsExporterPort }}
    basic_auth:
      username: {{ monitoring.cmUsername }}
      password: {{ monitoring.cmPassword }}
    tls_config:
      insecure_skip_verify: true
{%- endif %}