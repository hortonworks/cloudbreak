{%- from 'telemetry/settings.sls' import telemetry with context %}
{%- from 'monitoring/settings.sls' import monitoring with context %}
{%- set hostname = salt['grains.get']('fqdn') %}
{%- set hostgroup = salt['grains.get']('hostgroup') %}
{%- set cdp_prometheus_installed = salt['file.directory_exists' ]('/opt/cdp-prometheus') %}
global:
  scrape_interval: {{ monitoring.scrapeIntervalSeconds }}s
{%- if cdp_prometheus_installed %}
remote_write:
  {%- if monitoring.requestSignerEnabled and monitoring.databusEnabled %}
  - url: https://localhost:{{ monitoring.requestSignerPort }}
    basic_auth:
      username: {{ monitoring.requestSignerUser }}
      password_file: /opt/cdp-prometheus/request_signer_pwd_file
  {%- else %}
  - url: {{ monitoring.remoteWriteUrl }}
    {%- if telemetry.proxyUrl %}
    proxy_url: {{ telemetry.proxyUrl }}
    {%- endif %}
    {%- if monitoring.username %}
    basic_auth:
      username: {{ monitoring.username }}
      {%- if monitoring.password %}
      password_file: /opt/cdp-prometheus/remote_pwd_file
      {%- endif %}
    {%- elif monitoring.token %}
    authorization:
      credentials_file: /opt/cdp-prometheus/remote_token_file
    {%- endif %}
  {%- endif %}
    tls_config:
      insecure_skip_verify: true
{%- endif %}
scrape_configs:
  - job_name: node_exporter
    scheme: 'https'
    static_configs:
     - targets: ['localhost:{{ monitoring.nodeExporterPort }}']
       labels:
         resource_crn: {{ telemetry.clusterCrn }}
         platform: {{ telemetry.platform }}
{%- if hostgroup %}
         hostgroup: {{ hostgroup }}
{%- endif %}
    relabel_configs:
      - target_label: instance
        replacement: {{ hostname }}:{{ monitoring.nodeExporterPort }}
{%- if monitoring.localPassword %}
    basic_auth:
      username: {{ monitoring.nodeExporterUser }}
      password: {{ monitoring.localPassword }}
{%- endif %}
    tls_config:
       insecure_skip_verify: true
  - job_name: 'blackbox'
    metrics_path: /probe
    scheme: 'https'
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - https://archive.cloudera.com
        labels:
          resource_crn: {{ telemetry.clusterCrn }}
          platform: {{ telemetry.platform }}
{%- if hostgroup %}
          hostgroup: {{ hostgroup }}
{%- endif %}
          proxy: {% if telemetry.proxyUrl %}yes{%- else %}no{% endif %}
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: address
      - target_label: __address__
        replacement: 127.0.0.1:{{ monitoring.blackboxExporterPort }}
      - target_label: instance
        replacement: {{ hostname }}:{{ monitoring.blackboxExporterPort }}
{%- if monitoring.localPassword %}
    basic_auth:
      username: {{ monitoring.blackboxExporterUser }}
      password: {{ monitoring.localPassword }}
{%- endif %}
    tls_config:
      insecure_skip_verify: true
{%- if monitoring.type == "cloudera_manager" and "manager_server" in grains.get('roles', []) %}
  - job_name: 'smon_health'
    scheme: 'https'
    static_configs:
      - targets: ['localhost:{{ monitoring.cmMetricsExporterPort }}']
        labels:
          resource_crn: {{ telemetry.clusterCrn }}
          platform: {{ telemetry.platform }}
    relabel_configs:
      - target_label: instance
        replacement: {{ hostname }}:{{ monitoring.cmMetricsExporterPort }}
    basic_auth:
      username: {{ monitoring.cmUsername }}
      password: {{ monitoring.cmPassword }}
    tls_config:
      insecure_skip_verify: true
{%- endif %}