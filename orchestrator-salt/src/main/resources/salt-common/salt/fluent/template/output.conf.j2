{%- from 'fluent/settings.sls' import fluent with context %}
{% if fluent.providerPrefix == "s3" %}
<match {{fluent.providerPrefix}}.*>
  @type copy
  <store ignore_error>
    @type s3
    s3_bucket {{fluent.s3LogArchiveBucketName}}
    path "{{fluent.logFolderName}}/{{fluent.serviceLogPathSuffix}}"
    s3_object_key_format %{path}-%{index}.%{file_extension}
    auto_create_bucket false
    check_apikey_on_start false

    <buffer tag,time>
      @type file
      path /var/log/td-agent/{{fluent.providerPrefix}}
      timekey {{fluent.partitionIntervalMin}}m
      timekey_wait 0s
      chunk_limit_size 256m
      flush_at_shutdown true
    </buffer>
    utc
    format single_value
  </store>
</match>
<match {{fluent.providerPrefix}}_CM_COMMAND.**>
  @type copy
  <store ignore_error>
    @type s3
    s3_bucket {{fluent.s3LogArchiveBucketName}}
    path "{{fluent.logFolderName}}/{{fluent.cmCommandLogPathSuffix}}"
    s3_object_key_format %{path}-%{index}.%{file_extension}
    auto_create_bucket false
    check_apikey_on_start false

    <buffer tag,time>
      @type file
      path /var/log/td-agent/{{fluent.providerPrefix}}_CM_COMMAND
      timekey {{fluent.partitionIntervalMin}}m
      timekey_wait 0s
      chunk_limit_size 256m
      flush_at_shutdown true
    </buffer>
    utc
    format single_value
  </store>
</match>
{% elif fluent.providerPrefix == "abfs" %}
<match {{fluent.providerPrefix}}.*>
  @type copy
  <store ignore_error>
    @type azurestorage

    azure_storage_account    {{fluent.azureStorageAccount}}
    azure_container          {{fluent.azureContainer}}
{% if fluent.azureInstanceMsi is defined and fluent.azureInstanceMsi is not none and fluent.azureInstanceMsi %}
    azure_instance_msi       {{fluent.azureInstanceMsi}}
{% else %}
    azure_storage_access_key {{fluent.azureStorageAccessKey}}
{% endif %}
    azure_storage_type       blob
    store_as                 gzip
    path                     "{{fluent.logFolderName}}/{{fluent.serviceLogPathSuffix}}"
    azure_object_key_format  %{path}-%{index}.%{file_extension}
    auto_create_container    true

    <buffer tag,time>
      @type file
      path /var/log/td-agent/{{fluent.providerPrefix}}
      timekey {{fluent.partitionIntervalMin}}m
      timekey_wait 0s
      chunk_limit_size 256m
      flush_at_shutdown true
    </buffer>
    utc
    format single_value
  </store>
</match>
<match {{fluent.providerPrefix}}_CM_COMMAND.**>
  @type copy
  <store ignore_error>
    @type azurestorage

    azure_storage_account    {{fluent.azureStorageAccount}}
    azure_container          {{fluent.azureContainer}}
{% if fluent.azureInstanceMsi is defined and fluent.azureInstanceMsi is not none and fluent.azureInstanceMsi %}
    azure_instance_msi       {{fluent.azureInstanceMsi}}
{% else %}
    azure_storage_access_key {{fluent.azureStorageAccessKey}}
{% endif %}
    azure_storage_type       blob
    store_as                 gzip
    path                     "{{fluent.logFolderName}}/{{fluent.cmCommandLogPathSuffix}}"
    azure_object_key_format  %{path}-%{index}.%{file_extension}
    auto_create_container    true

    <buffer tag,time>
      @type file
      path /var/log/td-agent/{{fluent.providerPrefix}}_CM_COMMAND
      timekey {{fluent.partitionIntervalMin}}m
      timekey_wait 0s
      chunk_limit_size 256m
      flush_at_shutdown true
    </buffer>
    utc
    format single_value
  </store>
</match>
{% elif fluent.providerPrefix == "cloudwatch" %}
<match **{{fluent.providerPrefix}}**>
  @type cloudwatch_logs
  log_group_name {{fluent.logFolderName}}
  log_stream_name_key {{fluent.cloudwatchStreamKey}}
  auto_create_stream true
  retention_in_days 7
  put_log_events_retry_limit 20
  concurrency 5
  region {{ fluent.region }}
  <buffer tag>
     @type file
     path /var/log/td-agent/{{fluent.providerPrefix}}
     flush_mode               "interval"
     flush_thread_count       10
     flush_interval           "10s"
     flush_at_shutdown        true
     chunk_limit_size         "2M"
   </buffer>
   <inject>
      time_type         string
      time_key          @timestamp
      time_format       %Y-%m-%dT%H:%M:%S.%NZ
   </inject>
</match>

{% else %}
<match {{fluent.providerPrefix}}.*>
  @type stdout
</match>
{% endif %}