#!/bin/sh
{%- from 'filecollector/settings.sls' import filecollector with context %}
{%- from 'telemetry/settings.sls' import telemetry with context %}

function log() {
  echo "$1"
}

function error_exit() {
  log "ERROR $1"
  exit 1
}

function upload_file() {
   local platform="$2"
   if [[ "$platform" == "AWS" ]]; then
      upload_to_s3 "$1"
   elif [[ "$platform" == "AZURE" ]]; then
      upload_to_azure_storage "$1"
   else
     log "Upload file to cloud storage is not supported from platform '${platform}'"
   fi
}

function upload_to_s3() {
  local filename=$1
  s3_filename="$(basename -- $filename)"
  s3_file_path="{{ filecollector.s3BaseUrl }}/${s3_filename}"
  # --sse AES256
  /usr/bin/aws s3 cp --no-progress "${filename}" "${s3_file_path}"
}

function upload_to_azure_storage() {
  local filename=$1
  az_storage_filename="$(basename -- $filename)"
  az_storage_file_path="{{ filecollector.adlsV2BaseUrl }}/${az_storage_filename}"
  {% if filecollector.azureInstanceMsi is defined and filecollector.azureInstanceMsi is not none and filecollector.azureInstanceMsi %}
  {% if grains['hostgroup'] == "idbroker" %}
  az_instance_msi="{{filecollector.azureIdBrokerInstanceMsi}}"
  {% else %}
  az_instance_msi="{{filecollector.azureInstanceMsi}}"
  {% endif %}
  {% endif %}
  #todo: /bin/keyctl new_session 2&1> /dev/null || error_exit "Unable to setup keyring session"
  /usr/local/bin/azcopy login --identity --identity-resource-id "${az_instance_msi}" || error_exit "Could not login to Azure"
  /usr/local/bin/azcopy copy "$filename" "$az_storage_file_path" --check-length=false  --recursive=true || error_exit "Unable to upload $filename to $az_storage_file_path"
}

function main() {
  for file in /var/lib/filecollector/*.gz
  do
    upload_file "$file" "{{ telemetry.platform }}"
  done
}

main "$@"