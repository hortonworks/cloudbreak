# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

version: 1

# Please replace with site specific values
dn: dc=hadoop,dc=apache,dc=org
objectclass: organization
objectclass: dcObject
o: Hadoop
dc: hadoop

# Entry for a sample Users container
# Please replace with site specific values
dn: ou=Users,dc=hadoop,dc=apache,dc=org
objectclass:top
objectclass:organizationalUnit
ou: Users

# entry for sample user admin
dn: cn={{ salt['pillar.get']('gateway:username') }},ou=Users,dc=hadoop,dc=apache,dc=org
objectclass:top
objectclass:person
objectclass:organizationalPerson
objectclass:inetOrgPerson
cn: {{ salt['pillar.get']('gateway:username') }}
sn: {{ salt['pillar.get']('gateway:username') }}
uid: {{ salt['pillar.get']('gateway:username') }}
userPassword: {{ salt['pillar.get']('gateway:password') }}


# dn: cn=user1,ou=Users,dc=hadoop,dc=apache,dc=org
# objectclass: inetOrgPerson
# objectclass: organizationalPerson
# objectclass: person
# objectclass: top
# cn: user1
# sn: user1
# uid: user1
# userPassword: user1{{ salt['pillar.get']('gateway:password') }}

# dn: cn=user2,ou=Users,dc=hadoop,dc=apache,dc=org
# objectclass: inetOrgPerson
# objectclass: organizationalPerson
# objectclass: person
# objectclass: top
# cn: user2
# sn: user2
# uid: user2
# userPassword: user2{{ salt['pillar.get']('gateway:password') }}

# dn: cn=user3,ou=Users,dc=hadoop,dc=apache,dc=org
# objectclass: inetOrgPerson
# objectclass: organizationalPerson
# objectclass: person
# objectclass: top
# cn: user3
# sn: user3
# uid: user3
# userPassword: user3{{ salt['pillar.get']('gateway:password') }}

# dn: cn=user4,ou=Users,dc=hadoop,dc=apache,dc=org
# objectclass: inetOrgPerson
# objectclass: organizationalPerson
# objectclass: person
# objectclass: top
# cn: user4
# sn: user4
# uid: user4
# userPassword: user4{{ salt['pillar.get']('gateway:password') }}

# dn: cn=user5,ou=Users,dc=hadoop,dc=apache,dc=org
# objectclass: inetOrgPerson
# objectclass: organizationalPerson
# objectclass: person
# objectclass: top
# cn: user5
# sn: user5
# uid: user5
# userPassword: user5{{ salt['pillar.get']('gateway:password') }}

# dn: cn=Admins,ou=IT,ou=Groups,dc=hadoop,dc=apache,dc=org
# objectclass: groupOfUniqueNames
# objectclass: top
# cn: Admins
# uniquemember: cn=user1,ou=Users,dc=hadoop,dc=apache,dc=org
# uniquemember: cn=user2,ou=Users,dc=hadoop,dc=apache,dc=org
# uniquemember: cn=user3,ou=Users,dc=hadoop,dc=apache,dc=org

# dn: cn=Analysts,ou=Business,ou=Groups,dc=hadoop,dc=apache,dc=org
# objectclass: groupOfUniqueNames
# objectclass: top
# cn: Analysts
# uniquemember: cn=user1,ou=Users,dc=hadoop,dc=apache,dc=org
# uniquemember: cn=user3,ou=Users,dc=hadoop,dc=apache,dc=org
# uniquemember: cn=user4,ou=Users,dc=hadoop,dc=apache,dc=org

# dn: cn=Scientists,ou=Business,ou=Groups,dc=hadoop,dc=apache,dc=org
# objectclass: groupOfUniqueNames
# objectclass: top
# cn: Scientists
# uniquemember: cn=user3,ou=Users,dc=hadoop,dc=apache,dc=org
# uniquemember: cn=user4,ou=Users,dc=hadoop,dc=apache,dc=org
# uniquemember: cn=user5,ou=Users,dc=hadoop,dc=apache,dc=org