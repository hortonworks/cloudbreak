<?xml version="1.0" encoding="UTF-8"?>
<topology>
    <name>{{ topology_name }}-api</name>
    <gateway>

        <!-- {{ exposed }} -->

        {% if 'NONE' == salt['pillar.get']('gateway:ssotype') -%}

        <provider>
           <role>authentication</role>
           <name>ShiroProvider</name>
           <enabled>true</enabled>
           <param>
              <name>sessionTimeout</name>
              <value>30</value>
           </param>
           <param>
              <name>main.pamRealm</name>
              <value>org.apache.hadoop.gateway.shirorealm.KnoxPamRealm</value>
           </param>
           <param>
              <name>main.pamRealm.service</name>
              <value>login</value>
           </param>
           <param>
              <name>urls./**</name>
              <value>authcBasic</value>
           </param>
        </provider>

        {% elif 'SSO_PROVIDER_FROM_UMS' == salt['pillar.get']('gateway:ssotype') -%}

        <provider>
            <role>webappsec</role>
            <name>WebAppSec</name>
            <enabled>true</enabled>
            <param>
                <name>cors.enabled</name>
                <value>true</value>
            </param>
        </provider>

        <provider>
           <role>federation</role>
           <name>SSOCookieProvider</name>
           <enabled>true</enabled>
           <param>
              <name>sso.authentication.provider.url</name>
              <value>/{{ salt['pillar.get']('gateway:path') }}/knoxsso/api/v1/websso</value>
           </param>
        </provider>

        {%- else %}

        <provider>
           <role>federation</role>
           <name>SSOCookieProvider</name>
           <enabled>true</enabled>
           <param>
              <name>sso.authentication.provider.url</name>
              <value>/{{ salt['pillar.get']('gateway:path') }}/knoxsso/api/v1/websso</value>
           </param>
        </provider>

        {%- endif %}

        <provider>
            <role>identity-assertion</role>
            <name>Default</name>
            <enabled>true</enabled>
        </provider>

        <provider>
            <role>ha</role>
            <name>HaProvider</name>
            <enabled>true</enabled>
            {% if 'ATLAS' in exposed and 'ATLAS_SERVER' in salt['pillar.get']('gateway:location') -%}
            <param>
                <name>ATLAS-API</name>
                <value>enabled=true;maxFailoverAttempts=3;failoverSleep=1000;maxRetryAttempts=300;retrySleep=1000</value>
            </param>
            {%- endif %}
            {% if 'CM-API' in exposed and 'CM-API' in salt['pillar.get']('gateway:location') -%}
            <param>
                <name>CM-API</name>
                <value>enabled=true;maxFailoverAttempts=3;failoverSleep=1000;maxRetryAttempts=300;retrySleep=1000</value>
            </param>
            {%- endif %}
            {% if 'HIVE' in exposed and 'HIVESERVER2' in salt['pillar.get']('gateway:location') -%}
            <param>
                <name>HIVE</name>
                <value>enabled=true;maxFailoverAttempts=3;failoverSleep=1000;maxRetryAttempts=300;retrySleep=1000</value>
            </param>
            {%- endif %}
            {% if 'LIVYSERVER1' in exposed and 'LIVY_SERVER' in salt['pillar.get']('gateway:location') -%}
            <param>
                <name>LIVYSERVER</name>
                <value>enabled=true;maxFailoverAttempts=3;failoverSleep=1000;maxRetryAttempts=300;retrySleep=1000</value>
            </param>
            {%- endif %}
            {% if 'NAMENODE' in salt['pillar.get']('gateway:location') -%}
            <param>
                <name>NAMENODE</name>
                <value>enabled=true;maxFailoverAttempts=3;failoverSleep=1000;maxRetryAttempts=300;retrySleep=1000</value>
            </param>
            {%- endif %}
            {% if 'OOZIE' in exposed and 'OOZIE_SERVER' in salt['pillar.get']('gateway:location') -%}
            <param>
                <name>OOZIE</name>
                <value>enabled=true;maxFailoverAttempts=3;failoverSleep=1000;maxRetryAttempts=300;retrySleep=1000</value>
            </param>
            {%- endif %}
            {% if 'RANGER' in exposed and 'RANGER_ADMIN' in salt['pillar.get']('gateway:location') -%}
            <param>
                <name>RANGER</name>
                <value>enabled=true;maxFailoverAttempts=3;failoverSleep=1000;maxRetryAttempts=300;retrySleep=1000</value>
            </param>
            {%- endif %}
            {% if 'YARNUI' in exposed and 'RESOURCEMANAGER' in salt['pillar.get']('gateway:location') -%}
            <param>
                <name>RESOURCEMANAGER</name>
                <value>enabled=true;maxFailoverAttempts=3;failoverSleep=1000;maxRetryAttempts=300;retrySleep=1000</value>
            </param>
            {%- endif %}
            {% if 'SOLR' in exposed and 'SOLR' in salt['pillar.get']('gateway:location') -%}
            <param>
                <name>SOLR</name>
                <value>enabled=true;maxFailoverAttempts=3;failoverSleep=1000;maxRetryAttempts=300;retrySleep=1000</value>
            </param>
            {%- endif %}
            {% if 'HBASE' in exposed and 'HBASE' in salt['pillar.get']('gateway:location') -%}
            <param>
                <name>WEBHBASE</name>
                <value>enabled=true;maxFailoverAttempts=3;failoverSleep=1000;maxRetryAttempts=300;retrySleep=1000</value>
            </param>
            {%- endif %}
            {% if 'WEBHDFS' in exposed and 'NAMENODE' in salt['pillar.get']('gateway:location')  -%}
            <param>
                <name>WEBHDFS</name>
                <value>enabled=true;maxFailoverAttempts=3;failoverSleep=1000;maxRetryAttempts=300;retrySleep=1000</value>
            </param>
            {%- endif %}
        </provider>
    </gateway>

    {% if 'ATLAS_SERVER' in salt['pillar.get']('gateway:location') -%}
    {% if 'ATLAS' in exposed -%}
    <service>
        <role>ATLAS-API</role>
        {% for hostloc in salt['pillar.get']('gateway:location')['ATLAS_SERVER'] -%}
        <url>http://{{ hostloc }}:{{ ports['ATLAS'] }}</url>
        {%- endfor %}
    </service>
    {%- endif %}
    {%- endif %}

    {% if 'CM-API' in salt['pillar.get']('gateway:location') -%}
    {% if 'CM-API' in exposed -%}
    <service>
        <role>CM-API</role>
        {% for hostloc in salt['pillar.get']('gateway:location')['CM-API'] -%}
        <url>http://{{ hostloc }}:{{ ports['CM-API'] }}/api</url>
        <param>
            <name>httpclient.connectionTimeout</name>
            <value>5m</value>
        </param>
        <param>
            <name>httpclient.socketTimeout</name>
            <value>5m</value>
        </param>
        {%- endfor %}
    </service>
    {%- endif %}
    {%- endif %}

    {% if 'HIVESERVER2' in salt['pillar.get']('gateway:location') -%}
    {% if 'HIVE' in exposed -%}
    <service>
        <role>HIVE</role>
        {% for hostloc in salt['pillar.get']('gateway:location')['HIVESERVER2'] -%}
        <url>http://{{ hostloc }}:{{ ports['HIVE'] }}/cliservice</url>
        {%- endfor %}
    </service>
    {%- endif %}
    {%- endif %}

    {% if 'LIVY_SERVER' in salt['pillar.get']('gateway:location') -%}
    {% if 'LIVYSERVER1' in exposed -%}
    <service>
        <role>LIVYSERVER</role>
        {% for hostloc in salt['pillar.get']('gateway:location')['LIVY_SERVER'] -%}
        <url>http://{{ hostloc }}:{{ ports['LIVYSERVER1'] }}</url>
        {%- endfor %}
    </service>
    {%- endif %}
    {%- endif %}

    <!-- TODO - NAMENODE -->
    <!-- TODO - OOZIE -->

    {% if 'RANGER_ADMIN' in salt['pillar.get']('gateway:location') -%}
    {% if 'RANGER' in exposed -%}
    <service>
        <role>RANGER</role>
        {% for hostloc in salt['pillar.get']('gateway:location')['RANGER_ADMIN'] -%}
        <url>http://{{ hostloc }}:{{ ports['RANGER'] }}</url>
        {%- endfor %}
    </service>
    {%- endif %}
    {%- endif %}

    <!-- TODO - RESOURCEMANAGER -->
    <!-- TODO - SOLR -->
    <!-- TODO - WEBHBASE -->

    {% if 'NAMENODE' in salt['pillar.get']('gateway:location') -%}
    {% if 'WEBHDFS' in exposed -%}
    <service>
        <role>WEBHDFS</role>
        {% for hostloc in salt['pillar.get']('gateway:location')['NAMENODE'] -%}
        <url>http://{{ hostloc }}:{{ ports['WEBHDFS'] }}/webhdfs</url>
        {%- endfor %}
    </service>
    {%- endif %}
    {%- endif %}
</topology>
