<?xml version="1.0" encoding="UTF-8"?>
<topology>
    <name>{{ topology_name }}-api</name>
    <gateway>

        <provider>
           <role>authentication</role>
           <name>ShiroProvider</name>
           <enabled>true</enabled>
           <param>
              <name>sessionTimeout</name>
              <value>30</value>
           </param>
           <param>
              <name>main.pamRealm</name>
              <value>org.apache.hadoop.gateway.shirorealm.KnoxPamRealm</value>
           </param>
           <param>
              <name>main.pamRealm.service</name>
              <value>login</value>
           </param>
           <param>
              <name>urls./**</name>
              <value>authcBasic</value>
           </param>
        </provider>

{% if salt['pillar.get']('gateway:envAccessGroup') is defined and salt['pillar.get']('gateway:envAccessGroup') | length > 0 %}
        <provider>
            <role>identity-assertion</role>
            <name>HadoopGroupProvider</name>
            <enabled>true</enabled>
            <param>
                <name>CENTRAL_GROUP_CONFIG_PREFIX</name>
                <value>gateway.group.config.</value>
            </param>
        </provider>

        <provider>
            <role>authorization</role>
            <name>AclsAuthz</name>
            <enabled>true</enabled>
            <param>
                <name>knox.acl.mode</name>
                <value>AND</value>
            </param>
            <param>
                <name>atlas-api.acl</name>
                <value>*;{{ salt['pillar.get']('gateway:envAccessGroup') }};*</value>
            </param>
            <param>
                <name>cm-api.acl</name>
                <value>*;{{ salt['pillar.get']('gateway:envAccessGroup') }};*</value>
            </param>
            <param>
                <name>hive.acl</name>
                <value>*;{{ salt['pillar.get']('gateway:envAccessGroup') }};*</value>
            </param>
            <param>
                <name>impala.acl</name>
                <value>*;{{ salt['pillar.get']('gateway:envAccessGroup') }};*</value>
            </param>
            <param>
                <name>jobtracker.acl</name>
                <value>*;{{ salt['pillar.get']('gateway:envAccessGroup') }};*</value>
            </param>
            <param>
                <name>livyserver.acl</name>
                <value>*;{{ salt['pillar.get']('gateway:envAccessGroup') }};*</value>
            </param>
            <param>
                <name>namenode.acl</name>
                <value>*;{{ salt['pillar.get']('gateway:envAccessGroup') }};*</value>
            </param>
            <param>
                <name>nifi.acl</name>
                <value>*;{{ salt['pillar.get']('gateway:envAccessGroup') }};*</value>
            </param>
            <param>
                <name>oozie.acl</name>
                <value>*;{{ salt['pillar.get']('gateway:envAccessGroup') }};*</value>
            </param>
            <param>
                <name>ranger.acl</name>
                <value>*;{{ salt['pillar.get']('gateway:envAccessGroup') }};*</value>
            </param>
            <param>
                <name>resourcemanager.acl</name>
                <value>*;{{ salt['pillar.get']('gateway:envAccessGroup') }};*</value>
            </param>
            <param>
                <name>smm-api.acl</name>
                <value>*;{{ salt['pillar.get']('gateway:envAccessGroup') }};*</value>
            </param>
            <param>
                <name>solr.acl</name>
                <value>*;{{ salt['pillar.get']('gateway:envAccessGroup') }};*</value>
            </param>
            <param>
                <name>webhbase.acl</name>
                <value>*;{{ salt['pillar.get']('gateway:envAccessGroup') }};*</value>
            </param>
            <param>
                <name>webhdfs.acl</name>
                <value>*;{{ salt['pillar.get']('gateway:envAccessGroup') }};*</value>
            </param>
        </provider>
{% endif %}

        <provider>
            <role>ha</role>
            <name>HaProvider</name>
            <enabled>true</enabled>
            {% if 'ATLAS' in exposed and 'ATLAS_SERVER' in salt['pillar.get']('gateway:location') -%}
            <param>
                <name>ATLAS-API</name>
                <value>enabled=true;maxFailoverAttempts=3;failoverSleep=1000</value>
            </param>
            {%- endif %}
            {% if 'CM-API' in exposed and 'CM-API' in salt['pillar.get']('gateway:location') -%}
            <param>
                <name>CM-API</name>
                <value>enabled=true;maxFailoverAttempts=3;failoverSleep=1000</value>
            </param>
            {%- endif %}
            {% if 'HIVE' in exposed and 'HIVESERVER2' in salt['pillar.get']('gateway:location') -%}
            <param>
                <name>HIVE</name>
                <value>enabled=true;maxFailoverAttempts=3;failoverSleep=1000</value>
            </param>
            {%- endif %}
            {% if 'LIVYSERVER_API' in exposed and 'LIVY_SERVER' in salt['pillar.get']('gateway:location') -%}
            <param>
                <name>LIVYSERVER</name>
                <value>enabled=true;maxFailoverAttempts=3;failoverSleep=1000</value>
            </param>
            {%- endif %}
            {% if 'NAMENODE' in salt['pillar.get']('gateway:location') -%}
            <param>
                <name>NAMENODE</name>
                <value>enabled=true;maxFailoverAttempts=3;failoverSleep=1000</value>
            </param>
            {%- endif %}
            {% if 'WEBHDFS' in exposed and 'NAMENODE' in salt['pillar.get']('gateway:location')  -%}
            <param>
                <name>WEBHDFS</name>
                <value>enabled=true;maxFailoverAttempts=3;failoverSleep=1000</value>
            </param>
            {%- endif %}
            {% if 'OOZIE' in exposed and 'OOZIE_SERVER' in salt['pillar.get']('gateway:location') -%}
            <param>
                <name>OOZIE</name>
                <value>enabled=true;maxFailoverAttempts=3;failoverSleep=1000</value>
            </param>
            {%- endif %}
            {% if 'RANGER' in exposed and 'RANGER_ADMIN' in salt['pillar.get']('gateway:location') -%}
            <param>
                <name>RANGER</name>
                <value>enabled=true;maxFailoverAttempts=3;failoverSleep=1000</value>
            </param>
            {%- endif %}
            {% if 'YARNUIV2' in exposed and 'RESOURCEMANAGER' in salt['pillar.get']('gateway:location') -%}
            <param>
                <name>RESOURCEMANAGER</name>
                <value>enabled=true;maxFailoverAttempts=3;failoverSleep=1000</value>
            </param>
            {%- endif %}
            {% if 'WEBHBASE' in exposed and 'HBASERESTSERVER' in salt['pillar.get']('gateway:location') -%}
            <param>
                <name>WEBHBASE</name>
                <value>enabled=true;maxFailoverAttempts=3;failoverSleep=1000</value>
            </param>
            {%- endif %}
            {% if 'SOLR' in exposed and 'SOLR_SERVER' in salt['pillar.get']('gateway:location') -%}
            <param>
                <name>SOLR</name>
                <value>enabled=true;maxFailoverAttempts=3;failoverSleep=1000</value>
            </param>
            {%- endif %}
            {% if 'IMPALA' in exposed and 'IMPALAD' in salt['pillar.get']('gateway:location') -%}
            <param>
                <name>IMPALA</name>
                <value>enabled=true;maxFailoverAttempts=3;failoverSleep=1000</value>
            </param>
            {%- endif %}
            {% if 'NIFI_REST' in exposed and 'NIFI_NODE' in salt['pillar.get']('gateway:location') -%}
             <param>
                 <name>NIFI</name>
                 <value>enabled=true;maxFailoverAttempts=3;failoverSleep=1000</value>
             </param>
             {%- endif %}
        </provider>
    </gateway>

    {% if 'ATLAS_SERVER' in salt['pillar.get']('gateway:location') -%}
    {% if 'ATLAS' in exposed -%}
    <service>
        <role>ATLAS-API</role>
        {% for hostloc in salt['pillar.get']('gateway:location')['ATLAS_SERVER'] -%}
        <url>{{ protocol }}://{{ hostloc }}:{{ ports['ATLAS'] }}</url>
        {%- endfor %}
    </service>
    {%- endif %}
    {%- endif %}

    {% if 'CM-API' in salt['pillar.get']('gateway:location') -%}
    {% if 'CM-API' in exposed -%}
    <service>
        <role>CM-API</role>
        {% for hostloc in salt['pillar.get']('gateway:location')['CM-API'] -%}
        <url>{{ protocol }}://{{ hostloc }}:{{ ports['CM-API'] }}/api</url>
        <param>
            <name>httpclient.connectionTimeout</name>
            <value>5m</value>
        </param>
        <param>
            <name>httpclient.socketTimeout</name>
            <value>5m</value>
        </param>
        {%- endfor %}
    </service>
    {%- endif %}
    {%- endif %}

    {% if 'HIVESERVER2' in salt['pillar.get']('gateway:location') -%}
    {% if 'HIVE' in exposed -%}
    <service>
        <role>HIVE</role>
        {% for hostloc in salt['pillar.get']('gateway:location')['HIVESERVER2'] -%}
        <url>{{ protocol }}://{{ hostloc }}:{{ ports['HIVE'] }}/cliservice</url>
        {%- endfor %}
        <param>
            <name>httpclient.connectionTimeout</name>
            <value>5m</value>
        </param>
        <param>
            <name>httpclient.socketTimeout</name>
            <value>5m</value>
        </param>
    </service>
    {%- endif %}
    {%- endif %}

    {% if 'LIVY_SERVER' in salt['pillar.get']('gateway:location') -%}
    {% if 'LIVYSERVER_API' in exposed -%}
    <service>
        <role>LIVYSERVER</role>
        {% for hostloc in salt['pillar.get']('gateway:location')['LIVY_SERVER'] -%}
        <url>{{ protocol }}://{{ hostloc }}:{{ ports['LIVYSERVER_API'] }}</url>
        {%- endfor %}
    </service>
    {%- endif %}
    {%- endif %}

    {% if 'OOZIE_SERVER' in salt['pillar.get']('gateway:location') -%}
    {% if 'OOZIE' in exposed -%}
    <service>
        <role>OOZIE</role>
        {% for hostloc in salt['pillar.get']('gateway:location')['OOZIE_SERVER'] -%}
        <url>{{ protocol }}://{{ hostloc }}:{{ ports['OOZIE'] }}/oozie/</url>
        {%- endfor %}
    </service>
    {%- endif %}
    {%- endif %}

    {% if 'RANGER_ADMIN' in salt['pillar.get']('gateway:location') -%}
    {% if 'RANGER' in exposed -%}
    <service>
        <role>RANGER</role>
        {% for hostloc in salt['pillar.get']('gateway:location')['RANGER_ADMIN'] -%}
        <url>{{ protocol }}://{{ hostloc }}:{{ ports['RANGER'] }}</url>
        {%- endfor %}
        <param>
            <name>replayBufferSize</name>
            <value>65</value>
        </param>
    </service>
    {%- endif %}
    {%- endif %}

    {% if 'RESOURCEMANAGER' in salt['pillar.get']('gateway:location') -%}
    {% if 'YARNUIV2' in exposed -%}
    <service>
        <role>RESOURCEMANAGER</role>
        {% for hostloc in salt['pillar.get']('gateway:location')['RESOURCEMANAGER'] -%}
        <url>{{ protocol }}://{{ hostloc }}:{{ ports['YARNUIV2'] }}/ws</url>
        {%- endfor %}
    </service>
    {%- endif %}

    {% if 'JOBTRACKER' in exposed -%}
    <service>
        <role>JOBTRACKER</role>
        {% for hostloc in salt['pillar.get']('gateway:location')['RESOURCEMANAGER'] -%}
        <url>rpc://{{ hostloc }}:{{ ports['JOBTRACKER'] }}</url>
        {%- endfor %}
    </service>
    {%- endif %}
    {%- endif %}

    {% if 'SOLR_SERVER' in salt['pillar.get']('gateway:location') -%}
    {% if 'SOLR' in exposed -%}
    <service>
        <role>SOLR</role>
        {% for hostloc in salt['pillar.get']('gateway:location')['SOLR_SERVER'] -%}
        <url>{{ protocol }}://{{ hostloc }}:{{ ports['SOLR'] }}/solr</url>
        {%- endfor %}
    </service>
    {%- endif %}
    {%- endif %}

    {% if 'NAMENODE' in salt['pillar.get']('gateway:location') -%}
    {% if 'WEBHDFS' in exposed -%}
    <service>
        <role>WEBHDFS</role>
        {% for hostloc in salt['pillar.get']('gateway:location')['NAMENODE'] -%}
        <url>{{ protocol }}://{{ hostloc }}:{{ ports['WEBHDFS'] }}/webhdfs</url>
        {%- endfor %}
    </service>
    {%- endif %}

    {% if 'NAMENODE' in exposed -%}
    <service>
        <role>NAMENODE</role>
        {% for hostloc in salt['pillar.get']('gateway:location')['NAMENODE'] -%}
        <url>hdfs://{{ hostloc }}:{{ ports['NAMENODE'] }}</url>
        {%- endfor %}
    </service>
    {%- endif %}
    {%- endif %}

    {% if 'HBASERESTSERVER' in salt['pillar.get']('gateway:location') -%}
    {% if 'WEBHBASE' in exposed -%}
    <service>
        <role>WEBHBASE</role>
        {% for hostloc in salt['pillar.get']('gateway:location')['HBASERESTSERVER'] -%}
        <url>{{ protocol }}://{{ hostloc }}:{{ ports['WEBHBASE'] }}</url>
        {%- endfor %}
    </service>
    {%- endif %}
    {%- endif %}

    {% if 'IMPALAD' in salt['pillar.get']('gateway:location') -%}
    {% if 'IMPALA' in exposed -%}
    <service>
        <role>IMPALA</role>
        {% for hostloc in salt['pillar.get']('gateway:location')['IMPALAD'] -%}
        <url>{{ protocol }}://{{ hostloc }}:{{ ports['IMPALA'] }}</url>
        {%- endfor %}
    </service>
    {%- endif %}
    {%- endif %}

    {% if 'NIFI_NODE' in salt['pillar.get']('gateway:location') -%}
    {% if 'NIFI_REST' in exposed -%}
    <service>
        <role>NIFI</role>
        <param name="useTwoWaySsl" value="true" />
        {% for hostloc in salt['pillar.get']('gateway:location')['NIFI_NODE'] -%}
        <url>{{ protocol }}://{{ hostloc }}:{{ ports['NIFI_REST'] }}</url>
        {%- endfor %}
    </service>
    {%- endif %}
    {%- endif %}

    {% if 'STREAMS_MESSAGING_MANAGER_SERVER' in salt['pillar.get']('gateway:location') -%}
    {% if 'SMM-API' in exposed -%}
    <service>
        <role>SMM-API</role>
        {% for hostloc in salt['pillar.get']('gateway:location')['STREAMS_MESSAGING_MANAGER_SERVER'] -%}
        <url>{{ protocol }}://{{ hostloc }}:{{ ports['SMM-API'] }}</url>
        {%- endfor %}
    </service>
    {%- endif %}
    {%- endif %}

    {% if 'SCHEMA_REGISTRY_SERVER' in salt['pillar.get']('gateway:location') -%}
    {% if 'SCHEMA-REGISTRY' in exposed -%}
        <service>
            <role>SCHEMA-REGISTRY</role>
            {% for hostloc in salt['pillar.get']('gateway:location')['SCHEMA_REGISTRY_SERVER'] -%}
            <url>{{ protocol }}://{{ hostloc }}:{{ ports['SCHEMA-REGISTRY'] }}</url>
            {%- endfor %}
        </service>
    {%- endif %}
    {%- endif %}

</topology>
