<?xml version="1.0" encoding="UTF-8"?>
<topology>
    <gateway>

        <!-- {{ exposed }} -->

        {% if 'NONE' == salt['pillar.get']('gateway:ssotype') -%}

        <provider>
            <role>authentication</role>
            <name>ShiroProvider</name>
            <enabled>true</enabled>
            <param>
                <name>sessionTimeout</name>
                <value>30</value>
            </param>
            <param>
                <name>main.ldapRealm</name>
                <value>org.apache.hadoop.gateway.shirorealm.KnoxLdapRealm</value>
            </param>
            <param>
                <name>main.ldapContextFactory</name>
                <value>org.apache.hadoop.gateway.shirorealm.KnoxLdapContextFactory</value>
            </param>
            <param>
                <name>main.ldapRealm.contextFactory</name>
                <value>$ldapContextFactory</value>
            </param>
            <param>
                <name>main.ldapRealm.contextFactory.url</name>
                <value>{{ salt['pillar.get']('ldap:protocol') }}://{{ salt['pillar.get']('ldap:serverHost') }}:{{ salt['pillar.get']('ldap:serverPort') }}</value>
            </param>

            {% if salt['pillar.get']('ldap:local', False) -%}
            <param>
                <name>main.ldapRealm.userDnTemplate</name>
                <value>{{ salt['pillar.get']('ldap:userNameAttribute') }}={0},{{ salt['pillar.get']('ldap:userSearchBase') }}</value>
            </param>
            {%- else %}
            <param>
                <name>main.ldapRealm.contextFactory.systemUsername</name>
                <value>{{ salt['pillar.get']('ldap:bindDn') }}</value>
            </param>
            <param>
                <name>main.ldapRealm.contextFactory.systemPassword</name>
                <value><![CDATA[{{ salt['pillar.get']('ldap:bindPassword') }}]]></value>
            </param>
            <param>
                <name>main.ldapRealm.searchBase</name>
                <value>{{ salt['pillar.get']('ldap:userSearchBase') }}</value>
            </param>
            <param>
                <name>main.ldapRealm.userSearchAttributeName</name>
                <value>{{ salt['pillar.get']('ldap:userNameAttribute') }}</value>
            </param>
            <param>
                <name>main.ldapRealm.userObjectClass</name>
                <value>{{ salt['pillar.get']('ldap:userObjectClass') }}</value>
            </param>
            {%- endif %}

            <param>
                <name>main.ldapRealm.contextFactory.authenticationMechanism</name>
                <value>simple</value>
            </param>
            <param>
                <name>urls./**</name>
                <value>authcBasic</value>
            </param>
        </provider>

        {%- else %}

        <provider>
           <role>federation</role>
           <name>SSOCookieProvider</name>
           <enabled>true</enabled>
           <param>
              <name>sso.authentication.provider.url</name>
              <value>/{{ salt['pillar.get']('gateway:path') }}/sso/api/v1/websso</value>
           </param>
        </provider>

        {%- endif %}

        <provider>
            <role>identity-assertion</role>
            <name>Default</name>
            <enabled>true</enabled>
        </provider>

    </gateway>

    {% if 'NAMENODE' in salt['pillar.get']('gateway:location') -%}
    {% if 'WEBHDFS' in exposed -%}
    <!-- curl -iku {{ salt['pillar.get']('gateway:username') }}:{{ salt['pillar.get']('gateway:password') }} -X GET 'https://{{ salt['grains.get']('gateway-address')[0] }}:8443/{{ salt['pillar.get']('gateway:path') }}/{{ salt['pillar.get']('gateway:topologies:name') }}/webhdfs/v1/?op=LISTSTATUS' -->
    <service>
        <role>WEBHDFS</role>
        {% for hostloc in salt['pillar.get']('gateway:location')['NAMENODE'] -%}
        <url>http://{{ hostloc }}:{{ ports['WEBHDFS'] }}/webhdfs</url>
        {%- endfor %}
    </service>
    {%- endif %}
    {%- endif %}

    {% if 'AMBARI' in exposed -%}
    <service>
        <role>AMBARI</role>
        <url>http://{{ salt['grains.get']('fqdn') }}:{{ ports['AMBARI'] }}</url>
    </service>
    <service>
        <role>AMBARIUI</role>
        <url>http://{{ salt['grains.get']('fqdn') }}:{{ ports['AMBARI'] }}</url>
    </service>
    <service>
        <role>AMBARIWS</role>
        <url>http://{{ salt['grains.get']('fqdn') }}:{{ ports['AMBARI'] }}</url>
    </service>
    {%- endif %}

    {% if 'RANGER_ADMIN' in salt['pillar.get']('gateway:location') -%}
    {% if 'RANGER' in exposed -%}
    <service>
        <role>RANGER</role>
        {% for hostloc in salt['pillar.get']('gateway:location')['RANGER_ADMIN'] -%}
        <url>http://{{ hostloc }}:{{ ports['RANGERUI'] }}</url>
        {%- endfor %}
    </service>
    {%- endif %}
    {%- endif %}

    {% if ('HIVE_SERVER' in salt['pillar.get']('gateway:location')) and not ('HIVE_SERVER_INTERACTIVE' in salt['pillar.get']('gateway:location')) -%}
    {% if 'HIVE' in exposed -%}
    <!-- beeline -u "jdbc:hive2://{{ salt['grains.get']('gateway-address')[0] }}:8443/;ssl=true;sslTrustStore=/usr/{{ stack_type }}/current/knox-server/data/security/keystores/gateway.jks;trustStorePassword={{ salt['pillar.get']('gateway:mastersecret') }};transportMode=http;httpPath={{ salt['pillar.get']('gateway:path') }}/{{ salt['pillar.get']('gateway:topologies:name') }}/hive" -d org.apache.hive.jdbc.HiveDriver -n {{ salt['pillar.get']('gateway:username') }} -p {{ salt['pillar.get']('gateway:password') }} -e "show databases;" -->
    <!-- beeline -u "jdbc:hive2://localhost:10001/;transportMode=http;httpPath=cliservice" -d org.apache.hive.jdbc.HiveDriver -n hive -p {{ salt['pillar.get']('gateway:password') }} -e "show databases;" -->
    <!-- docker run -ti -v $(pwd):/cert akanto/beeline -u "jdbc:hive2://{{ salt['grains.get']('gateway-address')[0] }}:8443/;ssl=true;sslTrustStore=/cert/gateway.jks;trustStorePassword={{ salt['pillar.get']('gateway:mastersecret') }};transportMode=http;httpPath={{ salt['pillar.get']('gateway:path') }}/{{ salt['pillar.get']('gateway:topologies:name') }}/hive" -d org.apache.hive.jdbc.HiveDriver -n {{ salt['pillar.get']('gateway:username') }} -p {{ salt['pillar.get']('gateway:password') }} -e "show databases;" -->

    <service>
        <role>HIVE</role>
        {% for hostloc in salt['pillar.get']('gateway:location')['HIVE_SERVER'] -%}
        <url>http://{{ hostloc }}:{{ ports['HIVE'] }}/cliservice</url>
        {%- endfor %}
    </service>
    {%- endif %}
    {%- endif %}

    {% if 'HIVE_SERVER_INTERACTIVE' in salt['pillar.get']('gateway:location') -%}
    {% if 'HIVE_INTERACTIVE' in exposed -%}
    <!-- beeline -u "jdbc:hive2://{{ salt['grains.get']('gateway-address')[0] }}:8443/;ssl=true;sslTrustStore=/usr/{{ stack_type }}/current/knox-server/data/security/keystores/gateway.jks;trustStorePassword={{ salt['pillar.get']('gateway:password') }};transportMode=http;httpPath={{ salt['pillar.get']('gateway:path') }}/{{ salt['pillar.get']('gateway:topologies:name') }}/hive" -d org.apache.hive.jdbc.HiveDriver -n {{ salt['pillar.get']('gateway:username') }} -p {{ salt['pillar.get']('gateway:password') }} -e "show databases;" -->
    <!-- beeline -u "jdbc:hive2://localhost:10001/;transportMode=http;httpPath=cliservice" -d org.apache.hive.jdbc.HiveDriver -n hive -p {{ salt['pillar.get']('gateway:password') }} -e "show databases;" -->
    <!-- docker run -ti -v $(pwd):/cert akanto/beeline -u "jdbc:hive2://{{ salt['grains.get']('gateway-address')[0] }}:8443/;ssl=true;sslTrustStore=/cert/gateway.jks;trustStorePassword={{ salt['pillar.get']('gateway:password') }};transportMode=http;httpPath={{ salt['pillar.get']('gateway:path') }}/{{ salt['pillar.get']('gateway:topologies:name') }}/hive" -d org.apache.hive.jdbc.HiveDriver -n {{ salt['pillar.get']('gateway:username') }} -p {{ salt['pillar.get']('gateway:password') }} -e "show databases;" -->

    <service>
        <role>HIVE</role>
        {% for hostloc in salt['pillar.get']('gateway:location')['HIVE_SERVER_INTERACTIVE'] -%}
        <url>http://{{ hostloc }}:{{ ports['HIVE_INTERACTIVE'] }}/cliservice</url>
        {%- endfor %}
    </service>
    {%- endif %}
    {%- endif %}

    <!-- UI -->
    {% if 'NAMENODE' in salt['pillar.get']('gateway:location') -%}
    {% if 'HDFSUI' in exposed -%}
    <!-- https://{{ salt['grains.get']('gateway-address')[0] }}:8443/{{ salt['pillar.get']('gateway:path') }}/{{ salt['pillar.get']('gateway:topologies:name') }}/hdfs/ }} -->
    <!-- From HDP 3.0 -->
    {% for hostloc in salt['pillar.get']('gateway:location')['NAMENODE'] -%}
    <!-- https://{{ salt['grains.get']('gateway-address')[0] }}:8443/{{ salt['pillar.get']('gateway:path') }}/{{ salt['pillar.get']('gateway:topologies:name') }}/hdfs/?host=http://{{ hostloc }}:{{ ports['HDFSUI'] }} -->
    {%- endfor %}
    <service>
        <role>HDFSUI</role>
        {% for hostloc in salt['pillar.get']('gateway:location')['NAMENODE'] -%}
        <url>http://{{ hostloc }}:{{ ports['HDFSUI'] }}</url>
        {%- endfor %}
    </service>
    {%- endif %}
    {%- endif %}

    {% if 'RESOURCEMANAGER' in salt['pillar.get']('gateway:location') -%}
    {% if 'YARNUI' in exposed -%}
    <!-- https://{{ salt['grains.get']('gateway-address')[0] }}:8443/{{ salt['pillar.get']('gateway:path') }}/{{ salt['pillar.get']('gateway:topologies:name') }}/yarn/ -->
    <service>
        <role>YARNUI</role>
        {% for hostloc in salt['pillar.get']('gateway:location')['RESOURCEMANAGER'] -%}
        <url>http://{{ hostloc }}:{{ ports['YARNUI'] }}</url>
        {%- endfor %}
    </service>
    {%- endif %}
    {% if 'YARNUIV2' in exposed -%}
    <!-- https://{{ salt['grains.get']('gateway-address')[0] }}:8443/{{ salt['pillar.get']('gateway:path') }}/{{ salt['pillar.get']('gateway:topologies:name') }}/yarnuiv2/ -->
    <service>
        <role>YARNUIV2</role>
        {% for hostloc in salt['pillar.get']('gateway:location')['RESOURCEMANAGER'] -%}
        <url>http://{{ hostloc }}:{{ ports['YARNUIV2'] }}</url>
        {%- endfor %}
    </service>
    {%- endif %}
    {%- endif %}

    {% if 'HISTORYSERVER' in salt['pillar.get']('gateway:location') -%}
    {% if 'JOBHISTORYUI' in exposed -%}
    <!-- https://{{ salt['grains.get']('gateway-address')[0] }}:8443/{{ salt['pillar.get']('gateway:path') }}/{{ salt['pillar.get']('gateway:topologies:name') }}/jobhistory/ -->
    <service>
        <role>JOBHISTORYUI</role>
        {% for hostloc in salt['pillar.get']('gateway:location')['HISTORYSERVER'] -%}
        <url>http://{{ hostloc }}:{{ ports['JOBHISTORYUI'] }}</url>
        {%- endfor %}
    </service>
    {%- endif %}
    {%- endif %}

    {% if 'SPARK_JOBHISTORYSERVER' in salt['pillar.get']('gateway:location') and not ('SPARK2_JOBHISTORYSERVER' in salt['pillar.get']('gateway:location')) -%}
    {% if 'SPARKHISTORYUI' in exposed -%}
    <!-- https://{{ salt['grains.get']('gateway-address')[0] }}:8443/{{ salt['pillar.get']('gateway:path') }}/{{ salt['pillar.get']('gateway:topologies:name') }}/sparkhistory/ -->
    <service>
        <role>SPARKHISTORYUI</role>
        {% for hostloc in salt['pillar.get']('gateway:location')['SPARK_JOBHISTORYSERVER'] -%}
        <url>http://{{ hostloc }}:{{ ports['SPARKHISTORYUI'] }}/</url>
        {%- endfor %}
    </service>
    {%- endif %}
    {%- endif %}

    {% if 'SPARK2_JOBHISTORYSERVER' in salt['pillar.get']('gateway:location') -%}
    {% if 'SPARK2HISTORYUI' in exposed -%}
    <!-- https://{{ salt['grains.get']('gateway-address')[0] }}:8443/{{ salt['pillar.get']('gateway:path') }}/{{ salt['pillar.get']('gateway:topologies:name') }}/sparkhistory/ -->
    <service>
        <role>SPARKHISTORYUI</role>
        {% for hostloc in salt['pillar.get']('gateway:location')['SPARK2_JOBHISTORYSERVER'] -%}
        <url>http://{{ hostloc }}:{{ ports['SPARK2HISTORYUI'] }}/</url>
        {%- endfor %}
    </service>
    {%- endif %}
    {%- endif %}

    {% if 'ZEPPELIN_MASTER' in salt['pillar.get']('gateway:location') -%}
    {% if 'ZEPPELIN' in exposed -%}
    <!-- https://{{ salt['grains.get']('gateway-address')[0] }}:8443/{{ salt['pillar.get']('gateway:path') }}/{{ salt['pillar.get']('gateway:topologies:name') }}/zeppelin/ -->
    <service>
        <role>ZEPPELINUI</role>
        {% for hostloc in salt['pillar.get']('gateway:location')['ZEPPELIN_MASTER'] -%}
        <url>http://{{ hostloc }}:{{ ports['ZEPPELIN'] }}</url>
        {%- endfor %}
    </service>
    <service>
        <role>ZEPPELINWS</role>
        {% for hostloc in salt['pillar.get']('gateway:location')['ZEPPELIN_MASTER'] -%}
        <url>ws://{{ hostloc }}:9995/ws</url>
        {%- endfor %}
    </service>
    {%- endif %}
    {%- endif %}

    {% if 'RANGER_ADMIN' in salt['pillar.get']('gateway:location') -%}
    {% if 'RANGERUI' in exposed -%}
    <!-- https://{{ salt['grains.get']('gateway-address')[0] }}:8443/{{ salt['pillar.get']('gateway:path') }}/{{ salt['pillar.get']('gateway:topologies:name') }}/ranger/ -->
    <service>
        <role>RANGERUI</role>
        {% for hostloc in salt['pillar.get']('gateway:location')['RANGER_ADMIN'] -%}
        <url>http://{{ hostloc }}:{{ ports['RANGERUI'] }}</url>
        {%- endfor %}
    </service>
    {%- endif %}
    {%- endif %}

    {% if 'ATLAS_SERVER' in salt['pillar.get']('gateway:location') -%}
    {% if 'ATLAS' in exposed -%}
    <!-- https://{{ salt['grains.get']('gateway-address')[0] }}:8443/{{ salt['pillar.get']('gateway:path') }}/{{ salt['pillar.get']('gateway:topologies:name') }}/atlas/ -->
    <service>
        <role>ATLAS</role>
        {% for hostloc in salt['pillar.get']('gateway:location')['ATLAS_SERVER'] -%}
        <url>http://{{ hostloc }}:{{ ports['ATLAS'] }}</url>
        {%- endfor %}
    </service>

    <service>
        <role>ATLAS-API</role>
        {% for hostloc in salt['pillar.get']('gateway:location')['ATLAS_SERVER'] -%}
        <url>http://{{ hostloc }}:{{ ports['ATLAS'] }}</url>
        {%- endfor %}
    </service>
    {%- endif %}
    {%- endif %}

    {% if 'DP_PROFILER_AGENT' in salt['pillar.get']('gateway:location') -%}
    {% if 'PROFILER-AGENT' in exposed -%}
    <service>
        <role>PROFILER-AGENT</role>
        {% for hostloc in salt['pillar.get']('gateway:location')['DP_PROFILER_AGENT'] -%}
        <url>http://{{ hostloc }}:{{ ports['PROFILER-AGENT'] }}</url>
        {%- endfor %}
    </service>
    {%- endif %}
    {%- endif %}

    {% if 'BEACON_SERVER' in salt['pillar.get']('gateway:location') -%}
    {% if 'BEACON' in exposed -%}
    <service>
        <role>BEACON</role>
        {% for hostloc in salt['pillar.get']('gateway:location')['BEACON_SERVER'] -%}
        <url>http://{{ hostloc }}:{{ ports['BEACON'] }}</url>
        {%- endfor %}
    </service>
    {%- endif %}
    {%- endif %}

   {% if 'LIVY2_SERVER' in salt['pillar.get']('gateway:location') -%}
    {% if 'LIVYSERVER' in exposed -%}
    <service>
        <role>LIVYSERVER</role>
        {% for hostloc in salt['pillar.get']('gateway:location')['LIVY2_SERVER'] -%}
        <url>http://{{ hostloc }}:{{ ports['LIVYSERVER'] }}</url>
        {%- endfor %}
    </service>
    {%- endif %}
    {%- endif %}

</topology>