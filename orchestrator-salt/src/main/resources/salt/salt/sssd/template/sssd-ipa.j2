{%- set secretEncryptionEnabled = True if salt['pillar.get']('cluster:secretEncryptionEnabled', False) == True else False %}
{%- set krb5_ccname_template_path = salt['pillar.get']('kerberos:cCacheSecretLocation') if secretEncryptionEnabled == True else '/tmp' %}
{%- set kerberosConfigPath = salt['pillar.get']('kerberos:kerberosSecretLocation') if secretEncryptionEnabled == True else '/etc' %}
[sssd]
{%- if "ID_BROKER_CLOUD_IDENTITY_ROLE" in grains.get('roles', []) %}
services = nss, pam, sudo
{% else %}
services = nss, pam, sudo, ssh
{% endif %}
domains = {{ pillar['sssd-ipa']['realm'] }}

[nss]
homedir_substring = /home
memcache_timeout = {{ pillar['sssd-ipa']['memcacheTimeout'] }}
timeout = {{ pillar['sssd-ipa']['nssTimeout'] | default(30, true) }}

[domain/{{ pillar['sssd-ipa']['realm'] }}]
cache_credentials = True
krb5_store_password_if_offline = True
krb5_realm = {{ pillar['sssd-ipa']['realm'] }}
ipa_domain = {{ pillar['sssd-ipa']['domain'] }}
krb5_ccname_template = FILE:{{ krb5_ccname_template_path }}/krb5cc_%U
krb5_keytab = {{ kerberosConfigPath }}/krb5.keytab
id_provider = ipa
auth_provider = ipa
access_provider = ipa
chpass_provider = ipa
ipa_server = _srv_, {{ pillar['sssd-ipa']['server'] }}
ldap_tls_cacert = /etc/ipa/ca.crt
ipa_hostname = {{ salt['grains.get']('fqdn') }}
enumerate = {{ pillar['sssd-ipa']['enumerate'] }}
entry_cache_timeout = {{ pillar['sssd-ipa']['entryCacheTimeout'] }}
timeout = {{ pillar['sssd-ipa']['heartbeatTimeout'] | default(60, true) }}

