/*
 * YARN Simplified API layer for services
 * Bringing a new service on YARN today is not a simple experience. The APIs of existing frameworks are either too low level (native YARN), require writing new code (for frameworks with programmatic APIs) or writing a complex spec (for declarative frameworks).  This simplified REST API can be used to create and manage the lifecycle of YARN services. In most cases, the application owner will not be forced to make any changes to their applications. This is primarily true if the application is packaged with containerization technologies like Docker.  This document describes the API specifications (aka. YarnFile) for deploying/managing containerized services on YARN. The same JSON spec can be used for both REST API and CLI to manage the services.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.apache.cb.yarn.service.api.records;

import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Resource determines the amount of resources (vcores, memory, network, etc.) usable by a container. This field determines the resource to be applied for all the containers of a component or service. The resource specified at the service (or global) level can be overriden at the component level. Only one of profile OR cpu &amp; memory are expected. It raises a validation exception otherwise.
 */
@ApiModel(description = "Resource determines the amount of resources (vcores, memory, network, etc.) usable by a container. This field determines the resource to be applied for all the containers of a component or service. The resource specified at the service (or global) level can be overriden at the component level. Only one of profile OR cpu & memory are expected. It raises a validation exception otherwise.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-08-08T16:59:40.572+02:00")
public class Resource {
    @JsonProperty("profile")
    private String profile = null;

    @JsonProperty("cpus")
    private Integer cpus = null;

    @JsonProperty("memory")
    private String memory = null;

    @JsonProperty("additional")
    private Map<String, ResourceInformation> additional = null;

    public Resource profile(String profile) {
        this.profile = profile;
        return this;
    }

    /**
     * Each resource profile has a unique id which is associated with a cluster-level predefined memory, cpus, etc.
     *
     * @return profile
     **/
    @ApiModelProperty(value = "Each resource profile has a unique id which is associated with a cluster-level predefined memory, cpus, etc.")
    public String getProfile() {
        return profile;
    }

    public void setProfile(String profile) {
        this.profile = profile;
    }

    public Resource cpus(Integer cpus) {
        this.cpus = cpus;
        return this;
    }

    /**
     * Amount of vcores allocated to each container (optional but overrides cpus in profile if specified).
     *
     * @return cpus
     **/
    @ApiModelProperty(value = "Amount of vcores allocated to each container (optional but overrides cpus in profile if specified).")
    public Integer getCpus() {
        return cpus;
    }

    public void setCpus(Integer cpus) {
        this.cpus = cpus;
    }

    public Resource memory(String memory) {
        this.memory = memory;
        return this;
    }

    /**
     * Amount of memory allocated to each container (optional but overrides memory in profile if specified). Currently accepts only an integer value and default unit is in MB.
     *
     * @return memory
     **/
    @ApiModelProperty(value = "Amount of memory allocated to each container (optional but overrides memory in profile if specified). Currently accepts only an integer value and default unit is in MB.")
    public String getMemory() {
        return memory;
    }

    public void setMemory(String memory) {
        this.memory = memory;
    }

    public Resource additional(Map<String, ResourceInformation> additional) {
        this.additional = additional;
        return this;
    }

    public Resource putAdditionalItem(String key, ResourceInformation additionalItem) {
        if (this.additional == null) {
            this.additional = new HashMap<String, ResourceInformation>();
        }
        this.additional.put(key, additionalItem);
        return this;
    }

    /**
     * A map of resource type name to resource type information. Including value (integer), and unit (string). This will be used to specify resource other than cpu and memory. Please refer to example below.
     *
     * @return additional
     **/
    @ApiModelProperty(value = "A map of resource type name to resource type information. Including value (integer), and unit (string). This will be used to specify resource other than cpu and memory. Please refer to example below.")
    public Map<String, ResourceInformation> getAdditional() {
        return additional;
    }

    public void setAdditional(Map<String, ResourceInformation> additional) {
        this.additional = additional;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Resource resource = (Resource) o;
        return Objects.equals(this.profile, resource.profile) &&
                Objects.equals(this.cpus, resource.cpus) &&
                Objects.equals(this.memory, resource.memory) &&
                Objects.equals(this.additional, resource.additional);
    }

    @Override
    public int hashCode() {
        return Objects.hash(profile, cpus, memory, additional);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Resource {\n");

        sb.append("    profile: ").append(toIndentedString(profile)).append("\n");
        sb.append("    cpus: ").append(toIndentedString(cpus)).append("\n");
        sb.append("    memory: ").append(toIndentedString(memory)).append("\n");
        sb.append("    additional: ").append(toIndentedString(additional)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

