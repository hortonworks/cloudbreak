syntax = "proto3";

package usage;

option java_package = "com.cloudera.thunderhead.service.common.usage";
option java_outer_classname = "UsageProto";
option go_package = "com/cloudera/cdp/protobuf";

// This proto defines the Altus usage event schema. Find the usage system design
// at docs/usage_reporting.md. This proto file is meant to be the documentation
// for the usage event schema, so it should be kept well commented. Note that
// this usage schema is a compatibility surface since we do not want consumers
// of usage data to have their queries or reports break when we make changes.

// A usage event.
message Event {
  // The event's ID.
  string id = 1;
  // The event timestamp in ms from the Java epoch of 1970-01-01T00:00:00Z.
  uint64 timestamp = 2;
  // The version of the usage system that generated the event.
  //
  // This should be bumped when it would make parsing of usage events easier,
  // e.g. when we've changed the semantics around what is and is not optional
  // or have made some semantic change for some event. It need not be bumped
  // for all changes to the usage model. If an event has semantics that have
  // changed over time, it should be noted in the comments for the specific
  // event message below.
  //
  // The current version and history is maintained in UsageReporter.java.
  uint32 version = 3;
  // The event-specific details.
  oneof details {
    // An Altus account was created.
    AltusIamAccountCreated altusIamAccountCreated = 4;
    // An Altus user was created.
    AltusIamUserCreated altusIamUserCreated = 5;
    // An Altus user record was updated.
    AltusIamUserUpdated altusIamUserUpdated = 6;
    // An Altus user was deleted.
    AltusIamUserDeleted altusIamUserDeleted = 29;
    // An Altus user interactively logged in.
    AltusIamUserInteractiveLogin altusIamUserInteractiveLogin = 7;
    // An Altus user interactively login failure.
    AltusIamUserInteractiveLoginFailure altusIamUserInteractiveLoginFailure = 26;
    // An Altus Data Engineering job was submitted.
    AltusDataEngineeringJobSubmitted altusDataEngineeringJobSubmitted = 8;
    // An Altus Data Engineering job's status changed.
    AltusDataEngineeringJobStatusChanged altusDataEngineeringJobStatusChanged = 9;
    // An Altus Data Engineering cluster was created
    AltusDataEngineeringClusterCreated altusDataEngineeringClusterCreated = 10;
    // An Altus Data Engineering cluster's status changed.
    AltusDataEngineeringClusterStatusChanged altusDataEngineeringClusterStatusChanged = 11;
    // An Altus Analytic DB cluster was created
    AltusAnalyticDbClusterCreated altusAnalyticDbClusterCreated = 12;
    // An Altus Analytic DB cluster's status changed.
    AltusAnalyticDbClusterStatusChanged altusAnalyticDbClusterStatusChanged = 13;
    // An Altus environment was created.
    AltusEnvironmentsEnvironmentCreated altusEnvironmentsEnvironmentCreated = 14;
    // An Altus environment was deleted.
    AltusEnvironmentsEnvironmentDeleted altusEnvironmentsEnvironmentDeleted = 15;
    // An Altus machine user was created.
    AltusIamMachineUserCreated altusIamMachineUserCreated = 16;
    // An Altus machine user was deleted.
    AltusIamMachineUserDeleted altusIamMachineUserDeleted = 17;
    // An Altus access key was created.
    AltusIamAccessKeyCreated altusIamAccessKeyCreated = 18;
    // An Altus access key was deleted.
    AltusIamAccessKeyDeleted altusIamAccessKeyDeleted = 19;
    // An Altus SDX namespace was created.
    AltusSdxNamespaceCreated altusSdxNamespaceCreated = 20;
    // An Altus SDX namespace's status changed.
    AltusSdxNamespaceStatusChanged altusSdxNamespaceStatusChanged = 21;
    // A CDP Datalake cluster was requested to create.
    CDPDatalakeClusterRequested cdpDatalakeClusterRequested = 22;
    // A CDP Datalake cluster's status changed.
    CDPDatalakeClusterStatusChanged cdpDatalakeClusterStatusChanged = 23;
    // A CDP Datahub cluster was requested to create.
    CDPDatahubClusterRequested cdpDatahubClusterRequested = 24;
    // A CDP Datahub cluster's status changed.
    CDPDatahubClusterStatusChanged cdpDatahubClusterStatusChanged = 25;
    // A CDP CML workspace was requested to create.
    CDPCMLWorkspaceRequested cdpCMLWorkspaceRequested = 27;
    // A CDP CML workspace's status changed.
    CDPCMLWorkspaceStatusChanged cdpCMLWorkspaceStatusChanged = 28;
    // A CDP Environment was requested to create
    CDPEnvironmentRequested cdpEnvironmentRequested = 30;
    // A CDP Environment was requested to create
    CDPEnvironmentStatusChanged cdpEnvironmentStatusChanged = 31;
  }
}

// The type of an Altus account.
message AltusIamAccountType {
  enum Value {
    // A value indicating the enum is unset.
    UNSET = 0;
    // A regular Altus account.
    REGULAR = 1;
    // A trial Altus account.
    TRIAL = 2;
  }
}

// Generated when a new Altus account has been created.
message AltusIamAccountCreated {
  // The Altus account ID of the new account. This uniquely identifies the
  // account within Altus. This ID is immutable.
  string accountId = 1;
  // The identity provider ID for this account. The identity provider for an
  // account provides user identity information for the account. Note that the
  // same SFDC account can have multiple identity provider associations across
  // multiple Altus accounts. We do this for cloudera.com for example to enable
  // Altus administrative and test accounts.
  string identifyProviderId = 3;
  // The SFDC account ID associated with this account. This will always be set
  // for non-trial accounts. This may or may not be set for trial accounts.
  string sfdcAccountId = 4;
  // The type of Altus account being created.
  AltusIamAccountType.Value accountType = 5;
}

// Generated when a new Altus user has been created.
//
// Updated in usage version 2: first name, last name and email were removed for
//   GDPR compliance.
// Updated in usage version 3: one of identity provider ID or sfdcContactId will
//   always be set.
message AltusIamUserCreated {
  reserved 2, 7, 8, 9;
  // The Altus user ID of the new user. This uniquely identifies the user within
  // Altus. This ID is immutable.
  string userId = 1;
  // The Altus account ID of the user.
  string accountId = 3;
  // The ID of this user in the identity provider. This is not set for all
  // users. If this is not set sfdcContactId will be set.
  string identityProviderUserId = 4;
  // The SFDC contact ID associated with this user. This may or may not be set
  // for trial accounts or for accounts using a non-SFDC identity provider. If
  // this is not set identityProviderUserId will be set.
  string sfdcContactId = 5;
  // Whether the user is an admin in their Altus account.
  bool admin = 6;
  // The CRN for the user.
  string crn = 10;
  // The CRN of the identity provider that the user authenticate with. The value
  // can be one of three:
  // 1) <Cloudera-Default> - the ID for the Cloudera Okta identity provider.
  // 2) Altus-Administration - the ID for te Cloudera Altus Administration
  //    identity provider.
  // 3) an arbitrary CRN: The CRN for the identity provider connector in a
  //    a customer account used to establish identity federation with Altus.
  string identityProviderCrn = 11;
  // Whether the uer was created by an explicit call to createUser IAM API or
  // implicitly when the user logged in interactively.
  bool explicitlyCreated = 12;
}

// Generated when an Altus user record has been updated. This event is only
// generated when an Altus user is updated. The event includes the values of all
// mutable fields after the update, not just the values that have been updated.
//
// Updated in usage version 2: first name, last name and email were removed for
//   GDPR compliance.
message AltusIamUserUpdated {
  reserved 2, 3, 4;
  // The Altus user ID of the updated user.
  string userId = 1;
  // Whether the user is an admin in their Altus account.
  bool admin = 5;
}

// Generated when an Altus IAM user has been deleted.
message AltusIamUserDeleted {
  // The Altus user ID of the deleted user.
  string userId = 1;
}

// Generated when an Altus user logs in interactively.
message AltusIamUserInteractiveLogin {
  // The Altus user ID of the user logging in.
  string userId = 1;
}

// Generated when an Altus user interactive login fails.
message AltusIamUserInteractiveLoginFailure {
  // The Altus user ID of the user logging in.
  string userId = 1;
}

// The type of an Altus environment.
message AltusEnvironmentsEnvironmentType {
  enum Value {
    // A value indicating the enum is unset.
    UNSET = 0;
    // AWS
    AWS = 1;
    // Azure
    AZURE = 2;
  }
}

// The type of an Altus Data Engineering job.
message AltusDataEngineeringJobType {
  enum Value {
    // A value indicating the enum is unset.
    UNSET = 0;
    // Hive
    HIVE = 1;
    // Spark
    SPARK = 2;
    // YARN
    YARN = 3;
    // PySpark
    PYSPARK = 4;
  }
}

// The failure action of an Altus Data Engineering job.
message AltusDataEngineeringJobFailureAction {
  enum Value {
    // A value indicating the enum is unset.
    UNSET = 0;
    // Do nothing.
    NONE = 1;
    // Interrupt all jobs in the job queue.
    INTERRUPT_JOB_QUEUE = 2;
  }
}

// Generated when an Altus Data Engineering job was submitted.
message AltusDataEngineeringJobSubmitted {
  // The Altus job ID of the job.
  string jobId = 1;
  // The Altus account ID of the job.
  string accountId = 2;
  // The type of the job.
  AltusDataEngineeringJobType.Value jobType = 3;
  // The name of the job.
  string jobName = 4;
  // The job submission group ID of the job.
  string jobSubmissionGroupId = 5;
  // The job submission group name of the job.
  string jobSubmissionGroupName = 6;
  // The index of this job in its job submission group.
  int32 jobSubmissionGroupIndex = 7;
  // The size of the job's submission group.
  int32 jobSubmissionGroupSize = 8;
  // The CRN of the job's environment.
  string environmentCrn = 9;
  // The the environment type of the job's environment.
  AltusEnvironmentsEnvironmentType.Value environmentType = 10;
  // The CRN of the job's cluster.
  string clusterCrn = 11;
  // The CRN of the job's submitter.
  string submitterCrn = 12;
  // What action to take when the job completes unsuccessfully.
  AltusDataEngineeringJobFailureAction.Value failureAction = 13;
  // Whether the cluster of the job was configured to send data to Workload
  // Analytics.
  bool sendDataToWorkloadAnalytics = 14;
  // The CRN for the job.
  string crn = 15;
}

// The status of an Altus Data Engineering job.
message AltusDataEngineeringJobStatus {
  enum Value {
    // A value indicating the enum is unset.
    UNSET = 0;
    // This is the initial status for a job.
    QUEUED = 1;
    // A job is transitioned to this status before we start submitting it to the
    // cluster.
    SUBMITTING = 2;
    // That status of a job that we know has been submitted to the cluster. It
    // remains with this status until we know it has succesfully completed,
    // failed or been terminated or interrupted.
    RUNNING = 3;
    // When we notice a job has completed execution on the cluster without being
    // terminated it has this status. Note that a job with this status may have
    // failed somehow while executing on the cluster.
    COMPLETED = 4;
    // When we have received a termination request for a job, it will be reported
    // as having this status until it either terminates, fails, completes or is
    // interrupted.
    TERMINATING = 5;
    // If we receive a request to terminate a job before having submitted it to
    // the cluster, or if it is reported has having completed execution on the
    // cluster with a terminated status it has this status.
    TERMINATED = 6;
    // A job has this status when we hit errors processing it in this service or
    // on behalf of this service in Director. This status is not used if a job
    // fails during execution on the cluster but is otherwise processed by this
    // service as normal.
    FAILED = 7;
    // If the cluster is deleted out from under the job. It ends up with this
    // status.
    INTERRUPTED = 8;
  }
}

// Generated when an Altus Data Engineering job's status changed.
message AltusDataEngineeringJobStatusChanged {
  // The Altus job ID of the job.
  string jobId = 1;
  // The job's status before the change.
  AltusDataEngineeringJobStatus.Value oldStatus = 2;
  // The job's status after the change.
  AltusDataEngineeringJobStatus.Value newStatus = 3;
}

// Atlus Data Engineering cluster automatic termination conditions.
message AltusDataEngineeringAutomaticTerminationCondition {
  enum Value {
    // A value indicating the enum is unset.
    UNSET = 0;
    // The cluster does not auto-terminate.
    NONE = 1;
    // The cluster auto-terminates when it has no queued jobs.
    EMPTY_JOB_QUEUE = 2;
  }
}

// Generated when a valid Altus Data Engineering cluster creation request has
// been made.
message AltusDataEngineeringClusterCreated {
  // The Altus cluster ID of the cluster.
  string clusterId = 1;
  // The Altus account ID of the cluster.
  string accountId = 2;
  // The user-supplied cluster name.
  string clusterName = 3;
  // The environment type.
  AltusEnvironmentsEnvironmentType.Value environmentType = 4;
  // The CRN of the cluster's environment.
  string environmentCrn = 5;
  // The CDH version of the cluster.
  string cdhVersion = 6;
  // The service type of the cluster.
  string serviceType = 7;
  // The instance type of the cluster.
  string instanceType = 8;
  // Whether the cluster has a user-supplied bootstrap script.
  bool hasBootstrapScript = 9;
  // The CRN of the cluster's SDX namespace. This will be empty if SDX is not
  // in use.
  string namespaceCrn = 10;
  // The automatic termination condition of the cluster.
  AltusDataEngineeringAutomaticTerminationCondition.Value automaticTerminationCondition = 11;
  // The number of jobs submitted to the cluster at cluster creation time.
  uint32 jobs = 12;
  // The CRN for the cluster.
  string crn = 13;
  // The CRN of the cluster's creator.
  string creatorCrn = 14;
  // Whether the cluster is a secured cluster.
  bool secured = 15;
}

// The status of an Altus Data Engineering cluster.
message AltusDataEngineeringClusterStatus {
  enum Value {
    // A value indicating the enum is unset.
    UNSET = 0;
    // The status of a cluster that is being created.
    CREATING = 1;
    // The status for a cluster that has succesfully been created.
    CREATED = 2;
    // The status of a cluster that is being terminated.
    TERMINATING = 3;
    // The status for a cluster that has failed creation or termination.
    FAILED = 4;
    // The status for a cluster that has been terminated.
    TERMINATED = 5;
  }
}

// Generated when an Altus Data Engineering cluster's status changed.
message AltusDataEngineeringClusterStatusChanged {
  // The Altus cluster ID of the cluster.
  string clusterId = 1;
  // The cluster's status before the change.
  AltusDataEngineeringClusterStatus.Value oldStatus = 2;
  // The cluster's status after the change.
  AltusDataEngineeringClusterStatus.Value newStatus = 3;
  // A set of failure codes for the cluster. This will only be set if newStatus
  // is FAILED.
  repeated string failureCodes = 4;
  // A failure message for the cluster. This will only be set if newStatus is
  // FAILED.
  string failureReason = 5;
}

// Generated when a valid Altus Analytic DB cluster creation request has
// been made.
message AltusAnalyticDbClusterCreated {
  // The Altus cluster ID of the cluster.
  string clusterId = 1;
  // The Altus account ID of the cluster.
  string accountId = 2;
  // The user-supplied cluster name.
  string clusterName = 3;
  // The environment type.
  AltusEnvironmentsEnvironmentType.Value environmentType = 4;
  // The CRN of the cluster's environment.
  string environmentCrn = 5;
  // The CDH version of the cluster.
  string cdhVersion = 6;
  // The instance type of the cluster.
  string instanceType = 7;
  // Whether the cluster has a user-supplied bootstrap script.
  bool hasBootstrapScript = 8;
  // The CRN of the cluster's SDX namespace. This will be empty if SDX is not
  // in use.
  string namespaceCrn = 9;
  // The CRN for the cluster.
  string crn = 10;
  // The CRN of the cluster's creator.
  string creatorCrn = 11;
  // Whether the cluster is a secured cluster.
  bool secured = 12;
}

// The status of an Altus Analytic DB cluster.
message AltusAnalyticDbClusterStatus {
  enum Value {
    // A value indicating the enum is unset.
    UNSET = 0;
    // The status of a cluster that is being created.
    CREATING = 1;
    // The status for a cluster that has succesfully been created.
    CREATED = 2;
    // The status of a cluster that is being terminated.
    TERMINATING = 3;
    // The status for a cluster that has failed creation or termination.
    FAILED = 4;
    // The status for a cluster that has been terminated.
    TERMINATED = 5;
  }
}

// Generated when an Altus Analytic DB cluster's status changed.
message AltusAnalyticDbClusterStatusChanged {
  // The Altus cluster ID of the cluster.
  string clusterId = 1;
  // The cluster's status before the change.
  AltusAnalyticDbClusterStatus.Value oldStatus = 2;
  // The cluster's status after the change.
  AltusAnalyticDbClusterStatus.Value newStatus = 3;
  // A set of failure codes for the cluster. This will only be set if newStatus
  // is FAILED.
  repeated string failureCodes = 4;
  // A failure message for the cluster. This will only be set if newStatus is
  // FAILED.
  string failureReason = 5;
}

// AWS-specific environment details.
message AltusEnvironmentsEnvironmentAwsDetails {
  // The name of the instance profile of the enviroment.
  string instanceProfileName = 1;
  // The S3 guard configuration for the environment.
  AltusEnvironmentsEnvironmentS3GuardConfiguration s3Guard = 2;
}

// Azure-specific environment details.
message AltusEnvironmentsEnvironmentAzureDetails {
}

// Secured clusters configuration for an environment.
message AltusEnvironmentsEnvironmentSecuredClustersConfiguration {
  // Whether secured clusters are enabled.
  bool enabled = 1;
}

// S3-guard configuration for an environment.
message AltusEnvironmentsEnvironmentS3GuardConfiguration {
  // Whether S3 guard is enabled.
  bool enabled = 1;
}

// Navigator configuration for an environment.
message AltusEnvironmentsEnvironmentNavigatorConfiguration {
  // Whether Navigator is enabled.
  bool enabled = 1;
}

// Workload Analytics configuration for an environment.
message AltusEnvironmentsEnvironmentWorkloadAnalyticsConfiguration {
  // Whether Workload Analytics is enabled.
  bool enabled = 1;
}

// Generated when an Altus environment has been created.
message AltusEnvironmentsEnvironmentCreated {
  // The Altus environment ID of the new environment. This uniquely identifies
  // the environment within Altus. This ID is immutable.
  string environmentId = 1;
  // The Altus account ID of the environment.
  string accountId = 2;
  // The user-supplied environment name.
  string environmentName = 3;
  // The environment type.
  AltusEnvironmentsEnvironmentType.Value environmentType = 4;
  // The region of the environment.
  string region = 5;
  // The log archive location of the environment.
  string logArchiveLocation = 6;
  // Cloud provider specific details of the environment.
  oneof cloudProviderDetails {
    AltusEnvironmentsEnvironmentAwsDetails awsDetails = 7;
    AltusEnvironmentsEnvironmentAzureDetails azureDetails = 8;
  }
  // The secured clusters configuration of the environment.
  AltusEnvironmentsEnvironmentSecuredClustersConfiguration securedClustersConfiguration = 9;
  // The Navigator configuration of the environment.
  AltusEnvironmentsEnvironmentNavigatorConfiguration navigatorConfiguration = 10;
  // The Workload Analytics configuration of the environment.
  AltusEnvironmentsEnvironmentWorkloadAnalyticsConfiguration workloadAnalyticsConfiguration = 11;
  // The CRN for the environment.
  string crn = 12;
  // The creator CRN for the environment.
  string creatorCrn = 13;
}

// Generated when an Altus environment has been deleted.
message AltusEnvironmentsEnvironmentDeleted {
  // The Altus environment ID of the deleted environment.
  string environmentId = 1;
}

// Generated when an Altus IAM machine user has been created.
message AltusIamMachineUserCreated {
  // The Altus machine user ID of the new machine user. This uniquely identifies
  // the machine user within Altus. This ID is immutable.
  string machineUserId = 1;
  // The Altus account ID of the machine user.
  string accountId = 2;
  // The user-supplied machine user name.
  string machineUserName = 3;
  // The CRN for the machine user.
  string crn = 4;
  // Whether the machine user is an internal machine user.
  bool internal = 5;
}

// Generated when an Altus IAM machine user has been deleted.
message AltusIamMachineUserDeleted {
  // The Altus machine user ID of the deleted machine user.
  string machineUserId = 1;
}


// Generated when an Altus IAM access key has been created.
message AltusIamAccessKeyCreated {
  // The Altus access key ID of the new machine user. This uniquely identifies
  // the access key within Altus. This ID is immutable.
  string accessKeyId = 1;
  // The Altus account ID of the access key.
  string accountId = 2;
  // The CRN of the actor with which this access key is associated. This will be
  // either an IAM user or an IAM machine user.
  string actorCrn = 3;
  // The CRN for the access key.
  string crn = 4;
  // Whether the access key is an internal access key.
  bool internal = 5;
}

// Generated when an Altus IAM access key has been deleted.
message AltusIamAccessKeyDeleted {
  // The Altus access key ID of the deleted access key.
  string accessKeyId = 1;
}

// Generated when a valid Altus SDX namespace creation request has been made.
message AltusSdxNamespaceCreated {
  // The Altus namespace ID of the namespace.
  string namespaceId = 1;
  // The Altus account ID of the namepsace.
  string accountId = 2;
  // The user-supplied namespace name.
  string namespaceName = 3;
  // The CRN for the namespace.
  string crn = 4;
}

// The status of an Altus SDX namespace.
message AltusSdxNamespaceStatus {
  enum Value {
    // A value indicating the enum is unset.
    UNSET = 0;
    // The status of a namespace that is being created.
    CREATING = 1;
    // The status for a namespace that has succesfully been created.
    CREATED = 2;
    // The status of a namespace that is being deleted.
    DELETING = 3;
    // The status for a namespace that has failed creation or deletion.
    FAILED = 4;
    // The status for a namespace that has been deleted.
    DELETED = 5;
  }
}

// Generated when an Altus SDX namespace's status changed.
message AltusSdxNamespaceStatusChanged {
  // The Altus namespace ID of the namespace.
  string namespaceId = 1;
  // The namespace's status before the change.
  AltusSdxNamespaceStatus.Value oldStatus = 2;
  // The namespace's status after the change.
  AltusSdxNamespaceStatus.Value newStatus = 3;
}

// The type of a CDP environment.
message CDPEnvironmentsEnvironmentType {
  enum Value {
    // A value indicating the enum is unset.
    UNSET = 0;
    // AWS
    AWS = 1;
    // Azure
    AZURE = 2;
    // Google
    GCP = 3;
    // YCloud
    YARN = 4;
    // Mock
    MOCK = 5;
  }
}

// The status of a CDP Cloudbreak cluster.
message CDPCloudbreakClusterStatus {
  enum Value {
    // A value indicating the enum is unset.
    UNSET = 0;
    // The status of a cluster that is being requested to create.
    REQUESTED = 1;
    // The status of a cluster that is being created.
    CREATE_IN_PROGRESS = 2;
    // The status of a cluster that is available for use.
    AVAILABLE = 3;
    // The status of a cluster that is being updated.
    UPDATE_IN_PROGRESS = 4;
    // The status of a cluster that is being requested to update.
    UPDATE_REQUESTED = 5;
    // The status of a cluster that failed to update.
    UPDATE_FAILED = 6;
    // The status of a cluster that has failed creation.
    CREATE_FAILED = 7;
    // The status of a cluster that failed to start in secure mode.
    ENABLE_SECURITY_FAILED = 8;
    // The status of a cluster that is in pre-delete phase.
    PRE_DELETE_IN_PROGRESS = 9;
    // The status of a cluster that is being deleted.
    DELETE_IN_PROGRESS = 10;
    // The status for a cluster that has failed deletion.
    DELETE_FAILED = 11;
    // The status of a cluster that is successfully deleted.
    DELETE_COMPLETED = 12;
    // The status of a cluster that is stooped.
    STOPPED = 13;
    // The status of a cluster that is being requested to stop.
    STOP_REQUESTED = 14;
    // The status of a cluster that is being requested to start.
    START_REQUESTED = 15;
    // The status of a cluster that is being stopped.
    STOP_IN_PROGRESS = 16;
    // The status of a cluster that is being started.
    START_IN_PROGRESS = 17;
    // The status of a cluster that failed to start.
    START_FAILED = 18;
    // The status of a cluster that failed to stop.
    STOP_FAILED = 19;
    // The status of a cluster that is waiting for the sync.
    WAIT_FOR_SYNC = 20;
    // The status of a cluster that had maintenance mode enabled.
    MAINTENANCE_MODE_ENABLED = 21;
  }
}

// Generated when a valid CDP Datalake cluster creation request has
// been made.
message CDPDatalakeClusterRequested {
  // The CDP Datalake ID.
  string datalakeId = 1;
  // The CDP account ID of the Datalake cluster.
  string accountId = 2;
  // The user-supplied Datalake name.
  string datalakeName = 3;
  // The environment type.
  CDPEnvironmentsEnvironmentType.Value environmentType = 4;
  // The CRN of the Datalake cluster's environment.
  string environmentCrn = 5;
  // The CDP distribution version of the Datalake cluster.
  string cdpdVersion = 6;
  // The CRN for the Datalake cluster. This could be clusterId for now.
  string crn = 7;
  // The CRN of the Datalake cluster's creator.
  string creatorCrn = 8;
  // The name of the cluster definition.
  string clusterDefinitionName = 9;
}

// Generated when a CDP Datalake cluster's status changed.
message CDPDatalakeClusterStatusChanged {
  // The CDP Datalake ID.
  string datalakeId = 1;
  // the Datalake cluster's status before the change.
  CDPCloudbreakClusterStatus.Value oldStatus = 2;
  // the Datalake cluster's status after the change.
  CDPCloudbreakClusterStatus.Value newStatus = 3;
  // A failure message for the Datalake cluster. This will only be set if newStatus is
  // *_FAILED.
  string failureReason = 4;
}

// Generated when a valid CDP Datahub cluster creation request has
// been made.
message CDPDatahubClusterRequested {
  // The CDP cluster ID of the Datahub cluster.
  string clusterId = 1;
  // The CDP account ID of the Datahub cluster.
  string accountId = 2;
  // The user-supplied cluster name.
  string clusterName = 3;
  // The environment type.
  CDPEnvironmentsEnvironmentType.Value environmentType = 4;
  // The CRN of the Datahub cluster's environment.
  string environmentCrn = 5;
  // The CDP distribution version of the Datahub cluster.
  string cdpdVersion = 6;
  // The CRN of the Datalake. This will be empty if Datalake is not
  // in use.
  string datalakeCrn = 7;
  // The CRN for the Datahub cluster. This could be clusterId for now.
  string crn = 8;
  // The CRN of the Datahub cluster's creator.
  string creatorCrn = 9;
  // The name of the cluster definition.
  string clusterDefinitionName = 10;
}

// Generated when a CDP Datahub cluster's status changed.
message CDPDatahubClusterStatusChanged {
  // The CDP cluster ID of the Datahub cluster.
  string clusterId = 1;
  // the Datahub cluster's status before the change.
  CDPCloudbreakClusterStatus.Value oldStatus = 2;
  // the Datahub cluster's status after the change.
  CDPCloudbreakClusterStatus.Value newStatus = 3;
  // A failure message for the Datahub cluster. This will only be set if newStatus is
  // *_FAILED.
  string failureReason = 4;
}


// The status of a CDP Cloudbreak workspace.
message CDPCMLWorkspaceStatus {
  enum Value {
    // A value indicating the enum is unset.
    UNSET = 0;
    // The status when a workspace is trying to create a kubernetes cluster.
    PROVISION_STARTED = 1;
    // The status when a workspace is done creating a kubernetes cluster.
    PROVISION_FINISHED = 2;
    // The status when a workspace failed to provision a kubernetes cluster.
    PROVISION_FAILED = 3;

    // The status when a workspace is trying to install or upgrade CDSW on a running kubernetes cluster.
    INSTALLATION_STARTED = 4;
    // The status when a workspace is done with installing or upgrading CDSW and ready to be used.
    INSTALLATION_FINISHED = 5;
    // The status when a workspace failed to install CDSW.
    INSTALLATION_FAILED = 6;

    // The status when a workspace is trying to deprovision the running kubernetes cluster.
    DEPROVISION_STARTED = 7;
    // The status when a workspace is done deprovisioning the kubernetes cluster.
    DEPROVISION_FINISHED = 8;
    // The status when a workspace failed to deprovision the kubernetes cluster.
    DEPROVISION_FAILED = 9;

    // The status when a workspace is trying to renew the certificate of a running CDSW.
    RENEW_STARTED = 10;
    // The status when a workspace is done renewing the certificate of a running CDSW.
    RENEW_FINISHED = 11;
    // The status when a workspace could not renew the certificate, but the CDSW cluster still is usable.
    RENEW_WARNING = 12;

    // The status when a workspace is trying to suspend.
    SUSPEND_STARTED = 13;
    // The status when a workspace is suspended.
    SUSPEND_FINISHED = 14;
    // The status when a workspace failed to suspend.
    SUSPEND_FAILED = 15;

    // The status when a workspace is trying to resume.
    RESUME_STARTED = 16;
    // The status when a workspace completed resuming.
    RESUME_FINISHED = 17;
    // The status when a workspace failed to resume.
    RESUME_FAILED = 18;
    // The status when a workspace failed to resume, but the nodes is up and running.
    RESUME_WARNING = 19;

    // The status when a workspace is trying to upgrade.
    UPGRADE_STARTED = 20;
    // The status when a workspace is upgraded.
    UPGRADE_FINISHED = 21;
    // The status when a workspace failed to upgrade.
    UPGRADE_FAILED = 22;
  }
}

// AWS metadata about the workspace when it was created or updated.
message CDPCMLAWSWorkspaceMetadata {
  // Requested min workers for the auto scaling workers group.
  int32 minWorkers = 1;
  // Requested max workers for the auto scaling workers group.
  int32 maxWorkers = 2;
  // Requested min gpu for the auto scaling gpu group.
  int32 minGpu = 3;
  // Requested max gpu for the auto scaling gpu group.
  int32 maxGpu = 4;
  // The instance type selected for the workers auto scaling group.
  string workerInstanceType = 5;
  // The instance type selected for the gpu auto scaling group.
  string gpuInstanceType = 6;
}

// Azure metadata about the workspace when it was created or updated.
message CDPCMLAzureWorkspaceMetadata {
  // Requested min workers for the auto scaling workers group.
  int32 minWorkers = 1;
  // Requested max workers for the auto scaling workers group.
  int32 maxWorkers = 2;
  // Requested min gpu for the auto scaling gpu group.
  int32 minGpu = 3;
  // Requested max gpu for the auto scaling gpu group.
  int32 maxGpu = 4;
  // The instance type selected for the workers auto scaling group.
  string workerInstanceType = 5;
  // The instance type selected for the gpu auto scaling group.
  string gpuInstanceType = 6;
}

// Generated when a valid CDP CML workspace creation request has been made.
message CDPCMLWorkspaceRequested {
  // The CDP workspace CRN of the CML workspace.
  string crn = 1;
  // The CDP account ID of the CML workspace.
  string accountId = 2;
  // The user-supplied workspace name.
  string workspaceName = 3;
  // The environment type.
  CDPEnvironmentsEnvironmentType.Value environmentType = 4;
  // The CRN of the CML workspace's environment.
  string environmentCrn = 5;
  // The CML crud app version.
  string cdpdVersion = 6;
  // The CRN of the CML workspace's creator.
  string creatorCrn = 7;
  // metadata
  oneof metadata {
    // AWS specific metadata about the workspace.
    CDPCMLAWSWorkspaceMetadata cdpCMLAWSWorkspaceMetadata = 8;
    // AZURE specific metadata about the workspace.
    CDPCMLAzureWorkspaceMetadata cdpCMLAzureWorkspaceMetadata = 9;
  }
  // The CML workspace version deployed.
  string workspaceVersion = 10;
}

// Generated when a CDP CML workspace's status changed.
message CDPCMLWorkspaceStatusChanged {
  // The CDP workspace CRN of the CML workspace.
  string crn = 1;
  // the CML workspace's status before the change.
  CDPCMLWorkspaceStatus.Value oldStatus = 2;
  // the CML workspace's status after the change.
  CDPCMLWorkspaceStatus.Value newStatus = 3;
  // A failure message for the CML workspace. This will only be set if newStatus is
  // *_FAILED.
  string failureReason = 4;
  string fromVersion = 5;
  string toVersion = 6;
}

// The status of a CDP environment
message CDPRequestProcessingStep {
  enum Value {
      // A value indicating the enum is unset.
      UNSET = 0;
      // First step of the request processing
      INIT = 1;
      // Last step of the request processing
      FINAL = 2;
  }
}

// The status of a CDP environment
message CDPEnvironmentStatus {
  enum Value {
    // A value indicating the enum is unset.
    UNSET = 0;
    // The status when CDP CP is trying to create an environment.
    CREATE_STARTED = 1;
    // The status when CDP CP is done creating an environment.
    CREATE_FINISHED = 2;
    // The status when CDP CP failed to provision an environment.
    CREATE_FAILED = 3;

    // The status when CDP CP is trying to delete an environment.
    DELETE_STARTED = 4;
    // The status when CDP CP is done deleting an environment.
    DELETE_FINISHED = 5;
    //  The status when CDP CP failed to delete an environment.
    DELETE_FAILED = 6;

    // The status when an environment is trying to suspend.
    SUSPEND_STARTED = 7;
    // The status when an environment is suspended.
    SUSPEND_FINISHED = 8;
    // The status when an environment failed to suspend.
    SUSPEND_FAILED = 9;

    // The status when an environment is trying to resume.
    RESUME_STARTED = 10;
    // The status when an environment completed resuming.
    RESUME_FINISHED = 11;
    // The status when an environment failed to resume.
    RESUME_FAILED = 12;
  }
}

message CDPOperationDetails {
    // The CDP account id of the event
    string accountId = 1;
    // The CRN for the resource
    string resourceCrn = 2;
    // Name of the resource
    string resourceName = 3;
    // User CRN initiated this event (it might be internal actor)
    string initiatorCrn = 4;
    // Version of the application that created this event
    string applicationVersion = 5;
    // Request processing type
    CDPRequestProcessingStep.Value cdpRequestProcessingStep = 6;
    // Flow UUID, to make it easy to identify which flow has triggered this event
    string flowId = 7;
    // Flow Chain UUID, to make it easy to identify which flowchain has triggered this event
    string flowChainId = 8;
}

message CDPEnvironmentDetails {
    // Cloud provider identifier
    CDPEnvironmentsEnvironmentType.Value environmentType = 1;
    // Region of the deployment
    string region = 2;
    // Number of availability zones used in the environment
    int32 numberOfAvailabilityZones = 3;
    // Number of availability zones used in the environment
    string availabilityZones = 4;
}

message CDPEnvironmentTelemetryFeatureDetails {
    // Workload analytics is enabled on this environment
    string workloadAnalytics = 1;
    // Cluster log collection is enabled on this environment
    string clusterLogsCollection = 2;
}

message CDPProxyDetails {
    // Shows whether a proxy is used
    bool proxy = 1;
}

message CDPNetworkDetails {
    // Whether the network is created by CDP CP or by the customer
    string networkType = 1;
    // How CDP CP connects to the environment
    string connectivity = 2;
    // How many public subnets are used
    int32 numberPublicSubnets = 3;
    // How many public subnets are used
    int32 numberPrivateSubnets = 4;
    // Private endpoints are created for this particular environment
    string serviceEndpointCreation = 5;
    // Metadata around what type of proxy is used in this environment
    CDPProxyDetails proxyDetails = 6;
}

message CDPEnvironmentRequested {
    // Operation metadata
    CDPOperationDetails operationDetails = 1;
    // Environment metadata
    CDPEnvironmentDetails environmentDetails = 2;
    // Network metadata
    CDPNetworkDetails networkDetails = 3;
    // Data collection metadata
    CDPEnvironmentTelemetryFeatureDetails telemetryFeatureDetails = 4;
}

// Generated when Environment status has changed
message CDPEnvironmentStatusChanged {
  // Operation metadata
  CDPOperationDetails operationDetails = 1;
  // The environment's status before the change.
  CDPEnvironmentStatus.Value oldStatus = 2;
  // The environment's status after the change.
  CDPEnvironmentStatus.Value newStatus = 3;
  // Describe the reason of the failure if any
  string failureReason = 4;
}