// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: meteringevents.proto

package com.cloudera.thunderhead.service.metering.events;

public final class MeteringEventsProto {
  private MeteringEventsProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ServiceTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:meteringevents.ServiceType)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * The service types. Any new services added to CDP which will have their own
   * billable events must be added here. These values should match the customer
   * visible values used in the CLI.
   * This list below is a subset of the values in the Crn.Service enumeration.
   * The exact value need not match, but it should correspond to some Crn.Service.
   * </pre>
   *
   * Protobuf type {@code meteringevents.ServiceType}
   */
  public static final class ServiceType extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:meteringevents.ServiceType)
      ServiceTypeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ServiceType.newBuilder() to construct.
    private ServiceType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ServiceType() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ServiceType();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_ServiceType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_ServiceType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType.class, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType.Builder.class);
    }

    /**
     * Protobuf enum {@code meteringevents.ServiceType.Value}
     */
    public enum Value
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * A value indicating the enum is unset.
       * </pre>
       *
       * <code>UNSET = 0;</code>
       */
      UNSET(0),
      /**
       * <pre>
       * DataHub
       * </pre>
       *
       * <code>DATAHUB = 1;</code>
       */
      DATAHUB(1),
      /**
       * <pre>
       * Machine Learning
       * </pre>
       *
       * <code>MACHINE_LEARNING = 2;</code>
       */
      MACHINE_LEARNING(2),
      /**
       * <pre>
       * Data Warehouse
       * </pre>
       *
       * <code>DATA_WAREHOUSE = 3;</code>
       */
      DATA_WAREHOUSE(3),
      /**
       * <pre>
       * Data Engineering
       * </pre>
       *
       * <code>DATA_ENGINEERING = 4;</code>
       */
      DATA_ENGINEERING(4),
      /**
       * <pre>
       * Operational Database
       * </pre>
       *
       * <code>OPERATIONAL_DB = 5;</code>
       */
      OPERATIONAL_DB(5),
      /**
       * <pre>
       * Data Flow
       * </pre>
       *
       * <code>DATA_FLOW = 6;</code>
       */
      DATA_FLOW(6),
      /**
       * <pre>
       * Environment, which contains one or multiple services
       * </pre>
       *
       * <code>ENVIRONMENT = 7;</code>
       */
      ENVIRONMENT(7),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * A value indicating the enum is unset.
       * </pre>
       *
       * <code>UNSET = 0;</code>
       */
      public static final int UNSET_VALUE = 0;
      /**
       * <pre>
       * DataHub
       * </pre>
       *
       * <code>DATAHUB = 1;</code>
       */
      public static final int DATAHUB_VALUE = 1;
      /**
       * <pre>
       * Machine Learning
       * </pre>
       *
       * <code>MACHINE_LEARNING = 2;</code>
       */
      public static final int MACHINE_LEARNING_VALUE = 2;
      /**
       * <pre>
       * Data Warehouse
       * </pre>
       *
       * <code>DATA_WAREHOUSE = 3;</code>
       */
      public static final int DATA_WAREHOUSE_VALUE = 3;
      /**
       * <pre>
       * Data Engineering
       * </pre>
       *
       * <code>DATA_ENGINEERING = 4;</code>
       */
      public static final int DATA_ENGINEERING_VALUE = 4;
      /**
       * <pre>
       * Operational Database
       * </pre>
       *
       * <code>OPERATIONAL_DB = 5;</code>
       */
      public static final int OPERATIONAL_DB_VALUE = 5;
      /**
       * <pre>
       * Data Flow
       * </pre>
       *
       * <code>DATA_FLOW = 6;</code>
       */
      public static final int DATA_FLOW_VALUE = 6;
      /**
       * <pre>
       * Environment, which contains one or multiple services
       * </pre>
       *
       * <code>ENVIRONMENT = 7;</code>
       */
      public static final int ENVIRONMENT_VALUE = 7;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Value valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Value forNumber(int value) {
        switch (value) {
          case 0: return UNSET;
          case 1: return DATAHUB;
          case 2: return MACHINE_LEARNING;
          case 3: return DATA_WAREHOUSE;
          case 4: return DATA_ENGINEERING;
          case 5: return OPERATIONAL_DB;
          case 6: return DATA_FLOW;
          case 7: return ENVIRONMENT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Value>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Value> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Value>() {
              public Value findValueByNumber(int number) {
                return Value.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType.getDescriptor().getEnumTypes().get(0);
      }

      private static final Value[] VALUES = values();

      public static Value valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Value(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:meteringevents.ServiceType.Value)
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType)) {
        return super.equals(obj);
      }
      com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType other = (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType) obj;

      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The service types. Any new services added to CDP which will have their own
     * billable events must be added here. These values should match the customer
     * visible values used in the CLI.
     * This list below is a subset of the values in the Crn.Service enumeration.
     * The exact value need not match, but it should correspond to some Crn.Service.
     * </pre>
     *
     * Protobuf type {@code meteringevents.ServiceType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:meteringevents.ServiceType)
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_ServiceType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_ServiceType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType.class, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType.Builder.class);
      }

      // Construct using com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_ServiceType_descriptor;
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType getDefaultInstanceForType() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType.getDefaultInstance();
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType build() {
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType buildPartial() {
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType result = new com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType) {
          return mergeFrom((com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType other) {
        if (other == com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:meteringevents.ServiceType)
    }

    // @@protoc_insertion_point(class_scope:meteringevents.ServiceType)
    private static final com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType();
    }

    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ServiceType>
        PARSER = new com.google.protobuf.AbstractParser<ServiceType>() {
      @java.lang.Override
      public ServiceType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ServiceType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ServiceType> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ServiceFeatureOrBuilder extends
      // @@protoc_insertion_point(interface_extends:meteringevents.ServiceFeature)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * Service features. Features allow a product to have different rates based on
   * the feature used. A service is not required to have any features.
   * </pre>
   *
   * Protobuf type {@code meteringevents.ServiceFeature}
   */
  public static final class ServiceFeature extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:meteringevents.ServiceFeature)
      ServiceFeatureOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ServiceFeature.newBuilder() to construct.
    private ServiceFeature(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ServiceFeature() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ServiceFeature();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_ServiceFeature_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_ServiceFeature_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature.class, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature.Builder.class);
    }

    /**
     * Protobuf enum {@code meteringevents.ServiceFeature.Value}
     */
    public enum Value
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * A value indicating the enum is unset.
       * </pre>
       *
       * <code>UNSET = 0;</code>
       */
      UNSET(0),
      /**
       * <pre>
       * NiFi enabled
       * </pre>
       *
       * <code>NIFI = 1;</code>
       */
      NIFI(1),
      /**
       * <pre>
       * Impala engine
       * </pre>
       *
       * <code>IMPALA = 2;</code>
       */
      IMPALA(2),
      /**
       * <pre>
       * Hive engine
       * </pre>
       *
       * <code>HIVE = 3;</code>
       */
      HIVE(3),
      /**
       * <pre>
       * Druid engine
       * </pre>
       *
       * <code>DRUID = 4;</code>
       */
      DRUID(4),
      /**
       * <pre>
       * Kafka
       * </pre>
       *
       * <code>KAFKA = 5;</code>
       */
      KAFKA(5),
      /**
       * <pre>
       * Flink
       * </pre>
       *
       * <code>FLINK = 6;</code>
       */
      FLINK(6),
      /**
       * <pre>
       * Spark
       * </pre>
       *
       * <code>SPARK = 7;</code>
       */
      SPARK(7),
      /**
       * <pre>
       * Spark3
       * </pre>
       *
       * <code>SPARK3 = 8;</code>
       */
      SPARK3(8),
      /**
       * <pre>
       * Kudu
       * </pre>
       *
       * <code>KUDU = 9;</code>
       */
      KUDU(9),
      /**
       * <pre>
       * Solr
       * </pre>
       *
       * <code>SOLR = 10;</code>
       */
      SOLR(10),
      /**
       * <pre>
       * HBase
       * </pre>
       *
       * <code>HBASE = 11;</code>
       */
      HBASE(11),
      /**
       * <pre>
       * NaaF
       * </pre>
       *
       * <code>NAAF = 12;</code>
       */
      NAAF(12),
      /**
       * <pre>
       * Object storage
       * </pre>
       *
       * <code>OBJECT_STORAGE = 13;</code>
       */
      OBJECT_STORAGE(13),
      /**
       * <pre>
       * File storage
       * </pre>
       *
       * <code>FILE_STORAGE = 14;</code>
       */
      FILE_STORAGE(14),
      /**
       * <pre>
       * Low latency storage
       * </pre>
       *
       * <code>LOW_LATENCY_STORAGE = 15;</code>
       */
      LOW_LATENCY_STORAGE(15),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * A value indicating the enum is unset.
       * </pre>
       *
       * <code>UNSET = 0;</code>
       */
      public static final int UNSET_VALUE = 0;
      /**
       * <pre>
       * NiFi enabled
       * </pre>
       *
       * <code>NIFI = 1;</code>
       */
      public static final int NIFI_VALUE = 1;
      /**
       * <pre>
       * Impala engine
       * </pre>
       *
       * <code>IMPALA = 2;</code>
       */
      public static final int IMPALA_VALUE = 2;
      /**
       * <pre>
       * Hive engine
       * </pre>
       *
       * <code>HIVE = 3;</code>
       */
      public static final int HIVE_VALUE = 3;
      /**
       * <pre>
       * Druid engine
       * </pre>
       *
       * <code>DRUID = 4;</code>
       */
      public static final int DRUID_VALUE = 4;
      /**
       * <pre>
       * Kafka
       * </pre>
       *
       * <code>KAFKA = 5;</code>
       */
      public static final int KAFKA_VALUE = 5;
      /**
       * <pre>
       * Flink
       * </pre>
       *
       * <code>FLINK = 6;</code>
       */
      public static final int FLINK_VALUE = 6;
      /**
       * <pre>
       * Spark
       * </pre>
       *
       * <code>SPARK = 7;</code>
       */
      public static final int SPARK_VALUE = 7;
      /**
       * <pre>
       * Spark3
       * </pre>
       *
       * <code>SPARK3 = 8;</code>
       */
      public static final int SPARK3_VALUE = 8;
      /**
       * <pre>
       * Kudu
       * </pre>
       *
       * <code>KUDU = 9;</code>
       */
      public static final int KUDU_VALUE = 9;
      /**
       * <pre>
       * Solr
       * </pre>
       *
       * <code>SOLR = 10;</code>
       */
      public static final int SOLR_VALUE = 10;
      /**
       * <pre>
       * HBase
       * </pre>
       *
       * <code>HBASE = 11;</code>
       */
      public static final int HBASE_VALUE = 11;
      /**
       * <pre>
       * NaaF
       * </pre>
       *
       * <code>NAAF = 12;</code>
       */
      public static final int NAAF_VALUE = 12;
      /**
       * <pre>
       * Object storage
       * </pre>
       *
       * <code>OBJECT_STORAGE = 13;</code>
       */
      public static final int OBJECT_STORAGE_VALUE = 13;
      /**
       * <pre>
       * File storage
       * </pre>
       *
       * <code>FILE_STORAGE = 14;</code>
       */
      public static final int FILE_STORAGE_VALUE = 14;
      /**
       * <pre>
       * Low latency storage
       * </pre>
       *
       * <code>LOW_LATENCY_STORAGE = 15;</code>
       */
      public static final int LOW_LATENCY_STORAGE_VALUE = 15;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Value valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Value forNumber(int value) {
        switch (value) {
          case 0: return UNSET;
          case 1: return NIFI;
          case 2: return IMPALA;
          case 3: return HIVE;
          case 4: return DRUID;
          case 5: return KAFKA;
          case 6: return FLINK;
          case 7: return SPARK;
          case 8: return SPARK3;
          case 9: return KUDU;
          case 10: return SOLR;
          case 11: return HBASE;
          case 12: return NAAF;
          case 13: return OBJECT_STORAGE;
          case 14: return FILE_STORAGE;
          case 15: return LOW_LATENCY_STORAGE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Value>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Value> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Value>() {
              public Value findValueByNumber(int number) {
                return Value.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature.getDescriptor().getEnumTypes().get(0);
      }

      private static final Value[] VALUES = values();

      public static Value valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Value(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:meteringevents.ServiceFeature.Value)
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature)) {
        return super.equals(obj);
      }
      com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature other = (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature) obj;

      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Service features. Features allow a product to have different rates based on
     * the feature used. A service is not required to have any features.
     * </pre>
     *
     * Protobuf type {@code meteringevents.ServiceFeature}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:meteringevents.ServiceFeature)
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeatureOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_ServiceFeature_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_ServiceFeature_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature.class, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature.Builder.class);
      }

      // Construct using com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_ServiceFeature_descriptor;
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature getDefaultInstanceForType() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature.getDefaultInstance();
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature build() {
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature buildPartial() {
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature result = new com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature) {
          return mergeFrom((com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature other) {
        if (other == com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:meteringevents.ServiceFeature)
    }

    // @@protoc_insertion_point(class_scope:meteringevents.ServiceFeature)
    private static final com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature();
    }

    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ServiceFeature>
        PARSER = new com.google.protobuf.AbstractParser<ServiceFeature>() {
      @java.lang.Override
      public ServiceFeature parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ServiceFeature> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ServiceFeature> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ServiceConfigurationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:meteringevents.ServiceConfiguration)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The feature used by this service configuration.
     * </pre>
     *
     * <code>.meteringevents.ServiceFeature.Value serviceFeature = 1;</code>
     * @return The enum numeric value on the wire for serviceFeature.
     */
    int getServiceFeatureValue();
    /**
     * <pre>
     * The feature used by this service configuration.
     * </pre>
     *
     * <code>.meteringevents.ServiceFeature.Value serviceFeature = 1;</code>
     * @return The serviceFeature.
     */
    com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature.Value getServiceFeature();
  }
  /**
   * <pre>
   * The service configuration. Any non-standard configuration that could
   * result in different rates should be identified here.
   * </pre>
   *
   * Protobuf type {@code meteringevents.ServiceConfiguration}
   */
  public static final class ServiceConfiguration extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:meteringevents.ServiceConfiguration)
      ServiceConfigurationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ServiceConfiguration.newBuilder() to construct.
    private ServiceConfiguration(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ServiceConfiguration() {
      serviceFeature_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ServiceConfiguration();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_ServiceConfiguration_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_ServiceConfiguration_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration.class, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration.Builder.class);
    }

    public static final int SERVICEFEATURE_FIELD_NUMBER = 1;
    private int serviceFeature_;
    /**
     * <pre>
     * The feature used by this service configuration.
     * </pre>
     *
     * <code>.meteringevents.ServiceFeature.Value serviceFeature = 1;</code>
     * @return The enum numeric value on the wire for serviceFeature.
     */
    @java.lang.Override public int getServiceFeatureValue() {
      return serviceFeature_;
    }
    /**
     * <pre>
     * The feature used by this service configuration.
     * </pre>
     *
     * <code>.meteringevents.ServiceFeature.Value serviceFeature = 1;</code>
     * @return The serviceFeature.
     */
    @java.lang.Override public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature.Value getServiceFeature() {
      @SuppressWarnings("deprecation")
      com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature.Value result = com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature.Value.valueOf(serviceFeature_);
      return result == null ? com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature.Value.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (serviceFeature_ != com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature.Value.UNSET.getNumber()) {
        output.writeEnum(1, serviceFeature_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (serviceFeature_ != com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature.Value.UNSET.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, serviceFeature_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration)) {
        return super.equals(obj);
      }
      com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration other = (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration) obj;

      if (serviceFeature_ != other.serviceFeature_) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SERVICEFEATURE_FIELD_NUMBER;
      hash = (53 * hash) + serviceFeature_;
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The service configuration. Any non-standard configuration that could
     * result in different rates should be identified here.
     * </pre>
     *
     * Protobuf type {@code meteringevents.ServiceConfiguration}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:meteringevents.ServiceConfiguration)
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfigurationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_ServiceConfiguration_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_ServiceConfiguration_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration.class, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration.Builder.class);
      }

      // Construct using com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        serviceFeature_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_ServiceConfiguration_descriptor;
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration getDefaultInstanceForType() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration.getDefaultInstance();
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration build() {
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration buildPartial() {
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration result = new com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration(this);
        result.serviceFeature_ = serviceFeature_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration) {
          return mergeFrom((com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration other) {
        if (other == com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration.getDefaultInstance()) return this;
        if (other.serviceFeature_ != 0) {
          setServiceFeatureValue(other.getServiceFeatureValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                serviceFeature_ = input.readEnum();

                break;
              } // case 8
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int serviceFeature_ = 0;
      /**
       * <pre>
       * The feature used by this service configuration.
       * </pre>
       *
       * <code>.meteringevents.ServiceFeature.Value serviceFeature = 1;</code>
       * @return The enum numeric value on the wire for serviceFeature.
       */
      @java.lang.Override public int getServiceFeatureValue() {
        return serviceFeature_;
      }
      /**
       * <pre>
       * The feature used by this service configuration.
       * </pre>
       *
       * <code>.meteringevents.ServiceFeature.Value serviceFeature = 1;</code>
       * @param value The enum numeric value on the wire for serviceFeature to set.
       * @return This builder for chaining.
       */
      public Builder setServiceFeatureValue(int value) {
        
        serviceFeature_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The feature used by this service configuration.
       * </pre>
       *
       * <code>.meteringevents.ServiceFeature.Value serviceFeature = 1;</code>
       * @return The serviceFeature.
       */
      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature.Value getServiceFeature() {
        @SuppressWarnings("deprecation")
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature.Value result = com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature.Value.valueOf(serviceFeature_);
        return result == null ? com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature.Value.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The feature used by this service configuration.
       * </pre>
       *
       * <code>.meteringevents.ServiceFeature.Value serviceFeature = 1;</code>
       * @param value The serviceFeature to set.
       * @return This builder for chaining.
       */
      public Builder setServiceFeature(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceFeature.Value value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        serviceFeature_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The feature used by this service configuration.
       * </pre>
       *
       * <code>.meteringevents.ServiceFeature.Value serviceFeature = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearServiceFeature() {
        
        serviceFeature_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:meteringevents.ServiceConfiguration)
    }

    // @@protoc_insertion_point(class_scope:meteringevents.ServiceConfiguration)
    private static final com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration();
    }

    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ServiceConfiguration>
        PARSER = new com.google.protobuf.AbstractParser<ServiceConfiguration>() {
      @java.lang.Override
      public ServiceConfiguration parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ServiceConfiguration> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ServiceConfiguration> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PlatformOrBuilder extends
      // @@protoc_insertion_point(interface_extends:meteringevents.Platform)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * The cloud platforms. Any new cloud providers supported by CDP services will
   * be added here. These values should match the customer visible values.
   * </pre>
   *
   * Protobuf type {@code meteringevents.Platform}
   */
  public static final class Platform extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:meteringevents.Platform)
      PlatformOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Platform.newBuilder() to construct.
    private Platform(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Platform() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Platform();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_Platform_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_Platform_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform.class, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform.Builder.class);
    }

    /**
     * Protobuf enum {@code meteringevents.Platform.Value}
     */
    public enum Value
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * A value indicating the enum is unset.
       * </pre>
       *
       * <code>UNSET = 0;</code>
       */
      UNSET(0),
      /**
       * <pre>
       * AWS
       * </pre>
       *
       * <code>AWS = 1;</code>
       */
      AWS(1),
      /**
       * <pre>
       * Azure
       * </pre>
       *
       * <code>AZURE = 2;</code>
       */
      AZURE(2),
      /**
       * <pre>
       * GCP
       * </pre>
       *
       * <code>GCP = 3;</code>
       */
      GCP(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * A value indicating the enum is unset.
       * </pre>
       *
       * <code>UNSET = 0;</code>
       */
      public static final int UNSET_VALUE = 0;
      /**
       * <pre>
       * AWS
       * </pre>
       *
       * <code>AWS = 1;</code>
       */
      public static final int AWS_VALUE = 1;
      /**
       * <pre>
       * Azure
       * </pre>
       *
       * <code>AZURE = 2;</code>
       */
      public static final int AZURE_VALUE = 2;
      /**
       * <pre>
       * GCP
       * </pre>
       *
       * <code>GCP = 3;</code>
       */
      public static final int GCP_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Value valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Value forNumber(int value) {
        switch (value) {
          case 0: return UNSET;
          case 1: return AWS;
          case 2: return AZURE;
          case 3: return GCP;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Value>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Value> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Value>() {
              public Value findValueByNumber(int number) {
                return Value.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform.getDescriptor().getEnumTypes().get(0);
      }

      private static final Value[] VALUES = values();

      public static Value valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Value(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:meteringevents.Platform.Value)
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform)) {
        return super.equals(obj);
      }
      com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform other = (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform) obj;

      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The cloud platforms. Any new cloud providers supported by CDP services will
     * be added here. These values should match the customer visible values.
     * </pre>
     *
     * Protobuf type {@code meteringevents.Platform}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:meteringevents.Platform)
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.PlatformOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_Platform_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_Platform_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform.class, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform.Builder.class);
      }

      // Construct using com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_Platform_descriptor;
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform getDefaultInstanceForType() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform.getDefaultInstance();
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform build() {
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform buildPartial() {
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform result = new com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform) {
          return mergeFrom((com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform other) {
        if (other == com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:meteringevents.Platform)
    }

    // @@protoc_insertion_point(class_scope:meteringevents.Platform)
    private static final com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform();
    }

    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Platform>
        PARSER = new com.google.protobuf.AbstractParser<Platform>() {
      @java.lang.Override
      public Platform parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Platform> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Platform> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MeteringEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:meteringevents.MeteringEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The event's ID. This should be a unique ID generated by the client in
     * uuid v4 format. This is used on the server for detection of duplicate
     * events.
     * e.g.: 4d4a1472-d5e3-464e-a763-e4bbb0d99a77
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * The event's ID. This should be a unique ID generated by the client in
     * uuid v4 format. This is used on the server for detection of duplicate
     * events.
     * e.g.: 4d4a1472-d5e3-464e-a763-e4bbb0d99a77
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * The event timestamp in ms from the epoch of 1970-01-01T00:00:00Z.
     * Note that epoch time is in UTC.
     * </pre>
     *
     * <code>uint64 timestamp = 2;</code>
     * @return The timestamp.
     */
    long getTimestamp();

    /**
     * <pre>
     * The version of this event model. Specifying a version other than 1
     * will result in version-specific validation checks by the Metering service.
     * Version notes:
     *  3: a. Introduces NaafHeartbeat for accepting usage
     *     heartbeats for Nifi As A Function. Also, introduces
     *     MeteredResourceMetadataLite which will be used by
     *     NaafHeartbeat.
     *     b. Introduces AdditionalMetadata which is to be used for capturing
     *     metadata for resource differentiation during billing.
     *     c. Introduces StorageHeartbeat for accepting storage usage heartbeats.
     *  2: a. workloadCrn in the MeteringEvent object is deprecated. This field
     *     is not used and is not needed.
     *     b. clusterCrn in the ClusterInstanceHeartbeat object is deprecated.
     *     The ClusterInstanceHeartbeat.meteredResourceMetadata field/object should be
     *     populated instead.
     *     c. clusterCrn in the UserGauge object is deprecated. the
     *     UserGauge.meteredResourceMetadata field/object should be populated instead.
     *     d. Introduces ServiceConfiguration for specifying non-standard deployment
     *     configuration.
     *     e. Introduces ComputeResourceHeartbeat for accepting usage heartbeats for
     *     compute resources.
     *  1: initial version
     * </pre>
     *
     * <code>int32 version = 3;</code>
     * @return The version.
     */
    int getVersion();

    /**
     * <pre>
     * Service Information.
     *  - Each event must be attributed to a service.
     *  - Each service has a version.
     *  - A service may specify a service configuration.
     *  - Each event is attributed to a particular deployment of a
     *    service/app/workload.
     * </pre>
     *
     * <code>.meteringevents.ServiceType.Value serviceType = 4;</code>
     * @return The enum numeric value on the wire for serviceType.
     */
    int getServiceTypeValue();
    /**
     * <pre>
     * Service Information.
     *  - Each event must be attributed to a service.
     *  - Each service has a version.
     *  - A service may specify a service configuration.
     *  - Each event is attributed to a particular deployment of a
     *    service/app/workload.
     * </pre>
     *
     * <code>.meteringevents.ServiceType.Value serviceType = 4;</code>
     * @return The serviceType.
     */
    com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType.Value getServiceType();

    /**
     * <pre>
     * The product version is expected to be a string following the convention
     * described here: https://semver.org/
     * e.g.: 0.9.7
     *     1.0.0
     * </pre>
     *
     * <code>string serviceVersion = 5;</code>
     * @return The serviceVersion.
     */
    java.lang.String getServiceVersion();
    /**
     * <pre>
     * The product version is expected to be a string following the convention
     * described here: https://semver.org/
     * e.g.: 0.9.7
     *     1.0.0
     * </pre>
     *
     * <code>string serviceVersion = 5;</code>
     * @return The bytes for serviceVersion.
     */
    com.google.protobuf.ByteString
        getServiceVersionBytes();

    /**
     * <pre>
     * The service configurations. Any non-standard deployment configuration
     * which may result in a different rate should be identified in the service
     * configuration.
     * </pre>
     *
     * <code>.meteringevents.ServiceConfiguration serviceConfiguration = 9;</code>
     * @return Whether the serviceConfiguration field is set.
     */
    boolean hasServiceConfiguration();
    /**
     * <pre>
     * The service configurations. Any non-standard deployment configuration
     * which may result in a different rate should be identified in the service
     * configuration.
     * </pre>
     *
     * <code>.meteringevents.ServiceConfiguration serviceConfiguration = 9;</code>
     * @return The serviceConfiguration.
     */
    com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration getServiceConfiguration();
    /**
     * <pre>
     * The service configurations. Any non-standard deployment configuration
     * which may result in a different rate should be identified in the service
     * configuration.
     * </pre>
     *
     * <code>.meteringevents.ServiceConfiguration serviceConfiguration = 9;</code>
     */
    com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfigurationOrBuilder getServiceConfigurationOrBuilder();

    /**
     * <pre>
     * The workload CRN. (deprecated in version 2)
     * USAGE NOTES:
     * - This field is deprecated. If present it will be ignored by the Metering
     *   service. It will be removed in a future version.
     * </pre>
     *
     * <code>string workloadCrn = 6;</code>
     * @return The workloadCrn.
     */
    java.lang.String getWorkloadCrn();
    /**
     * <pre>
     * The workload CRN. (deprecated in version 2)
     * USAGE NOTES:
     * - This field is deprecated. If present it will be ignored by the Metering
     *   service. It will be removed in a future version.
     * </pre>
     *
     * <code>string workloadCrn = 6;</code>
     * @return The bytes for workloadCrn.
     */
    com.google.protobuf.ByteString
        getWorkloadCrnBytes();

    /**
     * <code>.meteringevents.ClusterInstanceHeartbeat clusterInstanceHeartbeat = 7;</code>
     * @return Whether the clusterInstanceHeartbeat field is set.
     */
    boolean hasClusterInstanceHeartbeat();
    /**
     * <code>.meteringevents.ClusterInstanceHeartbeat clusterInstanceHeartbeat = 7;</code>
     * @return The clusterInstanceHeartbeat.
     */
    com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat getClusterInstanceHeartbeat();
    /**
     * <code>.meteringevents.ClusterInstanceHeartbeat clusterInstanceHeartbeat = 7;</code>
     */
    com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeatOrBuilder getClusterInstanceHeartbeatOrBuilder();

    /**
     * <code>.meteringevents.User user = 8;</code>
     * @return Whether the user field is set.
     */
    boolean hasUser();
    /**
     * <code>.meteringevents.User user = 8;</code>
     * @return The user.
     */
    com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User getUser();
    /**
     * <code>.meteringevents.User user = 8;</code>
     */
    com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.UserOrBuilder getUserOrBuilder();

    /**
     * <code>.meteringevents.ComputeResourceHeartbeat computeResourceHeartbeat = 10;</code>
     * @return Whether the computeResourceHeartbeat field is set.
     */
    boolean hasComputeResourceHeartbeat();
    /**
     * <code>.meteringevents.ComputeResourceHeartbeat computeResourceHeartbeat = 10;</code>
     * @return The computeResourceHeartbeat.
     */
    com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat getComputeResourceHeartbeat();
    /**
     * <code>.meteringevents.ComputeResourceHeartbeat computeResourceHeartbeat = 10;</code>
     */
    com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeatOrBuilder getComputeResourceHeartbeatOrBuilder();

    /**
     * <code>.meteringevents.NaafHeartbeat naafHeartbeat = 11;</code>
     * @return Whether the naafHeartbeat field is set.
     */
    boolean hasNaafHeartbeat();
    /**
     * <code>.meteringevents.NaafHeartbeat naafHeartbeat = 11;</code>
     * @return The naafHeartbeat.
     */
    com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat getNaafHeartbeat();
    /**
     * <code>.meteringevents.NaafHeartbeat naafHeartbeat = 11;</code>
     */
    com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeatOrBuilder getNaafHeartbeatOrBuilder();

    /**
     * <code>.meteringevents.StorageHeartbeat storageHeartbeat = 12;</code>
     * @return Whether the storageHeartbeat field is set.
     */
    boolean hasStorageHeartbeat();
    /**
     * <code>.meteringevents.StorageHeartbeat storageHeartbeat = 12;</code>
     * @return The storageHeartbeat.
     */
    com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat getStorageHeartbeat();
    /**
     * <code>.meteringevents.StorageHeartbeat storageHeartbeat = 12;</code>
     */
    com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeatOrBuilder getStorageHeartbeatOrBuilder();

    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent.PayloadCase getPayloadCase();
  }
  /**
   * <pre>
   * A metering event.
   * </pre>
   *
   * Protobuf type {@code meteringevents.MeteringEvent}
   */
  public static final class MeteringEvent extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:meteringevents.MeteringEvent)
      MeteringEventOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MeteringEvent.newBuilder() to construct.
    private MeteringEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MeteringEvent() {
      id_ = "";
      serviceType_ = 0;
      serviceVersion_ = "";
      workloadCrn_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MeteringEvent();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_MeteringEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_MeteringEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent.class, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent.Builder.class);
    }

    private int payloadCase_ = 0;
    private java.lang.Object payload_;
    public enum PayloadCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      CLUSTERINSTANCEHEARTBEAT(7),
      USER(8),
      COMPUTERESOURCEHEARTBEAT(10),
      NAAFHEARTBEAT(11),
      STORAGEHEARTBEAT(12),
      PAYLOAD_NOT_SET(0);
      private final int value;
      private PayloadCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static PayloadCase valueOf(int value) {
        return forNumber(value);
      }

      public static PayloadCase forNumber(int value) {
        switch (value) {
          case 7: return CLUSTERINSTANCEHEARTBEAT;
          case 8: return USER;
          case 10: return COMPUTERESOURCEHEARTBEAT;
          case 11: return NAAFHEARTBEAT;
          case 12: return STORAGEHEARTBEAT;
          case 0: return PAYLOAD_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public PayloadCase
    getPayloadCase() {
      return PayloadCase.forNumber(
          payloadCase_);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * The event's ID. This should be a unique ID generated by the client in
     * uuid v4 format. This is used on the server for detection of duplicate
     * events.
     * e.g.: 4d4a1472-d5e3-464e-a763-e4bbb0d99a77
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The event's ID. This should be a unique ID generated by the client in
     * uuid v4 format. This is used on the server for detection of duplicate
     * events.
     * e.g.: 4d4a1472-d5e3-464e-a763-e4bbb0d99a77
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 2;
    private long timestamp_;
    /**
     * <pre>
     * The event timestamp in ms from the epoch of 1970-01-01T00:00:00Z.
     * Note that epoch time is in UTC.
     * </pre>
     *
     * <code>uint64 timestamp = 2;</code>
     * @return The timestamp.
     */
    @java.lang.Override
    public long getTimestamp() {
      return timestamp_;
    }

    public static final int VERSION_FIELD_NUMBER = 3;
    private int version_;
    /**
     * <pre>
     * The version of this event model. Specifying a version other than 1
     * will result in version-specific validation checks by the Metering service.
     * Version notes:
     *  3: a. Introduces NaafHeartbeat for accepting usage
     *     heartbeats for Nifi As A Function. Also, introduces
     *     MeteredResourceMetadataLite which will be used by
     *     NaafHeartbeat.
     *     b. Introduces AdditionalMetadata which is to be used for capturing
     *     metadata for resource differentiation during billing.
     *     c. Introduces StorageHeartbeat for accepting storage usage heartbeats.
     *  2: a. workloadCrn in the MeteringEvent object is deprecated. This field
     *     is not used and is not needed.
     *     b. clusterCrn in the ClusterInstanceHeartbeat object is deprecated.
     *     The ClusterInstanceHeartbeat.meteredResourceMetadata field/object should be
     *     populated instead.
     *     c. clusterCrn in the UserGauge object is deprecated. the
     *     UserGauge.meteredResourceMetadata field/object should be populated instead.
     *     d. Introduces ServiceConfiguration for specifying non-standard deployment
     *     configuration.
     *     e. Introduces ComputeResourceHeartbeat for accepting usage heartbeats for
     *     compute resources.
     *  1: initial version
     * </pre>
     *
     * <code>int32 version = 3;</code>
     * @return The version.
     */
    @java.lang.Override
    public int getVersion() {
      return version_;
    }

    public static final int SERVICETYPE_FIELD_NUMBER = 4;
    private int serviceType_;
    /**
     * <pre>
     * Service Information.
     *  - Each event must be attributed to a service.
     *  - Each service has a version.
     *  - A service may specify a service configuration.
     *  - Each event is attributed to a particular deployment of a
     *    service/app/workload.
     * </pre>
     *
     * <code>.meteringevents.ServiceType.Value serviceType = 4;</code>
     * @return The enum numeric value on the wire for serviceType.
     */
    @java.lang.Override public int getServiceTypeValue() {
      return serviceType_;
    }
    /**
     * <pre>
     * Service Information.
     *  - Each event must be attributed to a service.
     *  - Each service has a version.
     *  - A service may specify a service configuration.
     *  - Each event is attributed to a particular deployment of a
     *    service/app/workload.
     * </pre>
     *
     * <code>.meteringevents.ServiceType.Value serviceType = 4;</code>
     * @return The serviceType.
     */
    @java.lang.Override public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType.Value getServiceType() {
      @SuppressWarnings("deprecation")
      com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType.Value result = com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType.Value.valueOf(serviceType_);
      return result == null ? com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType.Value.UNRECOGNIZED : result;
    }

    public static final int SERVICEVERSION_FIELD_NUMBER = 5;
    private volatile java.lang.Object serviceVersion_;
    /**
     * <pre>
     * The product version is expected to be a string following the convention
     * described here: https://semver.org/
     * e.g.: 0.9.7
     *     1.0.0
     * </pre>
     *
     * <code>string serviceVersion = 5;</code>
     * @return The serviceVersion.
     */
    @java.lang.Override
    public java.lang.String getServiceVersion() {
      java.lang.Object ref = serviceVersion_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        serviceVersion_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The product version is expected to be a string following the convention
     * described here: https://semver.org/
     * e.g.: 0.9.7
     *     1.0.0
     * </pre>
     *
     * <code>string serviceVersion = 5;</code>
     * @return The bytes for serviceVersion.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getServiceVersionBytes() {
      java.lang.Object ref = serviceVersion_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        serviceVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SERVICECONFIGURATION_FIELD_NUMBER = 9;
    private com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration serviceConfiguration_;
    /**
     * <pre>
     * The service configurations. Any non-standard deployment configuration
     * which may result in a different rate should be identified in the service
     * configuration.
     * </pre>
     *
     * <code>.meteringevents.ServiceConfiguration serviceConfiguration = 9;</code>
     * @return Whether the serviceConfiguration field is set.
     */
    @java.lang.Override
    public boolean hasServiceConfiguration() {
      return serviceConfiguration_ != null;
    }
    /**
     * <pre>
     * The service configurations. Any non-standard deployment configuration
     * which may result in a different rate should be identified in the service
     * configuration.
     * </pre>
     *
     * <code>.meteringevents.ServiceConfiguration serviceConfiguration = 9;</code>
     * @return The serviceConfiguration.
     */
    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration getServiceConfiguration() {
      return serviceConfiguration_ == null ? com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration.getDefaultInstance() : serviceConfiguration_;
    }
    /**
     * <pre>
     * The service configurations. Any non-standard deployment configuration
     * which may result in a different rate should be identified in the service
     * configuration.
     * </pre>
     *
     * <code>.meteringevents.ServiceConfiguration serviceConfiguration = 9;</code>
     */
    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfigurationOrBuilder getServiceConfigurationOrBuilder() {
      return getServiceConfiguration();
    }

    public static final int WORKLOADCRN_FIELD_NUMBER = 6;
    private volatile java.lang.Object workloadCrn_;
    /**
     * <pre>
     * The workload CRN. (deprecated in version 2)
     * USAGE NOTES:
     * - This field is deprecated. If present it will be ignored by the Metering
     *   service. It will be removed in a future version.
     * </pre>
     *
     * <code>string workloadCrn = 6;</code>
     * @return The workloadCrn.
     */
    @java.lang.Override
    public java.lang.String getWorkloadCrn() {
      java.lang.Object ref = workloadCrn_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        workloadCrn_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The workload CRN. (deprecated in version 2)
     * USAGE NOTES:
     * - This field is deprecated. If present it will be ignored by the Metering
     *   service. It will be removed in a future version.
     * </pre>
     *
     * <code>string workloadCrn = 6;</code>
     * @return The bytes for workloadCrn.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getWorkloadCrnBytes() {
      java.lang.Object ref = workloadCrn_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        workloadCrn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CLUSTERINSTANCEHEARTBEAT_FIELD_NUMBER = 7;
    /**
     * <code>.meteringevents.ClusterInstanceHeartbeat clusterInstanceHeartbeat = 7;</code>
     * @return Whether the clusterInstanceHeartbeat field is set.
     */
    @java.lang.Override
    public boolean hasClusterInstanceHeartbeat() {
      return payloadCase_ == 7;
    }
    /**
     * <code>.meteringevents.ClusterInstanceHeartbeat clusterInstanceHeartbeat = 7;</code>
     * @return The clusterInstanceHeartbeat.
     */
    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat getClusterInstanceHeartbeat() {
      if (payloadCase_ == 7) {
         return (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat) payload_;
      }
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat.getDefaultInstance();
    }
    /**
     * <code>.meteringevents.ClusterInstanceHeartbeat clusterInstanceHeartbeat = 7;</code>
     */
    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeatOrBuilder getClusterInstanceHeartbeatOrBuilder() {
      if (payloadCase_ == 7) {
         return (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat) payload_;
      }
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat.getDefaultInstance();
    }

    public static final int USER_FIELD_NUMBER = 8;
    /**
     * <code>.meteringevents.User user = 8;</code>
     * @return Whether the user field is set.
     */
    @java.lang.Override
    public boolean hasUser() {
      return payloadCase_ == 8;
    }
    /**
     * <code>.meteringevents.User user = 8;</code>
     * @return The user.
     */
    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User getUser() {
      if (payloadCase_ == 8) {
         return (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User) payload_;
      }
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User.getDefaultInstance();
    }
    /**
     * <code>.meteringevents.User user = 8;</code>
     */
    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.UserOrBuilder getUserOrBuilder() {
      if (payloadCase_ == 8) {
         return (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User) payload_;
      }
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User.getDefaultInstance();
    }

    public static final int COMPUTERESOURCEHEARTBEAT_FIELD_NUMBER = 10;
    /**
     * <code>.meteringevents.ComputeResourceHeartbeat computeResourceHeartbeat = 10;</code>
     * @return Whether the computeResourceHeartbeat field is set.
     */
    @java.lang.Override
    public boolean hasComputeResourceHeartbeat() {
      return payloadCase_ == 10;
    }
    /**
     * <code>.meteringevents.ComputeResourceHeartbeat computeResourceHeartbeat = 10;</code>
     * @return The computeResourceHeartbeat.
     */
    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat getComputeResourceHeartbeat() {
      if (payloadCase_ == 10) {
         return (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat) payload_;
      }
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat.getDefaultInstance();
    }
    /**
     * <code>.meteringevents.ComputeResourceHeartbeat computeResourceHeartbeat = 10;</code>
     */
    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeatOrBuilder getComputeResourceHeartbeatOrBuilder() {
      if (payloadCase_ == 10) {
         return (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat) payload_;
      }
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat.getDefaultInstance();
    }

    public static final int NAAFHEARTBEAT_FIELD_NUMBER = 11;
    /**
     * <code>.meteringevents.NaafHeartbeat naafHeartbeat = 11;</code>
     * @return Whether the naafHeartbeat field is set.
     */
    @java.lang.Override
    public boolean hasNaafHeartbeat() {
      return payloadCase_ == 11;
    }
    /**
     * <code>.meteringevents.NaafHeartbeat naafHeartbeat = 11;</code>
     * @return The naafHeartbeat.
     */
    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat getNaafHeartbeat() {
      if (payloadCase_ == 11) {
         return (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat) payload_;
      }
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat.getDefaultInstance();
    }
    /**
     * <code>.meteringevents.NaafHeartbeat naafHeartbeat = 11;</code>
     */
    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeatOrBuilder getNaafHeartbeatOrBuilder() {
      if (payloadCase_ == 11) {
         return (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat) payload_;
      }
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat.getDefaultInstance();
    }

    public static final int STORAGEHEARTBEAT_FIELD_NUMBER = 12;
    /**
     * <code>.meteringevents.StorageHeartbeat storageHeartbeat = 12;</code>
     * @return Whether the storageHeartbeat field is set.
     */
    @java.lang.Override
    public boolean hasStorageHeartbeat() {
      return payloadCase_ == 12;
    }
    /**
     * <code>.meteringevents.StorageHeartbeat storageHeartbeat = 12;</code>
     * @return The storageHeartbeat.
     */
    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat getStorageHeartbeat() {
      if (payloadCase_ == 12) {
         return (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat) payload_;
      }
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat.getDefaultInstance();
    }
    /**
     * <code>.meteringevents.StorageHeartbeat storageHeartbeat = 12;</code>
     */
    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeatOrBuilder getStorageHeartbeatOrBuilder() {
      if (payloadCase_ == 12) {
         return (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat) payload_;
      }
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (timestamp_ != 0L) {
        output.writeUInt64(2, timestamp_);
      }
      if (version_ != 0) {
        output.writeInt32(3, version_);
      }
      if (serviceType_ != com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType.Value.UNSET.getNumber()) {
        output.writeEnum(4, serviceType_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(serviceVersion_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, serviceVersion_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(workloadCrn_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, workloadCrn_);
      }
      if (payloadCase_ == 7) {
        output.writeMessage(7, (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat) payload_);
      }
      if (payloadCase_ == 8) {
        output.writeMessage(8, (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User) payload_);
      }
      if (serviceConfiguration_ != null) {
        output.writeMessage(9, getServiceConfiguration());
      }
      if (payloadCase_ == 10) {
        output.writeMessage(10, (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat) payload_);
      }
      if (payloadCase_ == 11) {
        output.writeMessage(11, (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat) payload_);
      }
      if (payloadCase_ == 12) {
        output.writeMessage(12, (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat) payload_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (timestamp_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, timestamp_);
      }
      if (version_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, version_);
      }
      if (serviceType_ != com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType.Value.UNSET.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, serviceType_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(serviceVersion_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, serviceVersion_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(workloadCrn_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, workloadCrn_);
      }
      if (payloadCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat) payload_);
      }
      if (payloadCase_ == 8) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User) payload_);
      }
      if (serviceConfiguration_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getServiceConfiguration());
      }
      if (payloadCase_ == 10) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat) payload_);
      }
      if (payloadCase_ == 11) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat) payload_);
      }
      if (payloadCase_ == 12) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat) payload_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent)) {
        return super.equals(obj);
      }
      com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent other = (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (getTimestamp()
          != other.getTimestamp()) return false;
      if (getVersion()
          != other.getVersion()) return false;
      if (serviceType_ != other.serviceType_) return false;
      if (!getServiceVersion()
          .equals(other.getServiceVersion())) return false;
      if (hasServiceConfiguration() != other.hasServiceConfiguration()) return false;
      if (hasServiceConfiguration()) {
        if (!getServiceConfiguration()
            .equals(other.getServiceConfiguration())) return false;
      }
      if (!getWorkloadCrn()
          .equals(other.getWorkloadCrn())) return false;
      if (!getPayloadCase().equals(other.getPayloadCase())) return false;
      switch (payloadCase_) {
        case 7:
          if (!getClusterInstanceHeartbeat()
              .equals(other.getClusterInstanceHeartbeat())) return false;
          break;
        case 8:
          if (!getUser()
              .equals(other.getUser())) return false;
          break;
        case 10:
          if (!getComputeResourceHeartbeat()
              .equals(other.getComputeResourceHeartbeat())) return false;
          break;
        case 11:
          if (!getNaafHeartbeat()
              .equals(other.getNaafHeartbeat())) return false;
          break;
        case 12:
          if (!getStorageHeartbeat()
              .equals(other.getStorageHeartbeat())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTimestamp());
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion();
      hash = (37 * hash) + SERVICETYPE_FIELD_NUMBER;
      hash = (53 * hash) + serviceType_;
      hash = (37 * hash) + SERVICEVERSION_FIELD_NUMBER;
      hash = (53 * hash) + getServiceVersion().hashCode();
      if (hasServiceConfiguration()) {
        hash = (37 * hash) + SERVICECONFIGURATION_FIELD_NUMBER;
        hash = (53 * hash) + getServiceConfiguration().hashCode();
      }
      hash = (37 * hash) + WORKLOADCRN_FIELD_NUMBER;
      hash = (53 * hash) + getWorkloadCrn().hashCode();
      switch (payloadCase_) {
        case 7:
          hash = (37 * hash) + CLUSTERINSTANCEHEARTBEAT_FIELD_NUMBER;
          hash = (53 * hash) + getClusterInstanceHeartbeat().hashCode();
          break;
        case 8:
          hash = (37 * hash) + USER_FIELD_NUMBER;
          hash = (53 * hash) + getUser().hashCode();
          break;
        case 10:
          hash = (37 * hash) + COMPUTERESOURCEHEARTBEAT_FIELD_NUMBER;
          hash = (53 * hash) + getComputeResourceHeartbeat().hashCode();
          break;
        case 11:
          hash = (37 * hash) + NAAFHEARTBEAT_FIELD_NUMBER;
          hash = (53 * hash) + getNaafHeartbeat().hashCode();
          break;
        case 12:
          hash = (37 * hash) + STORAGEHEARTBEAT_FIELD_NUMBER;
          hash = (53 * hash) + getStorageHeartbeat().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A metering event.
     * </pre>
     *
     * Protobuf type {@code meteringevents.MeteringEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:meteringevents.MeteringEvent)
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_MeteringEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_MeteringEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent.class, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent.Builder.class);
      }

      // Construct using com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        timestamp_ = 0L;

        version_ = 0;

        serviceType_ = 0;

        serviceVersion_ = "";

        if (serviceConfigurationBuilder_ == null) {
          serviceConfiguration_ = null;
        } else {
          serviceConfiguration_ = null;
          serviceConfigurationBuilder_ = null;
        }
        workloadCrn_ = "";

        if (clusterInstanceHeartbeatBuilder_ != null) {
          clusterInstanceHeartbeatBuilder_.clear();
        }
        if (userBuilder_ != null) {
          userBuilder_.clear();
        }
        if (computeResourceHeartbeatBuilder_ != null) {
          computeResourceHeartbeatBuilder_.clear();
        }
        if (naafHeartbeatBuilder_ != null) {
          naafHeartbeatBuilder_.clear();
        }
        if (storageHeartbeatBuilder_ != null) {
          storageHeartbeatBuilder_.clear();
        }
        payloadCase_ = 0;
        payload_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_MeteringEvent_descriptor;
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent getDefaultInstanceForType() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent.getDefaultInstance();
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent build() {
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent buildPartial() {
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent result = new com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent(this);
        result.id_ = id_;
        result.timestamp_ = timestamp_;
        result.version_ = version_;
        result.serviceType_ = serviceType_;
        result.serviceVersion_ = serviceVersion_;
        if (serviceConfigurationBuilder_ == null) {
          result.serviceConfiguration_ = serviceConfiguration_;
        } else {
          result.serviceConfiguration_ = serviceConfigurationBuilder_.build();
        }
        result.workloadCrn_ = workloadCrn_;
        if (payloadCase_ == 7) {
          if (clusterInstanceHeartbeatBuilder_ == null) {
            result.payload_ = payload_;
          } else {
            result.payload_ = clusterInstanceHeartbeatBuilder_.build();
          }
        }
        if (payloadCase_ == 8) {
          if (userBuilder_ == null) {
            result.payload_ = payload_;
          } else {
            result.payload_ = userBuilder_.build();
          }
        }
        if (payloadCase_ == 10) {
          if (computeResourceHeartbeatBuilder_ == null) {
            result.payload_ = payload_;
          } else {
            result.payload_ = computeResourceHeartbeatBuilder_.build();
          }
        }
        if (payloadCase_ == 11) {
          if (naafHeartbeatBuilder_ == null) {
            result.payload_ = payload_;
          } else {
            result.payload_ = naafHeartbeatBuilder_.build();
          }
        }
        if (payloadCase_ == 12) {
          if (storageHeartbeatBuilder_ == null) {
            result.payload_ = payload_;
          } else {
            result.payload_ = storageHeartbeatBuilder_.build();
          }
        }
        result.payloadCase_ = payloadCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent) {
          return mergeFrom((com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent other) {
        if (other == com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (other.getTimestamp() != 0L) {
          setTimestamp(other.getTimestamp());
        }
        if (other.getVersion() != 0) {
          setVersion(other.getVersion());
        }
        if (other.serviceType_ != 0) {
          setServiceTypeValue(other.getServiceTypeValue());
        }
        if (!other.getServiceVersion().isEmpty()) {
          serviceVersion_ = other.serviceVersion_;
          onChanged();
        }
        if (other.hasServiceConfiguration()) {
          mergeServiceConfiguration(other.getServiceConfiguration());
        }
        if (!other.getWorkloadCrn().isEmpty()) {
          workloadCrn_ = other.workloadCrn_;
          onChanged();
        }
        switch (other.getPayloadCase()) {
          case CLUSTERINSTANCEHEARTBEAT: {
            mergeClusterInstanceHeartbeat(other.getClusterInstanceHeartbeat());
            break;
          }
          case USER: {
            mergeUser(other.getUser());
            break;
          }
          case COMPUTERESOURCEHEARTBEAT: {
            mergeComputeResourceHeartbeat(other.getComputeResourceHeartbeat());
            break;
          }
          case NAAFHEARTBEAT: {
            mergeNaafHeartbeat(other.getNaafHeartbeat());
            break;
          }
          case STORAGEHEARTBEAT: {
            mergeStorageHeartbeat(other.getStorageHeartbeat());
            break;
          }
          case PAYLOAD_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                id_ = input.readStringRequireUtf8();

                break;
              } // case 10
              case 16: {
                timestamp_ = input.readUInt64();

                break;
              } // case 16
              case 24: {
                version_ = input.readInt32();

                break;
              } // case 24
              case 32: {
                serviceType_ = input.readEnum();

                break;
              } // case 32
              case 42: {
                serviceVersion_ = input.readStringRequireUtf8();

                break;
              } // case 42
              case 50: {
                workloadCrn_ = input.readStringRequireUtf8();

                break;
              } // case 50
              case 58: {
                input.readMessage(
                    getClusterInstanceHeartbeatFieldBuilder().getBuilder(),
                    extensionRegistry);
                payloadCase_ = 7;
                break;
              } // case 58
              case 66: {
                input.readMessage(
                    getUserFieldBuilder().getBuilder(),
                    extensionRegistry);
                payloadCase_ = 8;
                break;
              } // case 66
              case 74: {
                input.readMessage(
                    getServiceConfigurationFieldBuilder().getBuilder(),
                    extensionRegistry);

                break;
              } // case 74
              case 82: {
                input.readMessage(
                    getComputeResourceHeartbeatFieldBuilder().getBuilder(),
                    extensionRegistry);
                payloadCase_ = 10;
                break;
              } // case 82
              case 90: {
                input.readMessage(
                    getNaafHeartbeatFieldBuilder().getBuilder(),
                    extensionRegistry);
                payloadCase_ = 11;
                break;
              } // case 90
              case 98: {
                input.readMessage(
                    getStorageHeartbeatFieldBuilder().getBuilder(),
                    extensionRegistry);
                payloadCase_ = 12;
                break;
              } // case 98
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int payloadCase_ = 0;
      private java.lang.Object payload_;
      public PayloadCase
          getPayloadCase() {
        return PayloadCase.forNumber(
            payloadCase_);
      }

      public Builder clearPayload() {
        payloadCase_ = 0;
        payload_ = null;
        onChanged();
        return this;
      }


      private java.lang.Object id_ = "";
      /**
       * <pre>
       * The event's ID. This should be a unique ID generated by the client in
       * uuid v4 format. This is used on the server for detection of duplicate
       * events.
       * e.g.: 4d4a1472-d5e3-464e-a763-e4bbb0d99a77
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The event's ID. This should be a unique ID generated by the client in
       * uuid v4 format. This is used on the server for detection of duplicate
       * events.
       * e.g.: 4d4a1472-d5e3-464e-a763-e4bbb0d99a77
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The event's ID. This should be a unique ID generated by the client in
       * uuid v4 format. This is used on the server for detection of duplicate
       * events.
       * e.g.: 4d4a1472-d5e3-464e-a763-e4bbb0d99a77
       * </pre>
       *
       * <code>string id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The event's ID. This should be a unique ID generated by the client in
       * uuid v4 format. This is used on the server for detection of duplicate
       * events.
       * e.g.: 4d4a1472-d5e3-464e-a763-e4bbb0d99a77
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The event's ID. This should be a unique ID generated by the client in
       * uuid v4 format. This is used on the server for detection of duplicate
       * events.
       * e.g.: 4d4a1472-d5e3-464e-a763-e4bbb0d99a77
       * </pre>
       *
       * <code>string id = 1;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private long timestamp_ ;
      /**
       * <pre>
       * The event timestamp in ms from the epoch of 1970-01-01T00:00:00Z.
       * Note that epoch time is in UTC.
       * </pre>
       *
       * <code>uint64 timestamp = 2;</code>
       * @return The timestamp.
       */
      @java.lang.Override
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <pre>
       * The event timestamp in ms from the epoch of 1970-01-01T00:00:00Z.
       * Note that epoch time is in UTC.
       * </pre>
       *
       * <code>uint64 timestamp = 2;</code>
       * @param value The timestamp to set.
       * @return This builder for chaining.
       */
      public Builder setTimestamp(long value) {
        
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The event timestamp in ms from the epoch of 1970-01-01T00:00:00Z.
       * Note that epoch time is in UTC.
       * </pre>
       *
       * <code>uint64 timestamp = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimestamp() {
        
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      private int version_ ;
      /**
       * <pre>
       * The version of this event model. Specifying a version other than 1
       * will result in version-specific validation checks by the Metering service.
       * Version notes:
       *  3: a. Introduces NaafHeartbeat for accepting usage
       *     heartbeats for Nifi As A Function. Also, introduces
       *     MeteredResourceMetadataLite which will be used by
       *     NaafHeartbeat.
       *     b. Introduces AdditionalMetadata which is to be used for capturing
       *     metadata for resource differentiation during billing.
       *     c. Introduces StorageHeartbeat for accepting storage usage heartbeats.
       *  2: a. workloadCrn in the MeteringEvent object is deprecated. This field
       *     is not used and is not needed.
       *     b. clusterCrn in the ClusterInstanceHeartbeat object is deprecated.
       *     The ClusterInstanceHeartbeat.meteredResourceMetadata field/object should be
       *     populated instead.
       *     c. clusterCrn in the UserGauge object is deprecated. the
       *     UserGauge.meteredResourceMetadata field/object should be populated instead.
       *     d. Introduces ServiceConfiguration for specifying non-standard deployment
       *     configuration.
       *     e. Introduces ComputeResourceHeartbeat for accepting usage heartbeats for
       *     compute resources.
       *  1: initial version
       * </pre>
       *
       * <code>int32 version = 3;</code>
       * @return The version.
       */
      @java.lang.Override
      public int getVersion() {
        return version_;
      }
      /**
       * <pre>
       * The version of this event model. Specifying a version other than 1
       * will result in version-specific validation checks by the Metering service.
       * Version notes:
       *  3: a. Introduces NaafHeartbeat for accepting usage
       *     heartbeats for Nifi As A Function. Also, introduces
       *     MeteredResourceMetadataLite which will be used by
       *     NaafHeartbeat.
       *     b. Introduces AdditionalMetadata which is to be used for capturing
       *     metadata for resource differentiation during billing.
       *     c. Introduces StorageHeartbeat for accepting storage usage heartbeats.
       *  2: a. workloadCrn in the MeteringEvent object is deprecated. This field
       *     is not used and is not needed.
       *     b. clusterCrn in the ClusterInstanceHeartbeat object is deprecated.
       *     The ClusterInstanceHeartbeat.meteredResourceMetadata field/object should be
       *     populated instead.
       *     c. clusterCrn in the UserGauge object is deprecated. the
       *     UserGauge.meteredResourceMetadata field/object should be populated instead.
       *     d. Introduces ServiceConfiguration for specifying non-standard deployment
       *     configuration.
       *     e. Introduces ComputeResourceHeartbeat for accepting usage heartbeats for
       *     compute resources.
       *  1: initial version
       * </pre>
       *
       * <code>int32 version = 3;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(int value) {
        
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The version of this event model. Specifying a version other than 1
       * will result in version-specific validation checks by the Metering service.
       * Version notes:
       *  3: a. Introduces NaafHeartbeat for accepting usage
       *     heartbeats for Nifi As A Function. Also, introduces
       *     MeteredResourceMetadataLite which will be used by
       *     NaafHeartbeat.
       *     b. Introduces AdditionalMetadata which is to be used for capturing
       *     metadata for resource differentiation during billing.
       *     c. Introduces StorageHeartbeat for accepting storage usage heartbeats.
       *  2: a. workloadCrn in the MeteringEvent object is deprecated. This field
       *     is not used and is not needed.
       *     b. clusterCrn in the ClusterInstanceHeartbeat object is deprecated.
       *     The ClusterInstanceHeartbeat.meteredResourceMetadata field/object should be
       *     populated instead.
       *     c. clusterCrn in the UserGauge object is deprecated. the
       *     UserGauge.meteredResourceMetadata field/object should be populated instead.
       *     d. Introduces ServiceConfiguration for specifying non-standard deployment
       *     configuration.
       *     e. Introduces ComputeResourceHeartbeat for accepting usage heartbeats for
       *     compute resources.
       *  1: initial version
       * </pre>
       *
       * <code>int32 version = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        
        version_ = 0;
        onChanged();
        return this;
      }

      private int serviceType_ = 0;
      /**
       * <pre>
       * Service Information.
       *  - Each event must be attributed to a service.
       *  - Each service has a version.
       *  - A service may specify a service configuration.
       *  - Each event is attributed to a particular deployment of a
       *    service/app/workload.
       * </pre>
       *
       * <code>.meteringevents.ServiceType.Value serviceType = 4;</code>
       * @return The enum numeric value on the wire for serviceType.
       */
      @java.lang.Override public int getServiceTypeValue() {
        return serviceType_;
      }
      /**
       * <pre>
       * Service Information.
       *  - Each event must be attributed to a service.
       *  - Each service has a version.
       *  - A service may specify a service configuration.
       *  - Each event is attributed to a particular deployment of a
       *    service/app/workload.
       * </pre>
       *
       * <code>.meteringevents.ServiceType.Value serviceType = 4;</code>
       * @param value The enum numeric value on the wire for serviceType to set.
       * @return This builder for chaining.
       */
      public Builder setServiceTypeValue(int value) {
        
        serviceType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Service Information.
       *  - Each event must be attributed to a service.
       *  - Each service has a version.
       *  - A service may specify a service configuration.
       *  - Each event is attributed to a particular deployment of a
       *    service/app/workload.
       * </pre>
       *
       * <code>.meteringevents.ServiceType.Value serviceType = 4;</code>
       * @return The serviceType.
       */
      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType.Value getServiceType() {
        @SuppressWarnings("deprecation")
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType.Value result = com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType.Value.valueOf(serviceType_);
        return result == null ? com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType.Value.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Service Information.
       *  - Each event must be attributed to a service.
       *  - Each service has a version.
       *  - A service may specify a service configuration.
       *  - Each event is attributed to a particular deployment of a
       *    service/app/workload.
       * </pre>
       *
       * <code>.meteringevents.ServiceType.Value serviceType = 4;</code>
       * @param value The serviceType to set.
       * @return This builder for chaining.
       */
      public Builder setServiceType(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceType.Value value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        serviceType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Service Information.
       *  - Each event must be attributed to a service.
       *  - Each service has a version.
       *  - A service may specify a service configuration.
       *  - Each event is attributed to a particular deployment of a
       *    service/app/workload.
       * </pre>
       *
       * <code>.meteringevents.ServiceType.Value serviceType = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearServiceType() {
        
        serviceType_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object serviceVersion_ = "";
      /**
       * <pre>
       * The product version is expected to be a string following the convention
       * described here: https://semver.org/
       * e.g.: 0.9.7
       *     1.0.0
       * </pre>
       *
       * <code>string serviceVersion = 5;</code>
       * @return The serviceVersion.
       */
      public java.lang.String getServiceVersion() {
        java.lang.Object ref = serviceVersion_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          serviceVersion_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The product version is expected to be a string following the convention
       * described here: https://semver.org/
       * e.g.: 0.9.7
       *     1.0.0
       * </pre>
       *
       * <code>string serviceVersion = 5;</code>
       * @return The bytes for serviceVersion.
       */
      public com.google.protobuf.ByteString
          getServiceVersionBytes() {
        java.lang.Object ref = serviceVersion_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          serviceVersion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The product version is expected to be a string following the convention
       * described here: https://semver.org/
       * e.g.: 0.9.7
       *     1.0.0
       * </pre>
       *
       * <code>string serviceVersion = 5;</code>
       * @param value The serviceVersion to set.
       * @return This builder for chaining.
       */
      public Builder setServiceVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        serviceVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The product version is expected to be a string following the convention
       * described here: https://semver.org/
       * e.g.: 0.9.7
       *     1.0.0
       * </pre>
       *
       * <code>string serviceVersion = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearServiceVersion() {
        
        serviceVersion_ = getDefaultInstance().getServiceVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The product version is expected to be a string following the convention
       * described here: https://semver.org/
       * e.g.: 0.9.7
       *     1.0.0
       * </pre>
       *
       * <code>string serviceVersion = 5;</code>
       * @param value The bytes for serviceVersion to set.
       * @return This builder for chaining.
       */
      public Builder setServiceVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        serviceVersion_ = value;
        onChanged();
        return this;
      }

      private com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration serviceConfiguration_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfigurationOrBuilder> serviceConfigurationBuilder_;
      /**
       * <pre>
       * The service configurations. Any non-standard deployment configuration
       * which may result in a different rate should be identified in the service
       * configuration.
       * </pre>
       *
       * <code>.meteringevents.ServiceConfiguration serviceConfiguration = 9;</code>
       * @return Whether the serviceConfiguration field is set.
       */
      public boolean hasServiceConfiguration() {
        return serviceConfigurationBuilder_ != null || serviceConfiguration_ != null;
      }
      /**
       * <pre>
       * The service configurations. Any non-standard deployment configuration
       * which may result in a different rate should be identified in the service
       * configuration.
       * </pre>
       *
       * <code>.meteringevents.ServiceConfiguration serviceConfiguration = 9;</code>
       * @return The serviceConfiguration.
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration getServiceConfiguration() {
        if (serviceConfigurationBuilder_ == null) {
          return serviceConfiguration_ == null ? com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration.getDefaultInstance() : serviceConfiguration_;
        } else {
          return serviceConfigurationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The service configurations. Any non-standard deployment configuration
       * which may result in a different rate should be identified in the service
       * configuration.
       * </pre>
       *
       * <code>.meteringevents.ServiceConfiguration serviceConfiguration = 9;</code>
       */
      public Builder setServiceConfiguration(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration value) {
        if (serviceConfigurationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serviceConfiguration_ = value;
          onChanged();
        } else {
          serviceConfigurationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The service configurations. Any non-standard deployment configuration
       * which may result in a different rate should be identified in the service
       * configuration.
       * </pre>
       *
       * <code>.meteringevents.ServiceConfiguration serviceConfiguration = 9;</code>
       */
      public Builder setServiceConfiguration(
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration.Builder builderForValue) {
        if (serviceConfigurationBuilder_ == null) {
          serviceConfiguration_ = builderForValue.build();
          onChanged();
        } else {
          serviceConfigurationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The service configurations. Any non-standard deployment configuration
       * which may result in a different rate should be identified in the service
       * configuration.
       * </pre>
       *
       * <code>.meteringevents.ServiceConfiguration serviceConfiguration = 9;</code>
       */
      public Builder mergeServiceConfiguration(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration value) {
        if (serviceConfigurationBuilder_ == null) {
          if (serviceConfiguration_ != null) {
            serviceConfiguration_ =
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration.newBuilder(serviceConfiguration_).mergeFrom(value).buildPartial();
          } else {
            serviceConfiguration_ = value;
          }
          onChanged();
        } else {
          serviceConfigurationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The service configurations. Any non-standard deployment configuration
       * which may result in a different rate should be identified in the service
       * configuration.
       * </pre>
       *
       * <code>.meteringevents.ServiceConfiguration serviceConfiguration = 9;</code>
       */
      public Builder clearServiceConfiguration() {
        if (serviceConfigurationBuilder_ == null) {
          serviceConfiguration_ = null;
          onChanged();
        } else {
          serviceConfiguration_ = null;
          serviceConfigurationBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The service configurations. Any non-standard deployment configuration
       * which may result in a different rate should be identified in the service
       * configuration.
       * </pre>
       *
       * <code>.meteringevents.ServiceConfiguration serviceConfiguration = 9;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration.Builder getServiceConfigurationBuilder() {
        
        onChanged();
        return getServiceConfigurationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The service configurations. Any non-standard deployment configuration
       * which may result in a different rate should be identified in the service
       * configuration.
       * </pre>
       *
       * <code>.meteringevents.ServiceConfiguration serviceConfiguration = 9;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfigurationOrBuilder getServiceConfigurationOrBuilder() {
        if (serviceConfigurationBuilder_ != null) {
          return serviceConfigurationBuilder_.getMessageOrBuilder();
        } else {
          return serviceConfiguration_ == null ?
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration.getDefaultInstance() : serviceConfiguration_;
        }
      }
      /**
       * <pre>
       * The service configurations. Any non-standard deployment configuration
       * which may result in a different rate should be identified in the service
       * configuration.
       * </pre>
       *
       * <code>.meteringevents.ServiceConfiguration serviceConfiguration = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfigurationOrBuilder> 
          getServiceConfigurationFieldBuilder() {
        if (serviceConfigurationBuilder_ == null) {
          serviceConfigurationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfiguration.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ServiceConfigurationOrBuilder>(
                  getServiceConfiguration(),
                  getParentForChildren(),
                  isClean());
          serviceConfiguration_ = null;
        }
        return serviceConfigurationBuilder_;
      }

      private java.lang.Object workloadCrn_ = "";
      /**
       * <pre>
       * The workload CRN. (deprecated in version 2)
       * USAGE NOTES:
       * - This field is deprecated. If present it will be ignored by the Metering
       *   service. It will be removed in a future version.
       * </pre>
       *
       * <code>string workloadCrn = 6;</code>
       * @return The workloadCrn.
       */
      public java.lang.String getWorkloadCrn() {
        java.lang.Object ref = workloadCrn_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          workloadCrn_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The workload CRN. (deprecated in version 2)
       * USAGE NOTES:
       * - This field is deprecated. If present it will be ignored by the Metering
       *   service. It will be removed in a future version.
       * </pre>
       *
       * <code>string workloadCrn = 6;</code>
       * @return The bytes for workloadCrn.
       */
      public com.google.protobuf.ByteString
          getWorkloadCrnBytes() {
        java.lang.Object ref = workloadCrn_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          workloadCrn_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The workload CRN. (deprecated in version 2)
       * USAGE NOTES:
       * - This field is deprecated. If present it will be ignored by the Metering
       *   service. It will be removed in a future version.
       * </pre>
       *
       * <code>string workloadCrn = 6;</code>
       * @param value The workloadCrn to set.
       * @return This builder for chaining.
       */
      public Builder setWorkloadCrn(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        workloadCrn_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The workload CRN. (deprecated in version 2)
       * USAGE NOTES:
       * - This field is deprecated. If present it will be ignored by the Metering
       *   service. It will be removed in a future version.
       * </pre>
       *
       * <code>string workloadCrn = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearWorkloadCrn() {
        
        workloadCrn_ = getDefaultInstance().getWorkloadCrn();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The workload CRN. (deprecated in version 2)
       * USAGE NOTES:
       * - This field is deprecated. If present it will be ignored by the Metering
       *   service. It will be removed in a future version.
       * </pre>
       *
       * <code>string workloadCrn = 6;</code>
       * @param value The bytes for workloadCrn to set.
       * @return This builder for chaining.
       */
      public Builder setWorkloadCrnBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        workloadCrn_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeatOrBuilder> clusterInstanceHeartbeatBuilder_;
      /**
       * <code>.meteringevents.ClusterInstanceHeartbeat clusterInstanceHeartbeat = 7;</code>
       * @return Whether the clusterInstanceHeartbeat field is set.
       */
      @java.lang.Override
      public boolean hasClusterInstanceHeartbeat() {
        return payloadCase_ == 7;
      }
      /**
       * <code>.meteringevents.ClusterInstanceHeartbeat clusterInstanceHeartbeat = 7;</code>
       * @return The clusterInstanceHeartbeat.
       */
      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat getClusterInstanceHeartbeat() {
        if (clusterInstanceHeartbeatBuilder_ == null) {
          if (payloadCase_ == 7) {
            return (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat) payload_;
          }
          return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat.getDefaultInstance();
        } else {
          if (payloadCase_ == 7) {
            return clusterInstanceHeartbeatBuilder_.getMessage();
          }
          return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat.getDefaultInstance();
        }
      }
      /**
       * <code>.meteringevents.ClusterInstanceHeartbeat clusterInstanceHeartbeat = 7;</code>
       */
      public Builder setClusterInstanceHeartbeat(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat value) {
        if (clusterInstanceHeartbeatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payload_ = value;
          onChanged();
        } else {
          clusterInstanceHeartbeatBuilder_.setMessage(value);
        }
        payloadCase_ = 7;
        return this;
      }
      /**
       * <code>.meteringevents.ClusterInstanceHeartbeat clusterInstanceHeartbeat = 7;</code>
       */
      public Builder setClusterInstanceHeartbeat(
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat.Builder builderForValue) {
        if (clusterInstanceHeartbeatBuilder_ == null) {
          payload_ = builderForValue.build();
          onChanged();
        } else {
          clusterInstanceHeartbeatBuilder_.setMessage(builderForValue.build());
        }
        payloadCase_ = 7;
        return this;
      }
      /**
       * <code>.meteringevents.ClusterInstanceHeartbeat clusterInstanceHeartbeat = 7;</code>
       */
      public Builder mergeClusterInstanceHeartbeat(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat value) {
        if (clusterInstanceHeartbeatBuilder_ == null) {
          if (payloadCase_ == 7 &&
              payload_ != com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat.getDefaultInstance()) {
            payload_ = com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat.newBuilder((com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat) payload_)
                .mergeFrom(value).buildPartial();
          } else {
            payload_ = value;
          }
          onChanged();
        } else {
          if (payloadCase_ == 7) {
            clusterInstanceHeartbeatBuilder_.mergeFrom(value);
          } else {
            clusterInstanceHeartbeatBuilder_.setMessage(value);
          }
        }
        payloadCase_ = 7;
        return this;
      }
      /**
       * <code>.meteringevents.ClusterInstanceHeartbeat clusterInstanceHeartbeat = 7;</code>
       */
      public Builder clearClusterInstanceHeartbeat() {
        if (clusterInstanceHeartbeatBuilder_ == null) {
          if (payloadCase_ == 7) {
            payloadCase_ = 0;
            payload_ = null;
            onChanged();
          }
        } else {
          if (payloadCase_ == 7) {
            payloadCase_ = 0;
            payload_ = null;
          }
          clusterInstanceHeartbeatBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.meteringevents.ClusterInstanceHeartbeat clusterInstanceHeartbeat = 7;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat.Builder getClusterInstanceHeartbeatBuilder() {
        return getClusterInstanceHeartbeatFieldBuilder().getBuilder();
      }
      /**
       * <code>.meteringevents.ClusterInstanceHeartbeat clusterInstanceHeartbeat = 7;</code>
       */
      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeatOrBuilder getClusterInstanceHeartbeatOrBuilder() {
        if ((payloadCase_ == 7) && (clusterInstanceHeartbeatBuilder_ != null)) {
          return clusterInstanceHeartbeatBuilder_.getMessageOrBuilder();
        } else {
          if (payloadCase_ == 7) {
            return (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat) payload_;
          }
          return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat.getDefaultInstance();
        }
      }
      /**
       * <code>.meteringevents.ClusterInstanceHeartbeat clusterInstanceHeartbeat = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeatOrBuilder> 
          getClusterInstanceHeartbeatFieldBuilder() {
        if (clusterInstanceHeartbeatBuilder_ == null) {
          if (!(payloadCase_ == 7)) {
            payload_ = com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat.getDefaultInstance();
          }
          clusterInstanceHeartbeatBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeatOrBuilder>(
                  (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat) payload_,
                  getParentForChildren(),
                  isClean());
          payload_ = null;
        }
        payloadCase_ = 7;
        onChanged();;
        return clusterInstanceHeartbeatBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.UserOrBuilder> userBuilder_;
      /**
       * <code>.meteringevents.User user = 8;</code>
       * @return Whether the user field is set.
       */
      @java.lang.Override
      public boolean hasUser() {
        return payloadCase_ == 8;
      }
      /**
       * <code>.meteringevents.User user = 8;</code>
       * @return The user.
       */
      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User getUser() {
        if (userBuilder_ == null) {
          if (payloadCase_ == 8) {
            return (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User) payload_;
          }
          return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User.getDefaultInstance();
        } else {
          if (payloadCase_ == 8) {
            return userBuilder_.getMessage();
          }
          return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User.getDefaultInstance();
        }
      }
      /**
       * <code>.meteringevents.User user = 8;</code>
       */
      public Builder setUser(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User value) {
        if (userBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payload_ = value;
          onChanged();
        } else {
          userBuilder_.setMessage(value);
        }
        payloadCase_ = 8;
        return this;
      }
      /**
       * <code>.meteringevents.User user = 8;</code>
       */
      public Builder setUser(
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User.Builder builderForValue) {
        if (userBuilder_ == null) {
          payload_ = builderForValue.build();
          onChanged();
        } else {
          userBuilder_.setMessage(builderForValue.build());
        }
        payloadCase_ = 8;
        return this;
      }
      /**
       * <code>.meteringevents.User user = 8;</code>
       */
      public Builder mergeUser(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User value) {
        if (userBuilder_ == null) {
          if (payloadCase_ == 8 &&
              payload_ != com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User.getDefaultInstance()) {
            payload_ = com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User.newBuilder((com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User) payload_)
                .mergeFrom(value).buildPartial();
          } else {
            payload_ = value;
          }
          onChanged();
        } else {
          if (payloadCase_ == 8) {
            userBuilder_.mergeFrom(value);
          } else {
            userBuilder_.setMessage(value);
          }
        }
        payloadCase_ = 8;
        return this;
      }
      /**
       * <code>.meteringevents.User user = 8;</code>
       */
      public Builder clearUser() {
        if (userBuilder_ == null) {
          if (payloadCase_ == 8) {
            payloadCase_ = 0;
            payload_ = null;
            onChanged();
          }
        } else {
          if (payloadCase_ == 8) {
            payloadCase_ = 0;
            payload_ = null;
          }
          userBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.meteringevents.User user = 8;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User.Builder getUserBuilder() {
        return getUserFieldBuilder().getBuilder();
      }
      /**
       * <code>.meteringevents.User user = 8;</code>
       */
      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.UserOrBuilder getUserOrBuilder() {
        if ((payloadCase_ == 8) && (userBuilder_ != null)) {
          return userBuilder_.getMessageOrBuilder();
        } else {
          if (payloadCase_ == 8) {
            return (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User) payload_;
          }
          return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User.getDefaultInstance();
        }
      }
      /**
       * <code>.meteringevents.User user = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.UserOrBuilder> 
          getUserFieldBuilder() {
        if (userBuilder_ == null) {
          if (!(payloadCase_ == 8)) {
            payload_ = com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User.getDefaultInstance();
          }
          userBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.UserOrBuilder>(
                  (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User) payload_,
                  getParentForChildren(),
                  isClean());
          payload_ = null;
        }
        payloadCase_ = 8;
        onChanged();;
        return userBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeatOrBuilder> computeResourceHeartbeatBuilder_;
      /**
       * <code>.meteringevents.ComputeResourceHeartbeat computeResourceHeartbeat = 10;</code>
       * @return Whether the computeResourceHeartbeat field is set.
       */
      @java.lang.Override
      public boolean hasComputeResourceHeartbeat() {
        return payloadCase_ == 10;
      }
      /**
       * <code>.meteringevents.ComputeResourceHeartbeat computeResourceHeartbeat = 10;</code>
       * @return The computeResourceHeartbeat.
       */
      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat getComputeResourceHeartbeat() {
        if (computeResourceHeartbeatBuilder_ == null) {
          if (payloadCase_ == 10) {
            return (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat) payload_;
          }
          return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat.getDefaultInstance();
        } else {
          if (payloadCase_ == 10) {
            return computeResourceHeartbeatBuilder_.getMessage();
          }
          return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat.getDefaultInstance();
        }
      }
      /**
       * <code>.meteringevents.ComputeResourceHeartbeat computeResourceHeartbeat = 10;</code>
       */
      public Builder setComputeResourceHeartbeat(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat value) {
        if (computeResourceHeartbeatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payload_ = value;
          onChanged();
        } else {
          computeResourceHeartbeatBuilder_.setMessage(value);
        }
        payloadCase_ = 10;
        return this;
      }
      /**
       * <code>.meteringevents.ComputeResourceHeartbeat computeResourceHeartbeat = 10;</code>
       */
      public Builder setComputeResourceHeartbeat(
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat.Builder builderForValue) {
        if (computeResourceHeartbeatBuilder_ == null) {
          payload_ = builderForValue.build();
          onChanged();
        } else {
          computeResourceHeartbeatBuilder_.setMessage(builderForValue.build());
        }
        payloadCase_ = 10;
        return this;
      }
      /**
       * <code>.meteringevents.ComputeResourceHeartbeat computeResourceHeartbeat = 10;</code>
       */
      public Builder mergeComputeResourceHeartbeat(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat value) {
        if (computeResourceHeartbeatBuilder_ == null) {
          if (payloadCase_ == 10 &&
              payload_ != com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat.getDefaultInstance()) {
            payload_ = com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat.newBuilder((com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat) payload_)
                .mergeFrom(value).buildPartial();
          } else {
            payload_ = value;
          }
          onChanged();
        } else {
          if (payloadCase_ == 10) {
            computeResourceHeartbeatBuilder_.mergeFrom(value);
          } else {
            computeResourceHeartbeatBuilder_.setMessage(value);
          }
        }
        payloadCase_ = 10;
        return this;
      }
      /**
       * <code>.meteringevents.ComputeResourceHeartbeat computeResourceHeartbeat = 10;</code>
       */
      public Builder clearComputeResourceHeartbeat() {
        if (computeResourceHeartbeatBuilder_ == null) {
          if (payloadCase_ == 10) {
            payloadCase_ = 0;
            payload_ = null;
            onChanged();
          }
        } else {
          if (payloadCase_ == 10) {
            payloadCase_ = 0;
            payload_ = null;
          }
          computeResourceHeartbeatBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.meteringevents.ComputeResourceHeartbeat computeResourceHeartbeat = 10;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat.Builder getComputeResourceHeartbeatBuilder() {
        return getComputeResourceHeartbeatFieldBuilder().getBuilder();
      }
      /**
       * <code>.meteringevents.ComputeResourceHeartbeat computeResourceHeartbeat = 10;</code>
       */
      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeatOrBuilder getComputeResourceHeartbeatOrBuilder() {
        if ((payloadCase_ == 10) && (computeResourceHeartbeatBuilder_ != null)) {
          return computeResourceHeartbeatBuilder_.getMessageOrBuilder();
        } else {
          if (payloadCase_ == 10) {
            return (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat) payload_;
          }
          return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat.getDefaultInstance();
        }
      }
      /**
       * <code>.meteringevents.ComputeResourceHeartbeat computeResourceHeartbeat = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeatOrBuilder> 
          getComputeResourceHeartbeatFieldBuilder() {
        if (computeResourceHeartbeatBuilder_ == null) {
          if (!(payloadCase_ == 10)) {
            payload_ = com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat.getDefaultInstance();
          }
          computeResourceHeartbeatBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeatOrBuilder>(
                  (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat) payload_,
                  getParentForChildren(),
                  isClean());
          payload_ = null;
        }
        payloadCase_ = 10;
        onChanged();;
        return computeResourceHeartbeatBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeatOrBuilder> naafHeartbeatBuilder_;
      /**
       * <code>.meteringevents.NaafHeartbeat naafHeartbeat = 11;</code>
       * @return Whether the naafHeartbeat field is set.
       */
      @java.lang.Override
      public boolean hasNaafHeartbeat() {
        return payloadCase_ == 11;
      }
      /**
       * <code>.meteringevents.NaafHeartbeat naafHeartbeat = 11;</code>
       * @return The naafHeartbeat.
       */
      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat getNaafHeartbeat() {
        if (naafHeartbeatBuilder_ == null) {
          if (payloadCase_ == 11) {
            return (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat) payload_;
          }
          return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat.getDefaultInstance();
        } else {
          if (payloadCase_ == 11) {
            return naafHeartbeatBuilder_.getMessage();
          }
          return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat.getDefaultInstance();
        }
      }
      /**
       * <code>.meteringevents.NaafHeartbeat naafHeartbeat = 11;</code>
       */
      public Builder setNaafHeartbeat(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat value) {
        if (naafHeartbeatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payload_ = value;
          onChanged();
        } else {
          naafHeartbeatBuilder_.setMessage(value);
        }
        payloadCase_ = 11;
        return this;
      }
      /**
       * <code>.meteringevents.NaafHeartbeat naafHeartbeat = 11;</code>
       */
      public Builder setNaafHeartbeat(
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat.Builder builderForValue) {
        if (naafHeartbeatBuilder_ == null) {
          payload_ = builderForValue.build();
          onChanged();
        } else {
          naafHeartbeatBuilder_.setMessage(builderForValue.build());
        }
        payloadCase_ = 11;
        return this;
      }
      /**
       * <code>.meteringevents.NaafHeartbeat naafHeartbeat = 11;</code>
       */
      public Builder mergeNaafHeartbeat(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat value) {
        if (naafHeartbeatBuilder_ == null) {
          if (payloadCase_ == 11 &&
              payload_ != com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat.getDefaultInstance()) {
            payload_ = com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat.newBuilder((com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat) payload_)
                .mergeFrom(value).buildPartial();
          } else {
            payload_ = value;
          }
          onChanged();
        } else {
          if (payloadCase_ == 11) {
            naafHeartbeatBuilder_.mergeFrom(value);
          } else {
            naafHeartbeatBuilder_.setMessage(value);
          }
        }
        payloadCase_ = 11;
        return this;
      }
      /**
       * <code>.meteringevents.NaafHeartbeat naafHeartbeat = 11;</code>
       */
      public Builder clearNaafHeartbeat() {
        if (naafHeartbeatBuilder_ == null) {
          if (payloadCase_ == 11) {
            payloadCase_ = 0;
            payload_ = null;
            onChanged();
          }
        } else {
          if (payloadCase_ == 11) {
            payloadCase_ = 0;
            payload_ = null;
          }
          naafHeartbeatBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.meteringevents.NaafHeartbeat naafHeartbeat = 11;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat.Builder getNaafHeartbeatBuilder() {
        return getNaafHeartbeatFieldBuilder().getBuilder();
      }
      /**
       * <code>.meteringevents.NaafHeartbeat naafHeartbeat = 11;</code>
       */
      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeatOrBuilder getNaafHeartbeatOrBuilder() {
        if ((payloadCase_ == 11) && (naafHeartbeatBuilder_ != null)) {
          return naafHeartbeatBuilder_.getMessageOrBuilder();
        } else {
          if (payloadCase_ == 11) {
            return (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat) payload_;
          }
          return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat.getDefaultInstance();
        }
      }
      /**
       * <code>.meteringevents.NaafHeartbeat naafHeartbeat = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeatOrBuilder> 
          getNaafHeartbeatFieldBuilder() {
        if (naafHeartbeatBuilder_ == null) {
          if (!(payloadCase_ == 11)) {
            payload_ = com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat.getDefaultInstance();
          }
          naafHeartbeatBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeatOrBuilder>(
                  (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat) payload_,
                  getParentForChildren(),
                  isClean());
          payload_ = null;
        }
        payloadCase_ = 11;
        onChanged();;
        return naafHeartbeatBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeatOrBuilder> storageHeartbeatBuilder_;
      /**
       * <code>.meteringevents.StorageHeartbeat storageHeartbeat = 12;</code>
       * @return Whether the storageHeartbeat field is set.
       */
      @java.lang.Override
      public boolean hasStorageHeartbeat() {
        return payloadCase_ == 12;
      }
      /**
       * <code>.meteringevents.StorageHeartbeat storageHeartbeat = 12;</code>
       * @return The storageHeartbeat.
       */
      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat getStorageHeartbeat() {
        if (storageHeartbeatBuilder_ == null) {
          if (payloadCase_ == 12) {
            return (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat) payload_;
          }
          return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat.getDefaultInstance();
        } else {
          if (payloadCase_ == 12) {
            return storageHeartbeatBuilder_.getMessage();
          }
          return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat.getDefaultInstance();
        }
      }
      /**
       * <code>.meteringevents.StorageHeartbeat storageHeartbeat = 12;</code>
       */
      public Builder setStorageHeartbeat(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat value) {
        if (storageHeartbeatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payload_ = value;
          onChanged();
        } else {
          storageHeartbeatBuilder_.setMessage(value);
        }
        payloadCase_ = 12;
        return this;
      }
      /**
       * <code>.meteringevents.StorageHeartbeat storageHeartbeat = 12;</code>
       */
      public Builder setStorageHeartbeat(
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat.Builder builderForValue) {
        if (storageHeartbeatBuilder_ == null) {
          payload_ = builderForValue.build();
          onChanged();
        } else {
          storageHeartbeatBuilder_.setMessage(builderForValue.build());
        }
        payloadCase_ = 12;
        return this;
      }
      /**
       * <code>.meteringevents.StorageHeartbeat storageHeartbeat = 12;</code>
       */
      public Builder mergeStorageHeartbeat(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat value) {
        if (storageHeartbeatBuilder_ == null) {
          if (payloadCase_ == 12 &&
              payload_ != com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat.getDefaultInstance()) {
            payload_ = com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat.newBuilder((com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat) payload_)
                .mergeFrom(value).buildPartial();
          } else {
            payload_ = value;
          }
          onChanged();
        } else {
          if (payloadCase_ == 12) {
            storageHeartbeatBuilder_.mergeFrom(value);
          } else {
            storageHeartbeatBuilder_.setMessage(value);
          }
        }
        payloadCase_ = 12;
        return this;
      }
      /**
       * <code>.meteringevents.StorageHeartbeat storageHeartbeat = 12;</code>
       */
      public Builder clearStorageHeartbeat() {
        if (storageHeartbeatBuilder_ == null) {
          if (payloadCase_ == 12) {
            payloadCase_ = 0;
            payload_ = null;
            onChanged();
          }
        } else {
          if (payloadCase_ == 12) {
            payloadCase_ = 0;
            payload_ = null;
          }
          storageHeartbeatBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.meteringevents.StorageHeartbeat storageHeartbeat = 12;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat.Builder getStorageHeartbeatBuilder() {
        return getStorageHeartbeatFieldBuilder().getBuilder();
      }
      /**
       * <code>.meteringevents.StorageHeartbeat storageHeartbeat = 12;</code>
       */
      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeatOrBuilder getStorageHeartbeatOrBuilder() {
        if ((payloadCase_ == 12) && (storageHeartbeatBuilder_ != null)) {
          return storageHeartbeatBuilder_.getMessageOrBuilder();
        } else {
          if (payloadCase_ == 12) {
            return (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat) payload_;
          }
          return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat.getDefaultInstance();
        }
      }
      /**
       * <code>.meteringevents.StorageHeartbeat storageHeartbeat = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeatOrBuilder> 
          getStorageHeartbeatFieldBuilder() {
        if (storageHeartbeatBuilder_ == null) {
          if (!(payloadCase_ == 12)) {
            payload_ = com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat.getDefaultInstance();
          }
          storageHeartbeatBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeatOrBuilder>(
                  (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat) payload_,
                  getParentForChildren(),
                  isClean());
          payload_ = null;
        }
        payloadCase_ = 12;
        onChanged();;
        return storageHeartbeatBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:meteringevents.MeteringEvent)
    }

    // @@protoc_insertion_point(class_scope:meteringevents.MeteringEvent)
    private static final com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent();
    }

    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MeteringEvent>
        PARSER = new com.google.protobuf.AbstractParser<MeteringEvent>() {
      @java.lang.Override
      public MeteringEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<MeteringEvent> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MeteringEvent> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MeteringEventsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:meteringevents.MeteringEvents)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .meteringevents.MeteringEvent events = 1;</code>
     */
    java.util.List<com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent> 
        getEventsList();
    /**
     * <code>repeated .meteringevents.MeteringEvent events = 1;</code>
     */
    com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent getEvents(int index);
    /**
     * <code>repeated .meteringevents.MeteringEvent events = 1;</code>
     */
    int getEventsCount();
    /**
     * <code>repeated .meteringevents.MeteringEvent events = 1;</code>
     */
    java.util.List<? extends com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEventOrBuilder> 
        getEventsOrBuilderList();
    /**
     * <code>repeated .meteringevents.MeteringEvent events = 1;</code>
     */
    com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEventOrBuilder getEventsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * A list of MeteringEvent objects.
   * </pre>
   *
   * Protobuf type {@code meteringevents.MeteringEvents}
   */
  public static final class MeteringEvents extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:meteringevents.MeteringEvents)
      MeteringEventsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MeteringEvents.newBuilder() to construct.
    private MeteringEvents(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MeteringEvents() {
      events_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MeteringEvents();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_MeteringEvents_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_MeteringEvents_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvents.class, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvents.Builder.class);
    }

    public static final int EVENTS_FIELD_NUMBER = 1;
    private java.util.List<com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent> events_;
    /**
     * <code>repeated .meteringevents.MeteringEvent events = 1;</code>
     */
    @java.lang.Override
    public java.util.List<com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent> getEventsList() {
      return events_;
    }
    /**
     * <code>repeated .meteringevents.MeteringEvent events = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEventOrBuilder> 
        getEventsOrBuilderList() {
      return events_;
    }
    /**
     * <code>repeated .meteringevents.MeteringEvent events = 1;</code>
     */
    @java.lang.Override
    public int getEventsCount() {
      return events_.size();
    }
    /**
     * <code>repeated .meteringevents.MeteringEvent events = 1;</code>
     */
    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent getEvents(int index) {
      return events_.get(index);
    }
    /**
     * <code>repeated .meteringevents.MeteringEvent events = 1;</code>
     */
    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEventOrBuilder getEventsOrBuilder(
        int index) {
      return events_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < events_.size(); i++) {
        output.writeMessage(1, events_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < events_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, events_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvents)) {
        return super.equals(obj);
      }
      com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvents other = (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvents) obj;

      if (!getEventsList()
          .equals(other.getEventsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getEventsCount() > 0) {
        hash = (37 * hash) + EVENTS_FIELD_NUMBER;
        hash = (53 * hash) + getEventsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvents parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvents parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvents parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvents parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvents parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvents parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvents parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvents parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvents parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvents parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvents parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvents parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvents prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A list of MeteringEvent objects.
     * </pre>
     *
     * Protobuf type {@code meteringevents.MeteringEvents}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:meteringevents.MeteringEvents)
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEventsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_MeteringEvents_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_MeteringEvents_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvents.class, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvents.Builder.class);
      }

      // Construct using com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvents.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (eventsBuilder_ == null) {
          events_ = java.util.Collections.emptyList();
        } else {
          events_ = null;
          eventsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_MeteringEvents_descriptor;
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvents getDefaultInstanceForType() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvents.getDefaultInstance();
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvents build() {
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvents result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvents buildPartial() {
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvents result = new com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvents(this);
        int from_bitField0_ = bitField0_;
        if (eventsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            events_ = java.util.Collections.unmodifiableList(events_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.events_ = events_;
        } else {
          result.events_ = eventsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvents) {
          return mergeFrom((com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvents)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvents other) {
        if (other == com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvents.getDefaultInstance()) return this;
        if (eventsBuilder_ == null) {
          if (!other.events_.isEmpty()) {
            if (events_.isEmpty()) {
              events_ = other.events_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureEventsIsMutable();
              events_.addAll(other.events_);
            }
            onChanged();
          }
        } else {
          if (!other.events_.isEmpty()) {
            if (eventsBuilder_.isEmpty()) {
              eventsBuilder_.dispose();
              eventsBuilder_ = null;
              events_ = other.events_;
              bitField0_ = (bitField0_ & ~0x00000001);
              eventsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getEventsFieldBuilder() : null;
            } else {
              eventsBuilder_.addAllMessages(other.events_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent m =
                    input.readMessage(
                        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent.parser(),
                        extensionRegistry);
                if (eventsBuilder_ == null) {
                  ensureEventsIsMutable();
                  events_.add(m);
                } else {
                  eventsBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent> events_ =
        java.util.Collections.emptyList();
      private void ensureEventsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          events_ = new java.util.ArrayList<com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent>(events_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEventOrBuilder> eventsBuilder_;

      /**
       * <code>repeated .meteringevents.MeteringEvent events = 1;</code>
       */
      public java.util.List<com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent> getEventsList() {
        if (eventsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(events_);
        } else {
          return eventsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .meteringevents.MeteringEvent events = 1;</code>
       */
      public int getEventsCount() {
        if (eventsBuilder_ == null) {
          return events_.size();
        } else {
          return eventsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .meteringevents.MeteringEvent events = 1;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent getEvents(int index) {
        if (eventsBuilder_ == null) {
          return events_.get(index);
        } else {
          return eventsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .meteringevents.MeteringEvent events = 1;</code>
       */
      public Builder setEvents(
          int index, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent value) {
        if (eventsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEventsIsMutable();
          events_.set(index, value);
          onChanged();
        } else {
          eventsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .meteringevents.MeteringEvent events = 1;</code>
       */
      public Builder setEvents(
          int index, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent.Builder builderForValue) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          events_.set(index, builderForValue.build());
          onChanged();
        } else {
          eventsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .meteringevents.MeteringEvent events = 1;</code>
       */
      public Builder addEvents(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent value) {
        if (eventsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEventsIsMutable();
          events_.add(value);
          onChanged();
        } else {
          eventsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .meteringevents.MeteringEvent events = 1;</code>
       */
      public Builder addEvents(
          int index, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent value) {
        if (eventsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEventsIsMutable();
          events_.add(index, value);
          onChanged();
        } else {
          eventsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .meteringevents.MeteringEvent events = 1;</code>
       */
      public Builder addEvents(
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent.Builder builderForValue) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          events_.add(builderForValue.build());
          onChanged();
        } else {
          eventsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .meteringevents.MeteringEvent events = 1;</code>
       */
      public Builder addEvents(
          int index, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent.Builder builderForValue) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          events_.add(index, builderForValue.build());
          onChanged();
        } else {
          eventsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .meteringevents.MeteringEvent events = 1;</code>
       */
      public Builder addAllEvents(
          java.lang.Iterable<? extends com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent> values) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, events_);
          onChanged();
        } else {
          eventsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .meteringevents.MeteringEvent events = 1;</code>
       */
      public Builder clearEvents() {
        if (eventsBuilder_ == null) {
          events_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          eventsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .meteringevents.MeteringEvent events = 1;</code>
       */
      public Builder removeEvents(int index) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          events_.remove(index);
          onChanged();
        } else {
          eventsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .meteringevents.MeteringEvent events = 1;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent.Builder getEventsBuilder(
          int index) {
        return getEventsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .meteringevents.MeteringEvent events = 1;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEventOrBuilder getEventsOrBuilder(
          int index) {
        if (eventsBuilder_ == null) {
          return events_.get(index);  } else {
          return eventsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .meteringevents.MeteringEvent events = 1;</code>
       */
      public java.util.List<? extends com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEventOrBuilder> 
           getEventsOrBuilderList() {
        if (eventsBuilder_ != null) {
          return eventsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(events_);
        }
      }
      /**
       * <code>repeated .meteringevents.MeteringEvent events = 1;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent.Builder addEventsBuilder() {
        return getEventsFieldBuilder().addBuilder(
            com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent.getDefaultInstance());
      }
      /**
       * <code>repeated .meteringevents.MeteringEvent events = 1;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent.Builder addEventsBuilder(
          int index) {
        return getEventsFieldBuilder().addBuilder(
            index, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent.getDefaultInstance());
      }
      /**
       * <code>repeated .meteringevents.MeteringEvent events = 1;</code>
       */
      public java.util.List<com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent.Builder> 
           getEventsBuilderList() {
        return getEventsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEventOrBuilder> 
          getEventsFieldBuilder() {
        if (eventsBuilder_ == null) {
          eventsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvent.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEventOrBuilder>(
                  events_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          events_ = null;
        }
        return eventsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:meteringevents.MeteringEvents)
    }

    // @@protoc_insertion_point(class_scope:meteringevents.MeteringEvents)
    private static final com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvents DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvents();
    }

    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvents getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MeteringEvents>
        PARSER = new com.google.protobuf.AbstractParser<MeteringEvents>() {
      @java.lang.Override
      public MeteringEvents parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<MeteringEvents> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MeteringEvents> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteringEvents getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ClusterInstanceHeartbeatOrBuilder extends
      // @@protoc_insertion_point(interface_extends:meteringevents.ClusterInstanceHeartbeat)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The cluster CRN (deprecated in version 2)
     * USAGE NOTES:
     * - This field is deprecated. The meteredResourceMetadata field/object should be
     *   populated instead.
     * - CDP Control Plane apps using version 1 of the event model are expected
     *   to provide an RPC service for collecting cluster/environment related
     *   information (i.e. data enrichment) based on this CRN. For more
     *   information see the CDP Metering Technical Specification ([1]) referenced
     *   above.
     * - CDP Control Plane apps using version 2 of the event model should populate
     *   the meteredResourceMetadata field/object instead of this field; this field can be
     *   ignored.
     * </pre>
     *
     * <code>string clusterCrn = 1;</code>
     * @return The clusterCrn.
     */
    java.lang.String getClusterCrn();
    /**
     * <pre>
     * The cluster CRN (deprecated in version 2)
     * USAGE NOTES:
     * - This field is deprecated. The meteredResourceMetadata field/object should be
     *   populated instead.
     * - CDP Control Plane apps using version 1 of the event model are expected
     *   to provide an RPC service for collecting cluster/environment related
     *   information (i.e. data enrichment) based on this CRN. For more
     *   information see the CDP Metering Technical Specification ([1]) referenced
     *   above.
     * - CDP Control Plane apps using version 2 of the event model should populate
     *   the meteredResourceMetadata field/object instead of this field; this field can be
     *   ignored.
     * </pre>
     *
     * <code>string clusterCrn = 1;</code>
     * @return The bytes for clusterCrn.
     */
    com.google.protobuf.ByteString
        getClusterCrnBytes();

    /**
     * <pre>
     * List of instances that this heartbeat is being submitted for.
     * USAGE NOTES:
     * - If there are no instances, the event will be dropped.
     * - If any of the instances do not contain the required data, the event
     *   associated with that particular instance will be dropped.
     * </pre>
     *
     * <code>repeated .meteringevents.Instance instances = 2;</code>
     */
    java.util.List<com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance> 
        getInstancesList();
    /**
     * <pre>
     * List of instances that this heartbeat is being submitted for.
     * USAGE NOTES:
     * - If there are no instances, the event will be dropped.
     * - If any of the instances do not contain the required data, the event
     *   associated with that particular instance will be dropped.
     * </pre>
     *
     * <code>repeated .meteringevents.Instance instances = 2;</code>
     */
    com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance getInstances(int index);
    /**
     * <pre>
     * List of instances that this heartbeat is being submitted for.
     * USAGE NOTES:
     * - If there are no instances, the event will be dropped.
     * - If any of the instances do not contain the required data, the event
     *   associated with that particular instance will be dropped.
     * </pre>
     *
     * <code>repeated .meteringevents.Instance instances = 2;</code>
     */
    int getInstancesCount();
    /**
     * <pre>
     * List of instances that this heartbeat is being submitted for.
     * USAGE NOTES:
     * - If there are no instances, the event will be dropped.
     * - If any of the instances do not contain the required data, the event
     *   associated with that particular instance will be dropped.
     * </pre>
     *
     * <code>repeated .meteringevents.Instance instances = 2;</code>
     */
    java.util.List<? extends com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.InstanceOrBuilder> 
        getInstancesOrBuilderList();
    /**
     * <pre>
     * List of instances that this heartbeat is being submitted for.
     * USAGE NOTES:
     * - If there are no instances, the event will be dropped.
     * - If any of the instances do not contain the required data, the event
     *   associated with that particular instance will be dropped.
     * </pre>
     *
     * <code>repeated .meteringevents.Instance instances = 2;</code>
     */
    com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.InstanceOrBuilder getInstancesOrBuilder(
        int index);

    /**
     * <pre>
     * MeteredResourceMetadata for this ClusterInstanceHeartbeat (added in version 2).
     * This is the Cloudera resource being metered.
     * USAGE NOTES:
     * - CDP Control Plane apps using version 2 of the event model must fully
     *   populate the meteredResourceMetadata field/object.
     * </pre>
     *
     * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 3;</code>
     * @return Whether the meteredResourceMetadata field is set.
     */
    boolean hasMeteredResourceMetadata();
    /**
     * <pre>
     * MeteredResourceMetadata for this ClusterInstanceHeartbeat (added in version 2).
     * This is the Cloudera resource being metered.
     * USAGE NOTES:
     * - CDP Control Plane apps using version 2 of the event model must fully
     *   populate the meteredResourceMetadata field/object.
     * </pre>
     *
     * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 3;</code>
     * @return The meteredResourceMetadata.
     */
    com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata getMeteredResourceMetadata();
    /**
     * <pre>
     * MeteredResourceMetadata for this ClusterInstanceHeartbeat (added in version 2).
     * This is the Cloudera resource being metered.
     * USAGE NOTES:
     * - CDP Control Plane apps using version 2 of the event model must fully
     *   populate the meteredResourceMetadata field/object.
     * </pre>
     *
     * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 3;</code>
     */
    com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataOrBuilder getMeteredResourceMetadataOrBuilder();
  }
  /**
   * <pre>
   * A heartbeat event for one or more instances in a cluster. Heartbeat events
   * may originate from any system that can authoritatively say the instance
   * is healthy.
   * REPORTING INTERVAL: At least once a minute and no less than every 5 minutes.
   * USAGE NOTES:        See clusterCrn, instances, and meteredResourceMetadata fields
   * </pre>
   *
   * Protobuf type {@code meteringevents.ClusterInstanceHeartbeat}
   */
  public static final class ClusterInstanceHeartbeat extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:meteringevents.ClusterInstanceHeartbeat)
      ClusterInstanceHeartbeatOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ClusterInstanceHeartbeat.newBuilder() to construct.
    private ClusterInstanceHeartbeat(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ClusterInstanceHeartbeat() {
      clusterCrn_ = "";
      instances_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ClusterInstanceHeartbeat();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_ClusterInstanceHeartbeat_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_ClusterInstanceHeartbeat_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat.class, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat.Builder.class);
    }

    public static final int CLUSTERCRN_FIELD_NUMBER = 1;
    private volatile java.lang.Object clusterCrn_;
    /**
     * <pre>
     * The cluster CRN (deprecated in version 2)
     * USAGE NOTES:
     * - This field is deprecated. The meteredResourceMetadata field/object should be
     *   populated instead.
     * - CDP Control Plane apps using version 1 of the event model are expected
     *   to provide an RPC service for collecting cluster/environment related
     *   information (i.e. data enrichment) based on this CRN. For more
     *   information see the CDP Metering Technical Specification ([1]) referenced
     *   above.
     * - CDP Control Plane apps using version 2 of the event model should populate
     *   the meteredResourceMetadata field/object instead of this field; this field can be
     *   ignored.
     * </pre>
     *
     * <code>string clusterCrn = 1;</code>
     * @return The clusterCrn.
     */
    @java.lang.Override
    public java.lang.String getClusterCrn() {
      java.lang.Object ref = clusterCrn_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        clusterCrn_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The cluster CRN (deprecated in version 2)
     * USAGE NOTES:
     * - This field is deprecated. The meteredResourceMetadata field/object should be
     *   populated instead.
     * - CDP Control Plane apps using version 1 of the event model are expected
     *   to provide an RPC service for collecting cluster/environment related
     *   information (i.e. data enrichment) based on this CRN. For more
     *   information see the CDP Metering Technical Specification ([1]) referenced
     *   above.
     * - CDP Control Plane apps using version 2 of the event model should populate
     *   the meteredResourceMetadata field/object instead of this field; this field can be
     *   ignored.
     * </pre>
     *
     * <code>string clusterCrn = 1;</code>
     * @return The bytes for clusterCrn.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getClusterCrnBytes() {
      java.lang.Object ref = clusterCrn_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clusterCrn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INSTANCES_FIELD_NUMBER = 2;
    private java.util.List<com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance> instances_;
    /**
     * <pre>
     * List of instances that this heartbeat is being submitted for.
     * USAGE NOTES:
     * - If there are no instances, the event will be dropped.
     * - If any of the instances do not contain the required data, the event
     *   associated with that particular instance will be dropped.
     * </pre>
     *
     * <code>repeated .meteringevents.Instance instances = 2;</code>
     */
    @java.lang.Override
    public java.util.List<com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance> getInstancesList() {
      return instances_;
    }
    /**
     * <pre>
     * List of instances that this heartbeat is being submitted for.
     * USAGE NOTES:
     * - If there are no instances, the event will be dropped.
     * - If any of the instances do not contain the required data, the event
     *   associated with that particular instance will be dropped.
     * </pre>
     *
     * <code>repeated .meteringevents.Instance instances = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.InstanceOrBuilder> 
        getInstancesOrBuilderList() {
      return instances_;
    }
    /**
     * <pre>
     * List of instances that this heartbeat is being submitted for.
     * USAGE NOTES:
     * - If there are no instances, the event will be dropped.
     * - If any of the instances do not contain the required data, the event
     *   associated with that particular instance will be dropped.
     * </pre>
     *
     * <code>repeated .meteringevents.Instance instances = 2;</code>
     */
    @java.lang.Override
    public int getInstancesCount() {
      return instances_.size();
    }
    /**
     * <pre>
     * List of instances that this heartbeat is being submitted for.
     * USAGE NOTES:
     * - If there are no instances, the event will be dropped.
     * - If any of the instances do not contain the required data, the event
     *   associated with that particular instance will be dropped.
     * </pre>
     *
     * <code>repeated .meteringevents.Instance instances = 2;</code>
     */
    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance getInstances(int index) {
      return instances_.get(index);
    }
    /**
     * <pre>
     * List of instances that this heartbeat is being submitted for.
     * USAGE NOTES:
     * - If there are no instances, the event will be dropped.
     * - If any of the instances do not contain the required data, the event
     *   associated with that particular instance will be dropped.
     * </pre>
     *
     * <code>repeated .meteringevents.Instance instances = 2;</code>
     */
    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.InstanceOrBuilder getInstancesOrBuilder(
        int index) {
      return instances_.get(index);
    }

    public static final int METEREDRESOURCEMETADATA_FIELD_NUMBER = 3;
    private com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata meteredResourceMetadata_;
    /**
     * <pre>
     * MeteredResourceMetadata for this ClusterInstanceHeartbeat (added in version 2).
     * This is the Cloudera resource being metered.
     * USAGE NOTES:
     * - CDP Control Plane apps using version 2 of the event model must fully
     *   populate the meteredResourceMetadata field/object.
     * </pre>
     *
     * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 3;</code>
     * @return Whether the meteredResourceMetadata field is set.
     */
    @java.lang.Override
    public boolean hasMeteredResourceMetadata() {
      return meteredResourceMetadata_ != null;
    }
    /**
     * <pre>
     * MeteredResourceMetadata for this ClusterInstanceHeartbeat (added in version 2).
     * This is the Cloudera resource being metered.
     * USAGE NOTES:
     * - CDP Control Plane apps using version 2 of the event model must fully
     *   populate the meteredResourceMetadata field/object.
     * </pre>
     *
     * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 3;</code>
     * @return The meteredResourceMetadata.
     */
    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata getMeteredResourceMetadata() {
      return meteredResourceMetadata_ == null ? com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata.getDefaultInstance() : meteredResourceMetadata_;
    }
    /**
     * <pre>
     * MeteredResourceMetadata for this ClusterInstanceHeartbeat (added in version 2).
     * This is the Cloudera resource being metered.
     * USAGE NOTES:
     * - CDP Control Plane apps using version 2 of the event model must fully
     *   populate the meteredResourceMetadata field/object.
     * </pre>
     *
     * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 3;</code>
     */
    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataOrBuilder getMeteredResourceMetadataOrBuilder() {
      return getMeteredResourceMetadata();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(clusterCrn_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, clusterCrn_);
      }
      for (int i = 0; i < instances_.size(); i++) {
        output.writeMessage(2, instances_.get(i));
      }
      if (meteredResourceMetadata_ != null) {
        output.writeMessage(3, getMeteredResourceMetadata());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(clusterCrn_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, clusterCrn_);
      }
      for (int i = 0; i < instances_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, instances_.get(i));
      }
      if (meteredResourceMetadata_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getMeteredResourceMetadata());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat)) {
        return super.equals(obj);
      }
      com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat other = (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat) obj;

      if (!getClusterCrn()
          .equals(other.getClusterCrn())) return false;
      if (!getInstancesList()
          .equals(other.getInstancesList())) return false;
      if (hasMeteredResourceMetadata() != other.hasMeteredResourceMetadata()) return false;
      if (hasMeteredResourceMetadata()) {
        if (!getMeteredResourceMetadata()
            .equals(other.getMeteredResourceMetadata())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CLUSTERCRN_FIELD_NUMBER;
      hash = (53 * hash) + getClusterCrn().hashCode();
      if (getInstancesCount() > 0) {
        hash = (37 * hash) + INSTANCES_FIELD_NUMBER;
        hash = (53 * hash) + getInstancesList().hashCode();
      }
      if (hasMeteredResourceMetadata()) {
        hash = (37 * hash) + METEREDRESOURCEMETADATA_FIELD_NUMBER;
        hash = (53 * hash) + getMeteredResourceMetadata().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A heartbeat event for one or more instances in a cluster. Heartbeat events
     * may originate from any system that can authoritatively say the instance
     * is healthy.
     * REPORTING INTERVAL: At least once a minute and no less than every 5 minutes.
     * USAGE NOTES:        See clusterCrn, instances, and meteredResourceMetadata fields
     * </pre>
     *
     * Protobuf type {@code meteringevents.ClusterInstanceHeartbeat}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:meteringevents.ClusterInstanceHeartbeat)
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_ClusterInstanceHeartbeat_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_ClusterInstanceHeartbeat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat.class, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat.Builder.class);
      }

      // Construct using com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        clusterCrn_ = "";

        if (instancesBuilder_ == null) {
          instances_ = java.util.Collections.emptyList();
        } else {
          instances_ = null;
          instancesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (meteredResourceMetadataBuilder_ == null) {
          meteredResourceMetadata_ = null;
        } else {
          meteredResourceMetadata_ = null;
          meteredResourceMetadataBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_ClusterInstanceHeartbeat_descriptor;
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat getDefaultInstanceForType() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat.getDefaultInstance();
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat build() {
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat buildPartial() {
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat result = new com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat(this);
        int from_bitField0_ = bitField0_;
        result.clusterCrn_ = clusterCrn_;
        if (instancesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            instances_ = java.util.Collections.unmodifiableList(instances_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.instances_ = instances_;
        } else {
          result.instances_ = instancesBuilder_.build();
        }
        if (meteredResourceMetadataBuilder_ == null) {
          result.meteredResourceMetadata_ = meteredResourceMetadata_;
        } else {
          result.meteredResourceMetadata_ = meteredResourceMetadataBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat) {
          return mergeFrom((com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat other) {
        if (other == com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat.getDefaultInstance()) return this;
        if (!other.getClusterCrn().isEmpty()) {
          clusterCrn_ = other.clusterCrn_;
          onChanged();
        }
        if (instancesBuilder_ == null) {
          if (!other.instances_.isEmpty()) {
            if (instances_.isEmpty()) {
              instances_ = other.instances_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureInstancesIsMutable();
              instances_.addAll(other.instances_);
            }
            onChanged();
          }
        } else {
          if (!other.instances_.isEmpty()) {
            if (instancesBuilder_.isEmpty()) {
              instancesBuilder_.dispose();
              instancesBuilder_ = null;
              instances_ = other.instances_;
              bitField0_ = (bitField0_ & ~0x00000001);
              instancesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getInstancesFieldBuilder() : null;
            } else {
              instancesBuilder_.addAllMessages(other.instances_);
            }
          }
        }
        if (other.hasMeteredResourceMetadata()) {
          mergeMeteredResourceMetadata(other.getMeteredResourceMetadata());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                clusterCrn_ = input.readStringRequireUtf8();

                break;
              } // case 10
              case 18: {
                com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance m =
                    input.readMessage(
                        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance.parser(),
                        extensionRegistry);
                if (instancesBuilder_ == null) {
                  ensureInstancesIsMutable();
                  instances_.add(m);
                } else {
                  instancesBuilder_.addMessage(m);
                }
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getMeteredResourceMetadataFieldBuilder().getBuilder(),
                    extensionRegistry);

                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object clusterCrn_ = "";
      /**
       * <pre>
       * The cluster CRN (deprecated in version 2)
       * USAGE NOTES:
       * - This field is deprecated. The meteredResourceMetadata field/object should be
       *   populated instead.
       * - CDP Control Plane apps using version 1 of the event model are expected
       *   to provide an RPC service for collecting cluster/environment related
       *   information (i.e. data enrichment) based on this CRN. For more
       *   information see the CDP Metering Technical Specification ([1]) referenced
       *   above.
       * - CDP Control Plane apps using version 2 of the event model should populate
       *   the meteredResourceMetadata field/object instead of this field; this field can be
       *   ignored.
       * </pre>
       *
       * <code>string clusterCrn = 1;</code>
       * @return The clusterCrn.
       */
      public java.lang.String getClusterCrn() {
        java.lang.Object ref = clusterCrn_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          clusterCrn_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The cluster CRN (deprecated in version 2)
       * USAGE NOTES:
       * - This field is deprecated. The meteredResourceMetadata field/object should be
       *   populated instead.
       * - CDP Control Plane apps using version 1 of the event model are expected
       *   to provide an RPC service for collecting cluster/environment related
       *   information (i.e. data enrichment) based on this CRN. For more
       *   information see the CDP Metering Technical Specification ([1]) referenced
       *   above.
       * - CDP Control Plane apps using version 2 of the event model should populate
       *   the meteredResourceMetadata field/object instead of this field; this field can be
       *   ignored.
       * </pre>
       *
       * <code>string clusterCrn = 1;</code>
       * @return The bytes for clusterCrn.
       */
      public com.google.protobuf.ByteString
          getClusterCrnBytes() {
        java.lang.Object ref = clusterCrn_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          clusterCrn_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The cluster CRN (deprecated in version 2)
       * USAGE NOTES:
       * - This field is deprecated. The meteredResourceMetadata field/object should be
       *   populated instead.
       * - CDP Control Plane apps using version 1 of the event model are expected
       *   to provide an RPC service for collecting cluster/environment related
       *   information (i.e. data enrichment) based on this CRN. For more
       *   information see the CDP Metering Technical Specification ([1]) referenced
       *   above.
       * - CDP Control Plane apps using version 2 of the event model should populate
       *   the meteredResourceMetadata field/object instead of this field; this field can be
       *   ignored.
       * </pre>
       *
       * <code>string clusterCrn = 1;</code>
       * @param value The clusterCrn to set.
       * @return This builder for chaining.
       */
      public Builder setClusterCrn(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        clusterCrn_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The cluster CRN (deprecated in version 2)
       * USAGE NOTES:
       * - This field is deprecated. The meteredResourceMetadata field/object should be
       *   populated instead.
       * - CDP Control Plane apps using version 1 of the event model are expected
       *   to provide an RPC service for collecting cluster/environment related
       *   information (i.e. data enrichment) based on this CRN. For more
       *   information see the CDP Metering Technical Specification ([1]) referenced
       *   above.
       * - CDP Control Plane apps using version 2 of the event model should populate
       *   the meteredResourceMetadata field/object instead of this field; this field can be
       *   ignored.
       * </pre>
       *
       * <code>string clusterCrn = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearClusterCrn() {
        
        clusterCrn_ = getDefaultInstance().getClusterCrn();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The cluster CRN (deprecated in version 2)
       * USAGE NOTES:
       * - This field is deprecated. The meteredResourceMetadata field/object should be
       *   populated instead.
       * - CDP Control Plane apps using version 1 of the event model are expected
       *   to provide an RPC service for collecting cluster/environment related
       *   information (i.e. data enrichment) based on this CRN. For more
       *   information see the CDP Metering Technical Specification ([1]) referenced
       *   above.
       * - CDP Control Plane apps using version 2 of the event model should populate
       *   the meteredResourceMetadata field/object instead of this field; this field can be
       *   ignored.
       * </pre>
       *
       * <code>string clusterCrn = 1;</code>
       * @param value The bytes for clusterCrn to set.
       * @return This builder for chaining.
       */
      public Builder setClusterCrnBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        clusterCrn_ = value;
        onChanged();
        return this;
      }

      private java.util.List<com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance> instances_ =
        java.util.Collections.emptyList();
      private void ensureInstancesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          instances_ = new java.util.ArrayList<com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance>(instances_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.InstanceOrBuilder> instancesBuilder_;

      /**
       * <pre>
       * List of instances that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no instances, the event will be dropped.
       * - If any of the instances do not contain the required data, the event
       *   associated with that particular instance will be dropped.
       * </pre>
       *
       * <code>repeated .meteringevents.Instance instances = 2;</code>
       */
      public java.util.List<com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance> getInstancesList() {
        if (instancesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(instances_);
        } else {
          return instancesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of instances that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no instances, the event will be dropped.
       * - If any of the instances do not contain the required data, the event
       *   associated with that particular instance will be dropped.
       * </pre>
       *
       * <code>repeated .meteringevents.Instance instances = 2;</code>
       */
      public int getInstancesCount() {
        if (instancesBuilder_ == null) {
          return instances_.size();
        } else {
          return instancesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of instances that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no instances, the event will be dropped.
       * - If any of the instances do not contain the required data, the event
       *   associated with that particular instance will be dropped.
       * </pre>
       *
       * <code>repeated .meteringevents.Instance instances = 2;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance getInstances(int index) {
        if (instancesBuilder_ == null) {
          return instances_.get(index);
        } else {
          return instancesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of instances that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no instances, the event will be dropped.
       * - If any of the instances do not contain the required data, the event
       *   associated with that particular instance will be dropped.
       * </pre>
       *
       * <code>repeated .meteringevents.Instance instances = 2;</code>
       */
      public Builder setInstances(
          int index, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance value) {
        if (instancesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInstancesIsMutable();
          instances_.set(index, value);
          onChanged();
        } else {
          instancesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of instances that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no instances, the event will be dropped.
       * - If any of the instances do not contain the required data, the event
       *   associated with that particular instance will be dropped.
       * </pre>
       *
       * <code>repeated .meteringevents.Instance instances = 2;</code>
       */
      public Builder setInstances(
          int index, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance.Builder builderForValue) {
        if (instancesBuilder_ == null) {
          ensureInstancesIsMutable();
          instances_.set(index, builderForValue.build());
          onChanged();
        } else {
          instancesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of instances that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no instances, the event will be dropped.
       * - If any of the instances do not contain the required data, the event
       *   associated with that particular instance will be dropped.
       * </pre>
       *
       * <code>repeated .meteringevents.Instance instances = 2;</code>
       */
      public Builder addInstances(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance value) {
        if (instancesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInstancesIsMutable();
          instances_.add(value);
          onChanged();
        } else {
          instancesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of instances that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no instances, the event will be dropped.
       * - If any of the instances do not contain the required data, the event
       *   associated with that particular instance will be dropped.
       * </pre>
       *
       * <code>repeated .meteringevents.Instance instances = 2;</code>
       */
      public Builder addInstances(
          int index, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance value) {
        if (instancesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInstancesIsMutable();
          instances_.add(index, value);
          onChanged();
        } else {
          instancesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of instances that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no instances, the event will be dropped.
       * - If any of the instances do not contain the required data, the event
       *   associated with that particular instance will be dropped.
       * </pre>
       *
       * <code>repeated .meteringevents.Instance instances = 2;</code>
       */
      public Builder addInstances(
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance.Builder builderForValue) {
        if (instancesBuilder_ == null) {
          ensureInstancesIsMutable();
          instances_.add(builderForValue.build());
          onChanged();
        } else {
          instancesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of instances that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no instances, the event will be dropped.
       * - If any of the instances do not contain the required data, the event
       *   associated with that particular instance will be dropped.
       * </pre>
       *
       * <code>repeated .meteringevents.Instance instances = 2;</code>
       */
      public Builder addInstances(
          int index, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance.Builder builderForValue) {
        if (instancesBuilder_ == null) {
          ensureInstancesIsMutable();
          instances_.add(index, builderForValue.build());
          onChanged();
        } else {
          instancesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of instances that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no instances, the event will be dropped.
       * - If any of the instances do not contain the required data, the event
       *   associated with that particular instance will be dropped.
       * </pre>
       *
       * <code>repeated .meteringevents.Instance instances = 2;</code>
       */
      public Builder addAllInstances(
          java.lang.Iterable<? extends com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance> values) {
        if (instancesBuilder_ == null) {
          ensureInstancesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, instances_);
          onChanged();
        } else {
          instancesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of instances that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no instances, the event will be dropped.
       * - If any of the instances do not contain the required data, the event
       *   associated with that particular instance will be dropped.
       * </pre>
       *
       * <code>repeated .meteringevents.Instance instances = 2;</code>
       */
      public Builder clearInstances() {
        if (instancesBuilder_ == null) {
          instances_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          instancesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of instances that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no instances, the event will be dropped.
       * - If any of the instances do not contain the required data, the event
       *   associated with that particular instance will be dropped.
       * </pre>
       *
       * <code>repeated .meteringevents.Instance instances = 2;</code>
       */
      public Builder removeInstances(int index) {
        if (instancesBuilder_ == null) {
          ensureInstancesIsMutable();
          instances_.remove(index);
          onChanged();
        } else {
          instancesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of instances that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no instances, the event will be dropped.
       * - If any of the instances do not contain the required data, the event
       *   associated with that particular instance will be dropped.
       * </pre>
       *
       * <code>repeated .meteringevents.Instance instances = 2;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance.Builder getInstancesBuilder(
          int index) {
        return getInstancesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of instances that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no instances, the event will be dropped.
       * - If any of the instances do not contain the required data, the event
       *   associated with that particular instance will be dropped.
       * </pre>
       *
       * <code>repeated .meteringevents.Instance instances = 2;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.InstanceOrBuilder getInstancesOrBuilder(
          int index) {
        if (instancesBuilder_ == null) {
          return instances_.get(index);  } else {
          return instancesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of instances that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no instances, the event will be dropped.
       * - If any of the instances do not contain the required data, the event
       *   associated with that particular instance will be dropped.
       * </pre>
       *
       * <code>repeated .meteringevents.Instance instances = 2;</code>
       */
      public java.util.List<? extends com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.InstanceOrBuilder> 
           getInstancesOrBuilderList() {
        if (instancesBuilder_ != null) {
          return instancesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(instances_);
        }
      }
      /**
       * <pre>
       * List of instances that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no instances, the event will be dropped.
       * - If any of the instances do not contain the required data, the event
       *   associated with that particular instance will be dropped.
       * </pre>
       *
       * <code>repeated .meteringevents.Instance instances = 2;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance.Builder addInstancesBuilder() {
        return getInstancesFieldBuilder().addBuilder(
            com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance.getDefaultInstance());
      }
      /**
       * <pre>
       * List of instances that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no instances, the event will be dropped.
       * - If any of the instances do not contain the required data, the event
       *   associated with that particular instance will be dropped.
       * </pre>
       *
       * <code>repeated .meteringevents.Instance instances = 2;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance.Builder addInstancesBuilder(
          int index) {
        return getInstancesFieldBuilder().addBuilder(
            index, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance.getDefaultInstance());
      }
      /**
       * <pre>
       * List of instances that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no instances, the event will be dropped.
       * - If any of the instances do not contain the required data, the event
       *   associated with that particular instance will be dropped.
       * </pre>
       *
       * <code>repeated .meteringevents.Instance instances = 2;</code>
       */
      public java.util.List<com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance.Builder> 
           getInstancesBuilderList() {
        return getInstancesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.InstanceOrBuilder> 
          getInstancesFieldBuilder() {
        if (instancesBuilder_ == null) {
          instancesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.InstanceOrBuilder>(
                  instances_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          instances_ = null;
        }
        return instancesBuilder_;
      }

      private com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata meteredResourceMetadata_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataOrBuilder> meteredResourceMetadataBuilder_;
      /**
       * <pre>
       * MeteredResourceMetadata for this ClusterInstanceHeartbeat (added in version 2).
       * This is the Cloudera resource being metered.
       * USAGE NOTES:
       * - CDP Control Plane apps using version 2 of the event model must fully
       *   populate the meteredResourceMetadata field/object.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 3;</code>
       * @return Whether the meteredResourceMetadata field is set.
       */
      public boolean hasMeteredResourceMetadata() {
        return meteredResourceMetadataBuilder_ != null || meteredResourceMetadata_ != null;
      }
      /**
       * <pre>
       * MeteredResourceMetadata for this ClusterInstanceHeartbeat (added in version 2).
       * This is the Cloudera resource being metered.
       * USAGE NOTES:
       * - CDP Control Plane apps using version 2 of the event model must fully
       *   populate the meteredResourceMetadata field/object.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 3;</code>
       * @return The meteredResourceMetadata.
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata getMeteredResourceMetadata() {
        if (meteredResourceMetadataBuilder_ == null) {
          return meteredResourceMetadata_ == null ? com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata.getDefaultInstance() : meteredResourceMetadata_;
        } else {
          return meteredResourceMetadataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * MeteredResourceMetadata for this ClusterInstanceHeartbeat (added in version 2).
       * This is the Cloudera resource being metered.
       * USAGE NOTES:
       * - CDP Control Plane apps using version 2 of the event model must fully
       *   populate the meteredResourceMetadata field/object.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 3;</code>
       */
      public Builder setMeteredResourceMetadata(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata value) {
        if (meteredResourceMetadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          meteredResourceMetadata_ = value;
          onChanged();
        } else {
          meteredResourceMetadataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * MeteredResourceMetadata for this ClusterInstanceHeartbeat (added in version 2).
       * This is the Cloudera resource being metered.
       * USAGE NOTES:
       * - CDP Control Plane apps using version 2 of the event model must fully
       *   populate the meteredResourceMetadata field/object.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 3;</code>
       */
      public Builder setMeteredResourceMetadata(
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata.Builder builderForValue) {
        if (meteredResourceMetadataBuilder_ == null) {
          meteredResourceMetadata_ = builderForValue.build();
          onChanged();
        } else {
          meteredResourceMetadataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * MeteredResourceMetadata for this ClusterInstanceHeartbeat (added in version 2).
       * This is the Cloudera resource being metered.
       * USAGE NOTES:
       * - CDP Control Plane apps using version 2 of the event model must fully
       *   populate the meteredResourceMetadata field/object.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 3;</code>
       */
      public Builder mergeMeteredResourceMetadata(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata value) {
        if (meteredResourceMetadataBuilder_ == null) {
          if (meteredResourceMetadata_ != null) {
            meteredResourceMetadata_ =
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata.newBuilder(meteredResourceMetadata_).mergeFrom(value).buildPartial();
          } else {
            meteredResourceMetadata_ = value;
          }
          onChanged();
        } else {
          meteredResourceMetadataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * MeteredResourceMetadata for this ClusterInstanceHeartbeat (added in version 2).
       * This is the Cloudera resource being metered.
       * USAGE NOTES:
       * - CDP Control Plane apps using version 2 of the event model must fully
       *   populate the meteredResourceMetadata field/object.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 3;</code>
       */
      public Builder clearMeteredResourceMetadata() {
        if (meteredResourceMetadataBuilder_ == null) {
          meteredResourceMetadata_ = null;
          onChanged();
        } else {
          meteredResourceMetadata_ = null;
          meteredResourceMetadataBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * MeteredResourceMetadata for this ClusterInstanceHeartbeat (added in version 2).
       * This is the Cloudera resource being metered.
       * USAGE NOTES:
       * - CDP Control Plane apps using version 2 of the event model must fully
       *   populate the meteredResourceMetadata field/object.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 3;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata.Builder getMeteredResourceMetadataBuilder() {
        
        onChanged();
        return getMeteredResourceMetadataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * MeteredResourceMetadata for this ClusterInstanceHeartbeat (added in version 2).
       * This is the Cloudera resource being metered.
       * USAGE NOTES:
       * - CDP Control Plane apps using version 2 of the event model must fully
       *   populate the meteredResourceMetadata field/object.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 3;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataOrBuilder getMeteredResourceMetadataOrBuilder() {
        if (meteredResourceMetadataBuilder_ != null) {
          return meteredResourceMetadataBuilder_.getMessageOrBuilder();
        } else {
          return meteredResourceMetadata_ == null ?
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata.getDefaultInstance() : meteredResourceMetadata_;
        }
      }
      /**
       * <pre>
       * MeteredResourceMetadata for this ClusterInstanceHeartbeat (added in version 2).
       * This is the Cloudera resource being metered.
       * USAGE NOTES:
       * - CDP Control Plane apps using version 2 of the event model must fully
       *   populate the meteredResourceMetadata field/object.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataOrBuilder> 
          getMeteredResourceMetadataFieldBuilder() {
        if (meteredResourceMetadataBuilder_ == null) {
          meteredResourceMetadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataOrBuilder>(
                  getMeteredResourceMetadata(),
                  getParentForChildren(),
                  isClean());
          meteredResourceMetadata_ = null;
        }
        return meteredResourceMetadataBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:meteringevents.ClusterInstanceHeartbeat)
    }

    // @@protoc_insertion_point(class_scope:meteringevents.ClusterInstanceHeartbeat)
    private static final com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat();
    }

    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ClusterInstanceHeartbeat>
        PARSER = new com.google.protobuf.AbstractParser<ClusterInstanceHeartbeat>() {
      @java.lang.Override
      public ClusterInstanceHeartbeat parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ClusterInstanceHeartbeat> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ClusterInstanceHeartbeat> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ClusterInstanceHeartbeat getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ComputeResourceHeartbeatOrBuilder extends
      // @@protoc_insertion_point(interface_extends:meteringevents.ComputeResourceHeartbeat)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * List of compute resources that this heartbeat is being submitted for.
     * USAGE NOTES:
     * - If there are no compute resources (i.e. empty list), the event will be
     *   dropped.
     * - If any of the compute resource objects do not contain the required data,
     *   no event will be persisted for that particular compute resource.
     * </pre>
     *
     * <code>repeated .meteringevents.ComputeResource computeResources = 1;</code>
     */
    java.util.List<com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource> 
        getComputeResourcesList();
    /**
     * <pre>
     * List of compute resources that this heartbeat is being submitted for.
     * USAGE NOTES:
     * - If there are no compute resources (i.e. empty list), the event will be
     *   dropped.
     * - If any of the compute resource objects do not contain the required data,
     *   no event will be persisted for that particular compute resource.
     * </pre>
     *
     * <code>repeated .meteringevents.ComputeResource computeResources = 1;</code>
     */
    com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource getComputeResources(int index);
    /**
     * <pre>
     * List of compute resources that this heartbeat is being submitted for.
     * USAGE NOTES:
     * - If there are no compute resources (i.e. empty list), the event will be
     *   dropped.
     * - If any of the compute resource objects do not contain the required data,
     *   no event will be persisted for that particular compute resource.
     * </pre>
     *
     * <code>repeated .meteringevents.ComputeResource computeResources = 1;</code>
     */
    int getComputeResourcesCount();
    /**
     * <pre>
     * List of compute resources that this heartbeat is being submitted for.
     * USAGE NOTES:
     * - If there are no compute resources (i.e. empty list), the event will be
     *   dropped.
     * - If any of the compute resource objects do not contain the required data,
     *   no event will be persisted for that particular compute resource.
     * </pre>
     *
     * <code>repeated .meteringevents.ComputeResource computeResources = 1;</code>
     */
    java.util.List<? extends com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceOrBuilder> 
        getComputeResourcesOrBuilderList();
    /**
     * <pre>
     * List of compute resources that this heartbeat is being submitted for.
     * USAGE NOTES:
     * - If there are no compute resources (i.e. empty list), the event will be
     *   dropped.
     * - If any of the compute resource objects do not contain the required data,
     *   no event will be persisted for that particular compute resource.
     * </pre>
     *
     * <code>repeated .meteringevents.ComputeResource computeResources = 1;</code>
     */
    com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceOrBuilder getComputeResourcesOrBuilder(
        int index);

    /**
     * <pre>
     * MeteredResourceMetadata for this ComputeResourceHeartbeat (added in version 2).
     * This is the resource being metered.
     * USAGE NOTES:
     * - This object must be present and fully populated.
     * - If any of the required fields of the MeteredResourceMetadata object are not
     *   provided, the event will not be persisted.
     * </pre>
     *
     * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 2;</code>
     * @return Whether the meteredResourceMetadata field is set.
     */
    boolean hasMeteredResourceMetadata();
    /**
     * <pre>
     * MeteredResourceMetadata for this ComputeResourceHeartbeat (added in version 2).
     * This is the resource being metered.
     * USAGE NOTES:
     * - This object must be present and fully populated.
     * - If any of the required fields of the MeteredResourceMetadata object are not
     *   provided, the event will not be persisted.
     * </pre>
     *
     * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 2;</code>
     * @return The meteredResourceMetadata.
     */
    com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata getMeteredResourceMetadata();
    /**
     * <pre>
     * MeteredResourceMetadata for this ComputeResourceHeartbeat (added in version 2).
     * This is the resource being metered.
     * USAGE NOTES:
     * - This object must be present and fully populated.
     * - If any of the required fields of the MeteredResourceMetadata object are not
     *   provided, the event will not be persisted.
     * </pre>
     *
     * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 2;</code>
     */
    com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataOrBuilder getMeteredResourceMetadataOrBuilder();
  }
  /**
   * <pre>
   * A heartbeat event for one or more compute resources. Heartbeat events
   * may originate from any system that can authoritatively say the compute
   * resource is healthy.
   * REPORTING INTERVAL: Every 1 minute.
   * USAGE NOTES:        See computeResources and meteredResourceMetadata fields
   * </pre>
   *
   * Protobuf type {@code meteringevents.ComputeResourceHeartbeat}
   */
  public static final class ComputeResourceHeartbeat extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:meteringevents.ComputeResourceHeartbeat)
      ComputeResourceHeartbeatOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ComputeResourceHeartbeat.newBuilder() to construct.
    private ComputeResourceHeartbeat(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ComputeResourceHeartbeat() {
      computeResources_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ComputeResourceHeartbeat();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_ComputeResourceHeartbeat_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_ComputeResourceHeartbeat_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat.class, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat.Builder.class);
    }

    public static final int COMPUTERESOURCES_FIELD_NUMBER = 1;
    private java.util.List<com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource> computeResources_;
    /**
     * <pre>
     * List of compute resources that this heartbeat is being submitted for.
     * USAGE NOTES:
     * - If there are no compute resources (i.e. empty list), the event will be
     *   dropped.
     * - If any of the compute resource objects do not contain the required data,
     *   no event will be persisted for that particular compute resource.
     * </pre>
     *
     * <code>repeated .meteringevents.ComputeResource computeResources = 1;</code>
     */
    @java.lang.Override
    public java.util.List<com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource> getComputeResourcesList() {
      return computeResources_;
    }
    /**
     * <pre>
     * List of compute resources that this heartbeat is being submitted for.
     * USAGE NOTES:
     * - If there are no compute resources (i.e. empty list), the event will be
     *   dropped.
     * - If any of the compute resource objects do not contain the required data,
     *   no event will be persisted for that particular compute resource.
     * </pre>
     *
     * <code>repeated .meteringevents.ComputeResource computeResources = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceOrBuilder> 
        getComputeResourcesOrBuilderList() {
      return computeResources_;
    }
    /**
     * <pre>
     * List of compute resources that this heartbeat is being submitted for.
     * USAGE NOTES:
     * - If there are no compute resources (i.e. empty list), the event will be
     *   dropped.
     * - If any of the compute resource objects do not contain the required data,
     *   no event will be persisted for that particular compute resource.
     * </pre>
     *
     * <code>repeated .meteringevents.ComputeResource computeResources = 1;</code>
     */
    @java.lang.Override
    public int getComputeResourcesCount() {
      return computeResources_.size();
    }
    /**
     * <pre>
     * List of compute resources that this heartbeat is being submitted for.
     * USAGE NOTES:
     * - If there are no compute resources (i.e. empty list), the event will be
     *   dropped.
     * - If any of the compute resource objects do not contain the required data,
     *   no event will be persisted for that particular compute resource.
     * </pre>
     *
     * <code>repeated .meteringevents.ComputeResource computeResources = 1;</code>
     */
    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource getComputeResources(int index) {
      return computeResources_.get(index);
    }
    /**
     * <pre>
     * List of compute resources that this heartbeat is being submitted for.
     * USAGE NOTES:
     * - If there are no compute resources (i.e. empty list), the event will be
     *   dropped.
     * - If any of the compute resource objects do not contain the required data,
     *   no event will be persisted for that particular compute resource.
     * </pre>
     *
     * <code>repeated .meteringevents.ComputeResource computeResources = 1;</code>
     */
    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceOrBuilder getComputeResourcesOrBuilder(
        int index) {
      return computeResources_.get(index);
    }

    public static final int METEREDRESOURCEMETADATA_FIELD_NUMBER = 2;
    private com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata meteredResourceMetadata_;
    /**
     * <pre>
     * MeteredResourceMetadata for this ComputeResourceHeartbeat (added in version 2).
     * This is the resource being metered.
     * USAGE NOTES:
     * - This object must be present and fully populated.
     * - If any of the required fields of the MeteredResourceMetadata object are not
     *   provided, the event will not be persisted.
     * </pre>
     *
     * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 2;</code>
     * @return Whether the meteredResourceMetadata field is set.
     */
    @java.lang.Override
    public boolean hasMeteredResourceMetadata() {
      return meteredResourceMetadata_ != null;
    }
    /**
     * <pre>
     * MeteredResourceMetadata for this ComputeResourceHeartbeat (added in version 2).
     * This is the resource being metered.
     * USAGE NOTES:
     * - This object must be present and fully populated.
     * - If any of the required fields of the MeteredResourceMetadata object are not
     *   provided, the event will not be persisted.
     * </pre>
     *
     * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 2;</code>
     * @return The meteredResourceMetadata.
     */
    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata getMeteredResourceMetadata() {
      return meteredResourceMetadata_ == null ? com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata.getDefaultInstance() : meteredResourceMetadata_;
    }
    /**
     * <pre>
     * MeteredResourceMetadata for this ComputeResourceHeartbeat (added in version 2).
     * This is the resource being metered.
     * USAGE NOTES:
     * - This object must be present and fully populated.
     * - If any of the required fields of the MeteredResourceMetadata object are not
     *   provided, the event will not be persisted.
     * </pre>
     *
     * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 2;</code>
     */
    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataOrBuilder getMeteredResourceMetadataOrBuilder() {
      return getMeteredResourceMetadata();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < computeResources_.size(); i++) {
        output.writeMessage(1, computeResources_.get(i));
      }
      if (meteredResourceMetadata_ != null) {
        output.writeMessage(2, getMeteredResourceMetadata());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < computeResources_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, computeResources_.get(i));
      }
      if (meteredResourceMetadata_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getMeteredResourceMetadata());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat)) {
        return super.equals(obj);
      }
      com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat other = (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat) obj;

      if (!getComputeResourcesList()
          .equals(other.getComputeResourcesList())) return false;
      if (hasMeteredResourceMetadata() != other.hasMeteredResourceMetadata()) return false;
      if (hasMeteredResourceMetadata()) {
        if (!getMeteredResourceMetadata()
            .equals(other.getMeteredResourceMetadata())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getComputeResourcesCount() > 0) {
        hash = (37 * hash) + COMPUTERESOURCES_FIELD_NUMBER;
        hash = (53 * hash) + getComputeResourcesList().hashCode();
      }
      if (hasMeteredResourceMetadata()) {
        hash = (37 * hash) + METEREDRESOURCEMETADATA_FIELD_NUMBER;
        hash = (53 * hash) + getMeteredResourceMetadata().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A heartbeat event for one or more compute resources. Heartbeat events
     * may originate from any system that can authoritatively say the compute
     * resource is healthy.
     * REPORTING INTERVAL: Every 1 minute.
     * USAGE NOTES:        See computeResources and meteredResourceMetadata fields
     * </pre>
     *
     * Protobuf type {@code meteringevents.ComputeResourceHeartbeat}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:meteringevents.ComputeResourceHeartbeat)
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_ComputeResourceHeartbeat_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_ComputeResourceHeartbeat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat.class, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat.Builder.class);
      }

      // Construct using com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (computeResourcesBuilder_ == null) {
          computeResources_ = java.util.Collections.emptyList();
        } else {
          computeResources_ = null;
          computeResourcesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (meteredResourceMetadataBuilder_ == null) {
          meteredResourceMetadata_ = null;
        } else {
          meteredResourceMetadata_ = null;
          meteredResourceMetadataBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_ComputeResourceHeartbeat_descriptor;
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat getDefaultInstanceForType() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat.getDefaultInstance();
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat build() {
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat buildPartial() {
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat result = new com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat(this);
        int from_bitField0_ = bitField0_;
        if (computeResourcesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            computeResources_ = java.util.Collections.unmodifiableList(computeResources_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.computeResources_ = computeResources_;
        } else {
          result.computeResources_ = computeResourcesBuilder_.build();
        }
        if (meteredResourceMetadataBuilder_ == null) {
          result.meteredResourceMetadata_ = meteredResourceMetadata_;
        } else {
          result.meteredResourceMetadata_ = meteredResourceMetadataBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat) {
          return mergeFrom((com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat other) {
        if (other == com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat.getDefaultInstance()) return this;
        if (computeResourcesBuilder_ == null) {
          if (!other.computeResources_.isEmpty()) {
            if (computeResources_.isEmpty()) {
              computeResources_ = other.computeResources_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureComputeResourcesIsMutable();
              computeResources_.addAll(other.computeResources_);
            }
            onChanged();
          }
        } else {
          if (!other.computeResources_.isEmpty()) {
            if (computeResourcesBuilder_.isEmpty()) {
              computeResourcesBuilder_.dispose();
              computeResourcesBuilder_ = null;
              computeResources_ = other.computeResources_;
              bitField0_ = (bitField0_ & ~0x00000001);
              computeResourcesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getComputeResourcesFieldBuilder() : null;
            } else {
              computeResourcesBuilder_.addAllMessages(other.computeResources_);
            }
          }
        }
        if (other.hasMeteredResourceMetadata()) {
          mergeMeteredResourceMetadata(other.getMeteredResourceMetadata());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource m =
                    input.readMessage(
                        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource.parser(),
                        extensionRegistry);
                if (computeResourcesBuilder_ == null) {
                  ensureComputeResourcesIsMutable();
                  computeResources_.add(m);
                } else {
                  computeResourcesBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getMeteredResourceMetadataFieldBuilder().getBuilder(),
                    extensionRegistry);

                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource> computeResources_ =
        java.util.Collections.emptyList();
      private void ensureComputeResourcesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          computeResources_ = new java.util.ArrayList<com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource>(computeResources_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceOrBuilder> computeResourcesBuilder_;

      /**
       * <pre>
       * List of compute resources that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no compute resources (i.e. empty list), the event will be
       *   dropped.
       * - If any of the compute resource objects do not contain the required data,
       *   no event will be persisted for that particular compute resource.
       * </pre>
       *
       * <code>repeated .meteringevents.ComputeResource computeResources = 1;</code>
       */
      public java.util.List<com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource> getComputeResourcesList() {
        if (computeResourcesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(computeResources_);
        } else {
          return computeResourcesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of compute resources that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no compute resources (i.e. empty list), the event will be
       *   dropped.
       * - If any of the compute resource objects do not contain the required data,
       *   no event will be persisted for that particular compute resource.
       * </pre>
       *
       * <code>repeated .meteringevents.ComputeResource computeResources = 1;</code>
       */
      public int getComputeResourcesCount() {
        if (computeResourcesBuilder_ == null) {
          return computeResources_.size();
        } else {
          return computeResourcesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of compute resources that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no compute resources (i.e. empty list), the event will be
       *   dropped.
       * - If any of the compute resource objects do not contain the required data,
       *   no event will be persisted for that particular compute resource.
       * </pre>
       *
       * <code>repeated .meteringevents.ComputeResource computeResources = 1;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource getComputeResources(int index) {
        if (computeResourcesBuilder_ == null) {
          return computeResources_.get(index);
        } else {
          return computeResourcesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of compute resources that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no compute resources (i.e. empty list), the event will be
       *   dropped.
       * - If any of the compute resource objects do not contain the required data,
       *   no event will be persisted for that particular compute resource.
       * </pre>
       *
       * <code>repeated .meteringevents.ComputeResource computeResources = 1;</code>
       */
      public Builder setComputeResources(
          int index, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource value) {
        if (computeResourcesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureComputeResourcesIsMutable();
          computeResources_.set(index, value);
          onChanged();
        } else {
          computeResourcesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of compute resources that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no compute resources (i.e. empty list), the event will be
       *   dropped.
       * - If any of the compute resource objects do not contain the required data,
       *   no event will be persisted for that particular compute resource.
       * </pre>
       *
       * <code>repeated .meteringevents.ComputeResource computeResources = 1;</code>
       */
      public Builder setComputeResources(
          int index, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource.Builder builderForValue) {
        if (computeResourcesBuilder_ == null) {
          ensureComputeResourcesIsMutable();
          computeResources_.set(index, builderForValue.build());
          onChanged();
        } else {
          computeResourcesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of compute resources that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no compute resources (i.e. empty list), the event will be
       *   dropped.
       * - If any of the compute resource objects do not contain the required data,
       *   no event will be persisted for that particular compute resource.
       * </pre>
       *
       * <code>repeated .meteringevents.ComputeResource computeResources = 1;</code>
       */
      public Builder addComputeResources(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource value) {
        if (computeResourcesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureComputeResourcesIsMutable();
          computeResources_.add(value);
          onChanged();
        } else {
          computeResourcesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of compute resources that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no compute resources (i.e. empty list), the event will be
       *   dropped.
       * - If any of the compute resource objects do not contain the required data,
       *   no event will be persisted for that particular compute resource.
       * </pre>
       *
       * <code>repeated .meteringevents.ComputeResource computeResources = 1;</code>
       */
      public Builder addComputeResources(
          int index, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource value) {
        if (computeResourcesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureComputeResourcesIsMutable();
          computeResources_.add(index, value);
          onChanged();
        } else {
          computeResourcesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of compute resources that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no compute resources (i.e. empty list), the event will be
       *   dropped.
       * - If any of the compute resource objects do not contain the required data,
       *   no event will be persisted for that particular compute resource.
       * </pre>
       *
       * <code>repeated .meteringevents.ComputeResource computeResources = 1;</code>
       */
      public Builder addComputeResources(
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource.Builder builderForValue) {
        if (computeResourcesBuilder_ == null) {
          ensureComputeResourcesIsMutable();
          computeResources_.add(builderForValue.build());
          onChanged();
        } else {
          computeResourcesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of compute resources that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no compute resources (i.e. empty list), the event will be
       *   dropped.
       * - If any of the compute resource objects do not contain the required data,
       *   no event will be persisted for that particular compute resource.
       * </pre>
       *
       * <code>repeated .meteringevents.ComputeResource computeResources = 1;</code>
       */
      public Builder addComputeResources(
          int index, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource.Builder builderForValue) {
        if (computeResourcesBuilder_ == null) {
          ensureComputeResourcesIsMutable();
          computeResources_.add(index, builderForValue.build());
          onChanged();
        } else {
          computeResourcesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of compute resources that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no compute resources (i.e. empty list), the event will be
       *   dropped.
       * - If any of the compute resource objects do not contain the required data,
       *   no event will be persisted for that particular compute resource.
       * </pre>
       *
       * <code>repeated .meteringevents.ComputeResource computeResources = 1;</code>
       */
      public Builder addAllComputeResources(
          java.lang.Iterable<? extends com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource> values) {
        if (computeResourcesBuilder_ == null) {
          ensureComputeResourcesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, computeResources_);
          onChanged();
        } else {
          computeResourcesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of compute resources that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no compute resources (i.e. empty list), the event will be
       *   dropped.
       * - If any of the compute resource objects do not contain the required data,
       *   no event will be persisted for that particular compute resource.
       * </pre>
       *
       * <code>repeated .meteringevents.ComputeResource computeResources = 1;</code>
       */
      public Builder clearComputeResources() {
        if (computeResourcesBuilder_ == null) {
          computeResources_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          computeResourcesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of compute resources that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no compute resources (i.e. empty list), the event will be
       *   dropped.
       * - If any of the compute resource objects do not contain the required data,
       *   no event will be persisted for that particular compute resource.
       * </pre>
       *
       * <code>repeated .meteringevents.ComputeResource computeResources = 1;</code>
       */
      public Builder removeComputeResources(int index) {
        if (computeResourcesBuilder_ == null) {
          ensureComputeResourcesIsMutable();
          computeResources_.remove(index);
          onChanged();
        } else {
          computeResourcesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of compute resources that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no compute resources (i.e. empty list), the event will be
       *   dropped.
       * - If any of the compute resource objects do not contain the required data,
       *   no event will be persisted for that particular compute resource.
       * </pre>
       *
       * <code>repeated .meteringevents.ComputeResource computeResources = 1;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource.Builder getComputeResourcesBuilder(
          int index) {
        return getComputeResourcesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of compute resources that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no compute resources (i.e. empty list), the event will be
       *   dropped.
       * - If any of the compute resource objects do not contain the required data,
       *   no event will be persisted for that particular compute resource.
       * </pre>
       *
       * <code>repeated .meteringevents.ComputeResource computeResources = 1;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceOrBuilder getComputeResourcesOrBuilder(
          int index) {
        if (computeResourcesBuilder_ == null) {
          return computeResources_.get(index);  } else {
          return computeResourcesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of compute resources that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no compute resources (i.e. empty list), the event will be
       *   dropped.
       * - If any of the compute resource objects do not contain the required data,
       *   no event will be persisted for that particular compute resource.
       * </pre>
       *
       * <code>repeated .meteringevents.ComputeResource computeResources = 1;</code>
       */
      public java.util.List<? extends com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceOrBuilder> 
           getComputeResourcesOrBuilderList() {
        if (computeResourcesBuilder_ != null) {
          return computeResourcesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(computeResources_);
        }
      }
      /**
       * <pre>
       * List of compute resources that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no compute resources (i.e. empty list), the event will be
       *   dropped.
       * - If any of the compute resource objects do not contain the required data,
       *   no event will be persisted for that particular compute resource.
       * </pre>
       *
       * <code>repeated .meteringevents.ComputeResource computeResources = 1;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource.Builder addComputeResourcesBuilder() {
        return getComputeResourcesFieldBuilder().addBuilder(
            com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource.getDefaultInstance());
      }
      /**
       * <pre>
       * List of compute resources that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no compute resources (i.e. empty list), the event will be
       *   dropped.
       * - If any of the compute resource objects do not contain the required data,
       *   no event will be persisted for that particular compute resource.
       * </pre>
       *
       * <code>repeated .meteringevents.ComputeResource computeResources = 1;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource.Builder addComputeResourcesBuilder(
          int index) {
        return getComputeResourcesFieldBuilder().addBuilder(
            index, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource.getDefaultInstance());
      }
      /**
       * <pre>
       * List of compute resources that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no compute resources (i.e. empty list), the event will be
       *   dropped.
       * - If any of the compute resource objects do not contain the required data,
       *   no event will be persisted for that particular compute resource.
       * </pre>
       *
       * <code>repeated .meteringevents.ComputeResource computeResources = 1;</code>
       */
      public java.util.List<com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource.Builder> 
           getComputeResourcesBuilderList() {
        return getComputeResourcesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceOrBuilder> 
          getComputeResourcesFieldBuilder() {
        if (computeResourcesBuilder_ == null) {
          computeResourcesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceOrBuilder>(
                  computeResources_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          computeResources_ = null;
        }
        return computeResourcesBuilder_;
      }

      private com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata meteredResourceMetadata_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataOrBuilder> meteredResourceMetadataBuilder_;
      /**
       * <pre>
       * MeteredResourceMetadata for this ComputeResourceHeartbeat (added in version 2).
       * This is the resource being metered.
       * USAGE NOTES:
       * - This object must be present and fully populated.
       * - If any of the required fields of the MeteredResourceMetadata object are not
       *   provided, the event will not be persisted.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 2;</code>
       * @return Whether the meteredResourceMetadata field is set.
       */
      public boolean hasMeteredResourceMetadata() {
        return meteredResourceMetadataBuilder_ != null || meteredResourceMetadata_ != null;
      }
      /**
       * <pre>
       * MeteredResourceMetadata for this ComputeResourceHeartbeat (added in version 2).
       * This is the resource being metered.
       * USAGE NOTES:
       * - This object must be present and fully populated.
       * - If any of the required fields of the MeteredResourceMetadata object are not
       *   provided, the event will not be persisted.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 2;</code>
       * @return The meteredResourceMetadata.
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata getMeteredResourceMetadata() {
        if (meteredResourceMetadataBuilder_ == null) {
          return meteredResourceMetadata_ == null ? com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata.getDefaultInstance() : meteredResourceMetadata_;
        } else {
          return meteredResourceMetadataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * MeteredResourceMetadata for this ComputeResourceHeartbeat (added in version 2).
       * This is the resource being metered.
       * USAGE NOTES:
       * - This object must be present and fully populated.
       * - If any of the required fields of the MeteredResourceMetadata object are not
       *   provided, the event will not be persisted.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 2;</code>
       */
      public Builder setMeteredResourceMetadata(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata value) {
        if (meteredResourceMetadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          meteredResourceMetadata_ = value;
          onChanged();
        } else {
          meteredResourceMetadataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * MeteredResourceMetadata for this ComputeResourceHeartbeat (added in version 2).
       * This is the resource being metered.
       * USAGE NOTES:
       * - This object must be present and fully populated.
       * - If any of the required fields of the MeteredResourceMetadata object are not
       *   provided, the event will not be persisted.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 2;</code>
       */
      public Builder setMeteredResourceMetadata(
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata.Builder builderForValue) {
        if (meteredResourceMetadataBuilder_ == null) {
          meteredResourceMetadata_ = builderForValue.build();
          onChanged();
        } else {
          meteredResourceMetadataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * MeteredResourceMetadata for this ComputeResourceHeartbeat (added in version 2).
       * This is the resource being metered.
       * USAGE NOTES:
       * - This object must be present and fully populated.
       * - If any of the required fields of the MeteredResourceMetadata object are not
       *   provided, the event will not be persisted.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 2;</code>
       */
      public Builder mergeMeteredResourceMetadata(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata value) {
        if (meteredResourceMetadataBuilder_ == null) {
          if (meteredResourceMetadata_ != null) {
            meteredResourceMetadata_ =
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata.newBuilder(meteredResourceMetadata_).mergeFrom(value).buildPartial();
          } else {
            meteredResourceMetadata_ = value;
          }
          onChanged();
        } else {
          meteredResourceMetadataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * MeteredResourceMetadata for this ComputeResourceHeartbeat (added in version 2).
       * This is the resource being metered.
       * USAGE NOTES:
       * - This object must be present and fully populated.
       * - If any of the required fields of the MeteredResourceMetadata object are not
       *   provided, the event will not be persisted.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 2;</code>
       */
      public Builder clearMeteredResourceMetadata() {
        if (meteredResourceMetadataBuilder_ == null) {
          meteredResourceMetadata_ = null;
          onChanged();
        } else {
          meteredResourceMetadata_ = null;
          meteredResourceMetadataBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * MeteredResourceMetadata for this ComputeResourceHeartbeat (added in version 2).
       * This is the resource being metered.
       * USAGE NOTES:
       * - This object must be present and fully populated.
       * - If any of the required fields of the MeteredResourceMetadata object are not
       *   provided, the event will not be persisted.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 2;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata.Builder getMeteredResourceMetadataBuilder() {
        
        onChanged();
        return getMeteredResourceMetadataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * MeteredResourceMetadata for this ComputeResourceHeartbeat (added in version 2).
       * This is the resource being metered.
       * USAGE NOTES:
       * - This object must be present and fully populated.
       * - If any of the required fields of the MeteredResourceMetadata object are not
       *   provided, the event will not be persisted.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 2;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataOrBuilder getMeteredResourceMetadataOrBuilder() {
        if (meteredResourceMetadataBuilder_ != null) {
          return meteredResourceMetadataBuilder_.getMessageOrBuilder();
        } else {
          return meteredResourceMetadata_ == null ?
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata.getDefaultInstance() : meteredResourceMetadata_;
        }
      }
      /**
       * <pre>
       * MeteredResourceMetadata for this ComputeResourceHeartbeat (added in version 2).
       * This is the resource being metered.
       * USAGE NOTES:
       * - This object must be present and fully populated.
       * - If any of the required fields of the MeteredResourceMetadata object are not
       *   provided, the event will not be persisted.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataOrBuilder> 
          getMeteredResourceMetadataFieldBuilder() {
        if (meteredResourceMetadataBuilder_ == null) {
          meteredResourceMetadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataOrBuilder>(
                  getMeteredResourceMetadata(),
                  getParentForChildren(),
                  isClean());
          meteredResourceMetadata_ = null;
        }
        return meteredResourceMetadataBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:meteringevents.ComputeResourceHeartbeat)
    }

    // @@protoc_insertion_point(class_scope:meteringevents.ComputeResourceHeartbeat)
    private static final com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat();
    }

    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ComputeResourceHeartbeat>
        PARSER = new com.google.protobuf.AbstractParser<ComputeResourceHeartbeat>() {
      @java.lang.Override
      public ComputeResourceHeartbeat parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ComputeResourceHeartbeat> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ComputeResourceHeartbeat> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceHeartbeat getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UserOrBuilder extends
      // @@protoc_insertion_point(interface_extends:meteringevents.User)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The cluster CRN. (deprecated in version 2)
     * USAGE NOTES:
     * - This field is deprecated. The meteredResourceMetadata field/object should be
     *   populated instead.
     * - CDP Control Plane apps using version 1 of the event model are expected
     *   to provide an RPC service for collecting cluster/environment related
     *   information (i.e. data enrichment) based on this CRN. For more
     *   information see the CDP Metering Technical Specification ([1]) referenced
     *   above.
     * - CDP Control Plane apps using version 2 of the event model should populate
     *   the meteredResourceMetadata field/object instead of this field; this field can be
     *   ignored.
     * </pre>
     *
     * <code>string clusterCrn = 1;</code>
     * @return The clusterCrn.
     */
    java.lang.String getClusterCrn();
    /**
     * <pre>
     * The cluster CRN. (deprecated in version 2)
     * USAGE NOTES:
     * - This field is deprecated. The meteredResourceMetadata field/object should be
     *   populated instead.
     * - CDP Control Plane apps using version 1 of the event model are expected
     *   to provide an RPC service for collecting cluster/environment related
     *   information (i.e. data enrichment) based on this CRN. For more
     *   information see the CDP Metering Technical Specification ([1]) referenced
     *   above.
     * - CDP Control Plane apps using version 2 of the event model should populate
     *   the meteredResourceMetadata field/object instead of this field; this field can be
     *   ignored.
     * </pre>
     *
     * <code>string clusterCrn = 1;</code>
     * @return The bytes for clusterCrn.
     */
    com.google.protobuf.ByteString
        getClusterCrnBytes();

    /**
     * <pre>
     * The userIds to report.
     * USAGE NOTES:
     * - If no userId values are provided, the event is still persisted.
     * - Empty userId values are not allowed.
     * </pre>
     *
     * <code>repeated string userId = 2;</code>
     * @return A list containing the userId.
     */
    java.util.List<java.lang.String>
        getUserIdList();
    /**
     * <pre>
     * The userIds to report.
     * USAGE NOTES:
     * - If no userId values are provided, the event is still persisted.
     * - Empty userId values are not allowed.
     * </pre>
     *
     * <code>repeated string userId = 2;</code>
     * @return The count of userId.
     */
    int getUserIdCount();
    /**
     * <pre>
     * The userIds to report.
     * USAGE NOTES:
     * - If no userId values are provided, the event is still persisted.
     * - Empty userId values are not allowed.
     * </pre>
     *
     * <code>repeated string userId = 2;</code>
     * @param index The index of the element to return.
     * @return The userId at the given index.
     */
    java.lang.String getUserId(int index);
    /**
     * <pre>
     * The userIds to report.
     * USAGE NOTES:
     * - If no userId values are provided, the event is still persisted.
     * - Empty userId values are not allowed.
     * </pre>
     *
     * <code>repeated string userId = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the userId at the given index.
     */
    com.google.protobuf.ByteString
        getUserIdBytes(int index);

    /**
     * <pre>
     * MeteredResourceMetadata for this UserGauge (added in version 2). This is the
     * resource being metered.
     * USAGE NOTES:
     * - CDP Control Plane apps using version 2 of the event model must fully
     *   populate the meteredResourceMetadata field/object.
     * </pre>
     *
     * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 3;</code>
     * @return Whether the meteredResourceMetadata field is set.
     */
    boolean hasMeteredResourceMetadata();
    /**
     * <pre>
     * MeteredResourceMetadata for this UserGauge (added in version 2). This is the
     * resource being metered.
     * USAGE NOTES:
     * - CDP Control Plane apps using version 2 of the event model must fully
     *   populate the meteredResourceMetadata field/object.
     * </pre>
     *
     * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 3;</code>
     * @return The meteredResourceMetadata.
     */
    com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata getMeteredResourceMetadata();
    /**
     * <pre>
     * MeteredResourceMetadata for this UserGauge (added in version 2). This is the
     * resource being metered.
     * USAGE NOTES:
     * - CDP Control Plane apps using version 2 of the event model must fully
     *   populate the meteredResourceMetadata field/object.
     * </pre>
     *
     * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 3;</code>
     */
    com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataOrBuilder getMeteredResourceMetadataOrBuilder();
  }
  /**
   * <pre>
   * A gauge of current users. The use case is to report all known users at each
   * event.
   * REPORTING INTERVAL:     Every 30 minutes
   * USAGE NOTES:            See clusterCrn, userId, and meteredResourceMetadata fields
   * </pre>
   *
   * Protobuf type {@code meteringevents.User}
   */
  public static final class User extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:meteringevents.User)
      UserOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use User.newBuilder() to construct.
    private User(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private User() {
      clusterCrn_ = "";
      userId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new User();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_User_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_User_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User.class, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User.Builder.class);
    }

    public static final int CLUSTERCRN_FIELD_NUMBER = 1;
    private volatile java.lang.Object clusterCrn_;
    /**
     * <pre>
     * The cluster CRN. (deprecated in version 2)
     * USAGE NOTES:
     * - This field is deprecated. The meteredResourceMetadata field/object should be
     *   populated instead.
     * - CDP Control Plane apps using version 1 of the event model are expected
     *   to provide an RPC service for collecting cluster/environment related
     *   information (i.e. data enrichment) based on this CRN. For more
     *   information see the CDP Metering Technical Specification ([1]) referenced
     *   above.
     * - CDP Control Plane apps using version 2 of the event model should populate
     *   the meteredResourceMetadata field/object instead of this field; this field can be
     *   ignored.
     * </pre>
     *
     * <code>string clusterCrn = 1;</code>
     * @return The clusterCrn.
     */
    @java.lang.Override
    public java.lang.String getClusterCrn() {
      java.lang.Object ref = clusterCrn_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        clusterCrn_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The cluster CRN. (deprecated in version 2)
     * USAGE NOTES:
     * - This field is deprecated. The meteredResourceMetadata field/object should be
     *   populated instead.
     * - CDP Control Plane apps using version 1 of the event model are expected
     *   to provide an RPC service for collecting cluster/environment related
     *   information (i.e. data enrichment) based on this CRN. For more
     *   information see the CDP Metering Technical Specification ([1]) referenced
     *   above.
     * - CDP Control Plane apps using version 2 of the event model should populate
     *   the meteredResourceMetadata field/object instead of this field; this field can be
     *   ignored.
     * </pre>
     *
     * <code>string clusterCrn = 1;</code>
     * @return The bytes for clusterCrn.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getClusterCrnBytes() {
      java.lang.Object ref = clusterCrn_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clusterCrn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int USERID_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList userId_;
    /**
     * <pre>
     * The userIds to report.
     * USAGE NOTES:
     * - If no userId values are provided, the event is still persisted.
     * - Empty userId values are not allowed.
     * </pre>
     *
     * <code>repeated string userId = 2;</code>
     * @return A list containing the userId.
     */
    public com.google.protobuf.ProtocolStringList
        getUserIdList() {
      return userId_;
    }
    /**
     * <pre>
     * The userIds to report.
     * USAGE NOTES:
     * - If no userId values are provided, the event is still persisted.
     * - Empty userId values are not allowed.
     * </pre>
     *
     * <code>repeated string userId = 2;</code>
     * @return The count of userId.
     */
    public int getUserIdCount() {
      return userId_.size();
    }
    /**
     * <pre>
     * The userIds to report.
     * USAGE NOTES:
     * - If no userId values are provided, the event is still persisted.
     * - Empty userId values are not allowed.
     * </pre>
     *
     * <code>repeated string userId = 2;</code>
     * @param index The index of the element to return.
     * @return The userId at the given index.
     */
    public java.lang.String getUserId(int index) {
      return userId_.get(index);
    }
    /**
     * <pre>
     * The userIds to report.
     * USAGE NOTES:
     * - If no userId values are provided, the event is still persisted.
     * - Empty userId values are not allowed.
     * </pre>
     *
     * <code>repeated string userId = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the userId at the given index.
     */
    public com.google.protobuf.ByteString
        getUserIdBytes(int index) {
      return userId_.getByteString(index);
    }

    public static final int METEREDRESOURCEMETADATA_FIELD_NUMBER = 3;
    private com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata meteredResourceMetadata_;
    /**
     * <pre>
     * MeteredResourceMetadata for this UserGauge (added in version 2). This is the
     * resource being metered.
     * USAGE NOTES:
     * - CDP Control Plane apps using version 2 of the event model must fully
     *   populate the meteredResourceMetadata field/object.
     * </pre>
     *
     * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 3;</code>
     * @return Whether the meteredResourceMetadata field is set.
     */
    @java.lang.Override
    public boolean hasMeteredResourceMetadata() {
      return meteredResourceMetadata_ != null;
    }
    /**
     * <pre>
     * MeteredResourceMetadata for this UserGauge (added in version 2). This is the
     * resource being metered.
     * USAGE NOTES:
     * - CDP Control Plane apps using version 2 of the event model must fully
     *   populate the meteredResourceMetadata field/object.
     * </pre>
     *
     * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 3;</code>
     * @return The meteredResourceMetadata.
     */
    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata getMeteredResourceMetadata() {
      return meteredResourceMetadata_ == null ? com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata.getDefaultInstance() : meteredResourceMetadata_;
    }
    /**
     * <pre>
     * MeteredResourceMetadata for this UserGauge (added in version 2). This is the
     * resource being metered.
     * USAGE NOTES:
     * - CDP Control Plane apps using version 2 of the event model must fully
     *   populate the meteredResourceMetadata field/object.
     * </pre>
     *
     * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 3;</code>
     */
    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataOrBuilder getMeteredResourceMetadataOrBuilder() {
      return getMeteredResourceMetadata();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(clusterCrn_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, clusterCrn_);
      }
      for (int i = 0; i < userId_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, userId_.getRaw(i));
      }
      if (meteredResourceMetadata_ != null) {
        output.writeMessage(3, getMeteredResourceMetadata());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(clusterCrn_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, clusterCrn_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < userId_.size(); i++) {
          dataSize += computeStringSizeNoTag(userId_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getUserIdList().size();
      }
      if (meteredResourceMetadata_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getMeteredResourceMetadata());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User)) {
        return super.equals(obj);
      }
      com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User other = (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User) obj;

      if (!getClusterCrn()
          .equals(other.getClusterCrn())) return false;
      if (!getUserIdList()
          .equals(other.getUserIdList())) return false;
      if (hasMeteredResourceMetadata() != other.hasMeteredResourceMetadata()) return false;
      if (hasMeteredResourceMetadata()) {
        if (!getMeteredResourceMetadata()
            .equals(other.getMeteredResourceMetadata())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CLUSTERCRN_FIELD_NUMBER;
      hash = (53 * hash) + getClusterCrn().hashCode();
      if (getUserIdCount() > 0) {
        hash = (37 * hash) + USERID_FIELD_NUMBER;
        hash = (53 * hash) + getUserIdList().hashCode();
      }
      if (hasMeteredResourceMetadata()) {
        hash = (37 * hash) + METEREDRESOURCEMETADATA_FIELD_NUMBER;
        hash = (53 * hash) + getMeteredResourceMetadata().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A gauge of current users. The use case is to report all known users at each
     * event.
     * REPORTING INTERVAL:     Every 30 minutes
     * USAGE NOTES:            See clusterCrn, userId, and meteredResourceMetadata fields
     * </pre>
     *
     * Protobuf type {@code meteringevents.User}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:meteringevents.User)
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.UserOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_User_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_User_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User.class, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User.Builder.class);
      }

      // Construct using com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        clusterCrn_ = "";

        userId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (meteredResourceMetadataBuilder_ == null) {
          meteredResourceMetadata_ = null;
        } else {
          meteredResourceMetadata_ = null;
          meteredResourceMetadataBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_User_descriptor;
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User getDefaultInstanceForType() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User.getDefaultInstance();
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User build() {
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User buildPartial() {
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User result = new com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User(this);
        int from_bitField0_ = bitField0_;
        result.clusterCrn_ = clusterCrn_;
        if (((bitField0_ & 0x00000001) != 0)) {
          userId_ = userId_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.userId_ = userId_;
        if (meteredResourceMetadataBuilder_ == null) {
          result.meteredResourceMetadata_ = meteredResourceMetadata_;
        } else {
          result.meteredResourceMetadata_ = meteredResourceMetadataBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User) {
          return mergeFrom((com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User other) {
        if (other == com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User.getDefaultInstance()) return this;
        if (!other.getClusterCrn().isEmpty()) {
          clusterCrn_ = other.clusterCrn_;
          onChanged();
        }
        if (!other.userId_.isEmpty()) {
          if (userId_.isEmpty()) {
            userId_ = other.userId_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureUserIdIsMutable();
            userId_.addAll(other.userId_);
          }
          onChanged();
        }
        if (other.hasMeteredResourceMetadata()) {
          mergeMeteredResourceMetadata(other.getMeteredResourceMetadata());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                clusterCrn_ = input.readStringRequireUtf8();

                break;
              } // case 10
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureUserIdIsMutable();
                userId_.add(s);
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getMeteredResourceMetadataFieldBuilder().getBuilder(),
                    extensionRegistry);

                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object clusterCrn_ = "";
      /**
       * <pre>
       * The cluster CRN. (deprecated in version 2)
       * USAGE NOTES:
       * - This field is deprecated. The meteredResourceMetadata field/object should be
       *   populated instead.
       * - CDP Control Plane apps using version 1 of the event model are expected
       *   to provide an RPC service for collecting cluster/environment related
       *   information (i.e. data enrichment) based on this CRN. For more
       *   information see the CDP Metering Technical Specification ([1]) referenced
       *   above.
       * - CDP Control Plane apps using version 2 of the event model should populate
       *   the meteredResourceMetadata field/object instead of this field; this field can be
       *   ignored.
       * </pre>
       *
       * <code>string clusterCrn = 1;</code>
       * @return The clusterCrn.
       */
      public java.lang.String getClusterCrn() {
        java.lang.Object ref = clusterCrn_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          clusterCrn_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The cluster CRN. (deprecated in version 2)
       * USAGE NOTES:
       * - This field is deprecated. The meteredResourceMetadata field/object should be
       *   populated instead.
       * - CDP Control Plane apps using version 1 of the event model are expected
       *   to provide an RPC service for collecting cluster/environment related
       *   information (i.e. data enrichment) based on this CRN. For more
       *   information see the CDP Metering Technical Specification ([1]) referenced
       *   above.
       * - CDP Control Plane apps using version 2 of the event model should populate
       *   the meteredResourceMetadata field/object instead of this field; this field can be
       *   ignored.
       * </pre>
       *
       * <code>string clusterCrn = 1;</code>
       * @return The bytes for clusterCrn.
       */
      public com.google.protobuf.ByteString
          getClusterCrnBytes() {
        java.lang.Object ref = clusterCrn_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          clusterCrn_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The cluster CRN. (deprecated in version 2)
       * USAGE NOTES:
       * - This field is deprecated. The meteredResourceMetadata field/object should be
       *   populated instead.
       * - CDP Control Plane apps using version 1 of the event model are expected
       *   to provide an RPC service for collecting cluster/environment related
       *   information (i.e. data enrichment) based on this CRN. For more
       *   information see the CDP Metering Technical Specification ([1]) referenced
       *   above.
       * - CDP Control Plane apps using version 2 of the event model should populate
       *   the meteredResourceMetadata field/object instead of this field; this field can be
       *   ignored.
       * </pre>
       *
       * <code>string clusterCrn = 1;</code>
       * @param value The clusterCrn to set.
       * @return This builder for chaining.
       */
      public Builder setClusterCrn(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        clusterCrn_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The cluster CRN. (deprecated in version 2)
       * USAGE NOTES:
       * - This field is deprecated. The meteredResourceMetadata field/object should be
       *   populated instead.
       * - CDP Control Plane apps using version 1 of the event model are expected
       *   to provide an RPC service for collecting cluster/environment related
       *   information (i.e. data enrichment) based on this CRN. For more
       *   information see the CDP Metering Technical Specification ([1]) referenced
       *   above.
       * - CDP Control Plane apps using version 2 of the event model should populate
       *   the meteredResourceMetadata field/object instead of this field; this field can be
       *   ignored.
       * </pre>
       *
       * <code>string clusterCrn = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearClusterCrn() {
        
        clusterCrn_ = getDefaultInstance().getClusterCrn();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The cluster CRN. (deprecated in version 2)
       * USAGE NOTES:
       * - This field is deprecated. The meteredResourceMetadata field/object should be
       *   populated instead.
       * - CDP Control Plane apps using version 1 of the event model are expected
       *   to provide an RPC service for collecting cluster/environment related
       *   information (i.e. data enrichment) based on this CRN. For more
       *   information see the CDP Metering Technical Specification ([1]) referenced
       *   above.
       * - CDP Control Plane apps using version 2 of the event model should populate
       *   the meteredResourceMetadata field/object instead of this field; this field can be
       *   ignored.
       * </pre>
       *
       * <code>string clusterCrn = 1;</code>
       * @param value The bytes for clusterCrn to set.
       * @return This builder for chaining.
       */
      public Builder setClusterCrnBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        clusterCrn_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList userId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureUserIdIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          userId_ = new com.google.protobuf.LazyStringArrayList(userId_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * The userIds to report.
       * USAGE NOTES:
       * - If no userId values are provided, the event is still persisted.
       * - Empty userId values are not allowed.
       * </pre>
       *
       * <code>repeated string userId = 2;</code>
       * @return A list containing the userId.
       */
      public com.google.protobuf.ProtocolStringList
          getUserIdList() {
        return userId_.getUnmodifiableView();
      }
      /**
       * <pre>
       * The userIds to report.
       * USAGE NOTES:
       * - If no userId values are provided, the event is still persisted.
       * - Empty userId values are not allowed.
       * </pre>
       *
       * <code>repeated string userId = 2;</code>
       * @return The count of userId.
       */
      public int getUserIdCount() {
        return userId_.size();
      }
      /**
       * <pre>
       * The userIds to report.
       * USAGE NOTES:
       * - If no userId values are provided, the event is still persisted.
       * - Empty userId values are not allowed.
       * </pre>
       *
       * <code>repeated string userId = 2;</code>
       * @param index The index of the element to return.
       * @return The userId at the given index.
       */
      public java.lang.String getUserId(int index) {
        return userId_.get(index);
      }
      /**
       * <pre>
       * The userIds to report.
       * USAGE NOTES:
       * - If no userId values are provided, the event is still persisted.
       * - Empty userId values are not allowed.
       * </pre>
       *
       * <code>repeated string userId = 2;</code>
       * @param index The index of the value to return.
       * @return The bytes of the userId at the given index.
       */
      public com.google.protobuf.ByteString
          getUserIdBytes(int index) {
        return userId_.getByteString(index);
      }
      /**
       * <pre>
       * The userIds to report.
       * USAGE NOTES:
       * - If no userId values are provided, the event is still persisted.
       * - Empty userId values are not allowed.
       * </pre>
       *
       * <code>repeated string userId = 2;</code>
       * @param index The index to set the value at.
       * @param value The userId to set.
       * @return This builder for chaining.
       */
      public Builder setUserId(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureUserIdIsMutable();
        userId_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The userIds to report.
       * USAGE NOTES:
       * - If no userId values are provided, the event is still persisted.
       * - Empty userId values are not allowed.
       * </pre>
       *
       * <code>repeated string userId = 2;</code>
       * @param value The userId to add.
       * @return This builder for chaining.
       */
      public Builder addUserId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureUserIdIsMutable();
        userId_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The userIds to report.
       * USAGE NOTES:
       * - If no userId values are provided, the event is still persisted.
       * - Empty userId values are not allowed.
       * </pre>
       *
       * <code>repeated string userId = 2;</code>
       * @param values The userId to add.
       * @return This builder for chaining.
       */
      public Builder addAllUserId(
          java.lang.Iterable<java.lang.String> values) {
        ensureUserIdIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, userId_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The userIds to report.
       * USAGE NOTES:
       * - If no userId values are provided, the event is still persisted.
       * - Empty userId values are not allowed.
       * </pre>
       *
       * <code>repeated string userId = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearUserId() {
        userId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The userIds to report.
       * USAGE NOTES:
       * - If no userId values are provided, the event is still persisted.
       * - Empty userId values are not allowed.
       * </pre>
       *
       * <code>repeated string userId = 2;</code>
       * @param value The bytes of the userId to add.
       * @return This builder for chaining.
       */
      public Builder addUserIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureUserIdIsMutable();
        userId_.add(value);
        onChanged();
        return this;
      }

      private com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata meteredResourceMetadata_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataOrBuilder> meteredResourceMetadataBuilder_;
      /**
       * <pre>
       * MeteredResourceMetadata for this UserGauge (added in version 2). This is the
       * resource being metered.
       * USAGE NOTES:
       * - CDP Control Plane apps using version 2 of the event model must fully
       *   populate the meteredResourceMetadata field/object.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 3;</code>
       * @return Whether the meteredResourceMetadata field is set.
       */
      public boolean hasMeteredResourceMetadata() {
        return meteredResourceMetadataBuilder_ != null || meteredResourceMetadata_ != null;
      }
      /**
       * <pre>
       * MeteredResourceMetadata for this UserGauge (added in version 2). This is the
       * resource being metered.
       * USAGE NOTES:
       * - CDP Control Plane apps using version 2 of the event model must fully
       *   populate the meteredResourceMetadata field/object.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 3;</code>
       * @return The meteredResourceMetadata.
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata getMeteredResourceMetadata() {
        if (meteredResourceMetadataBuilder_ == null) {
          return meteredResourceMetadata_ == null ? com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata.getDefaultInstance() : meteredResourceMetadata_;
        } else {
          return meteredResourceMetadataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * MeteredResourceMetadata for this UserGauge (added in version 2). This is the
       * resource being metered.
       * USAGE NOTES:
       * - CDP Control Plane apps using version 2 of the event model must fully
       *   populate the meteredResourceMetadata field/object.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 3;</code>
       */
      public Builder setMeteredResourceMetadata(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata value) {
        if (meteredResourceMetadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          meteredResourceMetadata_ = value;
          onChanged();
        } else {
          meteredResourceMetadataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * MeteredResourceMetadata for this UserGauge (added in version 2). This is the
       * resource being metered.
       * USAGE NOTES:
       * - CDP Control Plane apps using version 2 of the event model must fully
       *   populate the meteredResourceMetadata field/object.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 3;</code>
       */
      public Builder setMeteredResourceMetadata(
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata.Builder builderForValue) {
        if (meteredResourceMetadataBuilder_ == null) {
          meteredResourceMetadata_ = builderForValue.build();
          onChanged();
        } else {
          meteredResourceMetadataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * MeteredResourceMetadata for this UserGauge (added in version 2). This is the
       * resource being metered.
       * USAGE NOTES:
       * - CDP Control Plane apps using version 2 of the event model must fully
       *   populate the meteredResourceMetadata field/object.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 3;</code>
       */
      public Builder mergeMeteredResourceMetadata(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata value) {
        if (meteredResourceMetadataBuilder_ == null) {
          if (meteredResourceMetadata_ != null) {
            meteredResourceMetadata_ =
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata.newBuilder(meteredResourceMetadata_).mergeFrom(value).buildPartial();
          } else {
            meteredResourceMetadata_ = value;
          }
          onChanged();
        } else {
          meteredResourceMetadataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * MeteredResourceMetadata for this UserGauge (added in version 2). This is the
       * resource being metered.
       * USAGE NOTES:
       * - CDP Control Plane apps using version 2 of the event model must fully
       *   populate the meteredResourceMetadata field/object.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 3;</code>
       */
      public Builder clearMeteredResourceMetadata() {
        if (meteredResourceMetadataBuilder_ == null) {
          meteredResourceMetadata_ = null;
          onChanged();
        } else {
          meteredResourceMetadata_ = null;
          meteredResourceMetadataBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * MeteredResourceMetadata for this UserGauge (added in version 2). This is the
       * resource being metered.
       * USAGE NOTES:
       * - CDP Control Plane apps using version 2 of the event model must fully
       *   populate the meteredResourceMetadata field/object.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 3;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata.Builder getMeteredResourceMetadataBuilder() {
        
        onChanged();
        return getMeteredResourceMetadataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * MeteredResourceMetadata for this UserGauge (added in version 2). This is the
       * resource being metered.
       * USAGE NOTES:
       * - CDP Control Plane apps using version 2 of the event model must fully
       *   populate the meteredResourceMetadata field/object.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 3;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataOrBuilder getMeteredResourceMetadataOrBuilder() {
        if (meteredResourceMetadataBuilder_ != null) {
          return meteredResourceMetadataBuilder_.getMessageOrBuilder();
        } else {
          return meteredResourceMetadata_ == null ?
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata.getDefaultInstance() : meteredResourceMetadata_;
        }
      }
      /**
       * <pre>
       * MeteredResourceMetadata for this UserGauge (added in version 2). This is the
       * resource being metered.
       * USAGE NOTES:
       * - CDP Control Plane apps using version 2 of the event model must fully
       *   populate the meteredResourceMetadata field/object.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataOrBuilder> 
          getMeteredResourceMetadataFieldBuilder() {
        if (meteredResourceMetadataBuilder_ == null) {
          meteredResourceMetadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataOrBuilder>(
                  getMeteredResourceMetadata(),
                  getParentForChildren(),
                  isClean());
          meteredResourceMetadata_ = null;
        }
        return meteredResourceMetadataBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:meteringevents.User)
    }

    // @@protoc_insertion_point(class_scope:meteringevents.User)
    private static final com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User();
    }

    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<User>
        PARSER = new com.google.protobuf.AbstractParser<User>() {
      @java.lang.Override
      public User parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<User> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<User> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.User getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NaafHeartbeatOrBuilder extends
      // @@protoc_insertion_point(interface_extends:meteringevents.NaafHeartbeat)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * List of NaaF invocations that this heartbeat is being submitted for.
     * USAGE NOTES:
     * - If there are no NaaF invocations (i.e. empty list), the event will be
     *   dropped.
     * - If any of the NaaF invocation objects do not contain the required data,
     *   no event will be persisted for that particular NaaF invocation.
     * </pre>
     *
     * <code>repeated .meteringevents.NaafInvocation naafInvocations = 1;</code>
     */
    java.util.List<com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation> 
        getNaafInvocationsList();
    /**
     * <pre>
     * List of NaaF invocations that this heartbeat is being submitted for.
     * USAGE NOTES:
     * - If there are no NaaF invocations (i.e. empty list), the event will be
     *   dropped.
     * - If any of the NaaF invocation objects do not contain the required data,
     *   no event will be persisted for that particular NaaF invocation.
     * </pre>
     *
     * <code>repeated .meteringevents.NaafInvocation naafInvocations = 1;</code>
     */
    com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation getNaafInvocations(int index);
    /**
     * <pre>
     * List of NaaF invocations that this heartbeat is being submitted for.
     * USAGE NOTES:
     * - If there are no NaaF invocations (i.e. empty list), the event will be
     *   dropped.
     * - If any of the NaaF invocation objects do not contain the required data,
     *   no event will be persisted for that particular NaaF invocation.
     * </pre>
     *
     * <code>repeated .meteringevents.NaafInvocation naafInvocations = 1;</code>
     */
    int getNaafInvocationsCount();
    /**
     * <pre>
     * List of NaaF invocations that this heartbeat is being submitted for.
     * USAGE NOTES:
     * - If there are no NaaF invocations (i.e. empty list), the event will be
     *   dropped.
     * - If any of the NaaF invocation objects do not contain the required data,
     *   no event will be persisted for that particular NaaF invocation.
     * </pre>
     *
     * <code>repeated .meteringevents.NaafInvocation naafInvocations = 1;</code>
     */
    java.util.List<? extends com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocationOrBuilder> 
        getNaafInvocationsOrBuilderList();
    /**
     * <pre>
     * List of NaaF invocations that this heartbeat is being submitted for.
     * USAGE NOTES:
     * - If there are no NaaF invocations (i.e. empty list), the event will be
     *   dropped.
     * - If any of the NaaF invocation objects do not contain the required data,
     *   no event will be persisted for that particular NaaF invocation.
     * </pre>
     *
     * <code>repeated .meteringevents.NaafInvocation naafInvocations = 1;</code>
     */
    com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocationOrBuilder getNaafInvocationsOrBuilder(
        int index);

    /**
     * <pre>
     * MeteredResourceMetadataLite for this NaafHeartbeat (added in
     * version 3). This is the resource being metered.
     * USAGE NOTES:
     * - This object must be present and fully populated.
     * - If any of the required fields of the MeteredResourceMetadataLite object
     *   are not provided, the event will not be persisted.
     * </pre>
     *
     * <code>.meteringevents.MeteredResourceMetadataLite meteredResourceMetadata = 2;</code>
     * @return Whether the meteredResourceMetadata field is set.
     */
    boolean hasMeteredResourceMetadata();
    /**
     * <pre>
     * MeteredResourceMetadataLite for this NaafHeartbeat (added in
     * version 3). This is the resource being metered.
     * USAGE NOTES:
     * - This object must be present and fully populated.
     * - If any of the required fields of the MeteredResourceMetadataLite object
     *   are not provided, the event will not be persisted.
     * </pre>
     *
     * <code>.meteringevents.MeteredResourceMetadataLite meteredResourceMetadata = 2;</code>
     * @return The meteredResourceMetadata.
     */
    com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite getMeteredResourceMetadata();
    /**
     * <pre>
     * MeteredResourceMetadataLite for this NaafHeartbeat (added in
     * version 3). This is the resource being metered.
     * USAGE NOTES:
     * - This object must be present and fully populated.
     * - If any of the required fields of the MeteredResourceMetadataLite object
     *   are not provided, the event will not be persisted.
     * </pre>
     *
     * <code>.meteringevents.MeteredResourceMetadataLite meteredResourceMetadata = 2;</code>
     */
    com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLiteOrBuilder getMeteredResourceMetadataOrBuilder();
  }
  /**
   * <pre>
   * A heartbeat event for one or more NaaF invocations.
   * These heartbeats originate from the Nifi As A Service Pre Aggregation
   * Metering service within the control plane. This service is responsible
   * for correctly identifying and aggregating individual heartbeats from the
   * function invocation.
   * REPORTING INTERVAL: Every 1 hour.
   * USAGE NOTES:        See naafInvocations and meteredResourceMetadataLite fields
   * </pre>
   *
   * Protobuf type {@code meteringevents.NaafHeartbeat}
   */
  public static final class NaafHeartbeat extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:meteringevents.NaafHeartbeat)
      NaafHeartbeatOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NaafHeartbeat.newBuilder() to construct.
    private NaafHeartbeat(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NaafHeartbeat() {
      naafInvocations_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new NaafHeartbeat();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_NaafHeartbeat_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_NaafHeartbeat_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat.class, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat.Builder.class);
    }

    public static final int NAAFINVOCATIONS_FIELD_NUMBER = 1;
    private java.util.List<com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation> naafInvocations_;
    /**
     * <pre>
     * List of NaaF invocations that this heartbeat is being submitted for.
     * USAGE NOTES:
     * - If there are no NaaF invocations (i.e. empty list), the event will be
     *   dropped.
     * - If any of the NaaF invocation objects do not contain the required data,
     *   no event will be persisted for that particular NaaF invocation.
     * </pre>
     *
     * <code>repeated .meteringevents.NaafInvocation naafInvocations = 1;</code>
     */
    @java.lang.Override
    public java.util.List<com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation> getNaafInvocationsList() {
      return naafInvocations_;
    }
    /**
     * <pre>
     * List of NaaF invocations that this heartbeat is being submitted for.
     * USAGE NOTES:
     * - If there are no NaaF invocations (i.e. empty list), the event will be
     *   dropped.
     * - If any of the NaaF invocation objects do not contain the required data,
     *   no event will be persisted for that particular NaaF invocation.
     * </pre>
     *
     * <code>repeated .meteringevents.NaafInvocation naafInvocations = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocationOrBuilder> 
        getNaafInvocationsOrBuilderList() {
      return naafInvocations_;
    }
    /**
     * <pre>
     * List of NaaF invocations that this heartbeat is being submitted for.
     * USAGE NOTES:
     * - If there are no NaaF invocations (i.e. empty list), the event will be
     *   dropped.
     * - If any of the NaaF invocation objects do not contain the required data,
     *   no event will be persisted for that particular NaaF invocation.
     * </pre>
     *
     * <code>repeated .meteringevents.NaafInvocation naafInvocations = 1;</code>
     */
    @java.lang.Override
    public int getNaafInvocationsCount() {
      return naafInvocations_.size();
    }
    /**
     * <pre>
     * List of NaaF invocations that this heartbeat is being submitted for.
     * USAGE NOTES:
     * - If there are no NaaF invocations (i.e. empty list), the event will be
     *   dropped.
     * - If any of the NaaF invocation objects do not contain the required data,
     *   no event will be persisted for that particular NaaF invocation.
     * </pre>
     *
     * <code>repeated .meteringevents.NaafInvocation naafInvocations = 1;</code>
     */
    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation getNaafInvocations(int index) {
      return naafInvocations_.get(index);
    }
    /**
     * <pre>
     * List of NaaF invocations that this heartbeat is being submitted for.
     * USAGE NOTES:
     * - If there are no NaaF invocations (i.e. empty list), the event will be
     *   dropped.
     * - If any of the NaaF invocation objects do not contain the required data,
     *   no event will be persisted for that particular NaaF invocation.
     * </pre>
     *
     * <code>repeated .meteringevents.NaafInvocation naafInvocations = 1;</code>
     */
    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocationOrBuilder getNaafInvocationsOrBuilder(
        int index) {
      return naafInvocations_.get(index);
    }

    public static final int METEREDRESOURCEMETADATA_FIELD_NUMBER = 2;
    private com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite meteredResourceMetadata_;
    /**
     * <pre>
     * MeteredResourceMetadataLite for this NaafHeartbeat (added in
     * version 3). This is the resource being metered.
     * USAGE NOTES:
     * - This object must be present and fully populated.
     * - If any of the required fields of the MeteredResourceMetadataLite object
     *   are not provided, the event will not be persisted.
     * </pre>
     *
     * <code>.meteringevents.MeteredResourceMetadataLite meteredResourceMetadata = 2;</code>
     * @return Whether the meteredResourceMetadata field is set.
     */
    @java.lang.Override
    public boolean hasMeteredResourceMetadata() {
      return meteredResourceMetadata_ != null;
    }
    /**
     * <pre>
     * MeteredResourceMetadataLite for this NaafHeartbeat (added in
     * version 3). This is the resource being metered.
     * USAGE NOTES:
     * - This object must be present and fully populated.
     * - If any of the required fields of the MeteredResourceMetadataLite object
     *   are not provided, the event will not be persisted.
     * </pre>
     *
     * <code>.meteringevents.MeteredResourceMetadataLite meteredResourceMetadata = 2;</code>
     * @return The meteredResourceMetadata.
     */
    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite getMeteredResourceMetadata() {
      return meteredResourceMetadata_ == null ? com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite.getDefaultInstance() : meteredResourceMetadata_;
    }
    /**
     * <pre>
     * MeteredResourceMetadataLite for this NaafHeartbeat (added in
     * version 3). This is the resource being metered.
     * USAGE NOTES:
     * - This object must be present and fully populated.
     * - If any of the required fields of the MeteredResourceMetadataLite object
     *   are not provided, the event will not be persisted.
     * </pre>
     *
     * <code>.meteringevents.MeteredResourceMetadataLite meteredResourceMetadata = 2;</code>
     */
    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLiteOrBuilder getMeteredResourceMetadataOrBuilder() {
      return getMeteredResourceMetadata();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < naafInvocations_.size(); i++) {
        output.writeMessage(1, naafInvocations_.get(i));
      }
      if (meteredResourceMetadata_ != null) {
        output.writeMessage(2, getMeteredResourceMetadata());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < naafInvocations_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, naafInvocations_.get(i));
      }
      if (meteredResourceMetadata_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getMeteredResourceMetadata());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat)) {
        return super.equals(obj);
      }
      com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat other = (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat) obj;

      if (!getNaafInvocationsList()
          .equals(other.getNaafInvocationsList())) return false;
      if (hasMeteredResourceMetadata() != other.hasMeteredResourceMetadata()) return false;
      if (hasMeteredResourceMetadata()) {
        if (!getMeteredResourceMetadata()
            .equals(other.getMeteredResourceMetadata())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getNaafInvocationsCount() > 0) {
        hash = (37 * hash) + NAAFINVOCATIONS_FIELD_NUMBER;
        hash = (53 * hash) + getNaafInvocationsList().hashCode();
      }
      if (hasMeteredResourceMetadata()) {
        hash = (37 * hash) + METEREDRESOURCEMETADATA_FIELD_NUMBER;
        hash = (53 * hash) + getMeteredResourceMetadata().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A heartbeat event for one or more NaaF invocations.
     * These heartbeats originate from the Nifi As A Service Pre Aggregation
     * Metering service within the control plane. This service is responsible
     * for correctly identifying and aggregating individual heartbeats from the
     * function invocation.
     * REPORTING INTERVAL: Every 1 hour.
     * USAGE NOTES:        See naafInvocations and meteredResourceMetadataLite fields
     * </pre>
     *
     * Protobuf type {@code meteringevents.NaafHeartbeat}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:meteringevents.NaafHeartbeat)
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_NaafHeartbeat_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_NaafHeartbeat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat.class, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat.Builder.class);
      }

      // Construct using com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (naafInvocationsBuilder_ == null) {
          naafInvocations_ = java.util.Collections.emptyList();
        } else {
          naafInvocations_ = null;
          naafInvocationsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (meteredResourceMetadataBuilder_ == null) {
          meteredResourceMetadata_ = null;
        } else {
          meteredResourceMetadata_ = null;
          meteredResourceMetadataBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_NaafHeartbeat_descriptor;
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat getDefaultInstanceForType() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat.getDefaultInstance();
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat build() {
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat buildPartial() {
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat result = new com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat(this);
        int from_bitField0_ = bitField0_;
        if (naafInvocationsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            naafInvocations_ = java.util.Collections.unmodifiableList(naafInvocations_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.naafInvocations_ = naafInvocations_;
        } else {
          result.naafInvocations_ = naafInvocationsBuilder_.build();
        }
        if (meteredResourceMetadataBuilder_ == null) {
          result.meteredResourceMetadata_ = meteredResourceMetadata_;
        } else {
          result.meteredResourceMetadata_ = meteredResourceMetadataBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat) {
          return mergeFrom((com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat other) {
        if (other == com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat.getDefaultInstance()) return this;
        if (naafInvocationsBuilder_ == null) {
          if (!other.naafInvocations_.isEmpty()) {
            if (naafInvocations_.isEmpty()) {
              naafInvocations_ = other.naafInvocations_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureNaafInvocationsIsMutable();
              naafInvocations_.addAll(other.naafInvocations_);
            }
            onChanged();
          }
        } else {
          if (!other.naafInvocations_.isEmpty()) {
            if (naafInvocationsBuilder_.isEmpty()) {
              naafInvocationsBuilder_.dispose();
              naafInvocationsBuilder_ = null;
              naafInvocations_ = other.naafInvocations_;
              bitField0_ = (bitField0_ & ~0x00000001);
              naafInvocationsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getNaafInvocationsFieldBuilder() : null;
            } else {
              naafInvocationsBuilder_.addAllMessages(other.naafInvocations_);
            }
          }
        }
        if (other.hasMeteredResourceMetadata()) {
          mergeMeteredResourceMetadata(other.getMeteredResourceMetadata());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation m =
                    input.readMessage(
                        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation.parser(),
                        extensionRegistry);
                if (naafInvocationsBuilder_ == null) {
                  ensureNaafInvocationsIsMutable();
                  naafInvocations_.add(m);
                } else {
                  naafInvocationsBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getMeteredResourceMetadataFieldBuilder().getBuilder(),
                    extensionRegistry);

                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation> naafInvocations_ =
        java.util.Collections.emptyList();
      private void ensureNaafInvocationsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          naafInvocations_ = new java.util.ArrayList<com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation>(naafInvocations_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocationOrBuilder> naafInvocationsBuilder_;

      /**
       * <pre>
       * List of NaaF invocations that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no NaaF invocations (i.e. empty list), the event will be
       *   dropped.
       * - If any of the NaaF invocation objects do not contain the required data,
       *   no event will be persisted for that particular NaaF invocation.
       * </pre>
       *
       * <code>repeated .meteringevents.NaafInvocation naafInvocations = 1;</code>
       */
      public java.util.List<com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation> getNaafInvocationsList() {
        if (naafInvocationsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(naafInvocations_);
        } else {
          return naafInvocationsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of NaaF invocations that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no NaaF invocations (i.e. empty list), the event will be
       *   dropped.
       * - If any of the NaaF invocation objects do not contain the required data,
       *   no event will be persisted for that particular NaaF invocation.
       * </pre>
       *
       * <code>repeated .meteringevents.NaafInvocation naafInvocations = 1;</code>
       */
      public int getNaafInvocationsCount() {
        if (naafInvocationsBuilder_ == null) {
          return naafInvocations_.size();
        } else {
          return naafInvocationsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of NaaF invocations that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no NaaF invocations (i.e. empty list), the event will be
       *   dropped.
       * - If any of the NaaF invocation objects do not contain the required data,
       *   no event will be persisted for that particular NaaF invocation.
       * </pre>
       *
       * <code>repeated .meteringevents.NaafInvocation naafInvocations = 1;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation getNaafInvocations(int index) {
        if (naafInvocationsBuilder_ == null) {
          return naafInvocations_.get(index);
        } else {
          return naafInvocationsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of NaaF invocations that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no NaaF invocations (i.e. empty list), the event will be
       *   dropped.
       * - If any of the NaaF invocation objects do not contain the required data,
       *   no event will be persisted for that particular NaaF invocation.
       * </pre>
       *
       * <code>repeated .meteringevents.NaafInvocation naafInvocations = 1;</code>
       */
      public Builder setNaafInvocations(
          int index, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation value) {
        if (naafInvocationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNaafInvocationsIsMutable();
          naafInvocations_.set(index, value);
          onChanged();
        } else {
          naafInvocationsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of NaaF invocations that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no NaaF invocations (i.e. empty list), the event will be
       *   dropped.
       * - If any of the NaaF invocation objects do not contain the required data,
       *   no event will be persisted for that particular NaaF invocation.
       * </pre>
       *
       * <code>repeated .meteringevents.NaafInvocation naafInvocations = 1;</code>
       */
      public Builder setNaafInvocations(
          int index, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation.Builder builderForValue) {
        if (naafInvocationsBuilder_ == null) {
          ensureNaafInvocationsIsMutable();
          naafInvocations_.set(index, builderForValue.build());
          onChanged();
        } else {
          naafInvocationsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of NaaF invocations that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no NaaF invocations (i.e. empty list), the event will be
       *   dropped.
       * - If any of the NaaF invocation objects do not contain the required data,
       *   no event will be persisted for that particular NaaF invocation.
       * </pre>
       *
       * <code>repeated .meteringevents.NaafInvocation naafInvocations = 1;</code>
       */
      public Builder addNaafInvocations(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation value) {
        if (naafInvocationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNaafInvocationsIsMutable();
          naafInvocations_.add(value);
          onChanged();
        } else {
          naafInvocationsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of NaaF invocations that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no NaaF invocations (i.e. empty list), the event will be
       *   dropped.
       * - If any of the NaaF invocation objects do not contain the required data,
       *   no event will be persisted for that particular NaaF invocation.
       * </pre>
       *
       * <code>repeated .meteringevents.NaafInvocation naafInvocations = 1;</code>
       */
      public Builder addNaafInvocations(
          int index, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation value) {
        if (naafInvocationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNaafInvocationsIsMutable();
          naafInvocations_.add(index, value);
          onChanged();
        } else {
          naafInvocationsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of NaaF invocations that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no NaaF invocations (i.e. empty list), the event will be
       *   dropped.
       * - If any of the NaaF invocation objects do not contain the required data,
       *   no event will be persisted for that particular NaaF invocation.
       * </pre>
       *
       * <code>repeated .meteringevents.NaafInvocation naafInvocations = 1;</code>
       */
      public Builder addNaafInvocations(
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation.Builder builderForValue) {
        if (naafInvocationsBuilder_ == null) {
          ensureNaafInvocationsIsMutable();
          naafInvocations_.add(builderForValue.build());
          onChanged();
        } else {
          naafInvocationsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of NaaF invocations that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no NaaF invocations (i.e. empty list), the event will be
       *   dropped.
       * - If any of the NaaF invocation objects do not contain the required data,
       *   no event will be persisted for that particular NaaF invocation.
       * </pre>
       *
       * <code>repeated .meteringevents.NaafInvocation naafInvocations = 1;</code>
       */
      public Builder addNaafInvocations(
          int index, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation.Builder builderForValue) {
        if (naafInvocationsBuilder_ == null) {
          ensureNaafInvocationsIsMutable();
          naafInvocations_.add(index, builderForValue.build());
          onChanged();
        } else {
          naafInvocationsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of NaaF invocations that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no NaaF invocations (i.e. empty list), the event will be
       *   dropped.
       * - If any of the NaaF invocation objects do not contain the required data,
       *   no event will be persisted for that particular NaaF invocation.
       * </pre>
       *
       * <code>repeated .meteringevents.NaafInvocation naafInvocations = 1;</code>
       */
      public Builder addAllNaafInvocations(
          java.lang.Iterable<? extends com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation> values) {
        if (naafInvocationsBuilder_ == null) {
          ensureNaafInvocationsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, naafInvocations_);
          onChanged();
        } else {
          naafInvocationsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of NaaF invocations that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no NaaF invocations (i.e. empty list), the event will be
       *   dropped.
       * - If any of the NaaF invocation objects do not contain the required data,
       *   no event will be persisted for that particular NaaF invocation.
       * </pre>
       *
       * <code>repeated .meteringevents.NaafInvocation naafInvocations = 1;</code>
       */
      public Builder clearNaafInvocations() {
        if (naafInvocationsBuilder_ == null) {
          naafInvocations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          naafInvocationsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of NaaF invocations that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no NaaF invocations (i.e. empty list), the event will be
       *   dropped.
       * - If any of the NaaF invocation objects do not contain the required data,
       *   no event will be persisted for that particular NaaF invocation.
       * </pre>
       *
       * <code>repeated .meteringevents.NaafInvocation naafInvocations = 1;</code>
       */
      public Builder removeNaafInvocations(int index) {
        if (naafInvocationsBuilder_ == null) {
          ensureNaafInvocationsIsMutable();
          naafInvocations_.remove(index);
          onChanged();
        } else {
          naafInvocationsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of NaaF invocations that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no NaaF invocations (i.e. empty list), the event will be
       *   dropped.
       * - If any of the NaaF invocation objects do not contain the required data,
       *   no event will be persisted for that particular NaaF invocation.
       * </pre>
       *
       * <code>repeated .meteringevents.NaafInvocation naafInvocations = 1;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation.Builder getNaafInvocationsBuilder(
          int index) {
        return getNaafInvocationsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of NaaF invocations that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no NaaF invocations (i.e. empty list), the event will be
       *   dropped.
       * - If any of the NaaF invocation objects do not contain the required data,
       *   no event will be persisted for that particular NaaF invocation.
       * </pre>
       *
       * <code>repeated .meteringevents.NaafInvocation naafInvocations = 1;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocationOrBuilder getNaafInvocationsOrBuilder(
          int index) {
        if (naafInvocationsBuilder_ == null) {
          return naafInvocations_.get(index);  } else {
          return naafInvocationsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of NaaF invocations that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no NaaF invocations (i.e. empty list), the event will be
       *   dropped.
       * - If any of the NaaF invocation objects do not contain the required data,
       *   no event will be persisted for that particular NaaF invocation.
       * </pre>
       *
       * <code>repeated .meteringevents.NaafInvocation naafInvocations = 1;</code>
       */
      public java.util.List<? extends com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocationOrBuilder> 
           getNaafInvocationsOrBuilderList() {
        if (naafInvocationsBuilder_ != null) {
          return naafInvocationsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(naafInvocations_);
        }
      }
      /**
       * <pre>
       * List of NaaF invocations that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no NaaF invocations (i.e. empty list), the event will be
       *   dropped.
       * - If any of the NaaF invocation objects do not contain the required data,
       *   no event will be persisted for that particular NaaF invocation.
       * </pre>
       *
       * <code>repeated .meteringevents.NaafInvocation naafInvocations = 1;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation.Builder addNaafInvocationsBuilder() {
        return getNaafInvocationsFieldBuilder().addBuilder(
            com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation.getDefaultInstance());
      }
      /**
       * <pre>
       * List of NaaF invocations that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no NaaF invocations (i.e. empty list), the event will be
       *   dropped.
       * - If any of the NaaF invocation objects do not contain the required data,
       *   no event will be persisted for that particular NaaF invocation.
       * </pre>
       *
       * <code>repeated .meteringevents.NaafInvocation naafInvocations = 1;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation.Builder addNaafInvocationsBuilder(
          int index) {
        return getNaafInvocationsFieldBuilder().addBuilder(
            index, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation.getDefaultInstance());
      }
      /**
       * <pre>
       * List of NaaF invocations that this heartbeat is being submitted for.
       * USAGE NOTES:
       * - If there are no NaaF invocations (i.e. empty list), the event will be
       *   dropped.
       * - If any of the NaaF invocation objects do not contain the required data,
       *   no event will be persisted for that particular NaaF invocation.
       * </pre>
       *
       * <code>repeated .meteringevents.NaafInvocation naafInvocations = 1;</code>
       */
      public java.util.List<com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation.Builder> 
           getNaafInvocationsBuilderList() {
        return getNaafInvocationsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocationOrBuilder> 
          getNaafInvocationsFieldBuilder() {
        if (naafInvocationsBuilder_ == null) {
          naafInvocationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocationOrBuilder>(
                  naafInvocations_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          naafInvocations_ = null;
        }
        return naafInvocationsBuilder_;
      }

      private com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite meteredResourceMetadata_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLiteOrBuilder> meteredResourceMetadataBuilder_;
      /**
       * <pre>
       * MeteredResourceMetadataLite for this NaafHeartbeat (added in
       * version 3). This is the resource being metered.
       * USAGE NOTES:
       * - This object must be present and fully populated.
       * - If any of the required fields of the MeteredResourceMetadataLite object
       *   are not provided, the event will not be persisted.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadataLite meteredResourceMetadata = 2;</code>
       * @return Whether the meteredResourceMetadata field is set.
       */
      public boolean hasMeteredResourceMetadata() {
        return meteredResourceMetadataBuilder_ != null || meteredResourceMetadata_ != null;
      }
      /**
       * <pre>
       * MeteredResourceMetadataLite for this NaafHeartbeat (added in
       * version 3). This is the resource being metered.
       * USAGE NOTES:
       * - This object must be present and fully populated.
       * - If any of the required fields of the MeteredResourceMetadataLite object
       *   are not provided, the event will not be persisted.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadataLite meteredResourceMetadata = 2;</code>
       * @return The meteredResourceMetadata.
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite getMeteredResourceMetadata() {
        if (meteredResourceMetadataBuilder_ == null) {
          return meteredResourceMetadata_ == null ? com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite.getDefaultInstance() : meteredResourceMetadata_;
        } else {
          return meteredResourceMetadataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * MeteredResourceMetadataLite for this NaafHeartbeat (added in
       * version 3). This is the resource being metered.
       * USAGE NOTES:
       * - This object must be present and fully populated.
       * - If any of the required fields of the MeteredResourceMetadataLite object
       *   are not provided, the event will not be persisted.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadataLite meteredResourceMetadata = 2;</code>
       */
      public Builder setMeteredResourceMetadata(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite value) {
        if (meteredResourceMetadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          meteredResourceMetadata_ = value;
          onChanged();
        } else {
          meteredResourceMetadataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * MeteredResourceMetadataLite for this NaafHeartbeat (added in
       * version 3). This is the resource being metered.
       * USAGE NOTES:
       * - This object must be present and fully populated.
       * - If any of the required fields of the MeteredResourceMetadataLite object
       *   are not provided, the event will not be persisted.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadataLite meteredResourceMetadata = 2;</code>
       */
      public Builder setMeteredResourceMetadata(
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite.Builder builderForValue) {
        if (meteredResourceMetadataBuilder_ == null) {
          meteredResourceMetadata_ = builderForValue.build();
          onChanged();
        } else {
          meteredResourceMetadataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * MeteredResourceMetadataLite for this NaafHeartbeat (added in
       * version 3). This is the resource being metered.
       * USAGE NOTES:
       * - This object must be present and fully populated.
       * - If any of the required fields of the MeteredResourceMetadataLite object
       *   are not provided, the event will not be persisted.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadataLite meteredResourceMetadata = 2;</code>
       */
      public Builder mergeMeteredResourceMetadata(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite value) {
        if (meteredResourceMetadataBuilder_ == null) {
          if (meteredResourceMetadata_ != null) {
            meteredResourceMetadata_ =
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite.newBuilder(meteredResourceMetadata_).mergeFrom(value).buildPartial();
          } else {
            meteredResourceMetadata_ = value;
          }
          onChanged();
        } else {
          meteredResourceMetadataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * MeteredResourceMetadataLite for this NaafHeartbeat (added in
       * version 3). This is the resource being metered.
       * USAGE NOTES:
       * - This object must be present and fully populated.
       * - If any of the required fields of the MeteredResourceMetadataLite object
       *   are not provided, the event will not be persisted.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadataLite meteredResourceMetadata = 2;</code>
       */
      public Builder clearMeteredResourceMetadata() {
        if (meteredResourceMetadataBuilder_ == null) {
          meteredResourceMetadata_ = null;
          onChanged();
        } else {
          meteredResourceMetadata_ = null;
          meteredResourceMetadataBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * MeteredResourceMetadataLite for this NaafHeartbeat (added in
       * version 3). This is the resource being metered.
       * USAGE NOTES:
       * - This object must be present and fully populated.
       * - If any of the required fields of the MeteredResourceMetadataLite object
       *   are not provided, the event will not be persisted.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadataLite meteredResourceMetadata = 2;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite.Builder getMeteredResourceMetadataBuilder() {
        
        onChanged();
        return getMeteredResourceMetadataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * MeteredResourceMetadataLite for this NaafHeartbeat (added in
       * version 3). This is the resource being metered.
       * USAGE NOTES:
       * - This object must be present and fully populated.
       * - If any of the required fields of the MeteredResourceMetadataLite object
       *   are not provided, the event will not be persisted.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadataLite meteredResourceMetadata = 2;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLiteOrBuilder getMeteredResourceMetadataOrBuilder() {
        if (meteredResourceMetadataBuilder_ != null) {
          return meteredResourceMetadataBuilder_.getMessageOrBuilder();
        } else {
          return meteredResourceMetadata_ == null ?
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite.getDefaultInstance() : meteredResourceMetadata_;
        }
      }
      /**
       * <pre>
       * MeteredResourceMetadataLite for this NaafHeartbeat (added in
       * version 3). This is the resource being metered.
       * USAGE NOTES:
       * - This object must be present and fully populated.
       * - If any of the required fields of the MeteredResourceMetadataLite object
       *   are not provided, the event will not be persisted.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadataLite meteredResourceMetadata = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLiteOrBuilder> 
          getMeteredResourceMetadataFieldBuilder() {
        if (meteredResourceMetadataBuilder_ == null) {
          meteredResourceMetadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLiteOrBuilder>(
                  getMeteredResourceMetadata(),
                  getParentForChildren(),
                  isClean());
          meteredResourceMetadata_ = null;
        }
        return meteredResourceMetadataBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:meteringevents.NaafHeartbeat)
    }

    // @@protoc_insertion_point(class_scope:meteringevents.NaafHeartbeat)
    private static final com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat();
    }

    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NaafHeartbeat>
        PARSER = new com.google.protobuf.AbstractParser<NaafHeartbeat>() {
      @java.lang.Override
      public NaafHeartbeat parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<NaafHeartbeat> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NaafHeartbeat> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafHeartbeat getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StorageHeartbeatOrBuilder extends
      // @@protoc_insertion_point(interface_extends:meteringevents.StorageHeartbeat)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The actual storage usages.
     * </pre>
     *
     * <code>repeated .meteringevents.Storage storages = 1;</code>
     */
    java.util.List<com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage> 
        getStoragesList();
    /**
     * <pre>
     * The actual storage usages.
     * </pre>
     *
     * <code>repeated .meteringevents.Storage storages = 1;</code>
     */
    com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage getStorages(int index);
    /**
     * <pre>
     * The actual storage usages.
     * </pre>
     *
     * <code>repeated .meteringevents.Storage storages = 1;</code>
     */
    int getStoragesCount();
    /**
     * <pre>
     * The actual storage usages.
     * </pre>
     *
     * <code>repeated .meteringevents.Storage storages = 1;</code>
     */
    java.util.List<? extends com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageOrBuilder> 
        getStoragesOrBuilderList();
    /**
     * <pre>
     * The actual storage usages.
     * </pre>
     *
     * <code>repeated .meteringevents.Storage storages = 1;</code>
     */
    com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageOrBuilder getStoragesOrBuilder(
        int index);

    /**
     * <pre>
     * MeteredResourceMetadata for this storage usage.
     * USAGE NOTES:
     * - For Object Store (S3, etc) heartbeats:
     *   The environmentCrn field is required.
     * - For FileSystem storage (EFS, etc) heartbeats:
     *   All fields are required. The crn field must be a cluster CRN.
     * - For Low Latency storage (EBS, etc) heartbeats:
     *   All fields are required. The crn field must be a cluster CRN.
     * </pre>
     *
     * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 2;</code>
     * @return Whether the meteredResourceMetadata field is set.
     */
    boolean hasMeteredResourceMetadata();
    /**
     * <pre>
     * MeteredResourceMetadata for this storage usage.
     * USAGE NOTES:
     * - For Object Store (S3, etc) heartbeats:
     *   The environmentCrn field is required.
     * - For FileSystem storage (EFS, etc) heartbeats:
     *   All fields are required. The crn field must be a cluster CRN.
     * - For Low Latency storage (EBS, etc) heartbeats:
     *   All fields are required. The crn field must be a cluster CRN.
     * </pre>
     *
     * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 2;</code>
     * @return The meteredResourceMetadata.
     */
    com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata getMeteredResourceMetadata();
    /**
     * <pre>
     * MeteredResourceMetadata for this storage usage.
     * USAGE NOTES:
     * - For Object Store (S3, etc) heartbeats:
     *   The environmentCrn field is required.
     * - For FileSystem storage (EFS, etc) heartbeats:
     *   All fields are required. The crn field must be a cluster CRN.
     * - For Low Latency storage (EBS, etc) heartbeats:
     *   All fields are required. The crn field must be a cluster CRN.
     * </pre>
     *
     * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 2;</code>
     */
    com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataOrBuilder getMeteredResourceMetadataOrBuilder();
  }
  /**
   * <pre>
   * A heartbeat event for storage usages. Heartbeat events may originate from
   * CDP experiences where storage needs to be metered.
   * REPORTING INTERVAL: Every 30 minutes.
   * </pre>
   *
   * Protobuf type {@code meteringevents.StorageHeartbeat}
   */
  public static final class StorageHeartbeat extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:meteringevents.StorageHeartbeat)
      StorageHeartbeatOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StorageHeartbeat.newBuilder() to construct.
    private StorageHeartbeat(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StorageHeartbeat() {
      storages_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new StorageHeartbeat();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_StorageHeartbeat_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_StorageHeartbeat_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat.class, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat.Builder.class);
    }

    public static final int STORAGES_FIELD_NUMBER = 1;
    private java.util.List<com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage> storages_;
    /**
     * <pre>
     * The actual storage usages.
     * </pre>
     *
     * <code>repeated .meteringevents.Storage storages = 1;</code>
     */
    @java.lang.Override
    public java.util.List<com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage> getStoragesList() {
      return storages_;
    }
    /**
     * <pre>
     * The actual storage usages.
     * </pre>
     *
     * <code>repeated .meteringevents.Storage storages = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageOrBuilder> 
        getStoragesOrBuilderList() {
      return storages_;
    }
    /**
     * <pre>
     * The actual storage usages.
     * </pre>
     *
     * <code>repeated .meteringevents.Storage storages = 1;</code>
     */
    @java.lang.Override
    public int getStoragesCount() {
      return storages_.size();
    }
    /**
     * <pre>
     * The actual storage usages.
     * </pre>
     *
     * <code>repeated .meteringevents.Storage storages = 1;</code>
     */
    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage getStorages(int index) {
      return storages_.get(index);
    }
    /**
     * <pre>
     * The actual storage usages.
     * </pre>
     *
     * <code>repeated .meteringevents.Storage storages = 1;</code>
     */
    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageOrBuilder getStoragesOrBuilder(
        int index) {
      return storages_.get(index);
    }

    public static final int METEREDRESOURCEMETADATA_FIELD_NUMBER = 2;
    private com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata meteredResourceMetadata_;
    /**
     * <pre>
     * MeteredResourceMetadata for this storage usage.
     * USAGE NOTES:
     * - For Object Store (S3, etc) heartbeats:
     *   The environmentCrn field is required.
     * - For FileSystem storage (EFS, etc) heartbeats:
     *   All fields are required. The crn field must be a cluster CRN.
     * - For Low Latency storage (EBS, etc) heartbeats:
     *   All fields are required. The crn field must be a cluster CRN.
     * </pre>
     *
     * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 2;</code>
     * @return Whether the meteredResourceMetadata field is set.
     */
    @java.lang.Override
    public boolean hasMeteredResourceMetadata() {
      return meteredResourceMetadata_ != null;
    }
    /**
     * <pre>
     * MeteredResourceMetadata for this storage usage.
     * USAGE NOTES:
     * - For Object Store (S3, etc) heartbeats:
     *   The environmentCrn field is required.
     * - For FileSystem storage (EFS, etc) heartbeats:
     *   All fields are required. The crn field must be a cluster CRN.
     * - For Low Latency storage (EBS, etc) heartbeats:
     *   All fields are required. The crn field must be a cluster CRN.
     * </pre>
     *
     * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 2;</code>
     * @return The meteredResourceMetadata.
     */
    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata getMeteredResourceMetadata() {
      return meteredResourceMetadata_ == null ? com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata.getDefaultInstance() : meteredResourceMetadata_;
    }
    /**
     * <pre>
     * MeteredResourceMetadata for this storage usage.
     * USAGE NOTES:
     * - For Object Store (S3, etc) heartbeats:
     *   The environmentCrn field is required.
     * - For FileSystem storage (EFS, etc) heartbeats:
     *   All fields are required. The crn field must be a cluster CRN.
     * - For Low Latency storage (EBS, etc) heartbeats:
     *   All fields are required. The crn field must be a cluster CRN.
     * </pre>
     *
     * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 2;</code>
     */
    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataOrBuilder getMeteredResourceMetadataOrBuilder() {
      return getMeteredResourceMetadata();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < storages_.size(); i++) {
        output.writeMessage(1, storages_.get(i));
      }
      if (meteredResourceMetadata_ != null) {
        output.writeMessage(2, getMeteredResourceMetadata());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < storages_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, storages_.get(i));
      }
      if (meteredResourceMetadata_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getMeteredResourceMetadata());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat)) {
        return super.equals(obj);
      }
      com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat other = (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat) obj;

      if (!getStoragesList()
          .equals(other.getStoragesList())) return false;
      if (hasMeteredResourceMetadata() != other.hasMeteredResourceMetadata()) return false;
      if (hasMeteredResourceMetadata()) {
        if (!getMeteredResourceMetadata()
            .equals(other.getMeteredResourceMetadata())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getStoragesCount() > 0) {
        hash = (37 * hash) + STORAGES_FIELD_NUMBER;
        hash = (53 * hash) + getStoragesList().hashCode();
      }
      if (hasMeteredResourceMetadata()) {
        hash = (37 * hash) + METEREDRESOURCEMETADATA_FIELD_NUMBER;
        hash = (53 * hash) + getMeteredResourceMetadata().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A heartbeat event for storage usages. Heartbeat events may originate from
     * CDP experiences where storage needs to be metered.
     * REPORTING INTERVAL: Every 30 minutes.
     * </pre>
     *
     * Protobuf type {@code meteringevents.StorageHeartbeat}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:meteringevents.StorageHeartbeat)
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_StorageHeartbeat_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_StorageHeartbeat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat.class, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat.Builder.class);
      }

      // Construct using com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (storagesBuilder_ == null) {
          storages_ = java.util.Collections.emptyList();
        } else {
          storages_ = null;
          storagesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (meteredResourceMetadataBuilder_ == null) {
          meteredResourceMetadata_ = null;
        } else {
          meteredResourceMetadata_ = null;
          meteredResourceMetadataBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_StorageHeartbeat_descriptor;
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat getDefaultInstanceForType() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat.getDefaultInstance();
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat build() {
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat buildPartial() {
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat result = new com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat(this);
        int from_bitField0_ = bitField0_;
        if (storagesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            storages_ = java.util.Collections.unmodifiableList(storages_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.storages_ = storages_;
        } else {
          result.storages_ = storagesBuilder_.build();
        }
        if (meteredResourceMetadataBuilder_ == null) {
          result.meteredResourceMetadata_ = meteredResourceMetadata_;
        } else {
          result.meteredResourceMetadata_ = meteredResourceMetadataBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat) {
          return mergeFrom((com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat other) {
        if (other == com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat.getDefaultInstance()) return this;
        if (storagesBuilder_ == null) {
          if (!other.storages_.isEmpty()) {
            if (storages_.isEmpty()) {
              storages_ = other.storages_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureStoragesIsMutable();
              storages_.addAll(other.storages_);
            }
            onChanged();
          }
        } else {
          if (!other.storages_.isEmpty()) {
            if (storagesBuilder_.isEmpty()) {
              storagesBuilder_.dispose();
              storagesBuilder_ = null;
              storages_ = other.storages_;
              bitField0_ = (bitField0_ & ~0x00000001);
              storagesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getStoragesFieldBuilder() : null;
            } else {
              storagesBuilder_.addAllMessages(other.storages_);
            }
          }
        }
        if (other.hasMeteredResourceMetadata()) {
          mergeMeteredResourceMetadata(other.getMeteredResourceMetadata());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage m =
                    input.readMessage(
                        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage.parser(),
                        extensionRegistry);
                if (storagesBuilder_ == null) {
                  ensureStoragesIsMutable();
                  storages_.add(m);
                } else {
                  storagesBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getMeteredResourceMetadataFieldBuilder().getBuilder(),
                    extensionRegistry);

                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage> storages_ =
        java.util.Collections.emptyList();
      private void ensureStoragesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          storages_ = new java.util.ArrayList<com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage>(storages_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageOrBuilder> storagesBuilder_;

      /**
       * <pre>
       * The actual storage usages.
       * </pre>
       *
       * <code>repeated .meteringevents.Storage storages = 1;</code>
       */
      public java.util.List<com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage> getStoragesList() {
        if (storagesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(storages_);
        } else {
          return storagesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The actual storage usages.
       * </pre>
       *
       * <code>repeated .meteringevents.Storage storages = 1;</code>
       */
      public int getStoragesCount() {
        if (storagesBuilder_ == null) {
          return storages_.size();
        } else {
          return storagesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The actual storage usages.
       * </pre>
       *
       * <code>repeated .meteringevents.Storage storages = 1;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage getStorages(int index) {
        if (storagesBuilder_ == null) {
          return storages_.get(index);
        } else {
          return storagesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The actual storage usages.
       * </pre>
       *
       * <code>repeated .meteringevents.Storage storages = 1;</code>
       */
      public Builder setStorages(
          int index, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage value) {
        if (storagesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStoragesIsMutable();
          storages_.set(index, value);
          onChanged();
        } else {
          storagesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The actual storage usages.
       * </pre>
       *
       * <code>repeated .meteringevents.Storage storages = 1;</code>
       */
      public Builder setStorages(
          int index, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage.Builder builderForValue) {
        if (storagesBuilder_ == null) {
          ensureStoragesIsMutable();
          storages_.set(index, builderForValue.build());
          onChanged();
        } else {
          storagesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The actual storage usages.
       * </pre>
       *
       * <code>repeated .meteringevents.Storage storages = 1;</code>
       */
      public Builder addStorages(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage value) {
        if (storagesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStoragesIsMutable();
          storages_.add(value);
          onChanged();
        } else {
          storagesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The actual storage usages.
       * </pre>
       *
       * <code>repeated .meteringevents.Storage storages = 1;</code>
       */
      public Builder addStorages(
          int index, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage value) {
        if (storagesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStoragesIsMutable();
          storages_.add(index, value);
          onChanged();
        } else {
          storagesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The actual storage usages.
       * </pre>
       *
       * <code>repeated .meteringevents.Storage storages = 1;</code>
       */
      public Builder addStorages(
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage.Builder builderForValue) {
        if (storagesBuilder_ == null) {
          ensureStoragesIsMutable();
          storages_.add(builderForValue.build());
          onChanged();
        } else {
          storagesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The actual storage usages.
       * </pre>
       *
       * <code>repeated .meteringevents.Storage storages = 1;</code>
       */
      public Builder addStorages(
          int index, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage.Builder builderForValue) {
        if (storagesBuilder_ == null) {
          ensureStoragesIsMutable();
          storages_.add(index, builderForValue.build());
          onChanged();
        } else {
          storagesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The actual storage usages.
       * </pre>
       *
       * <code>repeated .meteringevents.Storage storages = 1;</code>
       */
      public Builder addAllStorages(
          java.lang.Iterable<? extends com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage> values) {
        if (storagesBuilder_ == null) {
          ensureStoragesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, storages_);
          onChanged();
        } else {
          storagesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The actual storage usages.
       * </pre>
       *
       * <code>repeated .meteringevents.Storage storages = 1;</code>
       */
      public Builder clearStorages() {
        if (storagesBuilder_ == null) {
          storages_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          storagesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The actual storage usages.
       * </pre>
       *
       * <code>repeated .meteringevents.Storage storages = 1;</code>
       */
      public Builder removeStorages(int index) {
        if (storagesBuilder_ == null) {
          ensureStoragesIsMutable();
          storages_.remove(index);
          onChanged();
        } else {
          storagesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The actual storage usages.
       * </pre>
       *
       * <code>repeated .meteringevents.Storage storages = 1;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage.Builder getStoragesBuilder(
          int index) {
        return getStoragesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The actual storage usages.
       * </pre>
       *
       * <code>repeated .meteringevents.Storage storages = 1;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageOrBuilder getStoragesOrBuilder(
          int index) {
        if (storagesBuilder_ == null) {
          return storages_.get(index);  } else {
          return storagesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The actual storage usages.
       * </pre>
       *
       * <code>repeated .meteringevents.Storage storages = 1;</code>
       */
      public java.util.List<? extends com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageOrBuilder> 
           getStoragesOrBuilderList() {
        if (storagesBuilder_ != null) {
          return storagesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(storages_);
        }
      }
      /**
       * <pre>
       * The actual storage usages.
       * </pre>
       *
       * <code>repeated .meteringevents.Storage storages = 1;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage.Builder addStoragesBuilder() {
        return getStoragesFieldBuilder().addBuilder(
            com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage.getDefaultInstance());
      }
      /**
       * <pre>
       * The actual storage usages.
       * </pre>
       *
       * <code>repeated .meteringevents.Storage storages = 1;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage.Builder addStoragesBuilder(
          int index) {
        return getStoragesFieldBuilder().addBuilder(
            index, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage.getDefaultInstance());
      }
      /**
       * <pre>
       * The actual storage usages.
       * </pre>
       *
       * <code>repeated .meteringevents.Storage storages = 1;</code>
       */
      public java.util.List<com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage.Builder> 
           getStoragesBuilderList() {
        return getStoragesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageOrBuilder> 
          getStoragesFieldBuilder() {
        if (storagesBuilder_ == null) {
          storagesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageOrBuilder>(
                  storages_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          storages_ = null;
        }
        return storagesBuilder_;
      }

      private com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata meteredResourceMetadata_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataOrBuilder> meteredResourceMetadataBuilder_;
      /**
       * <pre>
       * MeteredResourceMetadata for this storage usage.
       * USAGE NOTES:
       * - For Object Store (S3, etc) heartbeats:
       *   The environmentCrn field is required.
       * - For FileSystem storage (EFS, etc) heartbeats:
       *   All fields are required. The crn field must be a cluster CRN.
       * - For Low Latency storage (EBS, etc) heartbeats:
       *   All fields are required. The crn field must be a cluster CRN.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 2;</code>
       * @return Whether the meteredResourceMetadata field is set.
       */
      public boolean hasMeteredResourceMetadata() {
        return meteredResourceMetadataBuilder_ != null || meteredResourceMetadata_ != null;
      }
      /**
       * <pre>
       * MeteredResourceMetadata for this storage usage.
       * USAGE NOTES:
       * - For Object Store (S3, etc) heartbeats:
       *   The environmentCrn field is required.
       * - For FileSystem storage (EFS, etc) heartbeats:
       *   All fields are required. The crn field must be a cluster CRN.
       * - For Low Latency storage (EBS, etc) heartbeats:
       *   All fields are required. The crn field must be a cluster CRN.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 2;</code>
       * @return The meteredResourceMetadata.
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata getMeteredResourceMetadata() {
        if (meteredResourceMetadataBuilder_ == null) {
          return meteredResourceMetadata_ == null ? com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata.getDefaultInstance() : meteredResourceMetadata_;
        } else {
          return meteredResourceMetadataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * MeteredResourceMetadata for this storage usage.
       * USAGE NOTES:
       * - For Object Store (S3, etc) heartbeats:
       *   The environmentCrn field is required.
       * - For FileSystem storage (EFS, etc) heartbeats:
       *   All fields are required. The crn field must be a cluster CRN.
       * - For Low Latency storage (EBS, etc) heartbeats:
       *   All fields are required. The crn field must be a cluster CRN.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 2;</code>
       */
      public Builder setMeteredResourceMetadata(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata value) {
        if (meteredResourceMetadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          meteredResourceMetadata_ = value;
          onChanged();
        } else {
          meteredResourceMetadataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * MeteredResourceMetadata for this storage usage.
       * USAGE NOTES:
       * - For Object Store (S3, etc) heartbeats:
       *   The environmentCrn field is required.
       * - For FileSystem storage (EFS, etc) heartbeats:
       *   All fields are required. The crn field must be a cluster CRN.
       * - For Low Latency storage (EBS, etc) heartbeats:
       *   All fields are required. The crn field must be a cluster CRN.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 2;</code>
       */
      public Builder setMeteredResourceMetadata(
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata.Builder builderForValue) {
        if (meteredResourceMetadataBuilder_ == null) {
          meteredResourceMetadata_ = builderForValue.build();
          onChanged();
        } else {
          meteredResourceMetadataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * MeteredResourceMetadata for this storage usage.
       * USAGE NOTES:
       * - For Object Store (S3, etc) heartbeats:
       *   The environmentCrn field is required.
       * - For FileSystem storage (EFS, etc) heartbeats:
       *   All fields are required. The crn field must be a cluster CRN.
       * - For Low Latency storage (EBS, etc) heartbeats:
       *   All fields are required. The crn field must be a cluster CRN.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 2;</code>
       */
      public Builder mergeMeteredResourceMetadata(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata value) {
        if (meteredResourceMetadataBuilder_ == null) {
          if (meteredResourceMetadata_ != null) {
            meteredResourceMetadata_ =
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata.newBuilder(meteredResourceMetadata_).mergeFrom(value).buildPartial();
          } else {
            meteredResourceMetadata_ = value;
          }
          onChanged();
        } else {
          meteredResourceMetadataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * MeteredResourceMetadata for this storage usage.
       * USAGE NOTES:
       * - For Object Store (S3, etc) heartbeats:
       *   The environmentCrn field is required.
       * - For FileSystem storage (EFS, etc) heartbeats:
       *   All fields are required. The crn field must be a cluster CRN.
       * - For Low Latency storage (EBS, etc) heartbeats:
       *   All fields are required. The crn field must be a cluster CRN.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 2;</code>
       */
      public Builder clearMeteredResourceMetadata() {
        if (meteredResourceMetadataBuilder_ == null) {
          meteredResourceMetadata_ = null;
          onChanged();
        } else {
          meteredResourceMetadata_ = null;
          meteredResourceMetadataBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * MeteredResourceMetadata for this storage usage.
       * USAGE NOTES:
       * - For Object Store (S3, etc) heartbeats:
       *   The environmentCrn field is required.
       * - For FileSystem storage (EFS, etc) heartbeats:
       *   All fields are required. The crn field must be a cluster CRN.
       * - For Low Latency storage (EBS, etc) heartbeats:
       *   All fields are required. The crn field must be a cluster CRN.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 2;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata.Builder getMeteredResourceMetadataBuilder() {
        
        onChanged();
        return getMeteredResourceMetadataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * MeteredResourceMetadata for this storage usage.
       * USAGE NOTES:
       * - For Object Store (S3, etc) heartbeats:
       *   The environmentCrn field is required.
       * - For FileSystem storage (EFS, etc) heartbeats:
       *   All fields are required. The crn field must be a cluster CRN.
       * - For Low Latency storage (EBS, etc) heartbeats:
       *   All fields are required. The crn field must be a cluster CRN.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 2;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataOrBuilder getMeteredResourceMetadataOrBuilder() {
        if (meteredResourceMetadataBuilder_ != null) {
          return meteredResourceMetadataBuilder_.getMessageOrBuilder();
        } else {
          return meteredResourceMetadata_ == null ?
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata.getDefaultInstance() : meteredResourceMetadata_;
        }
      }
      /**
       * <pre>
       * MeteredResourceMetadata for this storage usage.
       * USAGE NOTES:
       * - For Object Store (S3, etc) heartbeats:
       *   The environmentCrn field is required.
       * - For FileSystem storage (EFS, etc) heartbeats:
       *   All fields are required. The crn field must be a cluster CRN.
       * - For Low Latency storage (EBS, etc) heartbeats:
       *   All fields are required. The crn field must be a cluster CRN.
       * </pre>
       *
       * <code>.meteringevents.MeteredResourceMetadata meteredResourceMetadata = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataOrBuilder> 
          getMeteredResourceMetadataFieldBuilder() {
        if (meteredResourceMetadataBuilder_ == null) {
          meteredResourceMetadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataOrBuilder>(
                  getMeteredResourceMetadata(),
                  getParentForChildren(),
                  isClean());
          meteredResourceMetadata_ = null;
        }
        return meteredResourceMetadataBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:meteringevents.StorageHeartbeat)
    }

    // @@protoc_insertion_point(class_scope:meteringevents.StorageHeartbeat)
    private static final com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat();
    }

    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StorageHeartbeat>
        PARSER = new com.google.protobuf.AbstractParser<StorageHeartbeat>() {
      @java.lang.Override
      public StorageHeartbeat parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<StorageHeartbeat> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StorageHeartbeat> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageHeartbeat getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StorageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:meteringevents.Storage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The storage type
     * </pre>
     *
     * <code>.meteringevents.StorageType.Value type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <pre>
     * The storage type
     * </pre>
     *
     * <code>.meteringevents.StorageType.Value type = 1;</code>
     * @return The type.
     */
    com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType.Value getType();

    /**
     * <pre>
     * The storage identifier.
     * </pre>
     *
     * <code>string id = 2;</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * The storage identifier.
     * </pre>
     *
     * <code>string id = 2;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * The storage size in Megabytes.
     * </pre>
     *
     * <code>double sizeInMB = 3;</code>
     * @return The sizeInMB.
     */
    double getSizeInMB();

    /**
     * <pre>
     * The optional description of the storage.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * The optional description of the storage.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();
  }
  /**
   * <pre>
   * Information about storage usage.
   * </pre>
   *
   * Protobuf type {@code meteringevents.Storage}
   */
  public static final class Storage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:meteringevents.Storage)
      StorageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Storage.newBuilder() to construct.
    private Storage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Storage() {
      type_ = 0;
      id_ = "";
      description_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Storage();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_Storage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_Storage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage.class, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     * The storage type
     * </pre>
     *
     * <code>.meteringevents.StorageType.Value type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * The storage type
     * </pre>
     *
     * <code>.meteringevents.StorageType.Value type = 1;</code>
     * @return The type.
     */
    @java.lang.Override public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType.Value getType() {
      @SuppressWarnings("deprecation")
      com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType.Value result = com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType.Value.valueOf(type_);
      return result == null ? com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType.Value.UNRECOGNIZED : result;
    }

    public static final int ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * The storage identifier.
     * </pre>
     *
     * <code>string id = 2;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The storage identifier.
     * </pre>
     *
     * <code>string id = 2;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SIZEINMB_FIELD_NUMBER = 3;
    private double sizeInMB_;
    /**
     * <pre>
     * The storage size in Megabytes.
     * </pre>
     *
     * <code>double sizeInMB = 3;</code>
     * @return The sizeInMB.
     */
    @java.lang.Override
    public double getSizeInMB() {
      return sizeInMB_;
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 4;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     * The optional description of the storage.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The optional description of the storage.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType.Value.UNSET.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, id_);
      }
      if (java.lang.Double.doubleToRawLongBits(sizeInMB_) != 0) {
        output.writeDouble(3, sizeInMB_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(description_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, description_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType.Value.UNSET.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, id_);
      }
      if (java.lang.Double.doubleToRawLongBits(sizeInMB_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, sizeInMB_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(description_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, description_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage)) {
        return super.equals(obj);
      }
      com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage other = (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage) obj;

      if (type_ != other.type_) return false;
      if (!getId()
          .equals(other.getId())) return false;
      if (java.lang.Double.doubleToLongBits(getSizeInMB())
          != java.lang.Double.doubleToLongBits(
              other.getSizeInMB())) return false;
      if (!getDescription()
          .equals(other.getDescription())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + SIZEINMB_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getSizeInMB()));
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Information about storage usage.
     * </pre>
     *
     * Protobuf type {@code meteringevents.Storage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:meteringevents.Storage)
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_Storage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_Storage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage.class, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage.Builder.class);
      }

      // Construct using com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        id_ = "";

        sizeInMB_ = 0D;

        description_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_Storage_descriptor;
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage getDefaultInstanceForType() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage.getDefaultInstance();
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage build() {
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage buildPartial() {
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage result = new com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage(this);
        result.type_ = type_;
        result.id_ = id_;
        result.sizeInMB_ = sizeInMB_;
        result.description_ = description_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage) {
          return mergeFrom((com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage other) {
        if (other == com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (other.getSizeInMB() != 0D) {
          setSizeInMB(other.getSizeInMB());
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                type_ = input.readEnum();

                break;
              } // case 8
              case 18: {
                id_ = input.readStringRequireUtf8();

                break;
              } // case 18
              case 25: {
                sizeInMB_ = input.readDouble();

                break;
              } // case 25
              case 34: {
                description_ = input.readStringRequireUtf8();

                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int type_ = 0;
      /**
       * <pre>
       * The storage type
       * </pre>
       *
       * <code>.meteringevents.StorageType.Value type = 1;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * The storage type
       * </pre>
       *
       * <code>.meteringevents.StorageType.Value type = 1;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The storage type
       * </pre>
       *
       * <code>.meteringevents.StorageType.Value type = 1;</code>
       * @return The type.
       */
      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType.Value getType() {
        @SuppressWarnings("deprecation")
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType.Value result = com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType.Value.valueOf(type_);
        return result == null ? com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType.Value.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The storage type
       * </pre>
       *
       * <code>.meteringevents.StorageType.Value type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType.Value value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The storage type
       * </pre>
       *
       * <code>.meteringevents.StorageType.Value type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * The storage identifier.
       * </pre>
       *
       * <code>string id = 2;</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The storage identifier.
       * </pre>
       *
       * <code>string id = 2;</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The storage identifier.
       * </pre>
       *
       * <code>string id = 2;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The storage identifier.
       * </pre>
       *
       * <code>string id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The storage identifier.
       * </pre>
       *
       * <code>string id = 2;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private double sizeInMB_ ;
      /**
       * <pre>
       * The storage size in Megabytes.
       * </pre>
       *
       * <code>double sizeInMB = 3;</code>
       * @return The sizeInMB.
       */
      @java.lang.Override
      public double getSizeInMB() {
        return sizeInMB_;
      }
      /**
       * <pre>
       * The storage size in Megabytes.
       * </pre>
       *
       * <code>double sizeInMB = 3;</code>
       * @param value The sizeInMB to set.
       * @return This builder for chaining.
       */
      public Builder setSizeInMB(double value) {
        
        sizeInMB_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The storage size in Megabytes.
       * </pre>
       *
       * <code>double sizeInMB = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSizeInMB() {
        
        sizeInMB_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * The optional description of the storage.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The optional description of the storage.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The optional description of the storage.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The optional description of the storage.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The optional description of the storage.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        description_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:meteringevents.Storage)
    }

    // @@protoc_insertion_point(class_scope:meteringevents.Storage)
    private static final com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage();
    }

    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Storage>
        PARSER = new com.google.protobuf.AbstractParser<Storage>() {
      @java.lang.Override
      public Storage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Storage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Storage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Storage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StorageTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:meteringevents.StorageType)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * The storage types.
   * </pre>
   *
   * Protobuf type {@code meteringevents.StorageType}
   */
  public static final class StorageType extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:meteringevents.StorageType)
      StorageTypeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StorageType.newBuilder() to construct.
    private StorageType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StorageType() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new StorageType();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_StorageType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_StorageType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType.class, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType.Builder.class);
    }

    /**
     * Protobuf enum {@code meteringevents.StorageType.Value}
     */
    public enum Value
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * A value indicating the enum is unset.
       * </pre>
       *
       * <code>UNSET = 0;</code>
       */
      UNSET(0),
      /**
       * <pre>
       * AWS S3
       * </pre>
       *
       * <code>S3 = 1;</code>
       */
      S3(1),
      /**
       * <pre>
       * AWS EFS
       * </pre>
       *
       * <code>EFS = 2;</code>
       */
      EFS(2),
      /**
       * <pre>
       * AWS EBS
       * </pre>
       *
       * <code>EBS = 3;</code>
       */
      EBS(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * A value indicating the enum is unset.
       * </pre>
       *
       * <code>UNSET = 0;</code>
       */
      public static final int UNSET_VALUE = 0;
      /**
       * <pre>
       * AWS S3
       * </pre>
       *
       * <code>S3 = 1;</code>
       */
      public static final int S3_VALUE = 1;
      /**
       * <pre>
       * AWS EFS
       * </pre>
       *
       * <code>EFS = 2;</code>
       */
      public static final int EFS_VALUE = 2;
      /**
       * <pre>
       * AWS EBS
       * </pre>
       *
       * <code>EBS = 3;</code>
       */
      public static final int EBS_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Value valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Value forNumber(int value) {
        switch (value) {
          case 0: return UNSET;
          case 1: return S3;
          case 2: return EFS;
          case 3: return EBS;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Value>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Value> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Value>() {
              public Value findValueByNumber(int number) {
                return Value.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType.getDescriptor().getEnumTypes().get(0);
      }

      private static final Value[] VALUES = values();

      public static Value valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Value(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:meteringevents.StorageType.Value)
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType)) {
        return super.equals(obj);
      }
      com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType other = (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType) obj;

      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The storage types.
     * </pre>
     *
     * Protobuf type {@code meteringevents.StorageType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:meteringevents.StorageType)
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_StorageType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_StorageType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType.class, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType.Builder.class);
      }

      // Construct using com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_StorageType_descriptor;
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType getDefaultInstanceForType() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType.getDefaultInstance();
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType build() {
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType buildPartial() {
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType result = new com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType) {
          return mergeFrom((com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType other) {
        if (other == com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:meteringevents.StorageType)
    }

    // @@protoc_insertion_point(class_scope:meteringevents.StorageType)
    private static final com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType();
    }

    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StorageType>
        PARSER = new com.google.protobuf.AbstractParser<StorageType>() {
      @java.lang.Override
      public StorageType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<StorageType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StorageType> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.StorageType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AdditionalMetadataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:meteringevents.AdditionalMetadata)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Every provisioned resource has an assigned group like
     *  - worker
     *  - gateway
     *  - leader, etc
     * USAGE NOTES:
     * - If no hostGroup is provided, the event will still be processed.
     * </pre>
     *
     * <code>string hostGroup = 1;</code>
     * @return The hostGroup.
     */
    java.lang.String getHostGroup();
    /**
     * <pre>
     * Every provisioned resource has an assigned group like
     *  - worker
     *  - gateway
     *  - leader, etc
     * USAGE NOTES:
     * - If no hostGroup is provided, the event will still be processed.
     * </pre>
     *
     * <code>string hostGroup = 1;</code>
     * @return The bytes for hostGroup.
     */
    com.google.protobuf.ByteString
        getHostGroupBytes();
  }
  /**
   * <pre>
   * Information about additional metadata for a Metered Resource.
   * USAGE NOTES:            See hostGroup, and template fields
   * </pre>
   *
   * Protobuf type {@code meteringevents.AdditionalMetadata}
   */
  public static final class AdditionalMetadata extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:meteringevents.AdditionalMetadata)
      AdditionalMetadataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AdditionalMetadata.newBuilder() to construct.
    private AdditionalMetadata(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AdditionalMetadata() {
      hostGroup_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AdditionalMetadata();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_AdditionalMetadata_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_AdditionalMetadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata.class, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata.Builder.class);
    }

    public static final int HOSTGROUP_FIELD_NUMBER = 1;
    private volatile java.lang.Object hostGroup_;
    /**
     * <pre>
     * Every provisioned resource has an assigned group like
     *  - worker
     *  - gateway
     *  - leader, etc
     * USAGE NOTES:
     * - If no hostGroup is provided, the event will still be processed.
     * </pre>
     *
     * <code>string hostGroup = 1;</code>
     * @return The hostGroup.
     */
    @java.lang.Override
    public java.lang.String getHostGroup() {
      java.lang.Object ref = hostGroup_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        hostGroup_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Every provisioned resource has an assigned group like
     *  - worker
     *  - gateway
     *  - leader, etc
     * USAGE NOTES:
     * - If no hostGroup is provided, the event will still be processed.
     * </pre>
     *
     * <code>string hostGroup = 1;</code>
     * @return The bytes for hostGroup.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getHostGroupBytes() {
      java.lang.Object ref = hostGroup_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        hostGroup_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(hostGroup_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, hostGroup_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(hostGroup_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, hostGroup_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata)) {
        return super.equals(obj);
      }
      com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata other = (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata) obj;

      if (!getHostGroup()
          .equals(other.getHostGroup())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + HOSTGROUP_FIELD_NUMBER;
      hash = (53 * hash) + getHostGroup().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Information about additional metadata for a Metered Resource.
     * USAGE NOTES:            See hostGroup, and template fields
     * </pre>
     *
     * Protobuf type {@code meteringevents.AdditionalMetadata}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:meteringevents.AdditionalMetadata)
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_AdditionalMetadata_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_AdditionalMetadata_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata.class, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata.Builder.class);
      }

      // Construct using com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        hostGroup_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_AdditionalMetadata_descriptor;
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata getDefaultInstanceForType() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata.getDefaultInstance();
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata build() {
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata buildPartial() {
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata result = new com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata(this);
        result.hostGroup_ = hostGroup_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata) {
          return mergeFrom((com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata other) {
        if (other == com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata.getDefaultInstance()) return this;
        if (!other.getHostGroup().isEmpty()) {
          hostGroup_ = other.hostGroup_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                hostGroup_ = input.readStringRequireUtf8();

                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private java.lang.Object hostGroup_ = "";
      /**
       * <pre>
       * Every provisioned resource has an assigned group like
       *  - worker
       *  - gateway
       *  - leader, etc
       * USAGE NOTES:
       * - If no hostGroup is provided, the event will still be processed.
       * </pre>
       *
       * <code>string hostGroup = 1;</code>
       * @return The hostGroup.
       */
      public java.lang.String getHostGroup() {
        java.lang.Object ref = hostGroup_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          hostGroup_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Every provisioned resource has an assigned group like
       *  - worker
       *  - gateway
       *  - leader, etc
       * USAGE NOTES:
       * - If no hostGroup is provided, the event will still be processed.
       * </pre>
       *
       * <code>string hostGroup = 1;</code>
       * @return The bytes for hostGroup.
       */
      public com.google.protobuf.ByteString
          getHostGroupBytes() {
        java.lang.Object ref = hostGroup_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          hostGroup_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Every provisioned resource has an assigned group like
       *  - worker
       *  - gateway
       *  - leader, etc
       * USAGE NOTES:
       * - If no hostGroup is provided, the event will still be processed.
       * </pre>
       *
       * <code>string hostGroup = 1;</code>
       * @param value The hostGroup to set.
       * @return This builder for chaining.
       */
      public Builder setHostGroup(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        hostGroup_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Every provisioned resource has an assigned group like
       *  - worker
       *  - gateway
       *  - leader, etc
       * USAGE NOTES:
       * - If no hostGroup is provided, the event will still be processed.
       * </pre>
       *
       * <code>string hostGroup = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearHostGroup() {
        
        hostGroup_ = getDefaultInstance().getHostGroup();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Every provisioned resource has an assigned group like
       *  - worker
       *  - gateway
       *  - leader, etc
       * USAGE NOTES:
       * - If no hostGroup is provided, the event will still be processed.
       * </pre>
       *
       * <code>string hostGroup = 1;</code>
       * @param value The bytes for hostGroup to set.
       * @return This builder for chaining.
       */
      public Builder setHostGroupBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        hostGroup_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:meteringevents.AdditionalMetadata)
    }

    // @@protoc_insertion_point(class_scope:meteringevents.AdditionalMetadata)
    private static final com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata();
    }

    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AdditionalMetadata>
        PARSER = new com.google.protobuf.AbstractParser<AdditionalMetadata>() {
      @java.lang.Override
      public AdditionalMetadata parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<AdditionalMetadata> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AdditionalMetadata> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface InstanceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:meteringevents.Instance)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A unique identifier.
     *  - on AWS EC2, it might be: i-0123456789..
     *  - on Azure, it might be: 13f56399-bd52-4150-9748-7190aae1ff21
     *  - on-prem, it could be an application-derived id, as long as it
     *    is consistent for the node in-between application restarts.
     * USAGE NOTES:
     * - If no id is provided, the event will be dropped.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * A unique identifier.
     *  - on AWS EC2, it might be: i-0123456789..
     *  - on Azure, it might be: 13f56399-bd52-4150-9748-7190aae1ff21
     *  - on-prem, it could be an application-derived id, as long as it
     *    is consistent for the node in-between application restarts.
     * USAGE NOTES:
     * - If no id is provided, the event will be dropped.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * Type
     *  - on AWS EC2, it might be: m5.4xlarge
     *  - on Azure, it might be STANDARD_D1
     * USAGE NOTES:
     * - If no type is provided, the event will be dropped.
     * </pre>
     *
     * <code>string type = 2;</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * Type
     *  - on AWS EC2, it might be: m5.4xlarge
     *  - on Azure, it might be STANDARD_D1
     * USAGE NOTES:
     * - If no type is provided, the event will be dropped.
     * </pre>
     *
     * <code>string type = 2;</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * Network address
     * It is not particularly important if it is a public or private IP, but
     * it should not flip-flop back and forth between successive heartbeats --
     * it should always be the publicIp or always be the privateIp for the
     * life of an instance.
     * USAGE NOTES:
     * - If no ipAddress is provided, the event will be dropped.
     * </pre>
     *
     * <code>string ipAddress = 3;</code>
     * @return The ipAddress.
     */
    java.lang.String getIpAddress();
    /**
     * <pre>
     * Network address
     * It is not particularly important if it is a public or private IP, but
     * it should not flip-flop back and forth between successive heartbeats --
     * it should always be the publicIp or always be the privateIp for the
     * life of an instance.
     * USAGE NOTES:
     * - If no ipAddress is provided, the event will be dropped.
     * </pre>
     *
     * <code>string ipAddress = 3;</code>
     * @return The bytes for ipAddress.
     */
    com.google.protobuf.ByteString
        getIpAddressBytes();

    /**
     * <pre>
     * Additional Metadata
     * If we need to capture metadata for the aggregation algorithm for
     * differentiation during billing like hostGroup.
     * USAGE NOTES:
     * - Optional, if no additionalMetadata is provided, the event will still be
     * processed.
     * </pre>
     *
     * <code>.meteringevents.AdditionalMetadata additionalMetadata = 4;</code>
     * @return Whether the additionalMetadata field is set.
     */
    boolean hasAdditionalMetadata();
    /**
     * <pre>
     * Additional Metadata
     * If we need to capture metadata for the aggregation algorithm for
     * differentiation during billing like hostGroup.
     * USAGE NOTES:
     * - Optional, if no additionalMetadata is provided, the event will still be
     * processed.
     * </pre>
     *
     * <code>.meteringevents.AdditionalMetadata additionalMetadata = 4;</code>
     * @return The additionalMetadata.
     */
    com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata getAdditionalMetadata();
    /**
     * <pre>
     * Additional Metadata
     * If we need to capture metadata for the aggregation algorithm for
     * differentiation during billing like hostGroup.
     * USAGE NOTES:
     * - Optional, if no additionalMetadata is provided, the event will still be
     * processed.
     * </pre>
     *
     * <code>.meteringevents.AdditionalMetadata additionalMetadata = 4;</code>
     */
    com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadataOrBuilder getAdditionalMetadataOrBuilder();
  }
  /**
   * <pre>
   * Information about an instance.
   * USAGE NOTES:            See id, type, and ipAddress, additionalMetadata fields
   * </pre>
   *
   * Protobuf type {@code meteringevents.Instance}
   */
  public static final class Instance extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:meteringevents.Instance)
      InstanceOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Instance.newBuilder() to construct.
    private Instance(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Instance() {
      id_ = "";
      type_ = "";
      ipAddress_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Instance();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_Instance_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_Instance_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance.class, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * A unique identifier.
     *  - on AWS EC2, it might be: i-0123456789..
     *  - on Azure, it might be: 13f56399-bd52-4150-9748-7190aae1ff21
     *  - on-prem, it could be an application-derived id, as long as it
     *    is consistent for the node in-between application restarts.
     * USAGE NOTES:
     * - If no id is provided, the event will be dropped.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A unique identifier.
     *  - on AWS EC2, it might be: i-0123456789..
     *  - on Azure, it might be: 13f56399-bd52-4150-9748-7190aae1ff21
     *  - on-prem, it could be an application-derived id, as long as it
     *    is consistent for the node in-between application restarts.
     * USAGE NOTES:
     * - If no id is provided, the event will be dropped.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * Type
     *  - on AWS EC2, it might be: m5.4xlarge
     *  - on Azure, it might be STANDARD_D1
     * USAGE NOTES:
     * - If no type is provided, the event will be dropped.
     * </pre>
     *
     * <code>string type = 2;</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Type
     *  - on AWS EC2, it might be: m5.4xlarge
     *  - on Azure, it might be STANDARD_D1
     * USAGE NOTES:
     * - If no type is provided, the event will be dropped.
     * </pre>
     *
     * <code>string type = 2;</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int IPADDRESS_FIELD_NUMBER = 3;
    private volatile java.lang.Object ipAddress_;
    /**
     * <pre>
     * Network address
     * It is not particularly important if it is a public or private IP, but
     * it should not flip-flop back and forth between successive heartbeats --
     * it should always be the publicIp or always be the privateIp for the
     * life of an instance.
     * USAGE NOTES:
     * - If no ipAddress is provided, the event will be dropped.
     * </pre>
     *
     * <code>string ipAddress = 3;</code>
     * @return The ipAddress.
     */
    @java.lang.Override
    public java.lang.String getIpAddress() {
      java.lang.Object ref = ipAddress_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        ipAddress_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Network address
     * It is not particularly important if it is a public or private IP, but
     * it should not flip-flop back and forth between successive heartbeats --
     * it should always be the publicIp or always be the privateIp for the
     * life of an instance.
     * USAGE NOTES:
     * - If no ipAddress is provided, the event will be dropped.
     * </pre>
     *
     * <code>string ipAddress = 3;</code>
     * @return The bytes for ipAddress.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIpAddressBytes() {
      java.lang.Object ref = ipAddress_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ipAddress_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ADDITIONALMETADATA_FIELD_NUMBER = 4;
    private com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata additionalMetadata_;
    /**
     * <pre>
     * Additional Metadata
     * If we need to capture metadata for the aggregation algorithm for
     * differentiation during billing like hostGroup.
     * USAGE NOTES:
     * - Optional, if no additionalMetadata is provided, the event will still be
     * processed.
     * </pre>
     *
     * <code>.meteringevents.AdditionalMetadata additionalMetadata = 4;</code>
     * @return Whether the additionalMetadata field is set.
     */
    @java.lang.Override
    public boolean hasAdditionalMetadata() {
      return additionalMetadata_ != null;
    }
    /**
     * <pre>
     * Additional Metadata
     * If we need to capture metadata for the aggregation algorithm for
     * differentiation during billing like hostGroup.
     * USAGE NOTES:
     * - Optional, if no additionalMetadata is provided, the event will still be
     * processed.
     * </pre>
     *
     * <code>.meteringevents.AdditionalMetadata additionalMetadata = 4;</code>
     * @return The additionalMetadata.
     */
    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata getAdditionalMetadata() {
      return additionalMetadata_ == null ? com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata.getDefaultInstance() : additionalMetadata_;
    }
    /**
     * <pre>
     * Additional Metadata
     * If we need to capture metadata for the aggregation algorithm for
     * differentiation during billing like hostGroup.
     * USAGE NOTES:
     * - Optional, if no additionalMetadata is provided, the event will still be
     * processed.
     * </pre>
     *
     * <code>.meteringevents.AdditionalMetadata additionalMetadata = 4;</code>
     */
    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadataOrBuilder getAdditionalMetadataOrBuilder() {
      return getAdditionalMetadata();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(type_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, type_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(ipAddress_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, ipAddress_);
      }
      if (additionalMetadata_ != null) {
        output.writeMessage(4, getAdditionalMetadata());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(type_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, type_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(ipAddress_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, ipAddress_);
      }
      if (additionalMetadata_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getAdditionalMetadata());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance)) {
        return super.equals(obj);
      }
      com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance other = (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (!getType()
          .equals(other.getType())) return false;
      if (!getIpAddress()
          .equals(other.getIpAddress())) return false;
      if (hasAdditionalMetadata() != other.hasAdditionalMetadata()) return false;
      if (hasAdditionalMetadata()) {
        if (!getAdditionalMetadata()
            .equals(other.getAdditionalMetadata())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + IPADDRESS_FIELD_NUMBER;
      hash = (53 * hash) + getIpAddress().hashCode();
      if (hasAdditionalMetadata()) {
        hash = (37 * hash) + ADDITIONALMETADATA_FIELD_NUMBER;
        hash = (53 * hash) + getAdditionalMetadata().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Information about an instance.
     * USAGE NOTES:            See id, type, and ipAddress, additionalMetadata fields
     * </pre>
     *
     * Protobuf type {@code meteringevents.Instance}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:meteringevents.Instance)
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.InstanceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_Instance_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_Instance_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance.class, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance.Builder.class);
      }

      // Construct using com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        type_ = "";

        ipAddress_ = "";

        if (additionalMetadataBuilder_ == null) {
          additionalMetadata_ = null;
        } else {
          additionalMetadata_ = null;
          additionalMetadataBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_Instance_descriptor;
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance getDefaultInstanceForType() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance.getDefaultInstance();
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance build() {
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance buildPartial() {
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance result = new com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance(this);
        result.id_ = id_;
        result.type_ = type_;
        result.ipAddress_ = ipAddress_;
        if (additionalMetadataBuilder_ == null) {
          result.additionalMetadata_ = additionalMetadata_;
        } else {
          result.additionalMetadata_ = additionalMetadataBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance) {
          return mergeFrom((com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance other) {
        if (other == com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (!other.getIpAddress().isEmpty()) {
          ipAddress_ = other.ipAddress_;
          onChanged();
        }
        if (other.hasAdditionalMetadata()) {
          mergeAdditionalMetadata(other.getAdditionalMetadata());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                id_ = input.readStringRequireUtf8();

                break;
              } // case 10
              case 18: {
                type_ = input.readStringRequireUtf8();

                break;
              } // case 18
              case 26: {
                ipAddress_ = input.readStringRequireUtf8();

                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getAdditionalMetadataFieldBuilder().getBuilder(),
                    extensionRegistry);

                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * A unique identifier.
       *  - on AWS EC2, it might be: i-0123456789..
       *  - on Azure, it might be: 13f56399-bd52-4150-9748-7190aae1ff21
       *  - on-prem, it could be an application-derived id, as long as it
       *    is consistent for the node in-between application restarts.
       * USAGE NOTES:
       * - If no id is provided, the event will be dropped.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A unique identifier.
       *  - on AWS EC2, it might be: i-0123456789..
       *  - on Azure, it might be: 13f56399-bd52-4150-9748-7190aae1ff21
       *  - on-prem, it could be an application-derived id, as long as it
       *    is consistent for the node in-between application restarts.
       * USAGE NOTES:
       * - If no id is provided, the event will be dropped.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A unique identifier.
       *  - on AWS EC2, it might be: i-0123456789..
       *  - on Azure, it might be: 13f56399-bd52-4150-9748-7190aae1ff21
       *  - on-prem, it could be an application-derived id, as long as it
       *    is consistent for the node in-between application restarts.
       * USAGE NOTES:
       * - If no id is provided, the event will be dropped.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A unique identifier.
       *  - on AWS EC2, it might be: i-0123456789..
       *  - on Azure, it might be: 13f56399-bd52-4150-9748-7190aae1ff21
       *  - on-prem, it could be an application-derived id, as long as it
       *    is consistent for the node in-between application restarts.
       * USAGE NOTES:
       * - If no id is provided, the event will be dropped.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A unique identifier.
       *  - on AWS EC2, it might be: i-0123456789..
       *  - on Azure, it might be: 13f56399-bd52-4150-9748-7190aae1ff21
       *  - on-prem, it could be an application-derived id, as long as it
       *    is consistent for the node in-between application restarts.
       * USAGE NOTES:
       * - If no id is provided, the event will be dropped.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * Type
       *  - on AWS EC2, it might be: m5.4xlarge
       *  - on Azure, it might be STANDARD_D1
       * USAGE NOTES:
       * - If no type is provided, the event will be dropped.
       * </pre>
       *
       * <code>string type = 2;</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Type
       *  - on AWS EC2, it might be: m5.4xlarge
       *  - on Azure, it might be STANDARD_D1
       * USAGE NOTES:
       * - If no type is provided, the event will be dropped.
       * </pre>
       *
       * <code>string type = 2;</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Type
       *  - on AWS EC2, it might be: m5.4xlarge
       *  - on Azure, it might be STANDARD_D1
       * USAGE NOTES:
       * - If no type is provided, the event will be dropped.
       * </pre>
       *
       * <code>string type = 2;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type
       *  - on AWS EC2, it might be: m5.4xlarge
       *  - on Azure, it might be STANDARD_D1
       * USAGE NOTES:
       * - If no type is provided, the event will be dropped.
       * </pre>
       *
       * <code>string type = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type
       *  - on AWS EC2, it might be: m5.4xlarge
       *  - on Azure, it might be STANDARD_D1
       * USAGE NOTES:
       * - If no type is provided, the event will be dropped.
       * </pre>
       *
       * <code>string type = 2;</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object ipAddress_ = "";
      /**
       * <pre>
       * Network address
       * It is not particularly important if it is a public or private IP, but
       * it should not flip-flop back and forth between successive heartbeats --
       * it should always be the publicIp or always be the privateIp for the
       * life of an instance.
       * USAGE NOTES:
       * - If no ipAddress is provided, the event will be dropped.
       * </pre>
       *
       * <code>string ipAddress = 3;</code>
       * @return The ipAddress.
       */
      public java.lang.String getIpAddress() {
        java.lang.Object ref = ipAddress_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          ipAddress_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Network address
       * It is not particularly important if it is a public or private IP, but
       * it should not flip-flop back and forth between successive heartbeats --
       * it should always be the publicIp or always be the privateIp for the
       * life of an instance.
       * USAGE NOTES:
       * - If no ipAddress is provided, the event will be dropped.
       * </pre>
       *
       * <code>string ipAddress = 3;</code>
       * @return The bytes for ipAddress.
       */
      public com.google.protobuf.ByteString
          getIpAddressBytes() {
        java.lang.Object ref = ipAddress_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ipAddress_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Network address
       * It is not particularly important if it is a public or private IP, but
       * it should not flip-flop back and forth between successive heartbeats --
       * it should always be the publicIp or always be the privateIp for the
       * life of an instance.
       * USAGE NOTES:
       * - If no ipAddress is provided, the event will be dropped.
       * </pre>
       *
       * <code>string ipAddress = 3;</code>
       * @param value The ipAddress to set.
       * @return This builder for chaining.
       */
      public Builder setIpAddress(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        ipAddress_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Network address
       * It is not particularly important if it is a public or private IP, but
       * it should not flip-flop back and forth between successive heartbeats --
       * it should always be the publicIp or always be the privateIp for the
       * life of an instance.
       * USAGE NOTES:
       * - If no ipAddress is provided, the event will be dropped.
       * </pre>
       *
       * <code>string ipAddress = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearIpAddress() {
        
        ipAddress_ = getDefaultInstance().getIpAddress();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Network address
       * It is not particularly important if it is a public or private IP, but
       * it should not flip-flop back and forth between successive heartbeats --
       * it should always be the publicIp or always be the privateIp for the
       * life of an instance.
       * USAGE NOTES:
       * - If no ipAddress is provided, the event will be dropped.
       * </pre>
       *
       * <code>string ipAddress = 3;</code>
       * @param value The bytes for ipAddress to set.
       * @return This builder for chaining.
       */
      public Builder setIpAddressBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        ipAddress_ = value;
        onChanged();
        return this;
      }

      private com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata additionalMetadata_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadataOrBuilder> additionalMetadataBuilder_;
      /**
       * <pre>
       * Additional Metadata
       * If we need to capture metadata for the aggregation algorithm for
       * differentiation during billing like hostGroup.
       * USAGE NOTES:
       * - Optional, if no additionalMetadata is provided, the event will still be
       * processed.
       * </pre>
       *
       * <code>.meteringevents.AdditionalMetadata additionalMetadata = 4;</code>
       * @return Whether the additionalMetadata field is set.
       */
      public boolean hasAdditionalMetadata() {
        return additionalMetadataBuilder_ != null || additionalMetadata_ != null;
      }
      /**
       * <pre>
       * Additional Metadata
       * If we need to capture metadata for the aggregation algorithm for
       * differentiation during billing like hostGroup.
       * USAGE NOTES:
       * - Optional, if no additionalMetadata is provided, the event will still be
       * processed.
       * </pre>
       *
       * <code>.meteringevents.AdditionalMetadata additionalMetadata = 4;</code>
       * @return The additionalMetadata.
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata getAdditionalMetadata() {
        if (additionalMetadataBuilder_ == null) {
          return additionalMetadata_ == null ? com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata.getDefaultInstance() : additionalMetadata_;
        } else {
          return additionalMetadataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Additional Metadata
       * If we need to capture metadata for the aggregation algorithm for
       * differentiation during billing like hostGroup.
       * USAGE NOTES:
       * - Optional, if no additionalMetadata is provided, the event will still be
       * processed.
       * </pre>
       *
       * <code>.meteringevents.AdditionalMetadata additionalMetadata = 4;</code>
       */
      public Builder setAdditionalMetadata(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata value) {
        if (additionalMetadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          additionalMetadata_ = value;
          onChanged();
        } else {
          additionalMetadataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Additional Metadata
       * If we need to capture metadata for the aggregation algorithm for
       * differentiation during billing like hostGroup.
       * USAGE NOTES:
       * - Optional, if no additionalMetadata is provided, the event will still be
       * processed.
       * </pre>
       *
       * <code>.meteringevents.AdditionalMetadata additionalMetadata = 4;</code>
       */
      public Builder setAdditionalMetadata(
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata.Builder builderForValue) {
        if (additionalMetadataBuilder_ == null) {
          additionalMetadata_ = builderForValue.build();
          onChanged();
        } else {
          additionalMetadataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Additional Metadata
       * If we need to capture metadata for the aggregation algorithm for
       * differentiation during billing like hostGroup.
       * USAGE NOTES:
       * - Optional, if no additionalMetadata is provided, the event will still be
       * processed.
       * </pre>
       *
       * <code>.meteringevents.AdditionalMetadata additionalMetadata = 4;</code>
       */
      public Builder mergeAdditionalMetadata(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata value) {
        if (additionalMetadataBuilder_ == null) {
          if (additionalMetadata_ != null) {
            additionalMetadata_ =
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata.newBuilder(additionalMetadata_).mergeFrom(value).buildPartial();
          } else {
            additionalMetadata_ = value;
          }
          onChanged();
        } else {
          additionalMetadataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Additional Metadata
       * If we need to capture metadata for the aggregation algorithm for
       * differentiation during billing like hostGroup.
       * USAGE NOTES:
       * - Optional, if no additionalMetadata is provided, the event will still be
       * processed.
       * </pre>
       *
       * <code>.meteringevents.AdditionalMetadata additionalMetadata = 4;</code>
       */
      public Builder clearAdditionalMetadata() {
        if (additionalMetadataBuilder_ == null) {
          additionalMetadata_ = null;
          onChanged();
        } else {
          additionalMetadata_ = null;
          additionalMetadataBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Additional Metadata
       * If we need to capture metadata for the aggregation algorithm for
       * differentiation during billing like hostGroup.
       * USAGE NOTES:
       * - Optional, if no additionalMetadata is provided, the event will still be
       * processed.
       * </pre>
       *
       * <code>.meteringevents.AdditionalMetadata additionalMetadata = 4;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata.Builder getAdditionalMetadataBuilder() {
        
        onChanged();
        return getAdditionalMetadataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Additional Metadata
       * If we need to capture metadata for the aggregation algorithm for
       * differentiation during billing like hostGroup.
       * USAGE NOTES:
       * - Optional, if no additionalMetadata is provided, the event will still be
       * processed.
       * </pre>
       *
       * <code>.meteringevents.AdditionalMetadata additionalMetadata = 4;</code>
       */
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadataOrBuilder getAdditionalMetadataOrBuilder() {
        if (additionalMetadataBuilder_ != null) {
          return additionalMetadataBuilder_.getMessageOrBuilder();
        } else {
          return additionalMetadata_ == null ?
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata.getDefaultInstance() : additionalMetadata_;
        }
      }
      /**
       * <pre>
       * Additional Metadata
       * If we need to capture metadata for the aggregation algorithm for
       * differentiation during billing like hostGroup.
       * USAGE NOTES:
       * - Optional, if no additionalMetadata is provided, the event will still be
       * processed.
       * </pre>
       *
       * <code>.meteringevents.AdditionalMetadata additionalMetadata = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadataOrBuilder> 
          getAdditionalMetadataFieldBuilder() {
        if (additionalMetadataBuilder_ == null) {
          additionalMetadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadata.Builder, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.AdditionalMetadataOrBuilder>(
                  getAdditionalMetadata(),
                  getParentForChildren(),
                  isClean());
          additionalMetadata_ = null;
        }
        return additionalMetadataBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:meteringevents.Instance)
    }

    // @@protoc_insertion_point(class_scope:meteringevents.Instance)
    private static final com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance();
    }

    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Instance>
        PARSER = new com.google.protobuf.AbstractParser<Instance>() {
      @java.lang.Override
      public Instance parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Instance> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Instance> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Instance getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ComputeResourceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:meteringevents.ComputeResource)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A unique identifier.
     *  - This could be the container id.
     *  - This could be an application-derived id, as long as it is
     *    unique across all ComputeResources reported for the Service.
     * USAGE NOTES:
     * - If no id is provided, the event will be dropped.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * A unique identifier.
     *  - This could be the container id.
     *  - This could be an application-derived id, as long as it is
     *    unique across all ComputeResources reported for the Service.
     * USAGE NOTES:
     * - If no id is provided, the event will be dropped.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * The number of vCores assigned to the compute resource. This may not be a
     * whole number. Please note, the relation between vCores and cores is 2:1.
     * USAGE NOTES:
     * - If the value is &lt;= 0, the event will be dropped
     * </pre>
     *
     * <code>double numCores = 2;</code>
     * @return The numCores.
     */
    double getNumCores();

    /**
     * <pre>
     * The amount of memory assigned to the compute resource.
     * USAGE NOTES:
     * - If the value is 0, the event will be dropped
     * </pre>
     *
     * <code>double gbMem = 3;</code>
     * @return The gbMem.
     */
    double getGbMem();
  }
  /**
   * <pre>
   * Information about a compute resource.
   * USAGE NOTES:            See id, numCores, and gbMem fields
   * </pre>
   *
   * Protobuf type {@code meteringevents.ComputeResource}
   */
  public static final class ComputeResource extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:meteringevents.ComputeResource)
      ComputeResourceOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ComputeResource.newBuilder() to construct.
    private ComputeResource(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ComputeResource() {
      id_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ComputeResource();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_ComputeResource_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_ComputeResource_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource.class, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * A unique identifier.
     *  - This could be the container id.
     *  - This could be an application-derived id, as long as it is
     *    unique across all ComputeResources reported for the Service.
     * USAGE NOTES:
     * - If no id is provided, the event will be dropped.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A unique identifier.
     *  - This could be the container id.
     *  - This could be an application-derived id, as long as it is
     *    unique across all ComputeResources reported for the Service.
     * USAGE NOTES:
     * - If no id is provided, the event will be dropped.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NUMCORES_FIELD_NUMBER = 2;
    private double numCores_;
    /**
     * <pre>
     * The number of vCores assigned to the compute resource. This may not be a
     * whole number. Please note, the relation between vCores and cores is 2:1.
     * USAGE NOTES:
     * - If the value is &lt;= 0, the event will be dropped
     * </pre>
     *
     * <code>double numCores = 2;</code>
     * @return The numCores.
     */
    @java.lang.Override
    public double getNumCores() {
      return numCores_;
    }

    public static final int GBMEM_FIELD_NUMBER = 3;
    private double gbMem_;
    /**
     * <pre>
     * The amount of memory assigned to the compute resource.
     * USAGE NOTES:
     * - If the value is 0, the event will be dropped
     * </pre>
     *
     * <code>double gbMem = 3;</code>
     * @return The gbMem.
     */
    @java.lang.Override
    public double getGbMem() {
      return gbMem_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (java.lang.Double.doubleToRawLongBits(numCores_) != 0) {
        output.writeDouble(2, numCores_);
      }
      if (java.lang.Double.doubleToRawLongBits(gbMem_) != 0) {
        output.writeDouble(3, gbMem_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (java.lang.Double.doubleToRawLongBits(numCores_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, numCores_);
      }
      if (java.lang.Double.doubleToRawLongBits(gbMem_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, gbMem_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource)) {
        return super.equals(obj);
      }
      com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource other = (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (java.lang.Double.doubleToLongBits(getNumCores())
          != java.lang.Double.doubleToLongBits(
              other.getNumCores())) return false;
      if (java.lang.Double.doubleToLongBits(getGbMem())
          != java.lang.Double.doubleToLongBits(
              other.getGbMem())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + NUMCORES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getNumCores()));
      hash = (37 * hash) + GBMEM_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getGbMem()));
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Information about a compute resource.
     * USAGE NOTES:            See id, numCores, and gbMem fields
     * </pre>
     *
     * Protobuf type {@code meteringevents.ComputeResource}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:meteringevents.ComputeResource)
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResourceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_ComputeResource_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_ComputeResource_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource.class, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource.Builder.class);
      }

      // Construct using com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        numCores_ = 0D;

        gbMem_ = 0D;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_ComputeResource_descriptor;
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource getDefaultInstanceForType() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource.getDefaultInstance();
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource build() {
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource buildPartial() {
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource result = new com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource(this);
        result.id_ = id_;
        result.numCores_ = numCores_;
        result.gbMem_ = gbMem_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource) {
          return mergeFrom((com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource other) {
        if (other == com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (other.getNumCores() != 0D) {
          setNumCores(other.getNumCores());
        }
        if (other.getGbMem() != 0D) {
          setGbMem(other.getGbMem());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                id_ = input.readStringRequireUtf8();

                break;
              } // case 10
              case 17: {
                numCores_ = input.readDouble();

                break;
              } // case 17
              case 25: {
                gbMem_ = input.readDouble();

                break;
              } // case 25
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * A unique identifier.
       *  - This could be the container id.
       *  - This could be an application-derived id, as long as it is
       *    unique across all ComputeResources reported for the Service.
       * USAGE NOTES:
       * - If no id is provided, the event will be dropped.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A unique identifier.
       *  - This could be the container id.
       *  - This could be an application-derived id, as long as it is
       *    unique across all ComputeResources reported for the Service.
       * USAGE NOTES:
       * - If no id is provided, the event will be dropped.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A unique identifier.
       *  - This could be the container id.
       *  - This could be an application-derived id, as long as it is
       *    unique across all ComputeResources reported for the Service.
       * USAGE NOTES:
       * - If no id is provided, the event will be dropped.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A unique identifier.
       *  - This could be the container id.
       *  - This could be an application-derived id, as long as it is
       *    unique across all ComputeResources reported for the Service.
       * USAGE NOTES:
       * - If no id is provided, the event will be dropped.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A unique identifier.
       *  - This could be the container id.
       *  - This could be an application-derived id, as long as it is
       *    unique across all ComputeResources reported for the Service.
       * USAGE NOTES:
       * - If no id is provided, the event will be dropped.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private double numCores_ ;
      /**
       * <pre>
       * The number of vCores assigned to the compute resource. This may not be a
       * whole number. Please note, the relation between vCores and cores is 2:1.
       * USAGE NOTES:
       * - If the value is &lt;= 0, the event will be dropped
       * </pre>
       *
       * <code>double numCores = 2;</code>
       * @return The numCores.
       */
      @java.lang.Override
      public double getNumCores() {
        return numCores_;
      }
      /**
       * <pre>
       * The number of vCores assigned to the compute resource. This may not be a
       * whole number. Please note, the relation between vCores and cores is 2:1.
       * USAGE NOTES:
       * - If the value is &lt;= 0, the event will be dropped
       * </pre>
       *
       * <code>double numCores = 2;</code>
       * @param value The numCores to set.
       * @return This builder for chaining.
       */
      public Builder setNumCores(double value) {
        
        numCores_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The number of vCores assigned to the compute resource. This may not be a
       * whole number. Please note, the relation between vCores and cores is 2:1.
       * USAGE NOTES:
       * - If the value is &lt;= 0, the event will be dropped
       * </pre>
       *
       * <code>double numCores = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearNumCores() {
        
        numCores_ = 0D;
        onChanged();
        return this;
      }

      private double gbMem_ ;
      /**
       * <pre>
       * The amount of memory assigned to the compute resource.
       * USAGE NOTES:
       * - If the value is 0, the event will be dropped
       * </pre>
       *
       * <code>double gbMem = 3;</code>
       * @return The gbMem.
       */
      @java.lang.Override
      public double getGbMem() {
        return gbMem_;
      }
      /**
       * <pre>
       * The amount of memory assigned to the compute resource.
       * USAGE NOTES:
       * - If the value is 0, the event will be dropped
       * </pre>
       *
       * <code>double gbMem = 3;</code>
       * @param value The gbMem to set.
       * @return This builder for chaining.
       */
      public Builder setGbMem(double value) {
        
        gbMem_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The amount of memory assigned to the compute resource.
       * USAGE NOTES:
       * - If the value is 0, the event will be dropped
       * </pre>
       *
       * <code>double gbMem = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearGbMem() {
        
        gbMem_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:meteringevents.ComputeResource)
    }

    // @@protoc_insertion_point(class_scope:meteringevents.ComputeResource)
    private static final com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource();
    }

    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ComputeResource>
        PARSER = new com.google.protobuf.AbstractParser<ComputeResource>() {
      @java.lang.Override
      public ComputeResource parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ComputeResource> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ComputeResource> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.ComputeResource getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NaafInvocationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:meteringevents.NaafInvocation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A unique identifier.
     *  - This could be an application-derived id, as long as it is
     *    unique across all NaaF invocations reported for the Service.
     * USAGE NOTES:
     * - If no id is provided, the event will be dropped.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * A unique identifier.
     *  - This could be an application-derived id, as long as it is
     *    unique across all NaaF invocations reported for the Service.
     * USAGE NOTES:
     * - If no id is provided, the event will be dropped.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * The raw number of nifi function invocations.
     * USAGE NOTES:
     * - If the value is 0, the event will be dropped.
     * </pre>
     *
     * <code>int32 count = 2;</code>
     * @return The count.
     */
    int getCount();

    /**
     * <pre>
     * The number of nifi function invocations per second, calculated using the
     * following by NaaF Metering Pre Aggregation service for each invocation:
     *   ceiling(invocation-duration-milliseconds / 1000)
     * This results in a billedInvocation of 1 or more for each invocation.
     * As a result, billedInvocations should always be &gt;= count.
     * For example, if there are 8 invocations, each 100 milliseconds, the heartbeat
     * would indicate count = 8, billedInvocations = 8.
     * If there is 1 invocation that takes 1002 milliseconds, the heartbeat would
     * indicate count = 1, billedInvocations = 2.
     * USAGE NOTES:
     * - If the value is 0, the event will be dropped.
     * - If the value is less than count, the event will be dropped.
     * </pre>
     *
     * <code>int32 billedInvocations = 3;</code>
     * @return The billedInvocations.
     */
    int getBilledInvocations();

    /**
     * <pre>
     * The event start timestamp in ms from the epoch of 1970-01-01T00:00:00Z.
     * Note that epoch time is in UTC.
     * USAGE NOTES:
     * - If the end timestamp is less than the start timestamp, the event will
     * be dropped.
     * </pre>
     *
     * <code>uint64 startTimestamp = 4;</code>
     * @return The startTimestamp.
     */
    long getStartTimestamp();

    /**
     * <pre>
     * The event end timestamp in ms from the epoch of 1970-01-01T00:00:00Z.
     * Note that epoch time is in UTC.
     * USAGE NOTES:
     * - If the end timestamp is less than the start timestamp, the event will
     * be dropped.
     * </pre>
     *
     * <code>uint64 endTimestamp = 5;</code>
     * @return The endTimestamp.
     */
    long getEndTimestamp();
  }
  /**
   * <pre>
   * Information about a Nifi as a Function invocation.
   * USAGE NOTES:
   * - See id, count, billedInvocations, start and end timestamps fields
   * </pre>
   *
   * Protobuf type {@code meteringevents.NaafInvocation}
   */
  public static final class NaafInvocation extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:meteringevents.NaafInvocation)
      NaafInvocationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NaafInvocation.newBuilder() to construct.
    private NaafInvocation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NaafInvocation() {
      id_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new NaafInvocation();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_NaafInvocation_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_NaafInvocation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation.class, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * A unique identifier.
     *  - This could be an application-derived id, as long as it is
     *    unique across all NaaF invocations reported for the Service.
     * USAGE NOTES:
     * - If no id is provided, the event will be dropped.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A unique identifier.
     *  - This could be an application-derived id, as long as it is
     *    unique across all NaaF invocations reported for the Service.
     * USAGE NOTES:
     * - If no id is provided, the event will be dropped.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COUNT_FIELD_NUMBER = 2;
    private int count_;
    /**
     * <pre>
     * The raw number of nifi function invocations.
     * USAGE NOTES:
     * - If the value is 0, the event will be dropped.
     * </pre>
     *
     * <code>int32 count = 2;</code>
     * @return The count.
     */
    @java.lang.Override
    public int getCount() {
      return count_;
    }

    public static final int BILLEDINVOCATIONS_FIELD_NUMBER = 3;
    private int billedInvocations_;
    /**
     * <pre>
     * The number of nifi function invocations per second, calculated using the
     * following by NaaF Metering Pre Aggregation service for each invocation:
     *   ceiling(invocation-duration-milliseconds / 1000)
     * This results in a billedInvocation of 1 or more for each invocation.
     * As a result, billedInvocations should always be &gt;= count.
     * For example, if there are 8 invocations, each 100 milliseconds, the heartbeat
     * would indicate count = 8, billedInvocations = 8.
     * If there is 1 invocation that takes 1002 milliseconds, the heartbeat would
     * indicate count = 1, billedInvocations = 2.
     * USAGE NOTES:
     * - If the value is 0, the event will be dropped.
     * - If the value is less than count, the event will be dropped.
     * </pre>
     *
     * <code>int32 billedInvocations = 3;</code>
     * @return The billedInvocations.
     */
    @java.lang.Override
    public int getBilledInvocations() {
      return billedInvocations_;
    }

    public static final int STARTTIMESTAMP_FIELD_NUMBER = 4;
    private long startTimestamp_;
    /**
     * <pre>
     * The event start timestamp in ms from the epoch of 1970-01-01T00:00:00Z.
     * Note that epoch time is in UTC.
     * USAGE NOTES:
     * - If the end timestamp is less than the start timestamp, the event will
     * be dropped.
     * </pre>
     *
     * <code>uint64 startTimestamp = 4;</code>
     * @return The startTimestamp.
     */
    @java.lang.Override
    public long getStartTimestamp() {
      return startTimestamp_;
    }

    public static final int ENDTIMESTAMP_FIELD_NUMBER = 5;
    private long endTimestamp_;
    /**
     * <pre>
     * The event end timestamp in ms from the epoch of 1970-01-01T00:00:00Z.
     * Note that epoch time is in UTC.
     * USAGE NOTES:
     * - If the end timestamp is less than the start timestamp, the event will
     * be dropped.
     * </pre>
     *
     * <code>uint64 endTimestamp = 5;</code>
     * @return The endTimestamp.
     */
    @java.lang.Override
    public long getEndTimestamp() {
      return endTimestamp_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (count_ != 0) {
        output.writeInt32(2, count_);
      }
      if (billedInvocations_ != 0) {
        output.writeInt32(3, billedInvocations_);
      }
      if (startTimestamp_ != 0L) {
        output.writeUInt64(4, startTimestamp_);
      }
      if (endTimestamp_ != 0L) {
        output.writeUInt64(5, endTimestamp_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (count_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, count_);
      }
      if (billedInvocations_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, billedInvocations_);
      }
      if (startTimestamp_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, startTimestamp_);
      }
      if (endTimestamp_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, endTimestamp_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation)) {
        return super.equals(obj);
      }
      com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation other = (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (getCount()
          != other.getCount()) return false;
      if (getBilledInvocations()
          != other.getBilledInvocations()) return false;
      if (getStartTimestamp()
          != other.getStartTimestamp()) return false;
      if (getEndTimestamp()
          != other.getEndTimestamp()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getCount();
      hash = (37 * hash) + BILLEDINVOCATIONS_FIELD_NUMBER;
      hash = (53 * hash) + getBilledInvocations();
      hash = (37 * hash) + STARTTIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getStartTimestamp());
      hash = (37 * hash) + ENDTIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getEndTimestamp());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Information about a Nifi as a Function invocation.
     * USAGE NOTES:
     * - See id, count, billedInvocations, start and end timestamps fields
     * </pre>
     *
     * Protobuf type {@code meteringevents.NaafInvocation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:meteringevents.NaafInvocation)
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_NaafInvocation_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_NaafInvocation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation.class, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation.Builder.class);
      }

      // Construct using com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        count_ = 0;

        billedInvocations_ = 0;

        startTimestamp_ = 0L;

        endTimestamp_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_NaafInvocation_descriptor;
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation getDefaultInstanceForType() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation.getDefaultInstance();
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation build() {
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation buildPartial() {
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation result = new com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation(this);
        result.id_ = id_;
        result.count_ = count_;
        result.billedInvocations_ = billedInvocations_;
        result.startTimestamp_ = startTimestamp_;
        result.endTimestamp_ = endTimestamp_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation) {
          return mergeFrom((com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation other) {
        if (other == com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (other.getCount() != 0) {
          setCount(other.getCount());
        }
        if (other.getBilledInvocations() != 0) {
          setBilledInvocations(other.getBilledInvocations());
        }
        if (other.getStartTimestamp() != 0L) {
          setStartTimestamp(other.getStartTimestamp());
        }
        if (other.getEndTimestamp() != 0L) {
          setEndTimestamp(other.getEndTimestamp());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                id_ = input.readStringRequireUtf8();

                break;
              } // case 10
              case 16: {
                count_ = input.readInt32();

                break;
              } // case 16
              case 24: {
                billedInvocations_ = input.readInt32();

                break;
              } // case 24
              case 32: {
                startTimestamp_ = input.readUInt64();

                break;
              } // case 32
              case 40: {
                endTimestamp_ = input.readUInt64();

                break;
              } // case 40
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * A unique identifier.
       *  - This could be an application-derived id, as long as it is
       *    unique across all NaaF invocations reported for the Service.
       * USAGE NOTES:
       * - If no id is provided, the event will be dropped.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A unique identifier.
       *  - This could be an application-derived id, as long as it is
       *    unique across all NaaF invocations reported for the Service.
       * USAGE NOTES:
       * - If no id is provided, the event will be dropped.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A unique identifier.
       *  - This could be an application-derived id, as long as it is
       *    unique across all NaaF invocations reported for the Service.
       * USAGE NOTES:
       * - If no id is provided, the event will be dropped.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A unique identifier.
       *  - This could be an application-derived id, as long as it is
       *    unique across all NaaF invocations reported for the Service.
       * USAGE NOTES:
       * - If no id is provided, the event will be dropped.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A unique identifier.
       *  - This could be an application-derived id, as long as it is
       *    unique across all NaaF invocations reported for the Service.
       * USAGE NOTES:
       * - If no id is provided, the event will be dropped.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private int count_ ;
      /**
       * <pre>
       * The raw number of nifi function invocations.
       * USAGE NOTES:
       * - If the value is 0, the event will be dropped.
       * </pre>
       *
       * <code>int32 count = 2;</code>
       * @return The count.
       */
      @java.lang.Override
      public int getCount() {
        return count_;
      }
      /**
       * <pre>
       * The raw number of nifi function invocations.
       * USAGE NOTES:
       * - If the value is 0, the event will be dropped.
       * </pre>
       *
       * <code>int32 count = 2;</code>
       * @param value The count to set.
       * @return This builder for chaining.
       */
      public Builder setCount(int value) {
        
        count_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The raw number of nifi function invocations.
       * USAGE NOTES:
       * - If the value is 0, the event will be dropped.
       * </pre>
       *
       * <code>int32 count = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCount() {
        
        count_ = 0;
        onChanged();
        return this;
      }

      private int billedInvocations_ ;
      /**
       * <pre>
       * The number of nifi function invocations per second, calculated using the
       * following by NaaF Metering Pre Aggregation service for each invocation:
       *   ceiling(invocation-duration-milliseconds / 1000)
       * This results in a billedInvocation of 1 or more for each invocation.
       * As a result, billedInvocations should always be &gt;= count.
       * For example, if there are 8 invocations, each 100 milliseconds, the heartbeat
       * would indicate count = 8, billedInvocations = 8.
       * If there is 1 invocation that takes 1002 milliseconds, the heartbeat would
       * indicate count = 1, billedInvocations = 2.
       * USAGE NOTES:
       * - If the value is 0, the event will be dropped.
       * - If the value is less than count, the event will be dropped.
       * </pre>
       *
       * <code>int32 billedInvocations = 3;</code>
       * @return The billedInvocations.
       */
      @java.lang.Override
      public int getBilledInvocations() {
        return billedInvocations_;
      }
      /**
       * <pre>
       * The number of nifi function invocations per second, calculated using the
       * following by NaaF Metering Pre Aggregation service for each invocation:
       *   ceiling(invocation-duration-milliseconds / 1000)
       * This results in a billedInvocation of 1 or more for each invocation.
       * As a result, billedInvocations should always be &gt;= count.
       * For example, if there are 8 invocations, each 100 milliseconds, the heartbeat
       * would indicate count = 8, billedInvocations = 8.
       * If there is 1 invocation that takes 1002 milliseconds, the heartbeat would
       * indicate count = 1, billedInvocations = 2.
       * USAGE NOTES:
       * - If the value is 0, the event will be dropped.
       * - If the value is less than count, the event will be dropped.
       * </pre>
       *
       * <code>int32 billedInvocations = 3;</code>
       * @param value The billedInvocations to set.
       * @return This builder for chaining.
       */
      public Builder setBilledInvocations(int value) {
        
        billedInvocations_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The number of nifi function invocations per second, calculated using the
       * following by NaaF Metering Pre Aggregation service for each invocation:
       *   ceiling(invocation-duration-milliseconds / 1000)
       * This results in a billedInvocation of 1 or more for each invocation.
       * As a result, billedInvocations should always be &gt;= count.
       * For example, if there are 8 invocations, each 100 milliseconds, the heartbeat
       * would indicate count = 8, billedInvocations = 8.
       * If there is 1 invocation that takes 1002 milliseconds, the heartbeat would
       * indicate count = 1, billedInvocations = 2.
       * USAGE NOTES:
       * - If the value is 0, the event will be dropped.
       * - If the value is less than count, the event will be dropped.
       * </pre>
       *
       * <code>int32 billedInvocations = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearBilledInvocations() {
        
        billedInvocations_ = 0;
        onChanged();
        return this;
      }

      private long startTimestamp_ ;
      /**
       * <pre>
       * The event start timestamp in ms from the epoch of 1970-01-01T00:00:00Z.
       * Note that epoch time is in UTC.
       * USAGE NOTES:
       * - If the end timestamp is less than the start timestamp, the event will
       * be dropped.
       * </pre>
       *
       * <code>uint64 startTimestamp = 4;</code>
       * @return The startTimestamp.
       */
      @java.lang.Override
      public long getStartTimestamp() {
        return startTimestamp_;
      }
      /**
       * <pre>
       * The event start timestamp in ms from the epoch of 1970-01-01T00:00:00Z.
       * Note that epoch time is in UTC.
       * USAGE NOTES:
       * - If the end timestamp is less than the start timestamp, the event will
       * be dropped.
       * </pre>
       *
       * <code>uint64 startTimestamp = 4;</code>
       * @param value The startTimestamp to set.
       * @return This builder for chaining.
       */
      public Builder setStartTimestamp(long value) {
        
        startTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The event start timestamp in ms from the epoch of 1970-01-01T00:00:00Z.
       * Note that epoch time is in UTC.
       * USAGE NOTES:
       * - If the end timestamp is less than the start timestamp, the event will
       * be dropped.
       * </pre>
       *
       * <code>uint64 startTimestamp = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearStartTimestamp() {
        
        startTimestamp_ = 0L;
        onChanged();
        return this;
      }

      private long endTimestamp_ ;
      /**
       * <pre>
       * The event end timestamp in ms from the epoch of 1970-01-01T00:00:00Z.
       * Note that epoch time is in UTC.
       * USAGE NOTES:
       * - If the end timestamp is less than the start timestamp, the event will
       * be dropped.
       * </pre>
       *
       * <code>uint64 endTimestamp = 5;</code>
       * @return The endTimestamp.
       */
      @java.lang.Override
      public long getEndTimestamp() {
        return endTimestamp_;
      }
      /**
       * <pre>
       * The event end timestamp in ms from the epoch of 1970-01-01T00:00:00Z.
       * Note that epoch time is in UTC.
       * USAGE NOTES:
       * - If the end timestamp is less than the start timestamp, the event will
       * be dropped.
       * </pre>
       *
       * <code>uint64 endTimestamp = 5;</code>
       * @param value The endTimestamp to set.
       * @return This builder for chaining.
       */
      public Builder setEndTimestamp(long value) {
        
        endTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The event end timestamp in ms from the epoch of 1970-01-01T00:00:00Z.
       * Note that epoch time is in UTC.
       * USAGE NOTES:
       * - If the end timestamp is less than the start timestamp, the event will
       * be dropped.
       * </pre>
       *
       * <code>uint64 endTimestamp = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearEndTimestamp() {
        
        endTimestamp_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:meteringevents.NaafInvocation)
    }

    // @@protoc_insertion_point(class_scope:meteringevents.NaafInvocation)
    private static final com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation();
    }

    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NaafInvocation>
        PARSER = new com.google.protobuf.AbstractParser<NaafInvocation>() {
      @java.lang.Override
      public NaafInvocation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<NaafInvocation> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NaafInvocation> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.NaafInvocation getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MeteredResourceMetadataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:meteringevents.MeteredResourceMetadata)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The resource CRN.
     * </pre>
     *
     * <code>string crn = 1;</code>
     * @return The crn.
     */
    java.lang.String getCrn();
    /**
     * <pre>
     * The resource CRN.
     * </pre>
     *
     * <code>string crn = 1;</code>
     * @return The bytes for crn.
     */
    com.google.protobuf.ByteString
        getCrnBytes();

    /**
     * <pre>
     * The friendly name.
     * </pre>
     *
     * <code>string name = 2;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * The friendly name.
     * </pre>
     *
     * <code>string name = 2;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * The CRN of the user that created the resource.
     * </pre>
     *
     * <code>string creatorCrn = 3;</code>
     * @return The creatorCrn.
     */
    java.lang.String getCreatorCrn();
    /**
     * <pre>
     * The CRN of the user that created the resource.
     * </pre>
     *
     * <code>string creatorCrn = 3;</code>
     * @return The bytes for creatorCrn.
     */
    com.google.protobuf.ByteString
        getCreatorCrnBytes();

    /**
     * <pre>
     * The CRN of the CDP environment the resource is part of.
     * </pre>
     *
     * <code>string environmentCrn = 4;</code>
     * @return The environmentCrn.
     */
    java.lang.String getEnvironmentCrn();
    /**
     * <pre>
     * The CRN of the CDP environment the resource is part of.
     * </pre>
     *
     * <code>string environmentCrn = 4;</code>
     * @return The bytes for environmentCrn.
     */
    com.google.protobuf.ByteString
        getEnvironmentCrnBytes();
  }
  /**
   * <pre>
   * Resource metadata that is needed to materialize billing line items from
   * metering events (added in version 2). This metadata refers to the Cloudera
   * resource being metered.
   * </pre>
   *
   * Protobuf type {@code meteringevents.MeteredResourceMetadata}
   */
  public static final class MeteredResourceMetadata extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:meteringevents.MeteredResourceMetadata)
      MeteredResourceMetadataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MeteredResourceMetadata.newBuilder() to construct.
    private MeteredResourceMetadata(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MeteredResourceMetadata() {
      crn_ = "";
      name_ = "";
      creatorCrn_ = "";
      environmentCrn_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MeteredResourceMetadata();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_MeteredResourceMetadata_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_MeteredResourceMetadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata.class, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata.Builder.class);
    }

    public static final int CRN_FIELD_NUMBER = 1;
    private volatile java.lang.Object crn_;
    /**
     * <pre>
     * The resource CRN.
     * </pre>
     *
     * <code>string crn = 1;</code>
     * @return The crn.
     */
    @java.lang.Override
    public java.lang.String getCrn() {
      java.lang.Object ref = crn_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        crn_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The resource CRN.
     * </pre>
     *
     * <code>string crn = 1;</code>
     * @return The bytes for crn.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCrnBytes() {
      java.lang.Object ref = crn_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        crn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * The friendly name.
     * </pre>
     *
     * <code>string name = 2;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The friendly name.
     * </pre>
     *
     * <code>string name = 2;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CREATORCRN_FIELD_NUMBER = 3;
    private volatile java.lang.Object creatorCrn_;
    /**
     * <pre>
     * The CRN of the user that created the resource.
     * </pre>
     *
     * <code>string creatorCrn = 3;</code>
     * @return The creatorCrn.
     */
    @java.lang.Override
    public java.lang.String getCreatorCrn() {
      java.lang.Object ref = creatorCrn_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        creatorCrn_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The CRN of the user that created the resource.
     * </pre>
     *
     * <code>string creatorCrn = 3;</code>
     * @return The bytes for creatorCrn.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCreatorCrnBytes() {
      java.lang.Object ref = creatorCrn_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        creatorCrn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ENVIRONMENTCRN_FIELD_NUMBER = 4;
    private volatile java.lang.Object environmentCrn_;
    /**
     * <pre>
     * The CRN of the CDP environment the resource is part of.
     * </pre>
     *
     * <code>string environmentCrn = 4;</code>
     * @return The environmentCrn.
     */
    @java.lang.Override
    public java.lang.String getEnvironmentCrn() {
      java.lang.Object ref = environmentCrn_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        environmentCrn_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The CRN of the CDP environment the resource is part of.
     * </pre>
     *
     * <code>string environmentCrn = 4;</code>
     * @return The bytes for environmentCrn.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getEnvironmentCrnBytes() {
      java.lang.Object ref = environmentCrn_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        environmentCrn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(crn_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, crn_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(creatorCrn_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, creatorCrn_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(environmentCrn_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, environmentCrn_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(crn_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, crn_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(creatorCrn_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, creatorCrn_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(environmentCrn_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, environmentCrn_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata)) {
        return super.equals(obj);
      }
      com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata other = (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata) obj;

      if (!getCrn()
          .equals(other.getCrn())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getCreatorCrn()
          .equals(other.getCreatorCrn())) return false;
      if (!getEnvironmentCrn()
          .equals(other.getEnvironmentCrn())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CRN_FIELD_NUMBER;
      hash = (53 * hash) + getCrn().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + CREATORCRN_FIELD_NUMBER;
      hash = (53 * hash) + getCreatorCrn().hashCode();
      hash = (37 * hash) + ENVIRONMENTCRN_FIELD_NUMBER;
      hash = (53 * hash) + getEnvironmentCrn().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Resource metadata that is needed to materialize billing line items from
     * metering events (added in version 2). This metadata refers to the Cloudera
     * resource being metered.
     * </pre>
     *
     * Protobuf type {@code meteringevents.MeteredResourceMetadata}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:meteringevents.MeteredResourceMetadata)
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_MeteredResourceMetadata_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_MeteredResourceMetadata_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata.class, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata.Builder.class);
      }

      // Construct using com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        crn_ = "";

        name_ = "";

        creatorCrn_ = "";

        environmentCrn_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_MeteredResourceMetadata_descriptor;
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata getDefaultInstanceForType() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata.getDefaultInstance();
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata build() {
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata buildPartial() {
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata result = new com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata(this);
        result.crn_ = crn_;
        result.name_ = name_;
        result.creatorCrn_ = creatorCrn_;
        result.environmentCrn_ = environmentCrn_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata) {
          return mergeFrom((com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata other) {
        if (other == com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata.getDefaultInstance()) return this;
        if (!other.getCrn().isEmpty()) {
          crn_ = other.crn_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getCreatorCrn().isEmpty()) {
          creatorCrn_ = other.creatorCrn_;
          onChanged();
        }
        if (!other.getEnvironmentCrn().isEmpty()) {
          environmentCrn_ = other.environmentCrn_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                crn_ = input.readStringRequireUtf8();

                break;
              } // case 10
              case 18: {
                name_ = input.readStringRequireUtf8();

                break;
              } // case 18
              case 26: {
                creatorCrn_ = input.readStringRequireUtf8();

                break;
              } // case 26
              case 34: {
                environmentCrn_ = input.readStringRequireUtf8();

                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private java.lang.Object crn_ = "";
      /**
       * <pre>
       * The resource CRN.
       * </pre>
       *
       * <code>string crn = 1;</code>
       * @return The crn.
       */
      public java.lang.String getCrn() {
        java.lang.Object ref = crn_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          crn_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The resource CRN.
       * </pre>
       *
       * <code>string crn = 1;</code>
       * @return The bytes for crn.
       */
      public com.google.protobuf.ByteString
          getCrnBytes() {
        java.lang.Object ref = crn_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          crn_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The resource CRN.
       * </pre>
       *
       * <code>string crn = 1;</code>
       * @param value The crn to set.
       * @return This builder for chaining.
       */
      public Builder setCrn(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        crn_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The resource CRN.
       * </pre>
       *
       * <code>string crn = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCrn() {
        
        crn_ = getDefaultInstance().getCrn();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The resource CRN.
       * </pre>
       *
       * <code>string crn = 1;</code>
       * @param value The bytes for crn to set.
       * @return This builder for chaining.
       */
      public Builder setCrnBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        crn_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * The friendly name.
       * </pre>
       *
       * <code>string name = 2;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The friendly name.
       * </pre>
       *
       * <code>string name = 2;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The friendly name.
       * </pre>
       *
       * <code>string name = 2;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The friendly name.
       * </pre>
       *
       * <code>string name = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The friendly name.
       * </pre>
       *
       * <code>string name = 2;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object creatorCrn_ = "";
      /**
       * <pre>
       * The CRN of the user that created the resource.
       * </pre>
       *
       * <code>string creatorCrn = 3;</code>
       * @return The creatorCrn.
       */
      public java.lang.String getCreatorCrn() {
        java.lang.Object ref = creatorCrn_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          creatorCrn_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The CRN of the user that created the resource.
       * </pre>
       *
       * <code>string creatorCrn = 3;</code>
       * @return The bytes for creatorCrn.
       */
      public com.google.protobuf.ByteString
          getCreatorCrnBytes() {
        java.lang.Object ref = creatorCrn_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          creatorCrn_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The CRN of the user that created the resource.
       * </pre>
       *
       * <code>string creatorCrn = 3;</code>
       * @param value The creatorCrn to set.
       * @return This builder for chaining.
       */
      public Builder setCreatorCrn(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        creatorCrn_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The CRN of the user that created the resource.
       * </pre>
       *
       * <code>string creatorCrn = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearCreatorCrn() {
        
        creatorCrn_ = getDefaultInstance().getCreatorCrn();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The CRN of the user that created the resource.
       * </pre>
       *
       * <code>string creatorCrn = 3;</code>
       * @param value The bytes for creatorCrn to set.
       * @return This builder for chaining.
       */
      public Builder setCreatorCrnBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        creatorCrn_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object environmentCrn_ = "";
      /**
       * <pre>
       * The CRN of the CDP environment the resource is part of.
       * </pre>
       *
       * <code>string environmentCrn = 4;</code>
       * @return The environmentCrn.
       */
      public java.lang.String getEnvironmentCrn() {
        java.lang.Object ref = environmentCrn_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          environmentCrn_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The CRN of the CDP environment the resource is part of.
       * </pre>
       *
       * <code>string environmentCrn = 4;</code>
       * @return The bytes for environmentCrn.
       */
      public com.google.protobuf.ByteString
          getEnvironmentCrnBytes() {
        java.lang.Object ref = environmentCrn_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          environmentCrn_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The CRN of the CDP environment the resource is part of.
       * </pre>
       *
       * <code>string environmentCrn = 4;</code>
       * @param value The environmentCrn to set.
       * @return This builder for chaining.
       */
      public Builder setEnvironmentCrn(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        environmentCrn_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The CRN of the CDP environment the resource is part of.
       * </pre>
       *
       * <code>string environmentCrn = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearEnvironmentCrn() {
        
        environmentCrn_ = getDefaultInstance().getEnvironmentCrn();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The CRN of the CDP environment the resource is part of.
       * </pre>
       *
       * <code>string environmentCrn = 4;</code>
       * @param value The bytes for environmentCrn to set.
       * @return This builder for chaining.
       */
      public Builder setEnvironmentCrnBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        environmentCrn_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:meteringevents.MeteredResourceMetadata)
    }

    // @@protoc_insertion_point(class_scope:meteringevents.MeteredResourceMetadata)
    private static final com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata();
    }

    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MeteredResourceMetadata>
        PARSER = new com.google.protobuf.AbstractParser<MeteredResourceMetadata>() {
      @java.lang.Override
      public MeteredResourceMetadata parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<MeteredResourceMetadata> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MeteredResourceMetadata> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadata getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MeteredResourceMetadataLiteOrBuilder extends
      // @@protoc_insertion_point(interface_extends:meteringevents.MeteredResourceMetadataLite)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The resource CRN.
     * </pre>
     *
     * <code>string crn = 1;</code>
     * @return The crn.
     */
    java.lang.String getCrn();
    /**
     * <pre>
     * The resource CRN.
     * </pre>
     *
     * <code>string crn = 1;</code>
     * @return The bytes for crn.
     */
    com.google.protobuf.ByteString
        getCrnBytes();

    /**
     * <pre>
     * The friendly name.
     * </pre>
     *
     * <code>string name = 2;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * The friendly name.
     * </pre>
     *
     * <code>string name = 2;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * The platform where the Metered Resource is executed.
     * </pre>
     *
     * <code>.meteringevents.Platform.Value platform = 3;</code>
     * @return The enum numeric value on the wire for platform.
     */
    int getPlatformValue();
    /**
     * <pre>
     * The platform where the Metered Resource is executed.
     * </pre>
     *
     * <code>.meteringevents.Platform.Value platform = 3;</code>
     * @return The platform.
     */
    com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform.Value getPlatform();
  }
  /**
   * <pre>
   * The lite version of the Resource metadata that is needed to materialize
   * billing line items from metering events (added in version 3). This metadata
   * refers to the Cloudera resource being metered.
   * The difference between MeteredResourceMetadata and MeteredResourceMetadataLite
   * is that, we no longer require creator or the environment crn. We instead
   * require platform value to be provided.
   * </pre>
   *
   * Protobuf type {@code meteringevents.MeteredResourceMetadataLite}
   */
  public static final class MeteredResourceMetadataLite extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:meteringevents.MeteredResourceMetadataLite)
      MeteredResourceMetadataLiteOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MeteredResourceMetadataLite.newBuilder() to construct.
    private MeteredResourceMetadataLite(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MeteredResourceMetadataLite() {
      crn_ = "";
      name_ = "";
      platform_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MeteredResourceMetadataLite();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_MeteredResourceMetadataLite_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_MeteredResourceMetadataLite_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite.class, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite.Builder.class);
    }

    public static final int CRN_FIELD_NUMBER = 1;
    private volatile java.lang.Object crn_;
    /**
     * <pre>
     * The resource CRN.
     * </pre>
     *
     * <code>string crn = 1;</code>
     * @return The crn.
     */
    @java.lang.Override
    public java.lang.String getCrn() {
      java.lang.Object ref = crn_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        crn_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The resource CRN.
     * </pre>
     *
     * <code>string crn = 1;</code>
     * @return The bytes for crn.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCrnBytes() {
      java.lang.Object ref = crn_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        crn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * The friendly name.
     * </pre>
     *
     * <code>string name = 2;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The friendly name.
     * </pre>
     *
     * <code>string name = 2;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PLATFORM_FIELD_NUMBER = 3;
    private int platform_;
    /**
     * <pre>
     * The platform where the Metered Resource is executed.
     * </pre>
     *
     * <code>.meteringevents.Platform.Value platform = 3;</code>
     * @return The enum numeric value on the wire for platform.
     */
    @java.lang.Override public int getPlatformValue() {
      return platform_;
    }
    /**
     * <pre>
     * The platform where the Metered Resource is executed.
     * </pre>
     *
     * <code>.meteringevents.Platform.Value platform = 3;</code>
     * @return The platform.
     */
    @java.lang.Override public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform.Value getPlatform() {
      @SuppressWarnings("deprecation")
      com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform.Value result = com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform.Value.valueOf(platform_);
      return result == null ? com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform.Value.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(crn_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, crn_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (platform_ != com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform.Value.UNSET.getNumber()) {
        output.writeEnum(3, platform_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(crn_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, crn_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (platform_ != com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform.Value.UNSET.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, platform_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite)) {
        return super.equals(obj);
      }
      com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite other = (com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite) obj;

      if (!getCrn()
          .equals(other.getCrn())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (platform_ != other.platform_) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CRN_FIELD_NUMBER;
      hash = (53 * hash) + getCrn().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + PLATFORM_FIELD_NUMBER;
      hash = (53 * hash) + platform_;
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The lite version of the Resource metadata that is needed to materialize
     * billing line items from metering events (added in version 3). This metadata
     * refers to the Cloudera resource being metered.
     * The difference between MeteredResourceMetadata and MeteredResourceMetadataLite
     * is that, we no longer require creator or the environment crn. We instead
     * require platform value to be provided.
     * </pre>
     *
     * Protobuf type {@code meteringevents.MeteredResourceMetadataLite}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:meteringevents.MeteredResourceMetadataLite)
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLiteOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_MeteredResourceMetadataLite_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_MeteredResourceMetadataLite_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite.class, com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite.Builder.class);
      }

      // Construct using com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        crn_ = "";

        name_ = "";

        platform_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.internal_static_meteringevents_MeteredResourceMetadataLite_descriptor;
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite getDefaultInstanceForType() {
        return com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite.getDefaultInstance();
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite build() {
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite buildPartial() {
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite result = new com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite(this);
        result.crn_ = crn_;
        result.name_ = name_;
        result.platform_ = platform_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite) {
          return mergeFrom((com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite other) {
        if (other == com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite.getDefaultInstance()) return this;
        if (!other.getCrn().isEmpty()) {
          crn_ = other.crn_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.platform_ != 0) {
          setPlatformValue(other.getPlatformValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                crn_ = input.readStringRequireUtf8();

                break;
              } // case 10
              case 18: {
                name_ = input.readStringRequireUtf8();

                break;
              } // case 18
              case 24: {
                platform_ = input.readEnum();

                break;
              } // case 24
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private java.lang.Object crn_ = "";
      /**
       * <pre>
       * The resource CRN.
       * </pre>
       *
       * <code>string crn = 1;</code>
       * @return The crn.
       */
      public java.lang.String getCrn() {
        java.lang.Object ref = crn_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          crn_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The resource CRN.
       * </pre>
       *
       * <code>string crn = 1;</code>
       * @return The bytes for crn.
       */
      public com.google.protobuf.ByteString
          getCrnBytes() {
        java.lang.Object ref = crn_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          crn_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The resource CRN.
       * </pre>
       *
       * <code>string crn = 1;</code>
       * @param value The crn to set.
       * @return This builder for chaining.
       */
      public Builder setCrn(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        crn_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The resource CRN.
       * </pre>
       *
       * <code>string crn = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCrn() {
        
        crn_ = getDefaultInstance().getCrn();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The resource CRN.
       * </pre>
       *
       * <code>string crn = 1;</code>
       * @param value The bytes for crn to set.
       * @return This builder for chaining.
       */
      public Builder setCrnBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        crn_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * The friendly name.
       * </pre>
       *
       * <code>string name = 2;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The friendly name.
       * </pre>
       *
       * <code>string name = 2;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The friendly name.
       * </pre>
       *
       * <code>string name = 2;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The friendly name.
       * </pre>
       *
       * <code>string name = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The friendly name.
       * </pre>
       *
       * <code>string name = 2;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private int platform_ = 0;
      /**
       * <pre>
       * The platform where the Metered Resource is executed.
       * </pre>
       *
       * <code>.meteringevents.Platform.Value platform = 3;</code>
       * @return The enum numeric value on the wire for platform.
       */
      @java.lang.Override public int getPlatformValue() {
        return platform_;
      }
      /**
       * <pre>
       * The platform where the Metered Resource is executed.
       * </pre>
       *
       * <code>.meteringevents.Platform.Value platform = 3;</code>
       * @param value The enum numeric value on the wire for platform to set.
       * @return This builder for chaining.
       */
      public Builder setPlatformValue(int value) {
        
        platform_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The platform where the Metered Resource is executed.
       * </pre>
       *
       * <code>.meteringevents.Platform.Value platform = 3;</code>
       * @return The platform.
       */
      @java.lang.Override
      public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform.Value getPlatform() {
        @SuppressWarnings("deprecation")
        com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform.Value result = com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform.Value.valueOf(platform_);
        return result == null ? com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform.Value.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The platform where the Metered Resource is executed.
       * </pre>
       *
       * <code>.meteringevents.Platform.Value platform = 3;</code>
       * @param value The platform to set.
       * @return This builder for chaining.
       */
      public Builder setPlatform(com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.Platform.Value value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        platform_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The platform where the Metered Resource is executed.
       * </pre>
       *
       * <code>.meteringevents.Platform.Value platform = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearPlatform() {
        
        platform_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:meteringevents.MeteredResourceMetadataLite)
    }

    // @@protoc_insertion_point(class_scope:meteringevents.MeteredResourceMetadataLite)
    private static final com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite();
    }

    public static com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MeteredResourceMetadataLite>
        PARSER = new com.google.protobuf.AbstractParser<MeteredResourceMetadataLite>() {
      @java.lang.Override
      public MeteredResourceMetadataLite parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<MeteredResourceMetadataLite> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MeteredResourceMetadataLite> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cloudera.thunderhead.service.metering.events.MeteringEventsProto.MeteredResourceMetadataLite getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_meteringevents_ServiceType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_meteringevents_ServiceType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_meteringevents_ServiceFeature_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_meteringevents_ServiceFeature_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_meteringevents_ServiceConfiguration_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_meteringevents_ServiceConfiguration_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_meteringevents_Platform_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_meteringevents_Platform_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_meteringevents_MeteringEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_meteringevents_MeteringEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_meteringevents_MeteringEvents_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_meteringevents_MeteringEvents_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_meteringevents_ClusterInstanceHeartbeat_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_meteringevents_ClusterInstanceHeartbeat_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_meteringevents_ComputeResourceHeartbeat_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_meteringevents_ComputeResourceHeartbeat_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_meteringevents_User_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_meteringevents_User_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_meteringevents_NaafHeartbeat_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_meteringevents_NaafHeartbeat_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_meteringevents_StorageHeartbeat_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_meteringevents_StorageHeartbeat_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_meteringevents_Storage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_meteringevents_Storage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_meteringevents_StorageType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_meteringevents_StorageType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_meteringevents_AdditionalMetadata_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_meteringevents_AdditionalMetadata_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_meteringevents_Instance_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_meteringevents_Instance_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_meteringevents_ComputeResource_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_meteringevents_ComputeResource_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_meteringevents_NaafInvocation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_meteringevents_NaafInvocation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_meteringevents_MeteredResourceMetadata_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_meteringevents_MeteredResourceMetadata_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_meteringevents_MeteredResourceMetadataLite_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_meteringevents_MeteredResourceMetadataLite_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024meteringevents.proto\022\016meteringevents\"\243" +
      "\001\n\013ServiceType\"\223\001\n\005Value\022\t\n\005UNSET\020\000\022\013\n\007D" +
      "ATAHUB\020\001\022\024\n\020MACHINE_LEARNING\020\002\022\022\n\016DATA_W" +
      "AREHOUSE\020\003\022\024\n\020DATA_ENGINEERING\020\004\022\022\n\016OPER" +
      "ATIONAL_DB\020\005\022\r\n\tDATA_FLOW\020\006\022\017\n\013ENVIRONME" +
      "NT\020\007\"\345\001\n\016ServiceFeature\"\322\001\n\005Value\022\t\n\005UNS" +
      "ET\020\000\022\010\n\004NIFI\020\001\022\n\n\006IMPALA\020\002\022\010\n\004HIVE\020\003\022\t\n\005" +
      "DRUID\020\004\022\t\n\005KAFKA\020\005\022\t\n\005FLINK\020\006\022\t\n\005SPARK\020\007" +
      "\022\n\n\006SPARK3\020\010\022\010\n\004KUDU\020\t\022\010\n\004SOLR\020\n\022\t\n\005HBAS" +
      "E\020\013\022\010\n\004NAAF\020\014\022\022\n\016OBJECT_STORAGE\020\r\022\020\n\014FIL" +
      "E_STORAGE\020\016\022\027\n\023LOW_LATENCY_STORAGE\020\017\"T\n\024" +
      "ServiceConfiguration\022<\n\016serviceFeature\030\001" +
      " \001(\0162$.meteringevents.ServiceFeature.Val" +
      "ue\";\n\010Platform\"/\n\005Value\022\t\n\005UNSET\020\000\022\007\n\003AW" +
      "S\020\001\022\t\n\005AZURE\020\002\022\007\n\003GCP\020\003\"\253\004\n\rMeteringEven" +
      "t\022\n\n\002id\030\001 \001(\t\022\021\n\ttimestamp\030\002 \001(\004\022\017\n\007vers" +
      "ion\030\003 \001(\005\0226\n\013serviceType\030\004 \001(\0162!.meterin" +
      "gevents.ServiceType.Value\022\026\n\016serviceVers" +
      "ion\030\005 \001(\t\022B\n\024serviceConfiguration\030\t \001(\0132" +
      "$.meteringevents.ServiceConfiguration\022\023\n" +
      "\013workloadCrn\030\006 \001(\t\022L\n\030clusterInstanceHea" +
      "rtbeat\030\007 \001(\0132(.meteringevents.ClusterIns" +
      "tanceHeartbeatH\000\022$\n\004user\030\010 \001(\0132\024.meterin" +
      "gevents.UserH\000\022L\n\030computeResourceHeartbe" +
      "at\030\n \001(\0132(.meteringevents.ComputeResourc" +
      "eHeartbeatH\000\0226\n\rnaafHeartbeat\030\013 \001(\0132\035.me" +
      "teringevents.NaafHeartbeatH\000\022<\n\020storageH" +
      "eartbeat\030\014 \001(\0132 .meteringevents.StorageH" +
      "eartbeatH\000B\t\n\007payload\"?\n\016MeteringEvents\022" +
      "-\n\006events\030\001 \003(\0132\035.meteringevents.Meterin" +
      "gEvent\"\245\001\n\030ClusterInstanceHeartbeat\022\022\n\nc" +
      "lusterCrn\030\001 \001(\t\022+\n\tinstances\030\002 \003(\0132\030.met" +
      "eringevents.Instance\022H\n\027meteredResourceM" +
      "etadata\030\003 \001(\0132\'.meteringevents.MeteredRe" +
      "sourceMetadata\"\237\001\n\030ComputeResourceHeartb" +
      "eat\0229\n\020computeResources\030\001 \003(\0132\037.metering" +
      "events.ComputeResource\022H\n\027meteredResourc" +
      "eMetadata\030\002 \001(\0132\'.meteringevents.Metered" +
      "ResourceMetadata\"t\n\004User\022\022\n\nclusterCrn\030\001" +
      " \001(\t\022\016\n\006userId\030\002 \003(\t\022H\n\027meteredResourceM" +
      "etadata\030\003 \001(\0132\'.meteringevents.MeteredRe" +
      "sourceMetadata\"\226\001\n\rNaafHeartbeat\0227\n\017naaf" +
      "Invocations\030\001 \003(\0132\036.meteringevents.NaafI" +
      "nvocation\022L\n\027meteredResourceMetadata\030\002 \001" +
      "(\0132+.meteringevents.MeteredResourceMetad" +
      "ataLite\"\207\001\n\020StorageHeartbeat\022)\n\010storages" +
      "\030\001 \003(\0132\027.meteringevents.Storage\022H\n\027meter" +
      "edResourceMetadata\030\002 \001(\0132\'.meteringevent" +
      "s.MeteredResourceMetadata\"m\n\007Storage\022/\n\004" +
      "type\030\001 \001(\0162!.meteringevents.StorageType." +
      "Value\022\n\n\002id\030\002 \001(\t\022\020\n\010sizeInMB\030\003 \001(\001\022\023\n\013d" +
      "escription\030\004 \001(\t\";\n\013StorageType\",\n\005Value" +
      "\022\t\n\005UNSET\020\000\022\006\n\002S3\020\001\022\007\n\003EFS\020\002\022\007\n\003EBS\020\003\"\'\n" +
      "\022AdditionalMetadata\022\021\n\thostGroup\030\001 \001(\t\"w" +
      "\n\010Instance\022\n\n\002id\030\001 \001(\t\022\014\n\004type\030\002 \001(\t\022\021\n\t" +
      "ipAddress\030\003 \001(\t\022>\n\022additionalMetadata\030\004 " +
      "\001(\0132\".meteringevents.AdditionalMetadata\"" +
      ">\n\017ComputeResource\022\n\n\002id\030\001 \001(\t\022\020\n\010numCor" +
      "es\030\002 \001(\001\022\r\n\005gbMem\030\003 \001(\001\"t\n\016NaafInvocatio" +
      "n\022\n\n\002id\030\001 \001(\t\022\r\n\005count\030\002 \001(\005\022\031\n\021billedIn" +
      "vocations\030\003 \001(\005\022\026\n\016startTimestamp\030\004 \001(\004\022" +
      "\024\n\014endTimestamp\030\005 \001(\004\"`\n\027MeteredResource" +
      "Metadata\022\013\n\003crn\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\022\n\nc" +
      "reatorCrn\030\003 \001(\t\022\026\n\016environmentCrn\030\004 \001(\t\"" +
      "j\n\033MeteredResourceMetadataLite\022\013\n\003crn\030\001 " +
      "\001(\t\022\014\n\004name\030\002 \001(\t\0220\n\010platform\030\003 \001(\0162\036.me" +
      "teringevents.Platform.ValueBG\n0com.cloud" +
      "era.thunderhead.service.metering.eventsB" +
      "\023MeteringEventsProtob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_meteringevents_ServiceType_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_meteringevents_ServiceType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_meteringevents_ServiceType_descriptor,
        new java.lang.String[] { });
    internal_static_meteringevents_ServiceFeature_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_meteringevents_ServiceFeature_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_meteringevents_ServiceFeature_descriptor,
        new java.lang.String[] { });
    internal_static_meteringevents_ServiceConfiguration_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_meteringevents_ServiceConfiguration_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_meteringevents_ServiceConfiguration_descriptor,
        new java.lang.String[] { "ServiceFeature", });
    internal_static_meteringevents_Platform_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_meteringevents_Platform_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_meteringevents_Platform_descriptor,
        new java.lang.String[] { });
    internal_static_meteringevents_MeteringEvent_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_meteringevents_MeteringEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_meteringevents_MeteringEvent_descriptor,
        new java.lang.String[] { "Id", "Timestamp", "Version", "ServiceType", "ServiceVersion", "ServiceConfiguration", "WorkloadCrn", "ClusterInstanceHeartbeat", "User", "ComputeResourceHeartbeat", "NaafHeartbeat", "StorageHeartbeat", "Payload", });
    internal_static_meteringevents_MeteringEvents_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_meteringevents_MeteringEvents_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_meteringevents_MeteringEvents_descriptor,
        new java.lang.String[] { "Events", });
    internal_static_meteringevents_ClusterInstanceHeartbeat_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_meteringevents_ClusterInstanceHeartbeat_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_meteringevents_ClusterInstanceHeartbeat_descriptor,
        new java.lang.String[] { "ClusterCrn", "Instances", "MeteredResourceMetadata", });
    internal_static_meteringevents_ComputeResourceHeartbeat_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_meteringevents_ComputeResourceHeartbeat_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_meteringevents_ComputeResourceHeartbeat_descriptor,
        new java.lang.String[] { "ComputeResources", "MeteredResourceMetadata", });
    internal_static_meteringevents_User_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_meteringevents_User_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_meteringevents_User_descriptor,
        new java.lang.String[] { "ClusterCrn", "UserId", "MeteredResourceMetadata", });
    internal_static_meteringevents_NaafHeartbeat_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_meteringevents_NaafHeartbeat_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_meteringevents_NaafHeartbeat_descriptor,
        new java.lang.String[] { "NaafInvocations", "MeteredResourceMetadata", });
    internal_static_meteringevents_StorageHeartbeat_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_meteringevents_StorageHeartbeat_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_meteringevents_StorageHeartbeat_descriptor,
        new java.lang.String[] { "Storages", "MeteredResourceMetadata", });
    internal_static_meteringevents_Storage_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_meteringevents_Storage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_meteringevents_Storage_descriptor,
        new java.lang.String[] { "Type", "Id", "SizeInMB", "Description", });
    internal_static_meteringevents_StorageType_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_meteringevents_StorageType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_meteringevents_StorageType_descriptor,
        new java.lang.String[] { });
    internal_static_meteringevents_AdditionalMetadata_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_meteringevents_AdditionalMetadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_meteringevents_AdditionalMetadata_descriptor,
        new java.lang.String[] { "HostGroup", });
    internal_static_meteringevents_Instance_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_meteringevents_Instance_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_meteringevents_Instance_descriptor,
        new java.lang.String[] { "Id", "Type", "IpAddress", "AdditionalMetadata", });
    internal_static_meteringevents_ComputeResource_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_meteringevents_ComputeResource_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_meteringevents_ComputeResource_descriptor,
        new java.lang.String[] { "Id", "NumCores", "GbMem", });
    internal_static_meteringevents_NaafInvocation_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_meteringevents_NaafInvocation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_meteringevents_NaafInvocation_descriptor,
        new java.lang.String[] { "Id", "Count", "BilledInvocations", "StartTimestamp", "EndTimestamp", });
    internal_static_meteringevents_MeteredResourceMetadata_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_meteringevents_MeteredResourceMetadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_meteringevents_MeteredResourceMetadata_descriptor,
        new java.lang.String[] { "Crn", "Name", "CreatorCrn", "EnvironmentCrn", });
    internal_static_meteringevents_MeteredResourceMetadataLite_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_meteringevents_MeteredResourceMetadataLite_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_meteringevents_MeteredResourceMetadataLite_descriptor,
        new java.lang.String[] { "Crn", "Name", "Platform", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
