auth:
  license:
    file: license.txt
  config:
    dir: /etc/auth
  databus:
    credential:
      tp:
        file: altus_credentials
      fluent:
        file: databus_credentials
  mock:
    baseimage.enable: true
    event-generation:
      expiration-minutes: 10
    freeipa:
      multiaz.enable: true
      rebuild.enable: true
      batch.call.enable: true
      loadbalancer.enable: true
    cloudstoragevalidation.enable:
      global: true
      aws: true
      azure: true
      gcp: false
    sshpublickey.file: key.pub
    raws3.enable: false
    azure.marketplace.images.enable: true
    azure.marketplace.images.only.enable: false
    azure.single.resourcegroup.dedicated.storage.account.enable: true
    cloudidentitymapping.enable: true
    microdutysdx.enable: true
    upgrade.internalrepo.enable: true
    hbase.cloudstorage.enable: false
    cm.observability.saas.premium: false
    cm.observability.saas.trial: false
    cm.observability.realtimejobs: false
    cm.observability.dmp: false
    datalake:
      customimage.enable: true
      loadbalancer.enable: true
      backup.on.resize.enable: true
      light.to.medium.migration.enable: true
      recovery.resize.enable: true
      select.instance.type.enable: true
      backup.restore.permission.checks.enabled: true
      backup.compression.enable: false
      upgrade.recovery.enabled: true
    differentdatahubversionthandatalake.enabled: true
    datahub:
      instancetypes.enable: false
      force.os.upgrade: true
    environment.experience.deletion.enable: true
    endpointgateway.enable.azure: false
    endpointgateway.enable.gcp: false
    endpointgateway.skip.validation: false
    cm.sync.command.poller.enable: true
    diagnostics.vm.enable: true
    compute.monitoring.enable: false
    user.sync:
      credentials.update.optimization.enable: true
      group-size.enforce-limit.enable: true
      split-freeipa-user-retrieval.enable: true
    azure:
      certificate.auth.enable: true
    aws:
      native.variant.migration.enable: false
      arm:
        datahub: true
        datalake: true
    gcp:
        secureboot.enabled: false
    conclusion.checker.send.user.event.enable: true
    ha.repair.enable: true
    ui:
      edp.progress.bar.enable: true
    unbound.elimination.enable: true
    targeted.upscale.enable: true
    e2e.test.only.enable: true
    saas.enable: false
    workloadiam.sync:
      routing.enable: false
      enable: false
    saas.sdx.integration.enable: true
    postgres.upgrade.exception.enable: false
    postgres.upgrade.skip.attached.datahubs.check.enable: false
    postgres.upgrade.skip.service.stop.enable: false
    upgrade.skip.attached.datahubs.check.enable: false
    upgrade.skip.rolling.upgrade.validation: false
    targeting.subnets.for.endpoint.access.gateway.enable: true
    cost.calculation.enable: false
    co2.calculation.enable: false
    enforce.aws.native.single.az.enabled: true
    azure.database.flexibleserver.upgrade.enabled: true
    azure.database.flexibleserver.upgrade.longpolling.enabled: false
    azure.database.singleserver.reject.enabled: true
    secret.encryption.enabled: false
    cdl:
      enabled: true
    compute:
      ui:
        enabled: true
    ranger.ldap.usersync: true
    tlsv13.enable: false
    dev.telemetry.yum.repo.enabled: false
    lakehouse.optimizer.enabled: true
    ephemeral.xfs.support.enabled: false
    configure.encryption.profile.enabled: false
    mitigate.release.failure.7218P1100.enabled: false
    zookeeper.to.kraft.migration.enabled: false
    tlsv13.only.enabled: false
    rhel9.enabled: true
    rhel9.preferred: false
    verticalscale.ha.enabled: false
crn:
  partition: cdp
  region: us-west-1

spring:
  datasource:
    url: jdbc:h2:mem:mydb
    username: sa
    password: password
    driverClassName: org.h2.Driver
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate.ddl-auto: update
  h2:
    console.enabled: true

vault:
  addr: localhost
  port: 8200
  ssl.enabled: false
  kv.engine.v2.path: secret
  config.enabled: true
secret:
  application: mock/shared
  engine: "com.sequenceiq.cloudbreak.service.secret.vault.VaultKvV2Engine"

clusterProxy:
  url: http://localhost:10180/cluster-proxy
  enabled: true
  disabledPlatforms: MOCK
  readConfigPath: /rpc/readConfig
  registerConfigPath: /rpc/forceRegisterConfig
  updateConfigPath: /rpc/updateConfig
  removeConfigPath: /rpc/removeConfig
  maxAttempts: 20
  maxFailure: 1

cb:
  cm.client:
    cluster.proxy.timeout: 120000
    connect.timeout.seconds: 125
    read.timeout.seconds: 125
    write.timeout.seconds: 125
    syncCommandPoller:
      interrupt.timeout.seconds: 120
