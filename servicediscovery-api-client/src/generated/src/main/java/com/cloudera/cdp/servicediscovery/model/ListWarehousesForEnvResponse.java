/*
 * CDP Service Discovery
 * CDP Service Discovery is a web service that provides information to a workload service
 *
 * The version of the OpenAPI document: __API_VERSION__
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudera.cdp.servicediscovery.model;

import java.util.Objects;
import java.util.Arrays;
import com.cloudera.cdp.servicediscovery.model.Warehouse;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.HashMap;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The list of Datalakes for an Environment, deprecated.
 */
@JsonPropertyOrder({
  ListWarehousesForEnvResponse.JSON_PROPERTY_ENVIRONMENT_ID,
  ListWarehousesForEnvResponse.JSON_PROPERTY_WAREHOUSES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.5.0")
public class ListWarehousesForEnvResponse {
  public static final String JSON_PROPERTY_ENVIRONMENT_ID = "environmentId";
  private String environmentId;

  public static final String JSON_PROPERTY_WAREHOUSES = "warehouses";
  private Map<String, Warehouse> warehouses = new HashMap<>();

  public ListWarehousesForEnvResponse() {
  }

  public ListWarehousesForEnvResponse environmentId(String environmentId) {
    
    this.environmentId = environmentId;
    return this;
  }

   /**
   * The environment Id the warehouses are in.
   * @return environmentId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENVIRONMENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEnvironmentId() {
    return environmentId;
  }


  @JsonProperty(JSON_PROPERTY_ENVIRONMENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnvironmentId(String environmentId) {
    this.environmentId = environmentId;
  }


  public ListWarehousesForEnvResponse warehouses(Map<String, Warehouse> warehouses) {
    
    this.warehouses = warehouses;
    return this;
  }

  public ListWarehousesForEnvResponse putWarehousesItem(String key, Warehouse warehousesItem) {
    if (this.warehouses == null) {
      this.warehouses = new HashMap<>();
    }
    this.warehouses.put(key, warehousesItem);
    return this;
  }

   /**
   * The map of warehouses for the environment.
   * @return warehouses
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WAREHOUSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Warehouse> getWarehouses() {
    return warehouses;
  }


  @JsonProperty(JSON_PROPERTY_WAREHOUSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWarehouses(Map<String, Warehouse> warehouses) {
    this.warehouses = warehouses;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListWarehousesForEnvResponse listWarehousesForEnvResponse = (ListWarehousesForEnvResponse) o;
    return Objects.equals(this.environmentId, listWarehousesForEnvResponse.environmentId) &&
        Objects.equals(this.warehouses, listWarehousesForEnvResponse.warehouses);
  }

  @Override
  public int hashCode() {
    return Objects.hash(environmentId, warehouses);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListWarehousesForEnvResponse {\n");
    sb.append("    environmentId: ").append(toIndentedString(environmentId)).append("\n");
    sb.append("    warehouses: ").append(toIndentedString(warehouses)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

