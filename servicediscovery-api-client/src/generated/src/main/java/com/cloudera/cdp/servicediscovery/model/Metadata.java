/*
 * CDP Service Discovery
 * CDP Service Discovery is a web service that provides information to a workload service
 *
 * The version of the OpenAPI document: __API_VERSION__
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudera.cdp.servicediscovery.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Metadata details of the datalake.
 */
@JsonPropertyOrder({
  Metadata.JSON_PROPERTY_SHAPE,
  Metadata.JSON_PROPERTY_BASE_VERSION,
  Metadata.JSON_PROPERTY_SERVICE_PACK,
  Metadata.JSON_PROPERTY_DEPLOYMENT_VERSION
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.5.0")
public class Metadata {
  public static final String JSON_PROPERTY_SHAPE = "shape";
  private String shape;

  public static final String JSON_PROPERTY_BASE_VERSION = "baseVersion";
  private String baseVersion;

  public static final String JSON_PROPERTY_SERVICE_PACK = "servicePack";
  private String servicePack;

  public static final String JSON_PROPERTY_DEPLOYMENT_VERSION = "deploymentVersion";
  private String deploymentVersion;

  public Metadata() {
  }

  public Metadata shape(String shape) {
    
    this.shape = shape;
    return this;
  }

   /**
   * The shape of the datalake.
   * @return shape
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHAPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getShape() {
    return shape;
  }


  @JsonProperty(JSON_PROPERTY_SHAPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShape(String shape) {
    this.shape = shape;
  }


  public Metadata baseVersion(String baseVersion) {
    
    this.baseVersion = baseVersion;
    return this;
  }

   /**
   * The version of CDH deployed.
   * @return baseVersion
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BASE_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBaseVersion() {
    return baseVersion;
  }


  @JsonProperty(JSON_PROPERTY_BASE_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBaseVersion(String baseVersion) {
    this.baseVersion = baseVersion;
  }


  public Metadata servicePack(String servicePack) {
    
    this.servicePack = servicePack;
    return this;
  }

   /**
   * The service pack of CDH deployed.
   * @return servicePack
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SERVICE_PACK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getServicePack() {
    return servicePack;
  }


  @JsonProperty(JSON_PROPERTY_SERVICE_PACK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServicePack(String servicePack) {
    this.servicePack = servicePack;
  }


  public Metadata deploymentVersion(String deploymentVersion) {
    
    this.deploymentVersion = deploymentVersion;
    return this;
  }

   /**
   * The complete deployment version.
   * @return deploymentVersion
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEPLOYMENT_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDeploymentVersion() {
    return deploymentVersion;
  }


  @JsonProperty(JSON_PROPERTY_DEPLOYMENT_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeploymentVersion(String deploymentVersion) {
    this.deploymentVersion = deploymentVersion;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Metadata metadata = (Metadata) o;
    return Objects.equals(this.shape, metadata.shape) &&
        Objects.equals(this.baseVersion, metadata.baseVersion) &&
        Objects.equals(this.servicePack, metadata.servicePack) &&
        Objects.equals(this.deploymentVersion, metadata.deploymentVersion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(shape, baseVersion, servicePack, deploymentVersion);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Metadata {\n");
    sb.append("    shape: ").append(toIndentedString(shape)).append("\n");
    sb.append("    baseVersion: ").append(toIndentedString(baseVersion)).append("\n");
    sb.append("    servicePack: ").append(toIndentedString(servicePack)).append("\n");
    sb.append("    deploymentVersion: ").append(toIndentedString(deploymentVersion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

