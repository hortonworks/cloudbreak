buildscript {
  repositories {
    mavenCentral()
    maven { url = "$repoUrl" }
  }
  dependencies {
    classpath "com.google.protobuf:protobuf-gradle-plugin:${protobufPluginVersion}"
    classpath "org.openapitools:openapi-generator-gradle-plugin:$openapiGeneratorGradlePlugin"
  }
}

plugins {
  id 'java'
  id 'org.openapi.generator' version "$openapiGeneratorGradlePlugin"
}

repositories {
  mavenCentral()
}

dependencies {
}

openApiGenerate {
  globalProperties.set([
          apis: "false",
          apiDocs: "false",
          apiTests: "false",
          verbose: "true",
          generateSupportingFiles: "false",
          modelDocs: "false",
          modelTests: "false",
          models: "",
  ])
  generatorName = "java"
  library = "resttemplate"
  inputSpec = "$projectDir/src/main/yaml/servicediscovery.yaml"
  outputDir = "$projectDir/src/generated"
  modelPackage = "com.cloudera.cdp.servicediscovery.model"
  configOptions.set([
          openApiNullable: "false",
          dateLibrary: "java8"
  ])
  additionalProperties.set([
          hideGenerationTimestamp: "true"
  ])
}

dependencies {
  implementation project(':common')
  implementation     group: 'org.glassfish.jersey.media',  name: 'jersey-media-multipart',         version: jerseyCoreVersion
  implementation     group: 'org.openapitools',            name: 'jackson-databind-nullable',      version: "$jacksonDatabindNullable"
  implementation     group: 'javax.annotation',            name: 'javax.annotation-api',           version: javaxAnnotationApiVersion
}

compileJava.dependsOn tasks.openApiGenerate

sourceSets {
  main {
    java.srcDirs += "${projectDir}/src/generated/src/main/java"
  }
}

clean {
  delete "${projectDir}/src/generated/"
}