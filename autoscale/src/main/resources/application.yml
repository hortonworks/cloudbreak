server.servlet.context-path: "/as"

management:
  endpoints:
    web:
      base-path: "/"
      exposure:
        include: info,health,prometheus
      path-mapping:
        prometheus: metrics
  endpoint:
    metrics:
      enabled: true
      export:
        prometheus:
          enabled: true
    prometheus:
      enabled: true
    health:
      show-details: always
  metrics:
    distribution:
      sla:
        "[http.server.requests]": "125ms, 250ms, 500ms, 1s, 2s"
      percentiles:
        "[http.server.requests]": "0.5, 0.95"

periscope:
  cert:
    dir: /certs/
  db.env:
    user: postgres
    pass:
    db: periscopedb
    schema: public
    cert.file: database.crt
    ssl: false

cb:
  server:
    contextPath: "/cb"

rest:
  debug: false

cert:
  validation: true
  ignorePreValidation: false

spring:
  cloud:
    consul:
      host: consul.service.consul
  freemarker:
    template-loader-path: classpath:/
    prefer-file-system-access: false
  datasource:
      maxActive: 30

secret:
  application: as/shared
  engine: "com.sequenceiq.cloudbreak.service.secret.vault.VaultKvV2Engine"

vault:
  addr: vault.service.consul
  port: 8200
  ssl.enabled: false
  kv.engine.v2.path: secret
  auth:
    type: "token"
    kubernetes:
      service.account.token.path: /var/run/secrets/kubernetes.io/serviceaccount/token
      mount.path: "dps-dev"
      login.role: "autoscale.default"