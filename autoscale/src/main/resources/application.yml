server:
  servlet:
    context-path: "/as"
  shutdown: graceful
  tomcat:
    mbeanregistry:
      enabled: true

management:
  endpoints:
    web:
      base-path: "/"
      exposure:
        include: info,health,prometheus
      path-mapping:
        prometheus: metrics
  endpoint:
    metrics:
      enabled: true
      export:
        prometheus:
          enabled: true
    prometheus:
      enabled: true
    health:
      probes:
        enabled: true
      group:
        readiness:
          include: "readinessState,hikariState"
  metrics:
    distribution:
      sla:
        "[http.server.requests]": "125ms, 250ms, 500ms, 1s, 2s"
      percentiles:
        "[http.server.requests]": "0.5, 0.95"
  info:
    env:
      enabled: true

periscope:
  cert:
    dir: /certs/
  db:
    env:
      user: postgres
      pass:
      db: periscopedb
      schema: public
      cert.file: database.crt
      ssl: false
    port.5432.tcp:
      addr: localhost
      port: 5432
  cloudbreak.url: http://localhost:9091
  freeipa:
    url: http://localhost:8090
    contextPath: /freeipa
  notification:
    endpoint: http://localhost:3000/notifications
  entitlementCheckEnabled: true
  enabledAutoscaleMonitors:
    time-monitor:
      enabled: true
    load-monitor:
      enabled: true
    cluster-status-monitor:
      enabled: true
    delete-monitor:
      enabled: true
    cleanup-monitor:
      enabled: true
    update-monitor:
      enabled: true
  scaling-activity:
    cleanup-event-age.hours: 24

cb:
  enabledplatforms: AWS,AZURE,YARN,GCP,MOCK
  enabledgovplatforms: AWS
  server:
    contextPath: "/cb"
  cm:
    client:
      cluster.proxy.timeout: 120000
      connect.timeout.seconds: 125
      read.timeout.seconds: 125
      write.timeout.seconds: 125
      syncCommandPoller:
        interrupt.timeout.seconds: 120
  dependentHostGroups:
    cache.ttl: 10
    max.entries: 500
  userSync:
    version.threshold: 2.70.0

rest:
  debug: false

cert:
  validation: true
  ignorePreValidation: false

spring:
  application:
    name: Periscope
  freemarker:
    template-loader-path: classpath:/
    prefer-file-system-access: false
  datasource:
      maxActive: 30
  jpa:
    properties:
      hibernate:
        generate_statistics: true
        jdbc:
          batch_size: 400
        order_inserts: true
        order_updates: true
  lifecycle:
    timeout-per-shutdown-phase: 60s
  main:
    allow-circular-references: true

secret:
  application: as/shared
  engine: "com.sequenceiq.cloudbreak.service.secret.vault.VaultKvV2Engine"

vault:
  addr: localhost
  port: 8200
  ssl.enabled: false
  kv.engine.v2.path: secret
  config.enabled: true
  auth:
    type: "token"
    kubernetes:
      service.account.token.path: /var/run/secrets/kubernetes.io/serviceaccount/token
      mount.path: "dps-dev"
      login.role: "autoscale.default"

altus:
  ums:
    host: localhost
    caller: periscope
  audit:
    enabled: true
    endpoint: localhost:8982

crn:
  partition: cdp
  region: us-west-1
