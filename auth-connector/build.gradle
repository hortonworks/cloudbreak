buildscript {
  repositories {
    mavenCentral()
    maven { url = "$repoUrl" }
  }
  dependencies {
    classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    classpath "com.google.protobuf:protobuf-gradle-plugin:${protobufPluginVersion}"
  }
}

plugins {
    id "java-library"
}

apply plugin: 'com.google.protobuf'

dependencies {
  api project(':grpc-common')

  implementation group: 'org.springframework.boot',     name: 'spring-boot-starter-jersey',     version: springBootVersion
  implementation group: 'org.springframework.security', name: 'spring-security-jwt',            version: '1.0.8.RELEASE'
  implementation group: 'org.springframework.security', name: 'spring-security-core',           version: springSecurityVersion
  implementation group: 'org.bouncycastle',             name: 'bcprov-jdk15on',                 version: bouncycastleVersion
  implementation group: 'org.bouncycastle',             name: 'bcpkix-jdk15on',                 version: bouncycastleVersion

  implementation group: 'net.i2p.crypto',               name: 'eddsa',                          version: '0.3.0'

  implementation group: 'org.glassfish.jersey.core',    name: 'jersey-client',                  version: jerseyCoreVersion
  implementation group: 'org.glassfish.jersey.media',   name: 'jersey-media-multipart',         version: jerseyCoreVersion
  implementation group: 'org.apache.httpcomponents',    name: 'httpclient',                     version: httpClientVersion

  implementation     group: 'com.google.protobuf',      name: 'protobuf-java',                  version: protobufVersion

  api ("io.grpc:grpc-all:$grpcVersion") {
    exclude group: 'org.mockito'
    exclude group: 'junit', module: 'junit'
  }
  testImplementation group: 'org.mockito',              name: 'mockito-inline',                 version: mockitoVersion
  testImplementation group: 'org.assertj',              name: 'assertj-core',                   version: assertjVersion
  testImplementation group: 'org.hamcrest',             name: 'hamcrest',                       version: hamcrestVersion
  testImplementation project(path: ':common', configuration: 'tests')
}


checkstyle {
  checkstyleMain.exclude '**/generated/**'
}

protobuf {
  protoc {
    // The version of protoc must match protobuf-java. If you don't depend on
    // protobuf-java directly, you will be transitively depending on the
    // protobuf-java version that grpc depends on.
    artifact = "com.google.protobuf:protoc:$protobufVersion"
  }
  plugins {
    grpc {
      artifact = "io.grpc:protoc-gen-grpc-java:$grpcVersion"
    }
  }
  generateProtoTasks {
    all()*.plugins {
      grpc {}
    }
  }
  generatedFilesBaseDir = "$projectDir/src/generated"
}
