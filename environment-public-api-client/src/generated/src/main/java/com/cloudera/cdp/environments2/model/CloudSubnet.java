/*
 * Cloudera Environments Service
 * Cloudera Environments Service is a web service that manages cloud provider access.
 *
 * The version of the OpenAPI document: __API_VERSION__
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudera.cdp.environments2.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Information about a cloud provider subnet.
 */
@JsonPropertyOrder({
  CloudSubnet.JSON_PROPERTY_SUBNET_ID,
  CloudSubnet.JSON_PROPERTY_SUBNET_NAME,
  CloudSubnet.JSON_PROPERTY_AVAILABILITY_ZONE,
  CloudSubnet.JSON_PROPERTY_CIDR
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-02T16:36:31.330723+02:00[Europe/Budapest]", comments = "Generator version: 7.5.0")
public class CloudSubnet {
  public static final String JSON_PROPERTY_SUBNET_ID = "subnetId";
  private String subnetId;

  public static final String JSON_PROPERTY_SUBNET_NAME = "subnetName";
  private String subnetName;

  public static final String JSON_PROPERTY_AVAILABILITY_ZONE = "availabilityZone";
  private String availabilityZone;

  public static final String JSON_PROPERTY_CIDR = "cidr";
  private String cidr;

  public CloudSubnet() { 
  }

  public CloudSubnet subnetId(String subnetId) {
    this.subnetId = subnetId;
    return this;
  }

   /**
   * The id of the subnet.
   * @return subnetId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBNET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSubnetId() {
    return subnetId;
  }


  @JsonProperty(JSON_PROPERTY_SUBNET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubnetId(String subnetId) {
    this.subnetId = subnetId;
  }


  public CloudSubnet subnetName(String subnetName) {
    this.subnetName = subnetName;
    return this;
  }

   /**
   * The name of the subnet.
   * @return subnetName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBNET_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSubnetName() {
    return subnetName;
  }


  @JsonProperty(JSON_PROPERTY_SUBNET_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubnetName(String subnetName) {
    this.subnetName = subnetName;
  }


  public CloudSubnet availabilityZone(String availabilityZone) {
    this.availabilityZone = availabilityZone;
    return this;
  }

   /**
   * The availability zone of the subnet.
   * @return availabilityZone
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVAILABILITY_ZONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAvailabilityZone() {
    return availabilityZone;
  }


  @JsonProperty(JSON_PROPERTY_AVAILABILITY_ZONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvailabilityZone(String availabilityZone) {
    this.availabilityZone = availabilityZone;
  }


  public CloudSubnet cidr(String cidr) {
    this.cidr = cidr;
    return this;
  }

   /**
   * The CIDR IP range of the subnet.
   * @return cidr
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CIDR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCidr() {
    return cidr;
  }


  @JsonProperty(JSON_PROPERTY_CIDR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCidr(String cidr) {
    this.cidr = cidr;
  }


  /**
   * Return true if this CloudSubnet object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CloudSubnet cloudSubnet = (CloudSubnet) o;
    return Objects.equals(this.subnetId, cloudSubnet.subnetId) &&
        Objects.equals(this.subnetName, cloudSubnet.subnetName) &&
        Objects.equals(this.availabilityZone, cloudSubnet.availabilityZone) &&
        Objects.equals(this.cidr, cloudSubnet.cidr);
  }

  @Override
  public int hashCode() {
    return Objects.hash(subnetId, subnetName, availabilityZone, cidr);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CloudSubnet {\n");
    sb.append("    subnetId: ").append(toIndentedString(subnetId)).append("\n");
    sb.append("    subnetName: ").append(toIndentedString(subnetName)).append("\n");
    sb.append("    availabilityZone: ").append(toIndentedString(availabilityZone)).append("\n");
    sb.append("    cidr: ").append(toIndentedString(cidr)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `subnetId` to the URL query string
    if (getSubnetId() != null) {
      joiner.add(String.format("%ssubnetId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSubnetId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `subnetName` to the URL query string
    if (getSubnetName() != null) {
      joiner.add(String.format("%ssubnetName%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSubnetName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `availabilityZone` to the URL query string
    if (getAvailabilityZone() != null) {
      joiner.add(String.format("%savailabilityZone%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getAvailabilityZone()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `cidr` to the URL query string
    if (getCidr() != null) {
      joiner.add(String.format("%scidr%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCidr()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

