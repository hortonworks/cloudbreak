/*
 * Cloudera Environments Service
 * Cloudera Environments Service is a web service that manages cloud provider access.
 *
 * The version of the OpenAPI document: __API_VERSION__
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudera.cdp.environments2.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Response object for a Datalake client configs response.
 */
@JsonPropertyOrder({
  GetConfigFilesResponse.JSON_PROPERTY_VERSION_HASH,
  GetConfigFilesResponse.JSON_PROPERTY_FILE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-02T16:36:31.330723+02:00[Europe/Budapest]", comments = "Generator version: 7.5.0")
public class GetConfigFilesResponse {
  public static final String JSON_PROPERTY_VERSION_HASH = "versionHash";
  private String versionHash;

  public static final String JSON_PROPERTY_FILE = "file";
  private String _file;

  public GetConfigFilesResponse() { 
  }

  public GetConfigFilesResponse versionHash(String versionHash) {
    this.versionHash = versionHash;
    return this;
  }

   /**
   * an opaque string (sha or similar) to detect config changes.
   * @return versionHash
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VERSION_HASH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVersionHash() {
    return versionHash;
  }


  @JsonProperty(JSON_PROPERTY_VERSION_HASH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersionHash(String versionHash) {
    this.versionHash = versionHash;
  }


  public GetConfigFilesResponse _file(String _file) {
    this._file = _file;
    return this;
  }

   /**
   * config files for the data lake including root cert and krb.conf
   * @return _file
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFile() {
    return _file;
  }


  @JsonProperty(JSON_PROPERTY_FILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFile(String _file) {
    this._file = _file;
  }


  /**
   * Return true if this GetConfigFilesResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetConfigFilesResponse getConfigFilesResponse = (GetConfigFilesResponse) o;
    return Objects.equals(this.versionHash, getConfigFilesResponse.versionHash) &&
        Objects.equals(this._file, getConfigFilesResponse._file);
  }

  @Override
  public int hashCode() {
    return Objects.hash(versionHash, _file);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetConfigFilesResponse {\n");
    sb.append("    versionHash: ").append(toIndentedString(versionHash)).append("\n");
    sb.append("    _file: ").append(toIndentedString(_file)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `versionHash` to the URL query string
    if (getVersionHash() != null) {
      joiner.add(String.format("%sversionHash%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getVersionHash()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `file` to the URL query string
    if (getFile() != null) {
      joiner.add(String.format("%sfile%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getFile()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

