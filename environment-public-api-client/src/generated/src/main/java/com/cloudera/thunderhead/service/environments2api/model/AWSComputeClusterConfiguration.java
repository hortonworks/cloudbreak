/*
 * Cloudera Environments Service
 * Cloudera Environments Service is a web service that manages cloud provider access.
 *
 * The version of the OpenAPI document: __API_VERSION__
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudera.thunderhead.service.environments2api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Externalized compute cluster configuration for the environment.
 */
@JsonPropertyOrder({
  AWSComputeClusterConfiguration.JSON_PROPERTY_PRIVATE_CLUSTER,
  AWSComputeClusterConfiguration.JSON_PROPERTY_KUBE_API_AUTHORIZED_IP_RANGES,
  AWSComputeClusterConfiguration.JSON_PROPERTY_WORKER_NODE_SUBNETS
})

public class AWSComputeClusterConfiguration {
  public static final String JSON_PROPERTY_PRIVATE_CLUSTER = "privateCluster";
  @javax.annotation.Nullable
  private Boolean privateCluster;

  public static final String JSON_PROPERTY_KUBE_API_AUTHORIZED_IP_RANGES = "kubeApiAuthorizedIpRanges";
  @javax.annotation.Nullable
  private List<String> kubeApiAuthorizedIpRanges = new ArrayList<>();

  public static final String JSON_PROPERTY_WORKER_NODE_SUBNETS = "workerNodeSubnets";
  @javax.annotation.Nullable
  private List<String> workerNodeSubnets = new ArrayList<>();

  public AWSComputeClusterConfiguration() {
  }

  public AWSComputeClusterConfiguration privateCluster(@javax.annotation.Nullable Boolean privateCluster) {
    
    this.privateCluster = privateCluster;
    return this;
  }

  /**
   * If true, creates private cluster.
   * @return privateCluster
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRIVATE_CLUSTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getPrivateCluster() {
    return privateCluster;
  }


  @JsonProperty(JSON_PROPERTY_PRIVATE_CLUSTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrivateCluster(@javax.annotation.Nullable Boolean privateCluster) {
    this.privateCluster = privateCluster;
  }

  public AWSComputeClusterConfiguration kubeApiAuthorizedIpRanges(@javax.annotation.Nullable List<String> kubeApiAuthorizedIpRanges) {
    
    this.kubeApiAuthorizedIpRanges = kubeApiAuthorizedIpRanges;
    return this;
  }

  public AWSComputeClusterConfiguration addKubeApiAuthorizedIpRangesItem(String kubeApiAuthorizedIpRangesItem) {
    if (this.kubeApiAuthorizedIpRanges == null) {
      this.kubeApiAuthorizedIpRanges = new ArrayList<>();
    }
    this.kubeApiAuthorizedIpRanges.add(kubeApiAuthorizedIpRangesItem);
    return this;
  }

  /**
   * Kubernetes API authorized IP ranges in CIDR notation.
   * @return kubeApiAuthorizedIpRanges
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_KUBE_API_AUTHORIZED_IP_RANGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getKubeApiAuthorizedIpRanges() {
    return kubeApiAuthorizedIpRanges;
  }


  @JsonProperty(JSON_PROPERTY_KUBE_API_AUTHORIZED_IP_RANGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKubeApiAuthorizedIpRanges(@javax.annotation.Nullable List<String> kubeApiAuthorizedIpRanges) {
    this.kubeApiAuthorizedIpRanges = kubeApiAuthorizedIpRanges;
  }

  public AWSComputeClusterConfiguration workerNodeSubnets(@javax.annotation.Nullable List<String> workerNodeSubnets) {
    
    this.workerNodeSubnets = workerNodeSubnets;
    return this;
  }

  public AWSComputeClusterConfiguration addWorkerNodeSubnetsItem(String workerNodeSubnetsItem) {
    if (this.workerNodeSubnets == null) {
      this.workerNodeSubnets = new ArrayList<>();
    }
    this.workerNodeSubnets.add(workerNodeSubnetsItem);
    return this;
  }

  /**
   * Subnets for Kubernetes Worker Nodes
   * @return workerNodeSubnets
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WORKER_NODE_SUBNETS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getWorkerNodeSubnets() {
    return workerNodeSubnets;
  }


  @JsonProperty(JSON_PROPERTY_WORKER_NODE_SUBNETS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWorkerNodeSubnets(@javax.annotation.Nullable List<String> workerNodeSubnets) {
    this.workerNodeSubnets = workerNodeSubnets;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AWSComputeClusterConfiguration awSComputeClusterConfiguration = (AWSComputeClusterConfiguration) o;
    return Objects.equals(this.privateCluster, awSComputeClusterConfiguration.privateCluster) &&
        Objects.equals(this.kubeApiAuthorizedIpRanges, awSComputeClusterConfiguration.kubeApiAuthorizedIpRanges) &&
        Objects.equals(this.workerNodeSubnets, awSComputeClusterConfiguration.workerNodeSubnets);
  }

  @Override
  public int hashCode() {
    return Objects.hash(privateCluster, kubeApiAuthorizedIpRanges, workerNodeSubnets);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AWSComputeClusterConfiguration {\n");
    sb.append("    privateCluster: ").append(toIndentedString(privateCluster)).append("\n");
    sb.append("    kubeApiAuthorizedIpRanges: ").append(toIndentedString(kubeApiAuthorizedIpRanges)).append("\n");
    sb.append("    workerNodeSubnets: ").append(toIndentedString(workerNodeSubnets)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

