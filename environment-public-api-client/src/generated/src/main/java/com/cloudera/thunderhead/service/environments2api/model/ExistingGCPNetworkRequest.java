/*
 * Cloudera Environments Service
 * Cloudera Environments Service is a web service that manages cloud provider access.
 *
 * The version of the OpenAPI document: __API_VERSION__
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudera.thunderhead.service.environments2api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.LinkedHashSet;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Request object for creating an GCP environment using existing VPC and subnets.
 */
@JsonPropertyOrder({
  ExistingGCPNetworkRequest.JSON_PROPERTY_NETWORK_NAME,
  ExistingGCPNetworkRequest.JSON_PROPERTY_SUBNET_NAMES,
  ExistingGCPNetworkRequest.JSON_PROPERTY_SHARED_PROJECT_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.5.0")
public class ExistingGCPNetworkRequest {
  public static final String JSON_PROPERTY_NETWORK_NAME = "networkName";
  private String networkName;

  public static final String JSON_PROPERTY_SUBNET_NAMES = "subnetNames";
  private Set<String> subnetNames = new LinkedHashSet<>();

  public static final String JSON_PROPERTY_SHARED_PROJECT_ID = "sharedProjectId";
  private String sharedProjectId;

  public ExistingGCPNetworkRequest() {
  }

  public ExistingGCPNetworkRequest networkName(String networkName) {
    
    this.networkName = networkName;
    return this;
  }

   /**
   * The name of the GCP VPC.
   * @return networkName
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NETWORK_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getNetworkName() {
    return networkName;
  }


  @JsonProperty(JSON_PROPERTY_NETWORK_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNetworkName(String networkName) {
    this.networkName = networkName;
  }


  public ExistingGCPNetworkRequest subnetNames(Set<String> subnetNames) {
    
    this.subnetNames = subnetNames;
    return this;
  }

  public ExistingGCPNetworkRequest addSubnetNamesItem(String subnetNamesItem) {
    if (this.subnetNames == null) {
      this.subnetNames = new LinkedHashSet<>();
    }
    this.subnetNames.add(subnetNamesItem);
    return this;
  }

   /**
   * One or more subnet names within the VPC. Google VPC&#39;s are global, please give subnets from single geographic region only to reduce latency.
   * @return subnetNames
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SUBNET_NAMES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Set<String> getSubnetNames() {
    return subnetNames;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_SUBNET_NAMES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSubnetNames(Set<String> subnetNames) {
    this.subnetNames = subnetNames;
  }


  public ExistingGCPNetworkRequest sharedProjectId(String sharedProjectId) {
    
    this.sharedProjectId = sharedProjectId;
    return this;
  }

   /**
   * The ID of the Google project associated with the VPC.
   * @return sharedProjectId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHARED_PROJECT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSharedProjectId() {
    return sharedProjectId;
  }


  @JsonProperty(JSON_PROPERTY_SHARED_PROJECT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSharedProjectId(String sharedProjectId) {
    this.sharedProjectId = sharedProjectId;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExistingGCPNetworkRequest existingGCPNetworkRequest = (ExistingGCPNetworkRequest) o;
    return Objects.equals(this.networkName, existingGCPNetworkRequest.networkName) &&
        Objects.equals(this.subnetNames, existingGCPNetworkRequest.subnetNames) &&
        Objects.equals(this.sharedProjectId, existingGCPNetworkRequest.sharedProjectId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(networkName, subnetNames, sharedProjectId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExistingGCPNetworkRequest {\n");
    sb.append("    networkName: ").append(toIndentedString(networkName)).append("\n");
    sb.append("    subnetNames: ").append(toIndentedString(subnetNames)).append("\n");
    sb.append("    sharedProjectId: ").append(toIndentedString(sharedProjectId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

