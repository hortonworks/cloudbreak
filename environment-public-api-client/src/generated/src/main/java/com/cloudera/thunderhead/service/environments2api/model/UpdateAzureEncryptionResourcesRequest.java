/*
 * Cloudera Environments Service
 * Cloudera Environments Service is a web service that manages cloud provider access.
 *
 * The version of the OpenAPI document: __API_VERSION__
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudera.thunderhead.service.environments2api.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Request object for updating Azure encryption resources.
 */
@JsonPropertyOrder({
  UpdateAzureEncryptionResourcesRequest.JSON_PROPERTY_ENVIRONMENT,
  UpdateAzureEncryptionResourcesRequest.JSON_PROPERTY_ENCRYPTION_KEY_URL,
  UpdateAzureEncryptionResourcesRequest.JSON_PROPERTY_ENCRYPTION_KEY_RESOURCE_GROUP_NAME,
  UpdateAzureEncryptionResourcesRequest.JSON_PROPERTY_USER_MANAGED_IDENTITY
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.5.0")
public class UpdateAzureEncryptionResourcesRequest {
  public static final String JSON_PROPERTY_ENVIRONMENT = "environment";
  private String environment;

  public static final String JSON_PROPERTY_ENCRYPTION_KEY_URL = "encryptionKeyUrl";
  private String encryptionKeyUrl;

  public static final String JSON_PROPERTY_ENCRYPTION_KEY_RESOURCE_GROUP_NAME = "encryptionKeyResourceGroupName";
  private String encryptionKeyResourceGroupName;

  public static final String JSON_PROPERTY_USER_MANAGED_IDENTITY = "userManagedIdentity";
  private String userManagedIdentity;

  public UpdateAzureEncryptionResourcesRequest() { 
  }

  public UpdateAzureEncryptionResourcesRequest environment(String environment) {
    this.environment = environment;
    return this;
  }

   /**
   * The name or CRN of the environment.
   * @return environment
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ENVIRONMENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEnvironment() {
    return environment;
  }


  @JsonProperty(JSON_PROPERTY_ENVIRONMENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEnvironment(String environment) {
    this.environment = environment;
  }


  public UpdateAzureEncryptionResourcesRequest encryptionKeyUrl(String encryptionKeyUrl) {
    this.encryptionKeyUrl = encryptionKeyUrl;
    return this;
  }

   /**
   * The URL of an encryption key, which will be used to encrypt the Azure Managed Disks, if the entitlement has been granted.
   * @return encryptionKeyUrl
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ENCRYPTION_KEY_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEncryptionKeyUrl() {
    return encryptionKeyUrl;
  }


  @JsonProperty(JSON_PROPERTY_ENCRYPTION_KEY_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEncryptionKeyUrl(String encryptionKeyUrl) {
    this.encryptionKeyUrl = encryptionKeyUrl;
  }


  public UpdateAzureEncryptionResourcesRequest encryptionKeyResourceGroupName(String encryptionKeyResourceGroupName) {
    this.encryptionKeyResourceGroupName = encryptionKeyResourceGroupName;
    return this;
  }

   /**
   * Name of the existing Azure resource group hosting the Azure Key Vault containing customer managed key which will be used to encrypt the Azure Managed Disks. It is required only when the entitlement is granted and the resource group of the key vault is different from the resource group in which the environment is to be created. Omitting it implies that, the key vault containing the encryption key is present in the same resource group where the environment would be created.
   * @return encryptionKeyResourceGroupName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENCRYPTION_KEY_RESOURCE_GROUP_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEncryptionKeyResourceGroupName() {
    return encryptionKeyResourceGroupName;
  }


  @JsonProperty(JSON_PROPERTY_ENCRYPTION_KEY_RESOURCE_GROUP_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEncryptionKeyResourceGroupName(String encryptionKeyResourceGroupName) {
    this.encryptionKeyResourceGroupName = encryptionKeyResourceGroupName;
  }


  public UpdateAzureEncryptionResourcesRequest userManagedIdentity(String userManagedIdentity) {
    this.userManagedIdentity = userManagedIdentity;
    return this;
  }

   /**
   * User managed identity for encryption.
   * @return userManagedIdentity
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_MANAGED_IDENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUserManagedIdentity() {
    return userManagedIdentity;
  }


  @JsonProperty(JSON_PROPERTY_USER_MANAGED_IDENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserManagedIdentity(String userManagedIdentity) {
    this.userManagedIdentity = userManagedIdentity;
  }


  /**
   * Return true if this UpdateAzureEncryptionResourcesRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateAzureEncryptionResourcesRequest updateAzureEncryptionResourcesRequest = (UpdateAzureEncryptionResourcesRequest) o;
    return Objects.equals(this.environment, updateAzureEncryptionResourcesRequest.environment) &&
        Objects.equals(this.encryptionKeyUrl, updateAzureEncryptionResourcesRequest.encryptionKeyUrl) &&
        Objects.equals(this.encryptionKeyResourceGroupName, updateAzureEncryptionResourcesRequest.encryptionKeyResourceGroupName) &&
        Objects.equals(this.userManagedIdentity, updateAzureEncryptionResourcesRequest.userManagedIdentity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(environment, encryptionKeyUrl, encryptionKeyResourceGroupName, userManagedIdentity);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateAzureEncryptionResourcesRequest {\n");
    sb.append("    environment: ").append(toIndentedString(environment)).append("\n");
    sb.append("    encryptionKeyUrl: ").append(toIndentedString(encryptionKeyUrl)).append("\n");
    sb.append("    encryptionKeyResourceGroupName: ").append(toIndentedString(encryptionKeyResourceGroupName)).append("\n");
    sb.append("    userManagedIdentity: ").append(toIndentedString(userManagedIdentity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `environment` to the URL query string
    if (getEnvironment() != null) {
      joiner.add(String.format("%senvironment%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getEnvironment()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `encryptionKeyUrl` to the URL query string
    if (getEncryptionKeyUrl() != null) {
      joiner.add(String.format("%sencryptionKeyUrl%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getEncryptionKeyUrl()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `encryptionKeyResourceGroupName` to the URL query string
    if (getEncryptionKeyResourceGroupName() != null) {
      joiner.add(String.format("%sencryptionKeyResourceGroupName%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getEncryptionKeyResourceGroupName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `userManagedIdentity` to the URL query string
    if (getUserManagedIdentity() != null) {
      joiner.add(String.format("%suserManagedIdentity%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getUserManagedIdentity()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

