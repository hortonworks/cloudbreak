/*
 * Cloudera Environments Service
 * Cloudera Environments Service is a web service that manages cloud provider access.
 *
 * The version of the OpenAPI document: __API_VERSION__
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudera.thunderhead.service.environments2api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * AWS specific FreeIPA parameters.
 */
@JsonPropertyOrder({
  AwsFreeIpaInstanceTemplateParams.JSON_PROPERTY_SPOT_PERCENTAGE,
  AwsFreeIpaInstanceTemplateParams.JSON_PROPERTY_SPOT_MAX_PRICE
})

public class AwsFreeIpaInstanceTemplateParams {
  public static final String JSON_PROPERTY_SPOT_PERCENTAGE = "spotPercentage";
  @javax.annotation.Nullable
  private Integer spotPercentage;

  public static final String JSON_PROPERTY_SPOT_MAX_PRICE = "spotMaxPrice";
  @javax.annotation.Nullable
  private Double spotMaxPrice;

  public AwsFreeIpaInstanceTemplateParams() {
  }

  public AwsFreeIpaInstanceTemplateParams spotPercentage(@javax.annotation.Nullable Integer spotPercentage) {
    
    this.spotPercentage = spotPercentage;
    return this;
  }

  /**
   * Percentage of spot instances.
   * minimum: 0
   * maximum: 100
   * @return spotPercentage
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SPOT_PERCENTAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSpotPercentage() {
    return spotPercentage;
  }


  @JsonProperty(JSON_PROPERTY_SPOT_PERCENTAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSpotPercentage(@javax.annotation.Nullable Integer spotPercentage) {
    this.spotPercentage = spotPercentage;
  }

  public AwsFreeIpaInstanceTemplateParams spotMaxPrice(@javax.annotation.Nullable Double spotMaxPrice) {
    
    this.spotMaxPrice = spotMaxPrice;
    return this;
  }

  /**
   * Maximum hourly price of spot instances.
   * minimum: 0.001
   * maximum: 255
   * @return spotMaxPrice
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SPOT_MAX_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getSpotMaxPrice() {
    return spotMaxPrice;
  }


  @JsonProperty(JSON_PROPERTY_SPOT_MAX_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSpotMaxPrice(@javax.annotation.Nullable Double spotMaxPrice) {
    this.spotMaxPrice = spotMaxPrice;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AwsFreeIpaInstanceTemplateParams awsFreeIpaInstanceTemplateParams = (AwsFreeIpaInstanceTemplateParams) o;
    return Objects.equals(this.spotPercentage, awsFreeIpaInstanceTemplateParams.spotPercentage) &&
        Objects.equals(this.spotMaxPrice, awsFreeIpaInstanceTemplateParams.spotMaxPrice);
  }

  @Override
  public int hashCode() {
    return Objects.hash(spotPercentage, spotMaxPrice);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AwsFreeIpaInstanceTemplateParams {\n");
    sb.append("    spotPercentage: ").append(toIndentedString(spotPercentage)).append("\n");
    sb.append("    spotMaxPrice: ").append(toIndentedString(spotMaxPrice)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

