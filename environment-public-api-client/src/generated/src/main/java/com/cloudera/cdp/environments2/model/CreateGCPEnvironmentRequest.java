/*
 * Cloudera Environments Service
 * Cloudera Environments Service is a web service that manages cloud provider access.
 *
 * The version of the OpenAPI document: __API_VERSION__
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudera.cdp.environments2.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.cloudera.cdp.environments2.model.CcmV2TlsType;
import com.cloudera.cdp.environments2.model.CustomDockerRegistryRequest;
import com.cloudera.cdp.environments2.model.ExistingGCPNetworkRequest;
import com.cloudera.cdp.environments2.model.FreeIpaImageRequest;
import com.cloudera.cdp.environments2.model.GCPFreeIpaCreationRequest;
import com.cloudera.cdp.environments2.model.GcpLogStorageRequest;
import com.cloudera.cdp.environments2.model.GcpSecurityAccessRequest;
import com.cloudera.cdp.environments2.model.GcpTagRequest;
import com.cloudera.cdp.environments2.model.TunnelType;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Request object for a create GCP environment request.
 */
@JsonPropertyOrder({
  CreateGCPEnvironmentRequest.JSON_PROPERTY_ENVIRONMENT_NAME,
  CreateGCPEnvironmentRequest.JSON_PROPERTY_CREDENTIAL_NAME,
  CreateGCPEnvironmentRequest.JSON_PROPERTY_REGION,
  CreateGCPEnvironmentRequest.JSON_PROPERTY_PUBLIC_KEY,
  CreateGCPEnvironmentRequest.JSON_PROPERTY_USE_PUBLIC_IP,
  CreateGCPEnvironmentRequest.JSON_PROPERTY_EXISTING_NETWORK_PARAMS,
  CreateGCPEnvironmentRequest.JSON_PROPERTY_SECURITY_ACCESS,
  CreateGCPEnvironmentRequest.JSON_PROPERTY_LOG_STORAGE,
  CreateGCPEnvironmentRequest.JSON_PROPERTY_DESCRIPTION,
  CreateGCPEnvironmentRequest.JSON_PROPERTY_ENABLE_TUNNEL,
  CreateGCPEnvironmentRequest.JSON_PROPERTY_WORKLOAD_ANALYTICS,
  CreateGCPEnvironmentRequest.JSON_PROPERTY_REPORT_DEPLOYMENT_LOGS,
  CreateGCPEnvironmentRequest.JSON_PROPERTY_TUNNEL_TYPE,
  CreateGCPEnvironmentRequest.JSON_PROPERTY_CCM_V2_TLS_TYPE,
  CreateGCPEnvironmentRequest.JSON_PROPERTY_CLOUD_STORAGE_LOGGING,
  CreateGCPEnvironmentRequest.JSON_PROPERTY_FREE_IPA,
  CreateGCPEnvironmentRequest.JSON_PROPERTY_ENDPOINT_ACCESS_GATEWAY_SCHEME,
  CreateGCPEnvironmentRequest.JSON_PROPERTY_ENDPOINT_ACCESS_GATEWAY_SUBNET_IDS,
  CreateGCPEnvironmentRequest.JSON_PROPERTY_IMAGE,
  CreateGCPEnvironmentRequest.JSON_PROPERTY_TAGS,
  CreateGCPEnvironmentRequest.JSON_PROPERTY_PROXY_CONFIG_NAME,
  CreateGCPEnvironmentRequest.JSON_PROPERTY_ID_BROKER_MAPPING_SOURCE,
  CreateGCPEnvironmentRequest.JSON_PROPERTY_ENCRYPTION_KEY,
  CreateGCPEnvironmentRequest.JSON_PROPERTY_AVAILABILITY_ZONES,
  CreateGCPEnvironmentRequest.JSON_PROPERTY_CUSTOM_DOCKER_REGISTRY
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-02T16:36:31.330723+02:00[Europe/Budapest]", comments = "Generator version: 7.5.0")
public class CreateGCPEnvironmentRequest {
  public static final String JSON_PROPERTY_ENVIRONMENT_NAME = "environmentName";
  private String environmentName;

  public static final String JSON_PROPERTY_CREDENTIAL_NAME = "credentialName";
  private String credentialName;

  public static final String JSON_PROPERTY_REGION = "region";
  private String region;

  public static final String JSON_PROPERTY_PUBLIC_KEY = "publicKey";
  private String publicKey;

  public static final String JSON_PROPERTY_USE_PUBLIC_IP = "usePublicIp";
  private Boolean usePublicIp;

  public static final String JSON_PROPERTY_EXISTING_NETWORK_PARAMS = "existingNetworkParams";
  private ExistingGCPNetworkRequest existingNetworkParams;

  public static final String JSON_PROPERTY_SECURITY_ACCESS = "securityAccess";
  private GcpSecurityAccessRequest securityAccess;

  public static final String JSON_PROPERTY_LOG_STORAGE = "logStorage";
  private GcpLogStorageRequest logStorage;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_ENABLE_TUNNEL = "enableTunnel";
  private Boolean enableTunnel = true;

  public static final String JSON_PROPERTY_WORKLOAD_ANALYTICS = "workloadAnalytics";
  private Boolean workloadAnalytics;

  public static final String JSON_PROPERTY_REPORT_DEPLOYMENT_LOGS = "reportDeploymentLogs";
  private Boolean reportDeploymentLogs;

  public static final String JSON_PROPERTY_TUNNEL_TYPE = "tunnelType";
  private TunnelType tunnelType;

  public static final String JSON_PROPERTY_CCM_V2_TLS_TYPE = "ccmV2TlsType";
  private CcmV2TlsType ccmV2TlsType;

  public static final String JSON_PROPERTY_CLOUD_STORAGE_LOGGING = "cloudStorageLogging";
  private Boolean cloudStorageLogging;

  public static final String JSON_PROPERTY_FREE_IPA = "freeIpa";
  private GCPFreeIpaCreationRequest freeIpa;

  /**
   * The scheme for the endpoint gateway. PUBLIC creates an external endpoint that can be accessed over the Internet. Defaults to PRIVATE which restricts the traffic to be internal to the VPC.
   */
  public enum EndpointAccessGatewaySchemeEnum {
    PUBLIC("PUBLIC"),
    
    PRIVATE("PRIVATE");

    private String value;

    EndpointAccessGatewaySchemeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static EndpointAccessGatewaySchemeEnum fromValue(String value) {
      for (EndpointAccessGatewaySchemeEnum b : EndpointAccessGatewaySchemeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ENDPOINT_ACCESS_GATEWAY_SCHEME = "endpointAccessGatewayScheme";
  private EndpointAccessGatewaySchemeEnum endpointAccessGatewayScheme;

  public static final String JSON_PROPERTY_ENDPOINT_ACCESS_GATEWAY_SUBNET_IDS = "endpointAccessGatewaySubnetIds";
  private List<String> endpointAccessGatewaySubnetIds = new ArrayList<>();

  public static final String JSON_PROPERTY_IMAGE = "image";
  private FreeIpaImageRequest image;

  public static final String JSON_PROPERTY_TAGS = "tags";
  private List<GcpTagRequest> tags = new ArrayList<>();

  public static final String JSON_PROPERTY_PROXY_CONFIG_NAME = "proxyConfigName";
  private String proxyConfigName;

  public static final String JSON_PROPERTY_ID_BROKER_MAPPING_SOURCE = "idBrokerMappingSource";
  private String idBrokerMappingSource;

  public static final String JSON_PROPERTY_ENCRYPTION_KEY = "encryptionKey";
  private String encryptionKey;

  public static final String JSON_PROPERTY_AVAILABILITY_ZONES = "availabilityZones";
  private List<String> availabilityZones = new ArrayList<>();

  public static final String JSON_PROPERTY_CUSTOM_DOCKER_REGISTRY = "customDockerRegistry";
  private CustomDockerRegistryRequest customDockerRegistry;

  public CreateGCPEnvironmentRequest() { 
  }

  public CreateGCPEnvironmentRequest environmentName(String environmentName) {
    this.environmentName = environmentName;
    return this;
  }

   /**
   * The name of the environment. Must contain only lowercase letters, numbers and hyphens.
   * @return environmentName
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ENVIRONMENT_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEnvironmentName() {
    return environmentName;
  }


  @JsonProperty(JSON_PROPERTY_ENVIRONMENT_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEnvironmentName(String environmentName) {
    this.environmentName = environmentName;
  }


  public CreateGCPEnvironmentRequest credentialName(String credentialName) {
    this.credentialName = credentialName;
    return this;
  }

   /**
   * Name of the credential to use for the environment.
   * @return credentialName
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREDENTIAL_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCredentialName() {
    return credentialName;
  }


  @JsonProperty(JSON_PROPERTY_CREDENTIAL_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCredentialName(String credentialName) {
    this.credentialName = credentialName;
  }


  public CreateGCPEnvironmentRequest region(String region) {
    this.region = region;
    return this;
  }

   /**
   * The region of the environment.
   * @return region
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REGION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRegion() {
    return region;
  }


  @JsonProperty(JSON_PROPERTY_REGION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRegion(String region) {
    this.region = region;
  }


  public CreateGCPEnvironmentRequest publicKey(String publicKey) {
    this.publicKey = publicKey;
    return this;
  }

   /**
   * Public SSH key string. The associated private key can be used to get root-level access to the Data Lake instance and Data Hub cluster instances.
   * @return publicKey
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PUBLIC_KEY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPublicKey() {
    return publicKey;
  }


  @JsonProperty(JSON_PROPERTY_PUBLIC_KEY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPublicKey(String publicKey) {
    this.publicKey = publicKey;
  }


  public CreateGCPEnvironmentRequest usePublicIp(Boolean usePublicIp) {
    this.usePublicIp = usePublicIp;
    return this;
  }

   /**
   * Whether to associate public ip&#39;s to the resources within the network.
   * @return usePublicIp
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_USE_PUBLIC_IP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getUsePublicIp() {
    return usePublicIp;
  }


  @JsonProperty(JSON_PROPERTY_USE_PUBLIC_IP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUsePublicIp(Boolean usePublicIp) {
    this.usePublicIp = usePublicIp;
  }


  public CreateGCPEnvironmentRequest existingNetworkParams(ExistingGCPNetworkRequest existingNetworkParams) {
    this.existingNetworkParams = existingNetworkParams;
    return this;
  }

   /**
   * Get existingNetworkParams
   * @return existingNetworkParams
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EXISTING_NETWORK_PARAMS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ExistingGCPNetworkRequest getExistingNetworkParams() {
    return existingNetworkParams;
  }


  @JsonProperty(JSON_PROPERTY_EXISTING_NETWORK_PARAMS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExistingNetworkParams(ExistingGCPNetworkRequest existingNetworkParams) {
    this.existingNetworkParams = existingNetworkParams;
  }


  public CreateGCPEnvironmentRequest securityAccess(GcpSecurityAccessRequest securityAccess) {
    this.securityAccess = securityAccess;
    return this;
  }

   /**
   * Get securityAccess
   * @return securityAccess
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECURITY_ACCESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GcpSecurityAccessRequest getSecurityAccess() {
    return securityAccess;
  }


  @JsonProperty(JSON_PROPERTY_SECURITY_ACCESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecurityAccess(GcpSecurityAccessRequest securityAccess) {
    this.securityAccess = securityAccess;
  }


  public CreateGCPEnvironmentRequest logStorage(GcpLogStorageRequest logStorage) {
    this.logStorage = logStorage;
    return this;
  }

   /**
   * Get logStorage
   * @return logStorage
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOG_STORAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GcpLogStorageRequest getLogStorage() {
    return logStorage;
  }


  @JsonProperty(JSON_PROPERTY_LOG_STORAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLogStorage(GcpLogStorageRequest logStorage) {
    this.logStorage = logStorage;
  }


  public CreateGCPEnvironmentRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * A description of the environment.
   * @return description
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public CreateGCPEnvironmentRequest enableTunnel(Boolean enableTunnel) {
    this.enableTunnel = enableTunnel;
    return this;
  }

   /**
   * Whether to enable SSH tunneling for the environment.
   * @return enableTunnel
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_TUNNEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnableTunnel() {
    return enableTunnel;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_TUNNEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableTunnel(Boolean enableTunnel) {
    this.enableTunnel = enableTunnel;
  }


  public CreateGCPEnvironmentRequest workloadAnalytics(Boolean workloadAnalytics) {
    this.workloadAnalytics = workloadAnalytics;
    return this;
  }

   /**
   * When this is enabled, diagnostic information about job and query execution is sent to Workload Manager for Data Hub clusters created within this environment.
   * @return workloadAnalytics
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WORKLOAD_ANALYTICS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getWorkloadAnalytics() {
    return workloadAnalytics;
  }


  @JsonProperty(JSON_PROPERTY_WORKLOAD_ANALYTICS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWorkloadAnalytics(Boolean workloadAnalytics) {
    this.workloadAnalytics = workloadAnalytics;
  }


  public CreateGCPEnvironmentRequest reportDeploymentLogs(Boolean reportDeploymentLogs) {
    this.reportDeploymentLogs = reportDeploymentLogs;
    return this;
  }

   /**
   * When true, this will report additional diagnostic information back to Cloudera.
   * @return reportDeploymentLogs
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REPORT_DEPLOYMENT_LOGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getReportDeploymentLogs() {
    return reportDeploymentLogs;
  }


  @JsonProperty(JSON_PROPERTY_REPORT_DEPLOYMENT_LOGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReportDeploymentLogs(Boolean reportDeploymentLogs) {
    this.reportDeploymentLogs = reportDeploymentLogs;
  }


  public CreateGCPEnvironmentRequest tunnelType(TunnelType tunnelType) {
    this.tunnelType = tunnelType;
    return this;
  }

   /**
   * Get tunnelType
   * @return tunnelType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TUNNEL_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TunnelType getTunnelType() {
    return tunnelType;
  }


  @JsonProperty(JSON_PROPERTY_TUNNEL_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTunnelType(TunnelType tunnelType) {
    this.tunnelType = tunnelType;
  }


  public CreateGCPEnvironmentRequest ccmV2TlsType(CcmV2TlsType ccmV2TlsType) {
    this.ccmV2TlsType = ccmV2TlsType;
    return this;
  }

   /**
   * Get ccmV2TlsType
   * @return ccmV2TlsType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CCM_V2_TLS_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CcmV2TlsType getCcmV2TlsType() {
    return ccmV2TlsType;
  }


  @JsonProperty(JSON_PROPERTY_CCM_V2_TLS_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCcmV2TlsType(CcmV2TlsType ccmV2TlsType) {
    this.ccmV2TlsType = ccmV2TlsType;
  }


  public CreateGCPEnvironmentRequest cloudStorageLogging(Boolean cloudStorageLogging) {
    this.cloudStorageLogging = cloudStorageLogging;
    return this;
  }

   /**
   * When this is enabled, logs from the VMs will end up on the pre-defined cloud storage (enabled by default).
   * @return cloudStorageLogging
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CLOUD_STORAGE_LOGGING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getCloudStorageLogging() {
    return cloudStorageLogging;
  }


  @JsonProperty(JSON_PROPERTY_CLOUD_STORAGE_LOGGING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCloudStorageLogging(Boolean cloudStorageLogging) {
    this.cloudStorageLogging = cloudStorageLogging;
  }


  public CreateGCPEnvironmentRequest freeIpa(GCPFreeIpaCreationRequest freeIpa) {
    this.freeIpa = freeIpa;
    return this;
  }

   /**
   * Get freeIpa
   * @return freeIpa
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FREE_IPA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GCPFreeIpaCreationRequest getFreeIpa() {
    return freeIpa;
  }


  @JsonProperty(JSON_PROPERTY_FREE_IPA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFreeIpa(GCPFreeIpaCreationRequest freeIpa) {
    this.freeIpa = freeIpa;
  }


  public CreateGCPEnvironmentRequest endpointAccessGatewayScheme(EndpointAccessGatewaySchemeEnum endpointAccessGatewayScheme) {
    this.endpointAccessGatewayScheme = endpointAccessGatewayScheme;
    return this;
  }

   /**
   * The scheme for the endpoint gateway. PUBLIC creates an external endpoint that can be accessed over the Internet. Defaults to PRIVATE which restricts the traffic to be internal to the VPC.
   * @return endpointAccessGatewayScheme
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENDPOINT_ACCESS_GATEWAY_SCHEME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EndpointAccessGatewaySchemeEnum getEndpointAccessGatewayScheme() {
    return endpointAccessGatewayScheme;
  }


  @JsonProperty(JSON_PROPERTY_ENDPOINT_ACCESS_GATEWAY_SCHEME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndpointAccessGatewayScheme(EndpointAccessGatewaySchemeEnum endpointAccessGatewayScheme) {
    this.endpointAccessGatewayScheme = endpointAccessGatewayScheme;
  }


  public CreateGCPEnvironmentRequest endpointAccessGatewaySubnetIds(List<String> endpointAccessGatewaySubnetIds) {
    this.endpointAccessGatewaySubnetIds = endpointAccessGatewaySubnetIds;
    return this;
  }

  public CreateGCPEnvironmentRequest addEndpointAccessGatewaySubnetIdsItem(String endpointAccessGatewaySubnetIdsItem) {
    if (this.endpointAccessGatewaySubnetIds == null) {
      this.endpointAccessGatewaySubnetIds = new ArrayList<>();
    }
    this.endpointAccessGatewaySubnetIds.add(endpointAccessGatewaySubnetIdsItem);
    return this;
  }

   /**
   * The subnets to use for endpoint access gateway.
   * @return endpointAccessGatewaySubnetIds
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENDPOINT_ACCESS_GATEWAY_SUBNET_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getEndpointAccessGatewaySubnetIds() {
    return endpointAccessGatewaySubnetIds;
  }


  @JsonProperty(JSON_PROPERTY_ENDPOINT_ACCESS_GATEWAY_SUBNET_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndpointAccessGatewaySubnetIds(List<String> endpointAccessGatewaySubnetIds) {
    this.endpointAccessGatewaySubnetIds = endpointAccessGatewaySubnetIds;
  }


  public CreateGCPEnvironmentRequest image(FreeIpaImageRequest image) {
    this.image = image;
    return this;
  }

   /**
   * Get image
   * @return image
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FreeIpaImageRequest getImage() {
    return image;
  }


  @JsonProperty(JSON_PROPERTY_IMAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImage(FreeIpaImageRequest image) {
    this.image = image;
  }


  public CreateGCPEnvironmentRequest tags(List<GcpTagRequest> tags) {
    this.tags = tags;
    return this;
  }

  public CreateGCPEnvironmentRequest addTagsItem(GcpTagRequest tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Tags that can be attached to GCP resources. Please refer to Google documentation for the rules https://cloud.google.com/compute/docs/labeling-resources#label_format.
   * @return tags
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<GcpTagRequest> getTags() {
    return tags;
  }


  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTags(List<GcpTagRequest> tags) {
    this.tags = tags;
  }


  public CreateGCPEnvironmentRequest proxyConfigName(String proxyConfigName) {
    this.proxyConfigName = proxyConfigName;
    return this;
  }

   /**
   * Name of the proxy config to use for the environment.
   * @return proxyConfigName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROXY_CONFIG_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProxyConfigName() {
    return proxyConfigName;
  }


  @JsonProperty(JSON_PROPERTY_PROXY_CONFIG_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProxyConfigName(String proxyConfigName) {
    this.proxyConfigName = proxyConfigName;
  }


  public CreateGCPEnvironmentRequest idBrokerMappingSource(String idBrokerMappingSource) {
    this.idBrokerMappingSource = idBrokerMappingSource;
    return this;
  }

   /**
   * This is an optional field. This is for QE testing purposes and internal use only. QE can pass this to set idbroker mapping source as \&quot;MOCK\&quot; until cloud storage is implemented for GCP. \&quot;IDBMMS\&quot; is the default value.
   * @return idBrokerMappingSource
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID_BROKER_MAPPING_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIdBrokerMappingSource() {
    return idBrokerMappingSource;
  }


  @JsonProperty(JSON_PROPERTY_ID_BROKER_MAPPING_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIdBrokerMappingSource(String idBrokerMappingSource) {
    this.idBrokerMappingSource = idBrokerMappingSource;
  }


  public CreateGCPEnvironmentRequest encryptionKey(String encryptionKey) {
    this.encryptionKey = encryptionKey;
    return this;
  }

   /**
   * Key Resource ID of the customer managed encryption key to encrypt GCP resources.
   * @return encryptionKey
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENCRYPTION_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEncryptionKey() {
    return encryptionKey;
  }


  @JsonProperty(JSON_PROPERTY_ENCRYPTION_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEncryptionKey(String encryptionKey) {
    this.encryptionKey = encryptionKey;
  }


  public CreateGCPEnvironmentRequest availabilityZones(List<String> availabilityZones) {
    this.availabilityZones = availabilityZones;
    return this;
  }

  public CreateGCPEnvironmentRequest addAvailabilityZonesItem(String availabilityZonesItem) {
    if (this.availabilityZones == null) {
      this.availabilityZones = new ArrayList<>();
    }
    this.availabilityZones.add(availabilityZonesItem);
    return this;
  }

   /**
   * The zones of the environment in the given region. Multi-zone selection is not supported in GCP yet. It accepts only one zone until support is added.
   * @return availabilityZones
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVAILABILITY_ZONES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getAvailabilityZones() {
    return availabilityZones;
  }


  @JsonProperty(JSON_PROPERTY_AVAILABILITY_ZONES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvailabilityZones(List<String> availabilityZones) {
    this.availabilityZones = availabilityZones;
  }


  public CreateGCPEnvironmentRequest customDockerRegistry(CustomDockerRegistryRequest customDockerRegistry) {
    this.customDockerRegistry = customDockerRegistry;
    return this;
  }

   /**
   * Get customDockerRegistry
   * @return customDockerRegistry
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CUSTOM_DOCKER_REGISTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CustomDockerRegistryRequest getCustomDockerRegistry() {
    return customDockerRegistry;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOM_DOCKER_REGISTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomDockerRegistry(CustomDockerRegistryRequest customDockerRegistry) {
    this.customDockerRegistry = customDockerRegistry;
  }


  /**
   * Return true if this CreateGCPEnvironmentRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateGCPEnvironmentRequest createGCPEnvironmentRequest = (CreateGCPEnvironmentRequest) o;
    return Objects.equals(this.environmentName, createGCPEnvironmentRequest.environmentName) &&
        Objects.equals(this.credentialName, createGCPEnvironmentRequest.credentialName) &&
        Objects.equals(this.region, createGCPEnvironmentRequest.region) &&
        Objects.equals(this.publicKey, createGCPEnvironmentRequest.publicKey) &&
        Objects.equals(this.usePublicIp, createGCPEnvironmentRequest.usePublicIp) &&
        Objects.equals(this.existingNetworkParams, createGCPEnvironmentRequest.existingNetworkParams) &&
        Objects.equals(this.securityAccess, createGCPEnvironmentRequest.securityAccess) &&
        Objects.equals(this.logStorage, createGCPEnvironmentRequest.logStorage) &&
        Objects.equals(this.description, createGCPEnvironmentRequest.description) &&
        Objects.equals(this.enableTunnel, createGCPEnvironmentRequest.enableTunnel) &&
        Objects.equals(this.workloadAnalytics, createGCPEnvironmentRequest.workloadAnalytics) &&
        Objects.equals(this.reportDeploymentLogs, createGCPEnvironmentRequest.reportDeploymentLogs) &&
        Objects.equals(this.tunnelType, createGCPEnvironmentRequest.tunnelType) &&
        Objects.equals(this.ccmV2TlsType, createGCPEnvironmentRequest.ccmV2TlsType) &&
        Objects.equals(this.cloudStorageLogging, createGCPEnvironmentRequest.cloudStorageLogging) &&
        Objects.equals(this.freeIpa, createGCPEnvironmentRequest.freeIpa) &&
        Objects.equals(this.endpointAccessGatewayScheme, createGCPEnvironmentRequest.endpointAccessGatewayScheme) &&
        Objects.equals(this.endpointAccessGatewaySubnetIds, createGCPEnvironmentRequest.endpointAccessGatewaySubnetIds) &&
        Objects.equals(this.image, createGCPEnvironmentRequest.image) &&
        Objects.equals(this.tags, createGCPEnvironmentRequest.tags) &&
        Objects.equals(this.proxyConfigName, createGCPEnvironmentRequest.proxyConfigName) &&
        Objects.equals(this.idBrokerMappingSource, createGCPEnvironmentRequest.idBrokerMappingSource) &&
        Objects.equals(this.encryptionKey, createGCPEnvironmentRequest.encryptionKey) &&
        Objects.equals(this.availabilityZones, createGCPEnvironmentRequest.availabilityZones) &&
        Objects.equals(this.customDockerRegistry, createGCPEnvironmentRequest.customDockerRegistry);
  }

  @Override
  public int hashCode() {
    return Objects.hash(environmentName, credentialName, region, publicKey, usePublicIp, existingNetworkParams, securityAccess, logStorage, description, enableTunnel, workloadAnalytics, reportDeploymentLogs, tunnelType, ccmV2TlsType, cloudStorageLogging, freeIpa, endpointAccessGatewayScheme, endpointAccessGatewaySubnetIds, image, tags, proxyConfigName, idBrokerMappingSource, encryptionKey, availabilityZones, customDockerRegistry);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateGCPEnvironmentRequest {\n");
    sb.append("    environmentName: ").append(toIndentedString(environmentName)).append("\n");
    sb.append("    credentialName: ").append(toIndentedString(credentialName)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    publicKey: ").append(toIndentedString(publicKey)).append("\n");
    sb.append("    usePublicIp: ").append(toIndentedString(usePublicIp)).append("\n");
    sb.append("    existingNetworkParams: ").append(toIndentedString(existingNetworkParams)).append("\n");
    sb.append("    securityAccess: ").append(toIndentedString(securityAccess)).append("\n");
    sb.append("    logStorage: ").append(toIndentedString(logStorage)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    enableTunnel: ").append(toIndentedString(enableTunnel)).append("\n");
    sb.append("    workloadAnalytics: ").append(toIndentedString(workloadAnalytics)).append("\n");
    sb.append("    reportDeploymentLogs: ").append(toIndentedString(reportDeploymentLogs)).append("\n");
    sb.append("    tunnelType: ").append(toIndentedString(tunnelType)).append("\n");
    sb.append("    ccmV2TlsType: ").append(toIndentedString(ccmV2TlsType)).append("\n");
    sb.append("    cloudStorageLogging: ").append(toIndentedString(cloudStorageLogging)).append("\n");
    sb.append("    freeIpa: ").append(toIndentedString(freeIpa)).append("\n");
    sb.append("    endpointAccessGatewayScheme: ").append(toIndentedString(endpointAccessGatewayScheme)).append("\n");
    sb.append("    endpointAccessGatewaySubnetIds: ").append(toIndentedString(endpointAccessGatewaySubnetIds)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    proxyConfigName: ").append(toIndentedString(proxyConfigName)).append("\n");
    sb.append("    idBrokerMappingSource: ").append(toIndentedString(idBrokerMappingSource)).append("\n");
    sb.append("    encryptionKey: ").append(toIndentedString(encryptionKey)).append("\n");
    sb.append("    availabilityZones: ").append(toIndentedString(availabilityZones)).append("\n");
    sb.append("    customDockerRegistry: ").append(toIndentedString(customDockerRegistry)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `environmentName` to the URL query string
    if (getEnvironmentName() != null) {
      joiner.add(String.format("%senvironmentName%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getEnvironmentName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `credentialName` to the URL query string
    if (getCredentialName() != null) {
      joiner.add(String.format("%scredentialName%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCredentialName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `region` to the URL query string
    if (getRegion() != null) {
      joiner.add(String.format("%sregion%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getRegion()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `publicKey` to the URL query string
    if (getPublicKey() != null) {
      joiner.add(String.format("%spublicKey%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getPublicKey()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `usePublicIp` to the URL query string
    if (getUsePublicIp() != null) {
      joiner.add(String.format("%susePublicIp%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getUsePublicIp()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `existingNetworkParams` to the URL query string
    if (getExistingNetworkParams() != null) {
      joiner.add(getExistingNetworkParams().toUrlQueryString(prefix + "existingNetworkParams" + suffix));
    }

    // add `securityAccess` to the URL query string
    if (getSecurityAccess() != null) {
      joiner.add(getSecurityAccess().toUrlQueryString(prefix + "securityAccess" + suffix));
    }

    // add `logStorage` to the URL query string
    if (getLogStorage() != null) {
      joiner.add(getLogStorage().toUrlQueryString(prefix + "logStorage" + suffix));
    }

    // add `description` to the URL query string
    if (getDescription() != null) {
      joiner.add(String.format("%sdescription%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDescription()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `enableTunnel` to the URL query string
    if (getEnableTunnel() != null) {
      joiner.add(String.format("%senableTunnel%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getEnableTunnel()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `workloadAnalytics` to the URL query string
    if (getWorkloadAnalytics() != null) {
      joiner.add(String.format("%sworkloadAnalytics%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getWorkloadAnalytics()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `reportDeploymentLogs` to the URL query string
    if (getReportDeploymentLogs() != null) {
      joiner.add(String.format("%sreportDeploymentLogs%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getReportDeploymentLogs()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `tunnelType` to the URL query string
    if (getTunnelType() != null) {
      joiner.add(String.format("%stunnelType%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getTunnelType()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `ccmV2TlsType` to the URL query string
    if (getCcmV2TlsType() != null) {
      joiner.add(String.format("%sccmV2TlsType%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCcmV2TlsType()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `cloudStorageLogging` to the URL query string
    if (getCloudStorageLogging() != null) {
      joiner.add(String.format("%scloudStorageLogging%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCloudStorageLogging()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `freeIpa` to the URL query string
    if (getFreeIpa() != null) {
      joiner.add(getFreeIpa().toUrlQueryString(prefix + "freeIpa" + suffix));
    }

    // add `endpointAccessGatewayScheme` to the URL query string
    if (getEndpointAccessGatewayScheme() != null) {
      joiner.add(String.format("%sendpointAccessGatewayScheme%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getEndpointAccessGatewayScheme()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `endpointAccessGatewaySubnetIds` to the URL query string
    if (getEndpointAccessGatewaySubnetIds() != null) {
      for (int i = 0; i < getEndpointAccessGatewaySubnetIds().size(); i++) {
        joiner.add(String.format("%sendpointAccessGatewaySubnetIds%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(String.valueOf(getEndpointAccessGatewaySubnetIds().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    // add `image` to the URL query string
    if (getImage() != null) {
      joiner.add(getImage().toUrlQueryString(prefix + "image" + suffix));
    }

    // add `tags` to the URL query string
    if (getTags() != null) {
      for (int i = 0; i < getTags().size(); i++) {
        if (getTags().get(i) != null) {
          joiner.add(getTags().get(i).toUrlQueryString(String.format("%stags%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `proxyConfigName` to the URL query string
    if (getProxyConfigName() != null) {
      joiner.add(String.format("%sproxyConfigName%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getProxyConfigName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `idBrokerMappingSource` to the URL query string
    if (getIdBrokerMappingSource() != null) {
      joiner.add(String.format("%sidBrokerMappingSource%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getIdBrokerMappingSource()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `encryptionKey` to the URL query string
    if (getEncryptionKey() != null) {
      joiner.add(String.format("%sencryptionKey%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getEncryptionKey()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `availabilityZones` to the URL query string
    if (getAvailabilityZones() != null) {
      for (int i = 0; i < getAvailabilityZones().size(); i++) {
        joiner.add(String.format("%savailabilityZones%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(String.valueOf(getAvailabilityZones().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    // add `customDockerRegistry` to the URL query string
    if (getCustomDockerRegistry() != null) {
      joiner.add(getCustomDockerRegistry().toUrlQueryString(prefix + "customDockerRegistry" + suffix));
    }

    return joiner.toString();
  }
}

