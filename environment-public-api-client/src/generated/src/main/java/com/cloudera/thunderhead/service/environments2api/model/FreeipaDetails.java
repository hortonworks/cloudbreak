/*
 * Cloudera Environments Service
 * Cloudera Environments Service is a web service that manages cloud provider access.
 *
 * The version of the OpenAPI document: __API_VERSION__
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudera.thunderhead.service.environments2api.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.cloudera.thunderhead.service.environments2api.model.FreeIpaInstance;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Details of a FreeIPA cluster.
 */
@JsonPropertyOrder({
  FreeipaDetails.JSON_PROPERTY_CRN,
  FreeipaDetails.JSON_PROPERTY_DOMAIN,
  FreeipaDetails.JSON_PROPERTY_HOSTNAME,
  FreeipaDetails.JSON_PROPERTY_SERVER_I_P,
  FreeipaDetails.JSON_PROPERTY_RECIPES,
  FreeipaDetails.JSON_PROPERTY_INSTANCES,
  FreeipaDetails.JSON_PROPERTY_INSTANCE_COUNT_BY_GROUP,
  FreeipaDetails.JSON_PROPERTY_MULTI_AZ
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.5.0")
public class FreeipaDetails {
  public static final String JSON_PROPERTY_CRN = "crn";
  private String crn;

  public static final String JSON_PROPERTY_DOMAIN = "domain";
  private String domain;

  public static final String JSON_PROPERTY_HOSTNAME = "hostname";
  private String hostname;

  public static final String JSON_PROPERTY_SERVER_I_P = "serverIP";
  private Set<String> serverIP = new LinkedHashSet<>();

  public static final String JSON_PROPERTY_RECIPES = "recipes";
  private List<String> recipes = new ArrayList<>();

  public static final String JSON_PROPERTY_INSTANCES = "instances";
  private Set<FreeIpaInstance> instances = new LinkedHashSet<>();

  public static final String JSON_PROPERTY_INSTANCE_COUNT_BY_GROUP = "instanceCountByGroup";
  private Integer instanceCountByGroup;

  public static final String JSON_PROPERTY_MULTI_AZ = "multiAz";
  private Boolean multiAz;

  public FreeipaDetails() { 
  }

  public FreeipaDetails crn(String crn) {
    this.crn = crn;
    return this;
  }

   /**
   * CRN of the FreeIPA cluster.
   * @return crn
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CRN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCrn() {
    return crn;
  }


  @JsonProperty(JSON_PROPERTY_CRN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCrn(String crn) {
    this.crn = crn;
  }


  public FreeipaDetails domain(String domain) {
    this.domain = domain;
    return this;
  }

   /**
   * The domain name of the FreeIPA cluster.
   * @return domain
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDomain() {
    return domain;
  }


  @JsonProperty(JSON_PROPERTY_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDomain(String domain) {
    this.domain = domain;
  }


  public FreeipaDetails hostname(String hostname) {
    this.hostname = hostname;
    return this;
  }

   /**
   * The hostname of the FreeIPA cluster.
   * @return hostname
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HOSTNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHostname() {
    return hostname;
  }


  @JsonProperty(JSON_PROPERTY_HOSTNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHostname(String hostname) {
    this.hostname = hostname;
  }


  public FreeipaDetails serverIP(Set<String> serverIP) {
    this.serverIP = serverIP;
    return this;
  }

  public FreeipaDetails addServerIPItem(String serverIPItem) {
    if (this.serverIP == null) {
      this.serverIP = new LinkedHashSet<>();
    }
    this.serverIP.add(serverIPItem);
    return this;
  }

   /**
   * The IP addresses of the FreeIPA cluster.
   * @return serverIP
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SERVER_I_P)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<String> getServerIP() {
    return serverIP;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_SERVER_I_P)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServerIP(Set<String> serverIP) {
    this.serverIP = serverIP;
  }


  public FreeipaDetails recipes(List<String> recipes) {
    this.recipes = recipes;
    return this;
  }

  public FreeipaDetails addRecipesItem(String recipesItem) {
    if (this.recipes == null) {
      this.recipes = new ArrayList<>();
    }
    this.recipes.add(recipesItem);
    return this;
  }

   /**
   * The recipes for the FreeIPA cluster.
   * @return recipes
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RECIPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getRecipes() {
    return recipes;
  }


  @JsonProperty(JSON_PROPERTY_RECIPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecipes(List<String> recipes) {
    this.recipes = recipes;
  }


  public FreeipaDetails instances(Set<FreeIpaInstance> instances) {
    this.instances = instances;
    return this;
  }

  public FreeipaDetails addInstancesItem(FreeIpaInstance instancesItem) {
    if (this.instances == null) {
      this.instances = new LinkedHashSet<>();
    }
    this.instances.add(instancesItem);
    return this;
  }

   /**
   * The instances of the FreeIPA cluster.
   * @return instances
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INSTANCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<FreeIpaInstance> getInstances() {
    return instances;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_INSTANCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInstances(Set<FreeIpaInstance> instances) {
    this.instances = instances;
  }


  public FreeipaDetails instanceCountByGroup(Integer instanceCountByGroup) {
    this.instanceCountByGroup = instanceCountByGroup;
    return this;
  }

   /**
   * The number of FreeIPA instances to create per group when creating FreeIPA in environment.
   * @return instanceCountByGroup
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INSTANCE_COUNT_BY_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getInstanceCountByGroup() {
    return instanceCountByGroup;
  }


  @JsonProperty(JSON_PROPERTY_INSTANCE_COUNT_BY_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInstanceCountByGroup(Integer instanceCountByGroup) {
    this.instanceCountByGroup = instanceCountByGroup;
  }


  public FreeipaDetails multiAz(Boolean multiAz) {
    this.multiAz = multiAz;
    return this;
  }

   /**
   * Whether the given FreeIPA is deployed in a multi-availability zone way or not.
   * @return multiAz
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MULTI_AZ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getMultiAz() {
    return multiAz;
  }


  @JsonProperty(JSON_PROPERTY_MULTI_AZ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMultiAz(Boolean multiAz) {
    this.multiAz = multiAz;
  }


  /**
   * Return true if this FreeipaDetails object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FreeipaDetails freeipaDetails = (FreeipaDetails) o;
    return Objects.equals(this.crn, freeipaDetails.crn) &&
        Objects.equals(this.domain, freeipaDetails.domain) &&
        Objects.equals(this.hostname, freeipaDetails.hostname) &&
        Objects.equals(this.serverIP, freeipaDetails.serverIP) &&
        Objects.equals(this.recipes, freeipaDetails.recipes) &&
        Objects.equals(this.instances, freeipaDetails.instances) &&
        Objects.equals(this.instanceCountByGroup, freeipaDetails.instanceCountByGroup) &&
        Objects.equals(this.multiAz, freeipaDetails.multiAz);
  }

  @Override
  public int hashCode() {
    return Objects.hash(crn, domain, hostname, serverIP, recipes, instances, instanceCountByGroup, multiAz);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FreeipaDetails {\n");
    sb.append("    crn: ").append(toIndentedString(crn)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
    sb.append("    serverIP: ").append(toIndentedString(serverIP)).append("\n");
    sb.append("    recipes: ").append(toIndentedString(recipes)).append("\n");
    sb.append("    instances: ").append(toIndentedString(instances)).append("\n");
    sb.append("    instanceCountByGroup: ").append(toIndentedString(instanceCountByGroup)).append("\n");
    sb.append("    multiAz: ").append(toIndentedString(multiAz)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `crn` to the URL query string
    if (getCrn() != null) {
      joiner.add(String.format("%scrn%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCrn()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `domain` to the URL query string
    if (getDomain() != null) {
      joiner.add(String.format("%sdomain%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDomain()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `hostname` to the URL query string
    if (getHostname() != null) {
      joiner.add(String.format("%shostname%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getHostname()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `serverIP` to the URL query string
    if (getServerIP() != null) {
      int i = 0;
      for (String _item : getServerIP()) {
        joiner.add(String.format("%sserverIP%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(String.valueOf(_item), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
      i++;
    }

    // add `recipes` to the URL query string
    if (getRecipes() != null) {
      for (int i = 0; i < getRecipes().size(); i++) {
        joiner.add(String.format("%srecipes%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(String.valueOf(getRecipes().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    // add `instances` to the URL query string
    if (getInstances() != null) {
      int i = 0;
      for (FreeIpaInstance _item : getInstances()) {
        if (_item != null) {
          joiner.add(_item.toUrlQueryString(String.format("%sinstances%s%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
      i++;
    }

    // add `instanceCountByGroup` to the URL query string
    if (getInstanceCountByGroup() != null) {
      joiner.add(String.format("%sinstanceCountByGroup%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getInstanceCountByGroup()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `multiAz` to the URL query string
    if (getMultiAz() != null) {
      joiner.add(String.format("%smultiAz%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getMultiAz()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

