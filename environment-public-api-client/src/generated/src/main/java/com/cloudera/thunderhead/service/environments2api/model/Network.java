/*
 * Cloudera Environments Service
 * Cloudera Environments Service is a web service that manages cloud provider access.
 *
 * The version of the OpenAPI document: __API_VERSION__
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudera.thunderhead.service.environments2api.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.cloudera.thunderhead.service.environments2api.model.CloudSubnet;
import com.cloudera.thunderhead.service.environments2api.model.NetworkAwsParams;
import com.cloudera.thunderhead.service.environments2api.model.NetworkAzureParams;
import com.cloudera.thunderhead.service.environments2api.model.NetworkGcpParams;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.Arrays;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.Map;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * The network.
 */
@JsonPropertyOrder({
  Network.JSON_PROPERTY_NETWORK_NAME,
  Network.JSON_PROPERTY_SUBNET_IDS,
  Network.JSON_PROPERTY_ENDPOINT_ACCESS_GATEWAY_SCHEME,
  Network.JSON_PROPERTY_ENDPOINT_ACCESS_GATEWAY_SUBNET_IDS,
  Network.JSON_PROPERTY_AWS,
  Network.JSON_PROPERTY_AZURE,
  Network.JSON_PROPERTY_GCP,
  Network.JSON_PROPERTY_NETWORK_CIDR,
  Network.JSON_PROPERTY_DWX_SUBNETS,
  Network.JSON_PROPERTY_LIFTIE_SUBNETS,
  Network.JSON_PROPERTY_SUBNET_METADATA,
  Network.JSON_PROPERTY_SERVICE_ENDPOINTS_CREATION,
  Network.JSON_PROPERTY_ENABLE_LOAD_BALANCERS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.5.0")
public class Network {
  public static final String JSON_PROPERTY_NETWORK_NAME = "networkName";
  private String networkName;

  public static final String JSON_PROPERTY_SUBNET_IDS = "subnetIds";
  private Set<String> subnetIds = new LinkedHashSet<>();

  /**
   * The scheme for the endpoint gateway. PUBLIC indicates an external endpoint that can be accessed over the Internet.
   */
  public enum EndpointAccessGatewaySchemeEnum {
    PUBLIC("PUBLIC"),
    
    PRIVATE("PRIVATE");

    private String value;

    EndpointAccessGatewaySchemeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static EndpointAccessGatewaySchemeEnum fromValue(String value) {
      for (EndpointAccessGatewaySchemeEnum b : EndpointAccessGatewaySchemeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ENDPOINT_ACCESS_GATEWAY_SCHEME = "endpointAccessGatewayScheme";
  private EndpointAccessGatewaySchemeEnum endpointAccessGatewayScheme;

  public static final String JSON_PROPERTY_ENDPOINT_ACCESS_GATEWAY_SUBNET_IDS = "endpointAccessGatewaySubnetIds";
  private Set<String> endpointAccessGatewaySubnetIds = new LinkedHashSet<>();

  public static final String JSON_PROPERTY_AWS = "aws";
  private NetworkAwsParams aws;

  public static final String JSON_PROPERTY_AZURE = "azure";
  private NetworkAzureParams azure;

  public static final String JSON_PROPERTY_GCP = "gcp";
  private NetworkGcpParams gcp;

  public static final String JSON_PROPERTY_NETWORK_CIDR = "networkCidr";
  private String networkCidr;

  public static final String JSON_PROPERTY_DWX_SUBNETS = "dwxSubnets";
  private Map<String, CloudSubnet> dwxSubnets = new HashMap<>();

  public static final String JSON_PROPERTY_LIFTIE_SUBNETS = "liftieSubnets";
  private Map<String, CloudSubnet> liftieSubnets = new HashMap<>();

  public static final String JSON_PROPERTY_SUBNET_METADATA = "subnetMetadata";
  private Map<String, CloudSubnet> subnetMetadata = new HashMap<>();

  /**
   * Whether to create service endpoints or not.
   */
  public enum ServiceEndpointsCreationEnum {
    ENABLED("ENABLED"),
    
    ENABLED_PRIVATE_ENDPOINT("ENABLED_PRIVATE_ENDPOINT"),
    
    DISABLED("DISABLED");

    private String value;

    ServiceEndpointsCreationEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ServiceEndpointsCreationEnum fromValue(String value) {
      for (ServiceEndpointsCreationEnum b : ServiceEndpointsCreationEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SERVICE_ENDPOINTS_CREATION = "serviceEndpointsCreation";
  private ServiceEndpointsCreationEnum serviceEndpointsCreation;

  public static final String JSON_PROPERTY_ENABLE_LOAD_BALANCERS = "enableLoadBalancers";
  private Boolean enableLoadBalancers;

  public Network() { 
  }

  public Network networkName(String networkName) {
    this.networkName = networkName;
    return this;
  }

   /**
   * Name or id of the network
   * @return networkName
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NETWORK_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getNetworkName() {
    return networkName;
  }


  @JsonProperty(JSON_PROPERTY_NETWORK_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNetworkName(String networkName) {
    this.networkName = networkName;
  }


  public Network subnetIds(Set<String> subnetIds) {
    this.subnetIds = subnetIds;
    return this;
  }

  public Network addSubnetIdsItem(String subnetIdsItem) {
    if (this.subnetIds == null) {
      this.subnetIds = new LinkedHashSet<>();
    }
    this.subnetIds.add(subnetIdsItem);
    return this;
  }

   /**
   * Subnet names or ids of the network.
   * @return subnetIds
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SUBNET_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Set<String> getSubnetIds() {
    return subnetIds;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_SUBNET_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSubnetIds(Set<String> subnetIds) {
    this.subnetIds = subnetIds;
  }


  public Network endpointAccessGatewayScheme(EndpointAccessGatewaySchemeEnum endpointAccessGatewayScheme) {
    this.endpointAccessGatewayScheme = endpointAccessGatewayScheme;
    return this;
  }

   /**
   * The scheme for the endpoint gateway. PUBLIC indicates an external endpoint that can be accessed over the Internet.
   * @return endpointAccessGatewayScheme
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENDPOINT_ACCESS_GATEWAY_SCHEME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EndpointAccessGatewaySchemeEnum getEndpointAccessGatewayScheme() {
    return endpointAccessGatewayScheme;
  }


  @JsonProperty(JSON_PROPERTY_ENDPOINT_ACCESS_GATEWAY_SCHEME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndpointAccessGatewayScheme(EndpointAccessGatewaySchemeEnum endpointAccessGatewayScheme) {
    this.endpointAccessGatewayScheme = endpointAccessGatewayScheme;
  }


  public Network endpointAccessGatewaySubnetIds(Set<String> endpointAccessGatewaySubnetIds) {
    this.endpointAccessGatewaySubnetIds = endpointAccessGatewaySubnetIds;
    return this;
  }

  public Network addEndpointAccessGatewaySubnetIdsItem(String endpointAccessGatewaySubnetIdsItem) {
    if (this.endpointAccessGatewaySubnetIds == null) {
      this.endpointAccessGatewaySubnetIds = new LinkedHashSet<>();
    }
    this.endpointAccessGatewaySubnetIds.add(endpointAccessGatewaySubnetIdsItem);
    return this;
  }

   /**
   * The subnets to use for endpoint access gateway.
   * @return endpointAccessGatewaySubnetIds
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENDPOINT_ACCESS_GATEWAY_SUBNET_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<String> getEndpointAccessGatewaySubnetIds() {
    return endpointAccessGatewaySubnetIds;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_ENDPOINT_ACCESS_GATEWAY_SUBNET_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndpointAccessGatewaySubnetIds(Set<String> endpointAccessGatewaySubnetIds) {
    this.endpointAccessGatewaySubnetIds = endpointAccessGatewaySubnetIds;
  }


  public Network aws(NetworkAwsParams aws) {
    this.aws = aws;
    return this;
  }

   /**
   * Get aws
   * @return aws
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AWS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public NetworkAwsParams getAws() {
    return aws;
  }


  @JsonProperty(JSON_PROPERTY_AWS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAws(NetworkAwsParams aws) {
    this.aws = aws;
  }


  public Network azure(NetworkAzureParams azure) {
    this.azure = azure;
    return this;
  }

   /**
   * Get azure
   * @return azure
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AZURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public NetworkAzureParams getAzure() {
    return azure;
  }


  @JsonProperty(JSON_PROPERTY_AZURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAzure(NetworkAzureParams azure) {
    this.azure = azure;
  }


  public Network gcp(NetworkGcpParams gcp) {
    this.gcp = gcp;
    return this;
  }

   /**
   * Get gcp
   * @return gcp
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GCP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public NetworkGcpParams getGcp() {
    return gcp;
  }


  @JsonProperty(JSON_PROPERTY_GCP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGcp(NetworkGcpParams gcp) {
    this.gcp = gcp;
  }


  public Network networkCidr(String networkCidr) {
    this.networkCidr = networkCidr;
    return this;
  }

   /**
   * The range of private IPv4 addresses that resources will use under this network.
   * @return networkCidr
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NETWORK_CIDR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNetworkCidr() {
    return networkCidr;
  }


  @JsonProperty(JSON_PROPERTY_NETWORK_CIDR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNetworkCidr(String networkCidr) {
    this.networkCidr = networkCidr;
  }


  public Network dwxSubnets(Map<String, CloudSubnet> dwxSubnets) {
    this.dwxSubnets = dwxSubnets;
    return this;
  }

  public Network putDwxSubnetsItem(String key, CloudSubnet dwxSubnetsItem) {
    if (this.dwxSubnets == null) {
      this.dwxSubnets = new HashMap<>();
    }
    this.dwxSubnets.put(key, dwxSubnetsItem);
    return this;
  }

   /**
   * DWX subnet parameters.
   * @return dwxSubnets
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DWX_SUBNETS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, CloudSubnet> getDwxSubnets() {
    return dwxSubnets;
  }


  @JsonProperty(JSON_PROPERTY_DWX_SUBNETS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDwxSubnets(Map<String, CloudSubnet> dwxSubnets) {
    this.dwxSubnets = dwxSubnets;
  }


  public Network liftieSubnets(Map<String, CloudSubnet> liftieSubnets) {
    this.liftieSubnets = liftieSubnets;
    return this;
  }

  public Network putLiftieSubnetsItem(String key, CloudSubnet liftieSubnetsItem) {
    if (this.liftieSubnets == null) {
      this.liftieSubnets = new HashMap<>();
    }
    this.liftieSubnets.put(key, liftieSubnetsItem);
    return this;
  }

   /**
   * Subnet parameters for experiences that managed by Liftie.
   * @return liftieSubnets
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIFTIE_SUBNETS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, CloudSubnet> getLiftieSubnets() {
    return liftieSubnets;
  }


  @JsonProperty(JSON_PROPERTY_LIFTIE_SUBNETS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLiftieSubnets(Map<String, CloudSubnet> liftieSubnets) {
    this.liftieSubnets = liftieSubnets;
  }


  public Network subnetMetadata(Map<String, CloudSubnet> subnetMetadata) {
    this.subnetMetadata = subnetMetadata;
    return this;
  }

  public Network putSubnetMetadataItem(String key, CloudSubnet subnetMetadataItem) {
    if (this.subnetMetadata == null) {
      this.subnetMetadata = new HashMap<>();
    }
    this.subnetMetadata.put(key, subnetMetadataItem);
    return this;
  }

   /**
   * Additional subnet metadata of the network.
   * @return subnetMetadata
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBNET_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, CloudSubnet> getSubnetMetadata() {
    return subnetMetadata;
  }


  @JsonProperty(JSON_PROPERTY_SUBNET_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubnetMetadata(Map<String, CloudSubnet> subnetMetadata) {
    this.subnetMetadata = subnetMetadata;
  }


  public Network serviceEndpointsCreation(ServiceEndpointsCreationEnum serviceEndpointsCreation) {
    this.serviceEndpointsCreation = serviceEndpointsCreation;
    return this;
  }

   /**
   * Whether to create service endpoints or not.
   * @return serviceEndpointsCreation
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SERVICE_ENDPOINTS_CREATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ServiceEndpointsCreationEnum getServiceEndpointsCreation() {
    return serviceEndpointsCreation;
  }


  @JsonProperty(JSON_PROPERTY_SERVICE_ENDPOINTS_CREATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServiceEndpointsCreation(ServiceEndpointsCreationEnum serviceEndpointsCreation) {
    this.serviceEndpointsCreation = serviceEndpointsCreation;
  }


  public Network enableLoadBalancers(Boolean enableLoadBalancers) {
    this.enableLoadBalancers = enableLoadBalancers;
    return this;
  }

   /**
   * The load balancer creation mode for all Data Lakes and Data Hubs in the environment. This will override the load balancer creation mode at the cluster level.
   * @return enableLoadBalancers
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_LOAD_BALANCERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnableLoadBalancers() {
    return enableLoadBalancers;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_LOAD_BALANCERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableLoadBalancers(Boolean enableLoadBalancers) {
    this.enableLoadBalancers = enableLoadBalancers;
  }


  /**
   * Return true if this Network object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Network network = (Network) o;
    return Objects.equals(this.networkName, network.networkName) &&
        Objects.equals(this.subnetIds, network.subnetIds) &&
        Objects.equals(this.endpointAccessGatewayScheme, network.endpointAccessGatewayScheme) &&
        Objects.equals(this.endpointAccessGatewaySubnetIds, network.endpointAccessGatewaySubnetIds) &&
        Objects.equals(this.aws, network.aws) &&
        Objects.equals(this.azure, network.azure) &&
        Objects.equals(this.gcp, network.gcp) &&
        Objects.equals(this.networkCidr, network.networkCidr) &&
        Objects.equals(this.dwxSubnets, network.dwxSubnets) &&
        Objects.equals(this.liftieSubnets, network.liftieSubnets) &&
        Objects.equals(this.subnetMetadata, network.subnetMetadata) &&
        Objects.equals(this.serviceEndpointsCreation, network.serviceEndpointsCreation) &&
        Objects.equals(this.enableLoadBalancers, network.enableLoadBalancers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(networkName, subnetIds, endpointAccessGatewayScheme, endpointAccessGatewaySubnetIds, aws, azure, gcp, networkCidr, dwxSubnets, liftieSubnets, subnetMetadata, serviceEndpointsCreation, enableLoadBalancers);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Network {\n");
    sb.append("    networkName: ").append(toIndentedString(networkName)).append("\n");
    sb.append("    subnetIds: ").append(toIndentedString(subnetIds)).append("\n");
    sb.append("    endpointAccessGatewayScheme: ").append(toIndentedString(endpointAccessGatewayScheme)).append("\n");
    sb.append("    endpointAccessGatewaySubnetIds: ").append(toIndentedString(endpointAccessGatewaySubnetIds)).append("\n");
    sb.append("    aws: ").append(toIndentedString(aws)).append("\n");
    sb.append("    azure: ").append(toIndentedString(azure)).append("\n");
    sb.append("    gcp: ").append(toIndentedString(gcp)).append("\n");
    sb.append("    networkCidr: ").append(toIndentedString(networkCidr)).append("\n");
    sb.append("    dwxSubnets: ").append(toIndentedString(dwxSubnets)).append("\n");
    sb.append("    liftieSubnets: ").append(toIndentedString(liftieSubnets)).append("\n");
    sb.append("    subnetMetadata: ").append(toIndentedString(subnetMetadata)).append("\n");
    sb.append("    serviceEndpointsCreation: ").append(toIndentedString(serviceEndpointsCreation)).append("\n");
    sb.append("    enableLoadBalancers: ").append(toIndentedString(enableLoadBalancers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `networkName` to the URL query string
    if (getNetworkName() != null) {
      joiner.add(String.format("%snetworkName%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getNetworkName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `subnetIds` to the URL query string
    if (getSubnetIds() != null) {
      int i = 0;
      for (String _item : getSubnetIds()) {
        joiner.add(String.format("%ssubnetIds%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(String.valueOf(_item), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
      i++;
    }

    // add `endpointAccessGatewayScheme` to the URL query string
    if (getEndpointAccessGatewayScheme() != null) {
      joiner.add(String.format("%sendpointAccessGatewayScheme%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getEndpointAccessGatewayScheme()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `endpointAccessGatewaySubnetIds` to the URL query string
    if (getEndpointAccessGatewaySubnetIds() != null) {
      int i = 0;
      for (String _item : getEndpointAccessGatewaySubnetIds()) {
        joiner.add(String.format("%sendpointAccessGatewaySubnetIds%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(String.valueOf(_item), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
      i++;
    }

    // add `aws` to the URL query string
    if (getAws() != null) {
      joiner.add(getAws().toUrlQueryString(prefix + "aws" + suffix));
    }

    // add `azure` to the URL query string
    if (getAzure() != null) {
      joiner.add(getAzure().toUrlQueryString(prefix + "azure" + suffix));
    }

    // add `gcp` to the URL query string
    if (getGcp() != null) {
      joiner.add(getGcp().toUrlQueryString(prefix + "gcp" + suffix));
    }

    // add `networkCidr` to the URL query string
    if (getNetworkCidr() != null) {
      joiner.add(String.format("%snetworkCidr%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getNetworkCidr()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `dwxSubnets` to the URL query string
    if (getDwxSubnets() != null) {
      for (String _key : getDwxSubnets().keySet()) {
        if (getDwxSubnets().get(_key) != null) {
          joiner.add(getDwxSubnets().get(_key).toUrlQueryString(String.format("%sdwxSubnets%s%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, _key, containerSuffix))));
        }
      }
    }

    // add `liftieSubnets` to the URL query string
    if (getLiftieSubnets() != null) {
      for (String _key : getLiftieSubnets().keySet()) {
        if (getLiftieSubnets().get(_key) != null) {
          joiner.add(getLiftieSubnets().get(_key).toUrlQueryString(String.format("%sliftieSubnets%s%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, _key, containerSuffix))));
        }
      }
    }

    // add `subnetMetadata` to the URL query string
    if (getSubnetMetadata() != null) {
      for (String _key : getSubnetMetadata().keySet()) {
        if (getSubnetMetadata().get(_key) != null) {
          joiner.add(getSubnetMetadata().get(_key).toUrlQueryString(String.format("%ssubnetMetadata%s%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, _key, containerSuffix))));
        }
      }
    }

    // add `serviceEndpointsCreation` to the URL query string
    if (getServiceEndpointsCreation() != null) {
      joiner.add(String.format("%sserviceEndpointsCreation%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getServiceEndpointsCreation()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `enableLoadBalancers` to the URL query string
    if (getEnableLoadBalancers() != null) {
      joiner.add(String.format("%senableLoadBalancers%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getEnableLoadBalancers()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

