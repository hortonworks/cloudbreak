/*
 * Cloudera Environments Service
 * Cloudera Environments Service is a web service that manages cloud provider access.
 *
 * The version of the OpenAPI document: __API_VERSION__
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudera.thunderhead.service.environments2api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Request object for modifying SELinux mode on FreeIPA.
 */
@JsonPropertyOrder({
  ModifySelinuxRequest.JSON_PROPERTY_ENVIRONMENT,
  ModifySelinuxRequest.JSON_PROPERTY_SELINUX
})

public class ModifySelinuxRequest {
  public static final String JSON_PROPERTY_ENVIRONMENT = "environment";
  @javax.annotation.Nonnull
  private String environment;

  /**
   * SELinux Mode.
   */
  public enum SelinuxEnum {
    ENFORCING(String.valueOf("ENFORCING")),
    
    PERMISSIVE(String.valueOf("PERMISSIVE"));

    private String value;

    SelinuxEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SelinuxEnum fromValue(String value) {
      for (SelinuxEnum b : SelinuxEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SELINUX = "selinux";
  @javax.annotation.Nonnull
  private SelinuxEnum selinux;

  public ModifySelinuxRequest() {
  }

  public ModifySelinuxRequest environment(@javax.annotation.Nonnull String environment) {
    
    this.environment = environment;
    return this;
  }

  /**
   * The Environment CRN.
   * @return environment
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ENVIRONMENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEnvironment() {
    return environment;
  }


  @JsonProperty(JSON_PROPERTY_ENVIRONMENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEnvironment(@javax.annotation.Nonnull String environment) {
    this.environment = environment;
  }

  public ModifySelinuxRequest selinux(@javax.annotation.Nonnull SelinuxEnum selinux) {
    
    this.selinux = selinux;
    return this;
  }

  /**
   * SELinux Mode.
   * @return selinux
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SELINUX)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SelinuxEnum getSelinux() {
    return selinux;
  }


  @JsonProperty(JSON_PROPERTY_SELINUX)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSelinux(@javax.annotation.Nonnull SelinuxEnum selinux) {
    this.selinux = selinux;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModifySelinuxRequest modifySelinuxRequest = (ModifySelinuxRequest) o;
    return Objects.equals(this.environment, modifySelinuxRequest.environment) &&
        Objects.equals(this.selinux, modifySelinuxRequest.selinux);
  }

  @Override
  public int hashCode() {
    return Objects.hash(environment, selinux);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModifySelinuxRequest {\n");
    sb.append("    environment: ").append(toIndentedString(environment)).append("\n");
    sb.append("    selinux: ").append(toIndentedString(selinux)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

