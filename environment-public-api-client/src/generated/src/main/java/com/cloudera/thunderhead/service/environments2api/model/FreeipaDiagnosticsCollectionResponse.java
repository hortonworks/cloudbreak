/*
 * Cloudera Environments Service
 * Cloudera Environments Service is a web service that manages cloud provider access.
 *
 * The version of the OpenAPI document: __API_VERSION__
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudera.thunderhead.service.environments2api.model;

import java.util.Objects;
import java.util.Arrays;
import com.cloudera.thunderhead.service.environments2api.model.FreeipaDiagnosticsCollectionDetailsResponse;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Response object for diagnostic collection flow details.
 */
@JsonPropertyOrder({
  FreeipaDiagnosticsCollectionResponse.JSON_PROPERTY_STATUS,
  FreeipaDiagnosticsCollectionResponse.JSON_PROPERTY_FLOW_ID,
  FreeipaDiagnosticsCollectionResponse.JSON_PROPERTY_FLOW_STATE,
  FreeipaDiagnosticsCollectionResponse.JSON_PROPERTY_CREATED,
  FreeipaDiagnosticsCollectionResponse.JSON_PROPERTY_PROGRESS_PERCENTAGE,
  FreeipaDiagnosticsCollectionResponse.JSON_PROPERTY_COLLECTION_DETAILS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.5.0")
public class FreeipaDiagnosticsCollectionResponse {
  /**
   * Status of the diagnostics collection flow.
   */
  public enum StatusEnum {
    RUNNING("RUNNING"),
    
    FAILED("FAILED"),
    
    FINISHED("FINISHED"),
    
    CANCELLED("CANCELLED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public static final String JSON_PROPERTY_FLOW_ID = "flowId";
  private String flowId;

  public static final String JSON_PROPERTY_FLOW_STATE = "flowState";
  private String flowState;

  public static final String JSON_PROPERTY_CREATED = "created";
  private OffsetDateTime created;

  public static final String JSON_PROPERTY_PROGRESS_PERCENTAGE = "progressPercentage";
  private Integer progressPercentage;

  public static final String JSON_PROPERTY_COLLECTION_DETAILS = "collectionDetails";
  private FreeipaDiagnosticsCollectionDetailsResponse collectionDetails;

  public FreeipaDiagnosticsCollectionResponse() {
  }

  public FreeipaDiagnosticsCollectionResponse status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * Status of the diagnostics collection flow.
   * @return status
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public FreeipaDiagnosticsCollectionResponse flowId(String flowId) {
    
    this.flowId = flowId;
    return this;
  }

   /**
   * Flow ID of the diagnostics collection flow.
   * @return flowId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FLOW_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFlowId() {
    return flowId;
  }


  @JsonProperty(JSON_PROPERTY_FLOW_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFlowId(String flowId) {
    this.flowId = flowId;
  }


  public FreeipaDiagnosticsCollectionResponse flowState(String flowState) {
    
    this.flowState = flowState;
    return this;
  }

   /**
   * Current state of the diagnostics collection flow.
   * @return flowState
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FLOW_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFlowState() {
    return flowState;
  }


  @JsonProperty(JSON_PROPERTY_FLOW_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFlowState(String flowState) {
    this.flowState = flowState;
  }


  public FreeipaDiagnosticsCollectionResponse created(OffsetDateTime created) {
    
    this.created = created;
    return this;
  }

   /**
   * Creation date of the diagnostics collection flow.
   * @return created
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCreated() {
    return created;
  }


  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }


  public FreeipaDiagnosticsCollectionResponse progressPercentage(Integer progressPercentage) {
    
    this.progressPercentage = progressPercentage;
    return this;
  }

   /**
   * Progress percentage of the diagnostics collection flow (maximum value if finished).
   * @return progressPercentage
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROGRESS_PERCENTAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getProgressPercentage() {
    return progressPercentage;
  }


  @JsonProperty(JSON_PROPERTY_PROGRESS_PERCENTAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProgressPercentage(Integer progressPercentage) {
    this.progressPercentage = progressPercentage;
  }


  public FreeipaDiagnosticsCollectionResponse collectionDetails(FreeipaDiagnosticsCollectionDetailsResponse collectionDetails) {
    
    this.collectionDetails = collectionDetails;
    return this;
  }

   /**
   * Get collectionDetails
   * @return collectionDetails
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COLLECTION_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FreeipaDiagnosticsCollectionDetailsResponse getCollectionDetails() {
    return collectionDetails;
  }


  @JsonProperty(JSON_PROPERTY_COLLECTION_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCollectionDetails(FreeipaDiagnosticsCollectionDetailsResponse collectionDetails) {
    this.collectionDetails = collectionDetails;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FreeipaDiagnosticsCollectionResponse freeipaDiagnosticsCollectionResponse = (FreeipaDiagnosticsCollectionResponse) o;
    return Objects.equals(this.status, freeipaDiagnosticsCollectionResponse.status) &&
        Objects.equals(this.flowId, freeipaDiagnosticsCollectionResponse.flowId) &&
        Objects.equals(this.flowState, freeipaDiagnosticsCollectionResponse.flowState) &&
        Objects.equals(this.created, freeipaDiagnosticsCollectionResponse.created) &&
        Objects.equals(this.progressPercentage, freeipaDiagnosticsCollectionResponse.progressPercentage) &&
        Objects.equals(this.collectionDetails, freeipaDiagnosticsCollectionResponse.collectionDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, flowId, flowState, created, progressPercentage, collectionDetails);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FreeipaDiagnosticsCollectionResponse {\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    flowId: ").append(toIndentedString(flowId)).append("\n");
    sb.append("    flowState: ").append(toIndentedString(flowState)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    progressPercentage: ").append(toIndentedString(progressPercentage)).append("\n");
    sb.append("    collectionDetails: ").append(toIndentedString(collectionDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

