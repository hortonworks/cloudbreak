/*
 * Cloudera Environments Service
 * Cloudera Environments Service is a web service that manages cloud provider access.
 *
 * The version of the OpenAPI document: __API_VERSION__
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudera.thunderhead.service.environments2api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.LinkedHashSet;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Firewall rules for FreeIPA, Data Lake and Data Hub deployment.
 */
@JsonPropertyOrder({
  GcpSecurityAccessRequest.JSON_PROPERTY_SECURITY_GROUP_ID_FOR_KNOX,
  GcpSecurityAccessRequest.JSON_PROPERTY_DEFAULT_SECURITY_GROUP_ID,
  GcpSecurityAccessRequest.JSON_PROPERTY_SECURITY_GROUP_I_DS_FOR_KNOX,
  GcpSecurityAccessRequest.JSON_PROPERTY_DEFAULT_SECURITY_GROUP_I_DS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.5.0")
public class GcpSecurityAccessRequest {
  public static final String JSON_PROPERTY_SECURITY_GROUP_ID_FOR_KNOX = "securityGroupIdForKnox";
  private String securityGroupIdForKnox;

  public static final String JSON_PROPERTY_DEFAULT_SECURITY_GROUP_ID = "defaultSecurityGroupId";
  private String defaultSecurityGroupId;

  public static final String JSON_PROPERTY_SECURITY_GROUP_I_DS_FOR_KNOX = "securityGroupIDsForKnox";
  private Set<String> securityGroupIDsForKnox = new LinkedHashSet<>();

  public static final String JSON_PROPERTY_DEFAULT_SECURITY_GROUP_I_DS = "defaultSecurityGroupIDs";
  private Set<String> defaultSecurityGroupIDs = new LinkedHashSet<>();

  public GcpSecurityAccessRequest() {
  }

  public GcpSecurityAccessRequest securityGroupIdForKnox(String securityGroupIdForKnox) {
    
    this.securityGroupIdForKnox = securityGroupIdForKnox;
    return this;
  }

   /**
   * Firewall rule for Knox hosts.
   * @return securityGroupIdForKnox
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECURITY_GROUP_ID_FOR_KNOX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSecurityGroupIdForKnox() {
    return securityGroupIdForKnox;
  }


  @JsonProperty(JSON_PROPERTY_SECURITY_GROUP_ID_FOR_KNOX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecurityGroupIdForKnox(String securityGroupIdForKnox) {
    this.securityGroupIdForKnox = securityGroupIdForKnox;
  }


  public GcpSecurityAccessRequest defaultSecurityGroupId(String defaultSecurityGroupId) {
    
    this.defaultSecurityGroupId = defaultSecurityGroupId;
    return this;
  }

   /**
   * Firewall rule for other hosts.
   * @return defaultSecurityGroupId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEFAULT_SECURITY_GROUP_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDefaultSecurityGroupId() {
    return defaultSecurityGroupId;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_SECURITY_GROUP_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefaultSecurityGroupId(String defaultSecurityGroupId) {
    this.defaultSecurityGroupId = defaultSecurityGroupId;
  }


  public GcpSecurityAccessRequest securityGroupIDsForKnox(Set<String> securityGroupIDsForKnox) {
    
    this.securityGroupIDsForKnox = securityGroupIDsForKnox;
    return this;
  }

  public GcpSecurityAccessRequest addSecurityGroupIDsForKnoxItem(String securityGroupIDsForKnoxItem) {
    if (this.securityGroupIDsForKnox == null) {
      this.securityGroupIDsForKnox = new LinkedHashSet<>();
    }
    this.securityGroupIDsForKnox.add(securityGroupIDsForKnoxItem);
    return this;
  }

   /**
   * Security group IDs where Knox-enabled hosts are placed. Mutually exclusive with CIDR.
   * @return securityGroupIDsForKnox
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECURITY_GROUP_I_DS_FOR_KNOX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<String> getSecurityGroupIDsForKnox() {
    return securityGroupIDsForKnox;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_SECURITY_GROUP_I_DS_FOR_KNOX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecurityGroupIDsForKnox(Set<String> securityGroupIDsForKnox) {
    this.securityGroupIDsForKnox = securityGroupIDsForKnox;
  }


  public GcpSecurityAccessRequest defaultSecurityGroupIDs(Set<String> defaultSecurityGroupIDs) {
    
    this.defaultSecurityGroupIDs = defaultSecurityGroupIDs;
    return this;
  }

  public GcpSecurityAccessRequest addDefaultSecurityGroupIDsItem(String defaultSecurityGroupIDsItem) {
    if (this.defaultSecurityGroupIDs == null) {
      this.defaultSecurityGroupIDs = new LinkedHashSet<>();
    }
    this.defaultSecurityGroupIDs.add(defaultSecurityGroupIDsItem);
    return this;
  }

   /**
   * Security group IDs where all other hosts are placed. Mutually exclusive with CIDR.
   * @return defaultSecurityGroupIDs
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEFAULT_SECURITY_GROUP_I_DS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<String> getDefaultSecurityGroupIDs() {
    return defaultSecurityGroupIDs;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_DEFAULT_SECURITY_GROUP_I_DS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefaultSecurityGroupIDs(Set<String> defaultSecurityGroupIDs) {
    this.defaultSecurityGroupIDs = defaultSecurityGroupIDs;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GcpSecurityAccessRequest gcpSecurityAccessRequest = (GcpSecurityAccessRequest) o;
    return Objects.equals(this.securityGroupIdForKnox, gcpSecurityAccessRequest.securityGroupIdForKnox) &&
        Objects.equals(this.defaultSecurityGroupId, gcpSecurityAccessRequest.defaultSecurityGroupId) &&
        Objects.equals(this.securityGroupIDsForKnox, gcpSecurityAccessRequest.securityGroupIDsForKnox) &&
        Objects.equals(this.defaultSecurityGroupIDs, gcpSecurityAccessRequest.defaultSecurityGroupIDs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(securityGroupIdForKnox, defaultSecurityGroupId, securityGroupIDsForKnox, defaultSecurityGroupIDs);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GcpSecurityAccessRequest {\n");
    sb.append("    securityGroupIdForKnox: ").append(toIndentedString(securityGroupIdForKnox)).append("\n");
    sb.append("    defaultSecurityGroupId: ").append(toIndentedString(defaultSecurityGroupId)).append("\n");
    sb.append("    securityGroupIDsForKnox: ").append(toIndentedString(securityGroupIDsForKnox)).append("\n");
    sb.append("    defaultSecurityGroupIDs: ").append(toIndentedString(defaultSecurityGroupIDs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

