/*
 * Cloudera Environments Service
 * Cloudera Environments Service is a web service that manages cloud provider access.
 *
 * The version of the OpenAPI document: __API_VERSION__
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudera.thunderhead.service.environments2api.model;

import java.util.Objects;
import java.util.Arrays;
import com.cloudera.thunderhead.service.environments2api.model.RootDiskOptions;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Request object for FreeIpa root volume update.
 */
@JsonPropertyOrder({
  UpdateRootVolumeFreeipaRequest.JSON_PROPERTY_ENVIRONMENT_CRN,
  UpdateRootVolumeFreeipaRequest.JSON_PROPERTY_ROOT_DISK_OPTIONS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.5.0")
public class UpdateRootVolumeFreeipaRequest {
  public static final String JSON_PROPERTY_ENVIRONMENT_CRN = "environmentCrn";
  private String environmentCrn;

  public static final String JSON_PROPERTY_ROOT_DISK_OPTIONS = "rootDiskOptions";
  private RootDiskOptions rootDiskOptions;

  public UpdateRootVolumeFreeipaRequest() {
  }

  public UpdateRootVolumeFreeipaRequest environmentCrn(String environmentCrn) {
    
    this.environmentCrn = environmentCrn;
    return this;
  }

   /**
   * The CRN of the environment.
   * @return environmentCrn
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ENVIRONMENT_CRN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEnvironmentCrn() {
    return environmentCrn;
  }


  @JsonProperty(JSON_PROPERTY_ENVIRONMENT_CRN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEnvironmentCrn(String environmentCrn) {
    this.environmentCrn = environmentCrn;
  }


  public UpdateRootVolumeFreeipaRequest rootDiskOptions(RootDiskOptions rootDiskOptions) {
    
    this.rootDiskOptions = rootDiskOptions;
    return this;
  }

   /**
   * Get rootDiskOptions
   * @return rootDiskOptions
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ROOT_DISK_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RootDiskOptions getRootDiskOptions() {
    return rootDiskOptions;
  }


  @JsonProperty(JSON_PROPERTY_ROOT_DISK_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRootDiskOptions(RootDiskOptions rootDiskOptions) {
    this.rootDiskOptions = rootDiskOptions;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateRootVolumeFreeipaRequest updateRootVolumeFreeipaRequest = (UpdateRootVolumeFreeipaRequest) o;
    return Objects.equals(this.environmentCrn, updateRootVolumeFreeipaRequest.environmentCrn) &&
        Objects.equals(this.rootDiskOptions, updateRootVolumeFreeipaRequest.rootDiskOptions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(environmentCrn, rootDiskOptions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateRootVolumeFreeipaRequest {\n");
    sb.append("    environmentCrn: ").append(toIndentedString(environmentCrn)).append("\n");
    sb.append("    rootDiskOptions: ").append(toIndentedString(rootDiskOptions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

