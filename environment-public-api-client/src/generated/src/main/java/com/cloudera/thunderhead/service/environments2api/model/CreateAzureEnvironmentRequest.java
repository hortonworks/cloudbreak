/*
 * Cloudera Environments Service
 * Cloudera Environments Service is a web service that manages cloud provider access.
 *
 * The version of the OpenAPI document: __API_VERSION__
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudera.thunderhead.service.environments2api.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.cloudera.thunderhead.service.environments2api.model.AzureComputeClusterConfigurationRequest;
import com.cloudera.thunderhead.service.environments2api.model.AzureFreeIpaCreationRequest;
import com.cloudera.thunderhead.service.environments2api.model.AzureLogStorageRequest;
import com.cloudera.thunderhead.service.environments2api.model.CcmV2TlsType;
import com.cloudera.thunderhead.service.environments2api.model.CreateAzureEnvironmentRequestNewNetworkParams;
import com.cloudera.thunderhead.service.environments2api.model.CustomDockerRegistryRequest;
import com.cloudera.thunderhead.service.environments2api.model.DataServicesRequest;
import com.cloudera.thunderhead.service.environments2api.model.ExistingAzureNetworkRequest;
import com.cloudera.thunderhead.service.environments2api.model.FreeIpaImageRequest;
import com.cloudera.thunderhead.service.environments2api.model.SecurityAccessRequest;
import com.cloudera.thunderhead.service.environments2api.model.TagRequest;
import com.cloudera.thunderhead.service.environments2api.model.TunnelType;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Request object for a create Azure environment request.
 */
@JsonPropertyOrder({
  CreateAzureEnvironmentRequest.JSON_PROPERTY_ENVIRONMENT_NAME,
  CreateAzureEnvironmentRequest.JSON_PROPERTY_CREDENTIAL_NAME,
  CreateAzureEnvironmentRequest.JSON_PROPERTY_REGION,
  CreateAzureEnvironmentRequest.JSON_PROPERTY_PUBLIC_KEY,
  CreateAzureEnvironmentRequest.JSON_PROPERTY_SECURITY_ACCESS,
  CreateAzureEnvironmentRequest.JSON_PROPERTY_USE_PUBLIC_IP,
  CreateAzureEnvironmentRequest.JSON_PROPERTY_LOG_STORAGE,
  CreateAzureEnvironmentRequest.JSON_PROPERTY_EXISTING_NETWORK_PARAMS,
  CreateAzureEnvironmentRequest.JSON_PROPERTY_NEW_NETWORK_PARAMS,
  CreateAzureEnvironmentRequest.JSON_PROPERTY_DESCRIPTION,
  CreateAzureEnvironmentRequest.JSON_PROPERTY_ENABLE_TUNNEL,
  CreateAzureEnvironmentRequest.JSON_PROPERTY_TUNNEL_TYPE,
  CreateAzureEnvironmentRequest.JSON_PROPERTY_CCM_V2_TLS_TYPE,
  CreateAzureEnvironmentRequest.JSON_PROPERTY_ENABLE_WORKLOAD_ANALYTICS,
  CreateAzureEnvironmentRequest.JSON_PROPERTY_WORKLOAD_ANALYTICS,
  CreateAzureEnvironmentRequest.JSON_PROPERTY_REPORT_DEPLOYMENT_LOGS,
  CreateAzureEnvironmentRequest.JSON_PROPERTY_CLOUD_STORAGE_LOGGING,
  CreateAzureEnvironmentRequest.JSON_PROPERTY_FREE_IPA,
  CreateAzureEnvironmentRequest.JSON_PROPERTY_ENVIRONMENT_VERSION,
  CreateAzureEnvironmentRequest.JSON_PROPERTY_COMPUTE_CLUSTER_CONFIGURATION,
  CreateAzureEnvironmentRequest.JSON_PROPERTY_IMAGE,
  CreateAzureEnvironmentRequest.JSON_PROPERTY_TAGS,
  CreateAzureEnvironmentRequest.JSON_PROPERTY_PROXY_CONFIG_NAME,
  CreateAzureEnvironmentRequest.JSON_PROPERTY_RESOURCE_GROUP_NAME,
  CreateAzureEnvironmentRequest.JSON_PROPERTY_DEDICATED_STORAGE_ACCOUNT,
  CreateAzureEnvironmentRequest.JSON_PROPERTY_CREATE_PRIVATE_ENDPOINTS,
  CreateAzureEnvironmentRequest.JSON_PROPERTY_ENDPOINT_ACCESS_GATEWAY_SCHEME,
  CreateAzureEnvironmentRequest.JSON_PROPERTY_ENDPOINT_ACCESS_GATEWAY_SUBNET_IDS,
  CreateAzureEnvironmentRequest.JSON_PROPERTY_ENCRYPTION_AT_HOST,
  CreateAzureEnvironmentRequest.JSON_PROPERTY_USER_MANAGED_IDENTITY,
  CreateAzureEnvironmentRequest.JSON_PROPERTY_ENCRYPTION_USER_MANAGED_IDENTITY,
  CreateAzureEnvironmentRequest.JSON_PROPERTY_ENCRYPTION_KEY_URL,
  CreateAzureEnvironmentRequest.JSON_PROPERTY_ENCRYPTION_KEY_RESOURCE_GROUP_NAME,
  CreateAzureEnvironmentRequest.JSON_PROPERTY_ID_BROKER_MAPPING_SOURCE,
  CreateAzureEnvironmentRequest.JSON_PROPERTY_ENABLE_LOAD_BALANCERS,
  CreateAzureEnvironmentRequest.JSON_PROPERTY_ENABLE_OUTBOUND_LOAD_BALANCER,
  CreateAzureEnvironmentRequest.JSON_PROPERTY_AVAILABILITY_ZONES,
  CreateAzureEnvironmentRequest.JSON_PROPERTY_FLEXIBLE_SERVER_SUBNET_IDS,
  CreateAzureEnvironmentRequest.JSON_PROPERTY_DATA_SERVICES,
  CreateAzureEnvironmentRequest.JSON_PROPERTY_CUSTOM_DOCKER_REGISTRY
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.5.0")
public class CreateAzureEnvironmentRequest {
  public static final String JSON_PROPERTY_ENVIRONMENT_NAME = "environmentName";
  private String environmentName;

  public static final String JSON_PROPERTY_CREDENTIAL_NAME = "credentialName";
  private String credentialName;

  public static final String JSON_PROPERTY_REGION = "region";
  private String region;

  public static final String JSON_PROPERTY_PUBLIC_KEY = "publicKey";
  private String publicKey;

  public static final String JSON_PROPERTY_SECURITY_ACCESS = "securityAccess";
  private SecurityAccessRequest securityAccess;

  public static final String JSON_PROPERTY_USE_PUBLIC_IP = "usePublicIp";
  private Boolean usePublicIp;

  public static final String JSON_PROPERTY_LOG_STORAGE = "logStorage";
  private AzureLogStorageRequest logStorage;

  public static final String JSON_PROPERTY_EXISTING_NETWORK_PARAMS = "existingNetworkParams";
  private ExistingAzureNetworkRequest existingNetworkParams;

  public static final String JSON_PROPERTY_NEW_NETWORK_PARAMS = "newNetworkParams";
  private CreateAzureEnvironmentRequestNewNetworkParams newNetworkParams;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_ENABLE_TUNNEL = "enableTunnel";
  private Boolean enableTunnel = true;

  public static final String JSON_PROPERTY_TUNNEL_TYPE = "tunnelType";
  private TunnelType tunnelType;

  public static final String JSON_PROPERTY_CCM_V2_TLS_TYPE = "ccmV2TlsType";
  private CcmV2TlsType ccmV2TlsType;

  public static final String JSON_PROPERTY_ENABLE_WORKLOAD_ANALYTICS = "enableWorkloadAnalytics";
  private Boolean enableWorkloadAnalytics;

  public static final String JSON_PROPERTY_WORKLOAD_ANALYTICS = "workloadAnalytics";
  private Boolean workloadAnalytics;

  public static final String JSON_PROPERTY_REPORT_DEPLOYMENT_LOGS = "reportDeploymentLogs";
  private Boolean reportDeploymentLogs;

  public static final String JSON_PROPERTY_CLOUD_STORAGE_LOGGING = "cloudStorageLogging";
  private Boolean cloudStorageLogging;

  public static final String JSON_PROPERTY_FREE_IPA = "freeIpa";
  private AzureFreeIpaCreationRequest freeIpa;

  public static final String JSON_PROPERTY_ENVIRONMENT_VERSION = "environmentVersion";
  private String environmentVersion;

  public static final String JSON_PROPERTY_COMPUTE_CLUSTER_CONFIGURATION = "computeClusterConfiguration";
  private AzureComputeClusterConfigurationRequest computeClusterConfiguration;

  public static final String JSON_PROPERTY_IMAGE = "image";
  private FreeIpaImageRequest image;

  public static final String JSON_PROPERTY_TAGS = "tags";
  private List<TagRequest> tags = new ArrayList<>();

  public static final String JSON_PROPERTY_PROXY_CONFIG_NAME = "proxyConfigName";
  private String proxyConfigName;

  public static final String JSON_PROPERTY_RESOURCE_GROUP_NAME = "resourceGroupName";
  private String resourceGroupName;

  public static final String JSON_PROPERTY_DEDICATED_STORAGE_ACCOUNT = "dedicatedStorageAccount";
  private Boolean dedicatedStorageAccount;

  public static final String JSON_PROPERTY_CREATE_PRIVATE_ENDPOINTS = "createPrivateEndpoints";
  private Boolean createPrivateEndpoints;

  /**
   * The scheme for the endpoint gateway. PUBLIC creates an external endpoint that can be accessed over the Internet. Defaults to PRIVATE which restricts the traffic to be internal to the VNet.
   */
  public enum EndpointAccessGatewaySchemeEnum {
    PUBLIC("PUBLIC"),
    
    PRIVATE("PRIVATE");

    private String value;

    EndpointAccessGatewaySchemeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static EndpointAccessGatewaySchemeEnum fromValue(String value) {
      for (EndpointAccessGatewaySchemeEnum b : EndpointAccessGatewaySchemeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ENDPOINT_ACCESS_GATEWAY_SCHEME = "endpointAccessGatewayScheme";
  private EndpointAccessGatewaySchemeEnum endpointAccessGatewayScheme;

  public static final String JSON_PROPERTY_ENDPOINT_ACCESS_GATEWAY_SUBNET_IDS = "endpointAccessGatewaySubnetIds";
  private List<String> endpointAccessGatewaySubnetIds = new ArrayList<>();

  public static final String JSON_PROPERTY_ENCRYPTION_AT_HOST = "encryptionAtHost";
  private Boolean encryptionAtHost;

  public static final String JSON_PROPERTY_USER_MANAGED_IDENTITY = "userManagedIdentity";
  private String userManagedIdentity;

  public static final String JSON_PROPERTY_ENCRYPTION_USER_MANAGED_IDENTITY = "encryptionUserManagedIdentity";
  private String encryptionUserManagedIdentity;

  public static final String JSON_PROPERTY_ENCRYPTION_KEY_URL = "encryptionKeyUrl";
  private String encryptionKeyUrl;

  public static final String JSON_PROPERTY_ENCRYPTION_KEY_RESOURCE_GROUP_NAME = "encryptionKeyResourceGroupName";
  private String encryptionKeyResourceGroupName;

  public static final String JSON_PROPERTY_ID_BROKER_MAPPING_SOURCE = "idBrokerMappingSource";
  private String idBrokerMappingSource;

  public static final String JSON_PROPERTY_ENABLE_LOAD_BALANCERS = "enableLoadBalancers";
  private Boolean enableLoadBalancers;

  public static final String JSON_PROPERTY_ENABLE_OUTBOUND_LOAD_BALANCER = "enableOutboundLoadBalancer";
  private Boolean enableOutboundLoadBalancer;

  public static final String JSON_PROPERTY_AVAILABILITY_ZONES = "availabilityZones";
  private List<String> availabilityZones = new ArrayList<>();

  public static final String JSON_PROPERTY_FLEXIBLE_SERVER_SUBNET_IDS = "flexibleServerSubnetIds";
  private List<String> flexibleServerSubnetIds = new ArrayList<>();

  public static final String JSON_PROPERTY_DATA_SERVICES = "dataServices";
  private DataServicesRequest dataServices;

  public static final String JSON_PROPERTY_CUSTOM_DOCKER_REGISTRY = "customDockerRegistry";
  private CustomDockerRegistryRequest customDockerRegistry;

  public CreateAzureEnvironmentRequest() { 
  }

  public CreateAzureEnvironmentRequest environmentName(String environmentName) {
    this.environmentName = environmentName;
    return this;
  }

   /**
   * The name of the environment. Must contain only lowercase letters, numbers and hyphens.
   * @return environmentName
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ENVIRONMENT_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEnvironmentName() {
    return environmentName;
  }


  @JsonProperty(JSON_PROPERTY_ENVIRONMENT_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEnvironmentName(String environmentName) {
    this.environmentName = environmentName;
  }


  public CreateAzureEnvironmentRequest credentialName(String credentialName) {
    this.credentialName = credentialName;
    return this;
  }

   /**
   * Name of the credential to use for the environment.
   * @return credentialName
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREDENTIAL_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCredentialName() {
    return credentialName;
  }


  @JsonProperty(JSON_PROPERTY_CREDENTIAL_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCredentialName(String credentialName) {
    this.credentialName = credentialName;
  }


  public CreateAzureEnvironmentRequest region(String region) {
    this.region = region;
    return this;
  }

   /**
   * The region of the environment.
   * @return region
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REGION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRegion() {
    return region;
  }


  @JsonProperty(JSON_PROPERTY_REGION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRegion(String region) {
    this.region = region;
  }


  public CreateAzureEnvironmentRequest publicKey(String publicKey) {
    this.publicKey = publicKey;
    return this;
  }

   /**
   * Public SSH key string. The associated private key can be used to get root-level access to the Data Lake instance and Data Hub cluster instances.
   * @return publicKey
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PUBLIC_KEY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPublicKey() {
    return publicKey;
  }


  @JsonProperty(JSON_PROPERTY_PUBLIC_KEY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPublicKey(String publicKey) {
    this.publicKey = publicKey;
  }


  public CreateAzureEnvironmentRequest securityAccess(SecurityAccessRequest securityAccess) {
    this.securityAccess = securityAccess;
    return this;
  }

   /**
   * Get securityAccess
   * @return securityAccess
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SECURITY_ACCESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SecurityAccessRequest getSecurityAccess() {
    return securityAccess;
  }


  @JsonProperty(JSON_PROPERTY_SECURITY_ACCESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSecurityAccess(SecurityAccessRequest securityAccess) {
    this.securityAccess = securityAccess;
  }


  public CreateAzureEnvironmentRequest usePublicIp(Boolean usePublicIp) {
    this.usePublicIp = usePublicIp;
    return this;
  }

   /**
   * Whether to associate public ip&#39;s to the resources within the network.
   * @return usePublicIp
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_USE_PUBLIC_IP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getUsePublicIp() {
    return usePublicIp;
  }


  @JsonProperty(JSON_PROPERTY_USE_PUBLIC_IP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUsePublicIp(Boolean usePublicIp) {
    this.usePublicIp = usePublicIp;
  }


  public CreateAzureEnvironmentRequest logStorage(AzureLogStorageRequest logStorage) {
    this.logStorage = logStorage;
    return this;
  }

   /**
   * Get logStorage
   * @return logStorage
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LOG_STORAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AzureLogStorageRequest getLogStorage() {
    return logStorage;
  }


  @JsonProperty(JSON_PROPERTY_LOG_STORAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLogStorage(AzureLogStorageRequest logStorage) {
    this.logStorage = logStorage;
  }


  public CreateAzureEnvironmentRequest existingNetworkParams(ExistingAzureNetworkRequest existingNetworkParams) {
    this.existingNetworkParams = existingNetworkParams;
    return this;
  }

   /**
   * Get existingNetworkParams
   * @return existingNetworkParams
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXISTING_NETWORK_PARAMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ExistingAzureNetworkRequest getExistingNetworkParams() {
    return existingNetworkParams;
  }


  @JsonProperty(JSON_PROPERTY_EXISTING_NETWORK_PARAMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExistingNetworkParams(ExistingAzureNetworkRequest existingNetworkParams) {
    this.existingNetworkParams = existingNetworkParams;
  }


  public CreateAzureEnvironmentRequest newNetworkParams(CreateAzureEnvironmentRequestNewNetworkParams newNetworkParams) {
    this.newNetworkParams = newNetworkParams;
    return this;
  }

   /**
   * Get newNetworkParams
   * @return newNetworkParams
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NEW_NETWORK_PARAMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreateAzureEnvironmentRequestNewNetworkParams getNewNetworkParams() {
    return newNetworkParams;
  }


  @JsonProperty(JSON_PROPERTY_NEW_NETWORK_PARAMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNewNetworkParams(CreateAzureEnvironmentRequestNewNetworkParams newNetworkParams) {
    this.newNetworkParams = newNetworkParams;
  }


  public CreateAzureEnvironmentRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * An description of the environment.
   * @return description
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public CreateAzureEnvironmentRequest enableTunnel(Boolean enableTunnel) {
    this.enableTunnel = enableTunnel;
    return this;
  }

   /**
   * Whether to enable SSH tunneling for the environment.
   * @return enableTunnel
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_TUNNEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnableTunnel() {
    return enableTunnel;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_TUNNEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableTunnel(Boolean enableTunnel) {
    this.enableTunnel = enableTunnel;
  }


  public CreateAzureEnvironmentRequest tunnelType(TunnelType tunnelType) {
    this.tunnelType = tunnelType;
    return this;
  }

   /**
   * Get tunnelType
   * @return tunnelType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TUNNEL_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TunnelType getTunnelType() {
    return tunnelType;
  }


  @JsonProperty(JSON_PROPERTY_TUNNEL_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTunnelType(TunnelType tunnelType) {
    this.tunnelType = tunnelType;
  }


  public CreateAzureEnvironmentRequest ccmV2TlsType(CcmV2TlsType ccmV2TlsType) {
    this.ccmV2TlsType = ccmV2TlsType;
    return this;
  }

   /**
   * Get ccmV2TlsType
   * @return ccmV2TlsType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CCM_V2_TLS_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CcmV2TlsType getCcmV2TlsType() {
    return ccmV2TlsType;
  }


  @JsonProperty(JSON_PROPERTY_CCM_V2_TLS_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCcmV2TlsType(CcmV2TlsType ccmV2TlsType) {
    this.ccmV2TlsType = ccmV2TlsType;
  }


  public CreateAzureEnvironmentRequest enableWorkloadAnalytics(Boolean enableWorkloadAnalytics) {
    this.enableWorkloadAnalytics = enableWorkloadAnalytics;
    return this;
  }

   /**
   * When this is enabled, diagnostic information about job and query execution is sent to Workload Manager for Data Hub clusters created within this environment.
   * @return enableWorkloadAnalytics
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_WORKLOAD_ANALYTICS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnableWorkloadAnalytics() {
    return enableWorkloadAnalytics;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_WORKLOAD_ANALYTICS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableWorkloadAnalytics(Boolean enableWorkloadAnalytics) {
    this.enableWorkloadAnalytics = enableWorkloadAnalytics;
  }


  public CreateAzureEnvironmentRequest workloadAnalytics(Boolean workloadAnalytics) {
    this.workloadAnalytics = workloadAnalytics;
    return this;
  }

   /**
   * When this is enabled, diagnostic information about job and query execution is sent to Workload Manager for Data Hub clusters created within this environment.
   * @return workloadAnalytics
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WORKLOAD_ANALYTICS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getWorkloadAnalytics() {
    return workloadAnalytics;
  }


  @JsonProperty(JSON_PROPERTY_WORKLOAD_ANALYTICS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWorkloadAnalytics(Boolean workloadAnalytics) {
    this.workloadAnalytics = workloadAnalytics;
  }


  public CreateAzureEnvironmentRequest reportDeploymentLogs(Boolean reportDeploymentLogs) {
    this.reportDeploymentLogs = reportDeploymentLogs;
    return this;
  }

   /**
   * When true, this will report additional diagnostic information back to Cloudera.
   * @return reportDeploymentLogs
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REPORT_DEPLOYMENT_LOGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getReportDeploymentLogs() {
    return reportDeploymentLogs;
  }


  @JsonProperty(JSON_PROPERTY_REPORT_DEPLOYMENT_LOGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReportDeploymentLogs(Boolean reportDeploymentLogs) {
    this.reportDeploymentLogs = reportDeploymentLogs;
  }


  public CreateAzureEnvironmentRequest cloudStorageLogging(Boolean cloudStorageLogging) {
    this.cloudStorageLogging = cloudStorageLogging;
    return this;
  }

   /**
   * When this is enabled, logs from the VMs will end up on the pre-defined cloud storage (enabled by default).
   * @return cloudStorageLogging
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CLOUD_STORAGE_LOGGING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getCloudStorageLogging() {
    return cloudStorageLogging;
  }


  @JsonProperty(JSON_PROPERTY_CLOUD_STORAGE_LOGGING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCloudStorageLogging(Boolean cloudStorageLogging) {
    this.cloudStorageLogging = cloudStorageLogging;
  }


  public CreateAzureEnvironmentRequest freeIpa(AzureFreeIpaCreationRequest freeIpa) {
    this.freeIpa = freeIpa;
    return this;
  }

   /**
   * Get freeIpa
   * @return freeIpa
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FREE_IPA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AzureFreeIpaCreationRequest getFreeIpa() {
    return freeIpa;
  }


  @JsonProperty(JSON_PROPERTY_FREE_IPA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFreeIpa(AzureFreeIpaCreationRequest freeIpa) {
    this.freeIpa = freeIpa;
  }


  public CreateAzureEnvironmentRequest environmentVersion(String environmentVersion) {
    this.environmentVersion = environmentVersion;
    return this;
  }

   /**
   * The environment version can be defined in this parameter. Valid values are v1,v2. Default is v1 at the moment.
   * @return environmentVersion
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENVIRONMENT_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEnvironmentVersion() {
    return environmentVersion;
  }


  @JsonProperty(JSON_PROPERTY_ENVIRONMENT_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnvironmentVersion(String environmentVersion) {
    this.environmentVersion = environmentVersion;
  }


  public CreateAzureEnvironmentRequest computeClusterConfiguration(AzureComputeClusterConfigurationRequest computeClusterConfiguration) {
    this.computeClusterConfiguration = computeClusterConfiguration;
    return this;
  }

   /**
   * Get computeClusterConfiguration
   * @return computeClusterConfiguration
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMPUTE_CLUSTER_CONFIGURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AzureComputeClusterConfigurationRequest getComputeClusterConfiguration() {
    return computeClusterConfiguration;
  }


  @JsonProperty(JSON_PROPERTY_COMPUTE_CLUSTER_CONFIGURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setComputeClusterConfiguration(AzureComputeClusterConfigurationRequest computeClusterConfiguration) {
    this.computeClusterConfiguration = computeClusterConfiguration;
  }


  public CreateAzureEnvironmentRequest image(FreeIpaImageRequest image) {
    this.image = image;
    return this;
  }

   /**
   * Get image
   * @return image
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FreeIpaImageRequest getImage() {
    return image;
  }


  @JsonProperty(JSON_PROPERTY_IMAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImage(FreeIpaImageRequest image) {
    this.image = image;
  }


  public CreateAzureEnvironmentRequest tags(List<TagRequest> tags) {
    this.tags = tags;
    return this;
  }

  public CreateAzureEnvironmentRequest addTagsItem(TagRequest tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Tags associated with the resources.
   * @return tags
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<TagRequest> getTags() {
    return tags;
  }


  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTags(List<TagRequest> tags) {
    this.tags = tags;
  }


  public CreateAzureEnvironmentRequest proxyConfigName(String proxyConfigName) {
    this.proxyConfigName = proxyConfigName;
    return this;
  }

   /**
   * Name of the proxy config to use for the environment.
   * @return proxyConfigName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROXY_CONFIG_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProxyConfigName() {
    return proxyConfigName;
  }


  @JsonProperty(JSON_PROPERTY_PROXY_CONFIG_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProxyConfigName(String proxyConfigName) {
    this.proxyConfigName = proxyConfigName;
  }


  public CreateAzureEnvironmentRequest resourceGroupName(String resourceGroupName) {
    this.resourceGroupName = resourceGroupName;
    return this;
  }

   /**
   * Name of an existing Azure resource group to be used for the environment. If it is not specified then new resource groups will be generated.
   * @return resourceGroupName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RESOURCE_GROUP_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getResourceGroupName() {
    return resourceGroupName;
  }


  @JsonProperty(JSON_PROPERTY_RESOURCE_GROUP_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResourceGroupName(String resourceGroupName) {
    this.resourceGroupName = resourceGroupName;
  }


  public CreateAzureEnvironmentRequest dedicatedStorageAccount(Boolean dedicatedStorageAccount) {
    this.dedicatedStorageAccount = dedicatedStorageAccount;
    return this;
  }

   /**
   * When this is enabled, a dedicated storage account will be used in a pre-defined resource group for storing the images in each region.
   * @return dedicatedStorageAccount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEDICATED_STORAGE_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDedicatedStorageAccount() {
    return dedicatedStorageAccount;
  }


  @JsonProperty(JSON_PROPERTY_DEDICATED_STORAGE_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDedicatedStorageAccount(Boolean dedicatedStorageAccount) {
    this.dedicatedStorageAccount = dedicatedStorageAccount;
  }


  public CreateAzureEnvironmentRequest createPrivateEndpoints(Boolean createPrivateEndpoints) {
    this.createPrivateEndpoints = createPrivateEndpoints;
    return this;
  }

   /**
   * When this is enabled, then Azure Postgres will be configured with Private Endpoint and a Private DNS Zone. When this is disabled, then Azure Service Endpoints will be created. The default value is disabled.
   * @return createPrivateEndpoints
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_PRIVATE_ENDPOINTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getCreatePrivateEndpoints() {
    return createPrivateEndpoints;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_PRIVATE_ENDPOINTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatePrivateEndpoints(Boolean createPrivateEndpoints) {
    this.createPrivateEndpoints = createPrivateEndpoints;
  }


  public CreateAzureEnvironmentRequest endpointAccessGatewayScheme(EndpointAccessGatewaySchemeEnum endpointAccessGatewayScheme) {
    this.endpointAccessGatewayScheme = endpointAccessGatewayScheme;
    return this;
  }

   /**
   * The scheme for the endpoint gateway. PUBLIC creates an external endpoint that can be accessed over the Internet. Defaults to PRIVATE which restricts the traffic to be internal to the VNet.
   * @return endpointAccessGatewayScheme
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENDPOINT_ACCESS_GATEWAY_SCHEME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EndpointAccessGatewaySchemeEnum getEndpointAccessGatewayScheme() {
    return endpointAccessGatewayScheme;
  }


  @JsonProperty(JSON_PROPERTY_ENDPOINT_ACCESS_GATEWAY_SCHEME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndpointAccessGatewayScheme(EndpointAccessGatewaySchemeEnum endpointAccessGatewayScheme) {
    this.endpointAccessGatewayScheme = endpointAccessGatewayScheme;
  }


  public CreateAzureEnvironmentRequest endpointAccessGatewaySubnetIds(List<String> endpointAccessGatewaySubnetIds) {
    this.endpointAccessGatewaySubnetIds = endpointAccessGatewaySubnetIds;
    return this;
  }

  public CreateAzureEnvironmentRequest addEndpointAccessGatewaySubnetIdsItem(String endpointAccessGatewaySubnetIdsItem) {
    if (this.endpointAccessGatewaySubnetIds == null) {
      this.endpointAccessGatewaySubnetIds = new ArrayList<>();
    }
    this.endpointAccessGatewaySubnetIds.add(endpointAccessGatewaySubnetIdsItem);
    return this;
  }

   /**
   * The subnets to use for endpoint access gateway.
   * @return endpointAccessGatewaySubnetIds
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENDPOINT_ACCESS_GATEWAY_SUBNET_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getEndpointAccessGatewaySubnetIds() {
    return endpointAccessGatewaySubnetIds;
  }


  @JsonProperty(JSON_PROPERTY_ENDPOINT_ACCESS_GATEWAY_SUBNET_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndpointAccessGatewaySubnetIds(List<String> endpointAccessGatewaySubnetIds) {
    this.endpointAccessGatewaySubnetIds = endpointAccessGatewaySubnetIds;
  }


  public CreateAzureEnvironmentRequest encryptionAtHost(Boolean encryptionAtHost) {
    this.encryptionAtHost = encryptionAtHost;
    return this;
  }

   /**
   * When this is enabled, we will provision resources with host encrypted true flag.
   * @return encryptionAtHost
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENCRYPTION_AT_HOST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEncryptionAtHost() {
    return encryptionAtHost;
  }


  @JsonProperty(JSON_PROPERTY_ENCRYPTION_AT_HOST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEncryptionAtHost(Boolean encryptionAtHost) {
    this.encryptionAtHost = encryptionAtHost;
  }


  public CreateAzureEnvironmentRequest userManagedIdentity(String userManagedIdentity) {
    this.userManagedIdentity = userManagedIdentity;
    return this;
  }

   /**
   * User managed identity for encryption. (deprecated)
   * @return userManagedIdentity
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_MANAGED_IDENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUserManagedIdentity() {
    return userManagedIdentity;
  }


  @JsonProperty(JSON_PROPERTY_USER_MANAGED_IDENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserManagedIdentity(String userManagedIdentity) {
    this.userManagedIdentity = userManagedIdentity;
  }


  public CreateAzureEnvironmentRequest encryptionUserManagedIdentity(String encryptionUserManagedIdentity) {
    this.encryptionUserManagedIdentity = encryptionUserManagedIdentity;
    return this;
  }

   /**
   * User managed identity for encryption.
   * @return encryptionUserManagedIdentity
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENCRYPTION_USER_MANAGED_IDENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEncryptionUserManagedIdentity() {
    return encryptionUserManagedIdentity;
  }


  @JsonProperty(JSON_PROPERTY_ENCRYPTION_USER_MANAGED_IDENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEncryptionUserManagedIdentity(String encryptionUserManagedIdentity) {
    this.encryptionUserManagedIdentity = encryptionUserManagedIdentity;
  }


  public CreateAzureEnvironmentRequest encryptionKeyUrl(String encryptionKeyUrl) {
    this.encryptionKeyUrl = encryptionKeyUrl;
    return this;
  }

   /**
   * URL of the key which will be used to encrypt the Azure Managed Disks, if entitlement has been granted.
   * @return encryptionKeyUrl
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENCRYPTION_KEY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEncryptionKeyUrl() {
    return encryptionKeyUrl;
  }


  @JsonProperty(JSON_PROPERTY_ENCRYPTION_KEY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEncryptionKeyUrl(String encryptionKeyUrl) {
    this.encryptionKeyUrl = encryptionKeyUrl;
  }


  public CreateAzureEnvironmentRequest encryptionKeyResourceGroupName(String encryptionKeyResourceGroupName) {
    this.encryptionKeyResourceGroupName = encryptionKeyResourceGroupName;
    return this;
  }

   /**
   * Name of the existing Azure resource group hosting the Azure Key Vault containing customer managed key which will be used to encrypt the Azure Managed Disks. It is required only when the entitlement is granted and the resource group of the key vault is different from the resource group in which the environment is to be created. Omitting it implies that, the key vault containing the encryption key is present in the same resource group where the environment would be created.
   * @return encryptionKeyResourceGroupName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENCRYPTION_KEY_RESOURCE_GROUP_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEncryptionKeyResourceGroupName() {
    return encryptionKeyResourceGroupName;
  }


  @JsonProperty(JSON_PROPERTY_ENCRYPTION_KEY_RESOURCE_GROUP_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEncryptionKeyResourceGroupName(String encryptionKeyResourceGroupName) {
    this.encryptionKeyResourceGroupName = encryptionKeyResourceGroupName;
  }


  public CreateAzureEnvironmentRequest idBrokerMappingSource(String idBrokerMappingSource) {
    this.idBrokerMappingSource = idBrokerMappingSource;
    return this;
  }

   /**
   * This is an optional field. This is for QE testing purposes and internal use only.
   * @return idBrokerMappingSource
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID_BROKER_MAPPING_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIdBrokerMappingSource() {
    return idBrokerMappingSource;
  }


  @JsonProperty(JSON_PROPERTY_ID_BROKER_MAPPING_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIdBrokerMappingSource(String idBrokerMappingSource) {
    this.idBrokerMappingSource = idBrokerMappingSource;
  }


  public CreateAzureEnvironmentRequest enableLoadBalancers(Boolean enableLoadBalancers) {
    this.enableLoadBalancers = enableLoadBalancers;
    return this;
  }

   /**
   * Whether or not Knox and Oozie load balancers are enabled for all Data Lakes and Data Hubs in the environment. This will override the load balancer creation mode at the cluster level. The default behavior is to create load balancers on all Data Lakes, and on HA Data Hubs.
   * @return enableLoadBalancers
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_LOAD_BALANCERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnableLoadBalancers() {
    return enableLoadBalancers;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_LOAD_BALANCERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableLoadBalancers(Boolean enableLoadBalancers) {
    this.enableLoadBalancers = enableLoadBalancers;
  }


  public CreateAzureEnvironmentRequest enableOutboundLoadBalancer(Boolean enableOutboundLoadBalancer) {
    this.enableOutboundLoadBalancer = enableOutboundLoadBalancer;
    return this;
  }

   /**
   * Whether or not outbound load balancers should be created for Azure environments. The default behavior is to not create the outbound load balancer.
   * @return enableOutboundLoadBalancer
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_OUTBOUND_LOAD_BALANCER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnableOutboundLoadBalancer() {
    return enableOutboundLoadBalancer;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_OUTBOUND_LOAD_BALANCER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableOutboundLoadBalancer(Boolean enableOutboundLoadBalancer) {
    this.enableOutboundLoadBalancer = enableOutboundLoadBalancer;
  }


  public CreateAzureEnvironmentRequest availabilityZones(List<String> availabilityZones) {
    this.availabilityZones = availabilityZones;
    return this;
  }

  public CreateAzureEnvironmentRequest addAvailabilityZonesItem(String availabilityZonesItem) {
    if (this.availabilityZones == null) {
      this.availabilityZones = new ArrayList<>();
    }
    this.availabilityZones.add(availabilityZonesItem);
    return this;
  }

   /**
   * The zones of the environment in the given region.
   * @return availabilityZones
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVAILABILITY_ZONES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getAvailabilityZones() {
    return availabilityZones;
  }


  @JsonProperty(JSON_PROPERTY_AVAILABILITY_ZONES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvailabilityZones(List<String> availabilityZones) {
    this.availabilityZones = availabilityZones;
  }


  public CreateAzureEnvironmentRequest flexibleServerSubnetIds(List<String> flexibleServerSubnetIds) {
    this.flexibleServerSubnetIds = flexibleServerSubnetIds;
    return this;
  }

  public CreateAzureEnvironmentRequest addFlexibleServerSubnetIdsItem(String flexibleServerSubnetIdsItem) {
    if (this.flexibleServerSubnetIds == null) {
      this.flexibleServerSubnetIds = new ArrayList<>();
    }
    this.flexibleServerSubnetIds.add(flexibleServerSubnetIdsItem);
    return this;
  }

   /**
   * The subnets delegated for Flexible Server database. Accepts either the name or the full resource id.
   * @return flexibleServerSubnetIds
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FLEXIBLE_SERVER_SUBNET_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getFlexibleServerSubnetIds() {
    return flexibleServerSubnetIds;
  }


  @JsonProperty(JSON_PROPERTY_FLEXIBLE_SERVER_SUBNET_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFlexibleServerSubnetIds(List<String> flexibleServerSubnetIds) {
    this.flexibleServerSubnetIds = flexibleServerSubnetIds;
  }


  public CreateAzureEnvironmentRequest dataServices(DataServicesRequest dataServices) {
    this.dataServices = dataServices;
    return this;
  }

   /**
   * Get dataServices
   * @return dataServices
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATA_SERVICES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DataServicesRequest getDataServices() {
    return dataServices;
  }


  @JsonProperty(JSON_PROPERTY_DATA_SERVICES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDataServices(DataServicesRequest dataServices) {
    this.dataServices = dataServices;
  }


  public CreateAzureEnvironmentRequest customDockerRegistry(CustomDockerRegistryRequest customDockerRegistry) {
    this.customDockerRegistry = customDockerRegistry;
    return this;
  }

   /**
   * Get customDockerRegistry
   * @return customDockerRegistry
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CUSTOM_DOCKER_REGISTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CustomDockerRegistryRequest getCustomDockerRegistry() {
    return customDockerRegistry;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOM_DOCKER_REGISTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomDockerRegistry(CustomDockerRegistryRequest customDockerRegistry) {
    this.customDockerRegistry = customDockerRegistry;
  }


  /**
   * Return true if this CreateAzureEnvironmentRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateAzureEnvironmentRequest createAzureEnvironmentRequest = (CreateAzureEnvironmentRequest) o;
    return Objects.equals(this.environmentName, createAzureEnvironmentRequest.environmentName) &&
        Objects.equals(this.credentialName, createAzureEnvironmentRequest.credentialName) &&
        Objects.equals(this.region, createAzureEnvironmentRequest.region) &&
        Objects.equals(this.publicKey, createAzureEnvironmentRequest.publicKey) &&
        Objects.equals(this.securityAccess, createAzureEnvironmentRequest.securityAccess) &&
        Objects.equals(this.usePublicIp, createAzureEnvironmentRequest.usePublicIp) &&
        Objects.equals(this.logStorage, createAzureEnvironmentRequest.logStorage) &&
        Objects.equals(this.existingNetworkParams, createAzureEnvironmentRequest.existingNetworkParams) &&
        Objects.equals(this.newNetworkParams, createAzureEnvironmentRequest.newNetworkParams) &&
        Objects.equals(this.description, createAzureEnvironmentRequest.description) &&
        Objects.equals(this.enableTunnel, createAzureEnvironmentRequest.enableTunnel) &&
        Objects.equals(this.tunnelType, createAzureEnvironmentRequest.tunnelType) &&
        Objects.equals(this.ccmV2TlsType, createAzureEnvironmentRequest.ccmV2TlsType) &&
        Objects.equals(this.enableWorkloadAnalytics, createAzureEnvironmentRequest.enableWorkloadAnalytics) &&
        Objects.equals(this.workloadAnalytics, createAzureEnvironmentRequest.workloadAnalytics) &&
        Objects.equals(this.reportDeploymentLogs, createAzureEnvironmentRequest.reportDeploymentLogs) &&
        Objects.equals(this.cloudStorageLogging, createAzureEnvironmentRequest.cloudStorageLogging) &&
        Objects.equals(this.freeIpa, createAzureEnvironmentRequest.freeIpa) &&
        Objects.equals(this.environmentVersion, createAzureEnvironmentRequest.environmentVersion) &&
        Objects.equals(this.computeClusterConfiguration, createAzureEnvironmentRequest.computeClusterConfiguration) &&
        Objects.equals(this.image, createAzureEnvironmentRequest.image) &&
        Objects.equals(this.tags, createAzureEnvironmentRequest.tags) &&
        Objects.equals(this.proxyConfigName, createAzureEnvironmentRequest.proxyConfigName) &&
        Objects.equals(this.resourceGroupName, createAzureEnvironmentRequest.resourceGroupName) &&
        Objects.equals(this.dedicatedStorageAccount, createAzureEnvironmentRequest.dedicatedStorageAccount) &&
        Objects.equals(this.createPrivateEndpoints, createAzureEnvironmentRequest.createPrivateEndpoints) &&
        Objects.equals(this.endpointAccessGatewayScheme, createAzureEnvironmentRequest.endpointAccessGatewayScheme) &&
        Objects.equals(this.endpointAccessGatewaySubnetIds, createAzureEnvironmentRequest.endpointAccessGatewaySubnetIds) &&
        Objects.equals(this.encryptionAtHost, createAzureEnvironmentRequest.encryptionAtHost) &&
        Objects.equals(this.userManagedIdentity, createAzureEnvironmentRequest.userManagedIdentity) &&
        Objects.equals(this.encryptionUserManagedIdentity, createAzureEnvironmentRequest.encryptionUserManagedIdentity) &&
        Objects.equals(this.encryptionKeyUrl, createAzureEnvironmentRequest.encryptionKeyUrl) &&
        Objects.equals(this.encryptionKeyResourceGroupName, createAzureEnvironmentRequest.encryptionKeyResourceGroupName) &&
        Objects.equals(this.idBrokerMappingSource, createAzureEnvironmentRequest.idBrokerMappingSource) &&
        Objects.equals(this.enableLoadBalancers, createAzureEnvironmentRequest.enableLoadBalancers) &&
        Objects.equals(this.enableOutboundLoadBalancer, createAzureEnvironmentRequest.enableOutboundLoadBalancer) &&
        Objects.equals(this.availabilityZones, createAzureEnvironmentRequest.availabilityZones) &&
        Objects.equals(this.flexibleServerSubnetIds, createAzureEnvironmentRequest.flexibleServerSubnetIds) &&
        Objects.equals(this.dataServices, createAzureEnvironmentRequest.dataServices) &&
        Objects.equals(this.customDockerRegistry, createAzureEnvironmentRequest.customDockerRegistry);
  }

  @Override
  public int hashCode() {
    return Objects.hash(environmentName, credentialName, region, publicKey, securityAccess, usePublicIp, logStorage, existingNetworkParams, newNetworkParams, description, enableTunnel, tunnelType, ccmV2TlsType, enableWorkloadAnalytics, workloadAnalytics, reportDeploymentLogs, cloudStorageLogging, freeIpa, environmentVersion, computeClusterConfiguration, image, tags, proxyConfigName, resourceGroupName, dedicatedStorageAccount, createPrivateEndpoints, endpointAccessGatewayScheme, endpointAccessGatewaySubnetIds, encryptionAtHost, userManagedIdentity, encryptionUserManagedIdentity, encryptionKeyUrl, encryptionKeyResourceGroupName, idBrokerMappingSource, enableLoadBalancers, enableOutboundLoadBalancer, availabilityZones, flexibleServerSubnetIds, dataServices, customDockerRegistry);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateAzureEnvironmentRequest {\n");
    sb.append("    environmentName: ").append(toIndentedString(environmentName)).append("\n");
    sb.append("    credentialName: ").append(toIndentedString(credentialName)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    publicKey: ").append(toIndentedString(publicKey)).append("\n");
    sb.append("    securityAccess: ").append(toIndentedString(securityAccess)).append("\n");
    sb.append("    usePublicIp: ").append(toIndentedString(usePublicIp)).append("\n");
    sb.append("    logStorage: ").append(toIndentedString(logStorage)).append("\n");
    sb.append("    existingNetworkParams: ").append(toIndentedString(existingNetworkParams)).append("\n");
    sb.append("    newNetworkParams: ").append(toIndentedString(newNetworkParams)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    enableTunnel: ").append(toIndentedString(enableTunnel)).append("\n");
    sb.append("    tunnelType: ").append(toIndentedString(tunnelType)).append("\n");
    sb.append("    ccmV2TlsType: ").append(toIndentedString(ccmV2TlsType)).append("\n");
    sb.append("    enableWorkloadAnalytics: ").append(toIndentedString(enableWorkloadAnalytics)).append("\n");
    sb.append("    workloadAnalytics: ").append(toIndentedString(workloadAnalytics)).append("\n");
    sb.append("    reportDeploymentLogs: ").append(toIndentedString(reportDeploymentLogs)).append("\n");
    sb.append("    cloudStorageLogging: ").append(toIndentedString(cloudStorageLogging)).append("\n");
    sb.append("    freeIpa: ").append(toIndentedString(freeIpa)).append("\n");
    sb.append("    environmentVersion: ").append(toIndentedString(environmentVersion)).append("\n");
    sb.append("    computeClusterConfiguration: ").append(toIndentedString(computeClusterConfiguration)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    proxyConfigName: ").append(toIndentedString(proxyConfigName)).append("\n");
    sb.append("    resourceGroupName: ").append(toIndentedString(resourceGroupName)).append("\n");
    sb.append("    dedicatedStorageAccount: ").append(toIndentedString(dedicatedStorageAccount)).append("\n");
    sb.append("    createPrivateEndpoints: ").append(toIndentedString(createPrivateEndpoints)).append("\n");
    sb.append("    endpointAccessGatewayScheme: ").append(toIndentedString(endpointAccessGatewayScheme)).append("\n");
    sb.append("    endpointAccessGatewaySubnetIds: ").append(toIndentedString(endpointAccessGatewaySubnetIds)).append("\n");
    sb.append("    encryptionAtHost: ").append(toIndentedString(encryptionAtHost)).append("\n");
    sb.append("    userManagedIdentity: ").append(toIndentedString(userManagedIdentity)).append("\n");
    sb.append("    encryptionUserManagedIdentity: ").append(toIndentedString(encryptionUserManagedIdentity)).append("\n");
    sb.append("    encryptionKeyUrl: ").append(toIndentedString(encryptionKeyUrl)).append("\n");
    sb.append("    encryptionKeyResourceGroupName: ").append(toIndentedString(encryptionKeyResourceGroupName)).append("\n");
    sb.append("    idBrokerMappingSource: ").append(toIndentedString(idBrokerMappingSource)).append("\n");
    sb.append("    enableLoadBalancers: ").append(toIndentedString(enableLoadBalancers)).append("\n");
    sb.append("    enableOutboundLoadBalancer: ").append(toIndentedString(enableOutboundLoadBalancer)).append("\n");
    sb.append("    availabilityZones: ").append(toIndentedString(availabilityZones)).append("\n");
    sb.append("    flexibleServerSubnetIds: ").append(toIndentedString(flexibleServerSubnetIds)).append("\n");
    sb.append("    dataServices: ").append(toIndentedString(dataServices)).append("\n");
    sb.append("    customDockerRegistry: ").append(toIndentedString(customDockerRegistry)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `environmentName` to the URL query string
    if (getEnvironmentName() != null) {
      joiner.add(String.format("%senvironmentName%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getEnvironmentName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `credentialName` to the URL query string
    if (getCredentialName() != null) {
      joiner.add(String.format("%scredentialName%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCredentialName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `region` to the URL query string
    if (getRegion() != null) {
      joiner.add(String.format("%sregion%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getRegion()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `publicKey` to the URL query string
    if (getPublicKey() != null) {
      joiner.add(String.format("%spublicKey%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getPublicKey()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `securityAccess` to the URL query string
    if (getSecurityAccess() != null) {
      joiner.add(getSecurityAccess().toUrlQueryString(prefix + "securityAccess" + suffix));
    }

    // add `usePublicIp` to the URL query string
    if (getUsePublicIp() != null) {
      joiner.add(String.format("%susePublicIp%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getUsePublicIp()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `logStorage` to the URL query string
    if (getLogStorage() != null) {
      joiner.add(getLogStorage().toUrlQueryString(prefix + "logStorage" + suffix));
    }

    // add `existingNetworkParams` to the URL query string
    if (getExistingNetworkParams() != null) {
      joiner.add(getExistingNetworkParams().toUrlQueryString(prefix + "existingNetworkParams" + suffix));
    }

    // add `newNetworkParams` to the URL query string
    if (getNewNetworkParams() != null) {
      joiner.add(getNewNetworkParams().toUrlQueryString(prefix + "newNetworkParams" + suffix));
    }

    // add `description` to the URL query string
    if (getDescription() != null) {
      joiner.add(String.format("%sdescription%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDescription()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `enableTunnel` to the URL query string
    if (getEnableTunnel() != null) {
      joiner.add(String.format("%senableTunnel%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getEnableTunnel()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `tunnelType` to the URL query string
    if (getTunnelType() != null) {
      joiner.add(String.format("%stunnelType%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getTunnelType()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `ccmV2TlsType` to the URL query string
    if (getCcmV2TlsType() != null) {
      joiner.add(String.format("%sccmV2TlsType%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCcmV2TlsType()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `enableWorkloadAnalytics` to the URL query string
    if (getEnableWorkloadAnalytics() != null) {
      joiner.add(String.format("%senableWorkloadAnalytics%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getEnableWorkloadAnalytics()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `workloadAnalytics` to the URL query string
    if (getWorkloadAnalytics() != null) {
      joiner.add(String.format("%sworkloadAnalytics%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getWorkloadAnalytics()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `reportDeploymentLogs` to the URL query string
    if (getReportDeploymentLogs() != null) {
      joiner.add(String.format("%sreportDeploymentLogs%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getReportDeploymentLogs()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `cloudStorageLogging` to the URL query string
    if (getCloudStorageLogging() != null) {
      joiner.add(String.format("%scloudStorageLogging%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCloudStorageLogging()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `freeIpa` to the URL query string
    if (getFreeIpa() != null) {
      joiner.add(getFreeIpa().toUrlQueryString(prefix + "freeIpa" + suffix));
    }

    // add `environmentVersion` to the URL query string
    if (getEnvironmentVersion() != null) {
      joiner.add(String.format("%senvironmentVersion%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getEnvironmentVersion()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `computeClusterConfiguration` to the URL query string
    if (getComputeClusterConfiguration() != null) {
      joiner.add(getComputeClusterConfiguration().toUrlQueryString(prefix + "computeClusterConfiguration" + suffix));
    }

    // add `image` to the URL query string
    if (getImage() != null) {
      joiner.add(getImage().toUrlQueryString(prefix + "image" + suffix));
    }

    // add `tags` to the URL query string
    if (getTags() != null) {
      for (int i = 0; i < getTags().size(); i++) {
        if (getTags().get(i) != null) {
          joiner.add(getTags().get(i).toUrlQueryString(String.format("%stags%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `proxyConfigName` to the URL query string
    if (getProxyConfigName() != null) {
      joiner.add(String.format("%sproxyConfigName%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getProxyConfigName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `resourceGroupName` to the URL query string
    if (getResourceGroupName() != null) {
      joiner.add(String.format("%sresourceGroupName%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getResourceGroupName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `dedicatedStorageAccount` to the URL query string
    if (getDedicatedStorageAccount() != null) {
      joiner.add(String.format("%sdedicatedStorageAccount%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDedicatedStorageAccount()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `createPrivateEndpoints` to the URL query string
    if (getCreatePrivateEndpoints() != null) {
      joiner.add(String.format("%screatePrivateEndpoints%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCreatePrivateEndpoints()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `endpointAccessGatewayScheme` to the URL query string
    if (getEndpointAccessGatewayScheme() != null) {
      joiner.add(String.format("%sendpointAccessGatewayScheme%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getEndpointAccessGatewayScheme()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `endpointAccessGatewaySubnetIds` to the URL query string
    if (getEndpointAccessGatewaySubnetIds() != null) {
      for (int i = 0; i < getEndpointAccessGatewaySubnetIds().size(); i++) {
        joiner.add(String.format("%sendpointAccessGatewaySubnetIds%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(String.valueOf(getEndpointAccessGatewaySubnetIds().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    // add `encryptionAtHost` to the URL query string
    if (getEncryptionAtHost() != null) {
      joiner.add(String.format("%sencryptionAtHost%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getEncryptionAtHost()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `userManagedIdentity` to the URL query string
    if (getUserManagedIdentity() != null) {
      joiner.add(String.format("%suserManagedIdentity%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getUserManagedIdentity()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `encryptionUserManagedIdentity` to the URL query string
    if (getEncryptionUserManagedIdentity() != null) {
      joiner.add(String.format("%sencryptionUserManagedIdentity%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getEncryptionUserManagedIdentity()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `encryptionKeyUrl` to the URL query string
    if (getEncryptionKeyUrl() != null) {
      joiner.add(String.format("%sencryptionKeyUrl%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getEncryptionKeyUrl()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `encryptionKeyResourceGroupName` to the URL query string
    if (getEncryptionKeyResourceGroupName() != null) {
      joiner.add(String.format("%sencryptionKeyResourceGroupName%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getEncryptionKeyResourceGroupName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `idBrokerMappingSource` to the URL query string
    if (getIdBrokerMappingSource() != null) {
      joiner.add(String.format("%sidBrokerMappingSource%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getIdBrokerMappingSource()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `enableLoadBalancers` to the URL query string
    if (getEnableLoadBalancers() != null) {
      joiner.add(String.format("%senableLoadBalancers%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getEnableLoadBalancers()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `enableOutboundLoadBalancer` to the URL query string
    if (getEnableOutboundLoadBalancer() != null) {
      joiner.add(String.format("%senableOutboundLoadBalancer%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getEnableOutboundLoadBalancer()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `availabilityZones` to the URL query string
    if (getAvailabilityZones() != null) {
      for (int i = 0; i < getAvailabilityZones().size(); i++) {
        joiner.add(String.format("%savailabilityZones%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(String.valueOf(getAvailabilityZones().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    // add `flexibleServerSubnetIds` to the URL query string
    if (getFlexibleServerSubnetIds() != null) {
      for (int i = 0; i < getFlexibleServerSubnetIds().size(); i++) {
        joiner.add(String.format("%sflexibleServerSubnetIds%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(String.valueOf(getFlexibleServerSubnetIds().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    // add `dataServices` to the URL query string
    if (getDataServices() != null) {
      joiner.add(getDataServices().toUrlQueryString(prefix + "dataServices" + suffix));
    }

    // add `customDockerRegistry` to the URL query string
    if (getCustomDockerRegistry() != null) {
      joiner.add(getCustomDockerRegistry().toUrlQueryString(prefix + "customDockerRegistry" + suffix));
    }

    return joiner.toString();
  }
}

