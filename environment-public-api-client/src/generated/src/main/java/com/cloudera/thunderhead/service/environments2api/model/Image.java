/*
 * Cloudera Environments Service
 * Cloudera Environments Service is a web service that manages cloud provider access.
 *
 * The version of the OpenAPI document: __API_VERSION__
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudera.thunderhead.service.environments2api.model;

import java.util.Objects;
import java.util.Arrays;
import com.cloudera.thunderhead.service.environments2api.model.ImageReferenceSet;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.HashMap;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Basic information about an image.
 */
@JsonPropertyOrder({
  Image.JSON_PROPERTY_CREATED,
  Image.JSON_PROPERTY_DATE,
  Image.JSON_PROPERTY_DESCRIPTION,
  Image.JSON_PROPERTY_ADVERTISED,
  Image.JSON_PROPERTY_OS,
  Image.JSON_PROPERTY_OS_TYPE,
  Image.JSON_PROPERTY_UUID,
  Image.JSON_PROPERTY_IMAGES,
  Image.JSON_PROPERTY_PACKAGE_VERSIONS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.5.0")
public class Image {
  public static final String JSON_PROPERTY_CREATED = "created";
  private Long created;

  public static final String JSON_PROPERTY_DATE = "date";
  private String date;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_ADVERTISED = "advertised";
  private Boolean advertised;

  public static final String JSON_PROPERTY_OS = "os";
  private String os;

  public static final String JSON_PROPERTY_OS_TYPE = "osType";
  private String osType;

  public static final String JSON_PROPERTY_UUID = "uuid";
  private String uuid;

  public static final String JSON_PROPERTY_IMAGES = "images";
  private ImageReferenceSet images;

  public static final String JSON_PROPERTY_PACKAGE_VERSIONS = "packageVersions";
  private Map<String, String> packageVersions = new HashMap<>();

  public Image() {
  }

  public Image created(Long created) {
    
    this.created = created;
    return this;
  }

   /**
   * Image creation timestamp.
   * @return created
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getCreated() {
    return created;
  }


  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreated(Long created) {
    this.created = created;
  }


  public Image date(String date) {
    
    this.date = date;
    return this;
  }

   /**
   * The date when the image was created.
   * @return date
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDate() {
    return date;
  }


  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDate(String date) {
    this.date = date;
  }


  public Image description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Description of the image.
   * @return description
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public Image advertised(Boolean advertised) {
    
    this.advertised = advertised;
    return this;
  }

   /**
   * Indicates the visibility of the imgae in the catalog.
   * @return advertised
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADVERTISED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAdvertised() {
    return advertised;
  }


  @JsonProperty(JSON_PROPERTY_ADVERTISED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdvertised(Boolean advertised) {
    this.advertised = advertised;
  }


  public Image os(String os) {
    
    this.os = os;
    return this;
  }

   /**
   * Installed OS of the image.
   * @return os
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOs() {
    return os;
  }


  @JsonProperty(JSON_PROPERTY_OS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOs(String os) {
    this.os = os;
  }


  public Image osType(String osType) {
    
    this.osType = osType;
    return this;
  }

   /**
   * The distribution family of OS installed on the image.
   * @return osType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OS_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOsType() {
    return osType;
  }


  @JsonProperty(JSON_PROPERTY_OS_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOsType(String osType) {
    this.osType = osType;
  }


  public Image uuid(String uuid) {
    
    this.uuid = uuid;
    return this;
  }

   /**
   * The UUID of the image.
   * @return uuid
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUuid() {
    return uuid;
  }


  @JsonProperty(JSON_PROPERTY_UUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUuid(String uuid) {
    this.uuid = uuid;
  }


  public Image images(ImageReferenceSet images) {
    
    this.images = images;
    return this;
  }

   /**
   * Get images
   * @return images
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ImageReferenceSet getImages() {
    return images;
  }


  @JsonProperty(JSON_PROPERTY_IMAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImages(ImageReferenceSet images) {
    this.images = images;
  }


  public Image packageVersions(Map<String, String> packageVersions) {
    
    this.packageVersions = packageVersions;
    return this;
  }

  public Image putPackageVersionsItem(String key, String packageVersionsItem) {
    if (this.packageVersions == null) {
      this.packageVersions = new HashMap<>();
    }
    this.packageVersions.put(key, packageVersionsItem);
    return this;
  }

   /**
   * Package versions.
   * @return packageVersions
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PACKAGE_VERSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getPackageVersions() {
    return packageVersions;
  }


  @JsonProperty(JSON_PROPERTY_PACKAGE_VERSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPackageVersions(Map<String, String> packageVersions) {
    this.packageVersions = packageVersions;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Image image = (Image) o;
    return Objects.equals(this.created, image.created) &&
        Objects.equals(this.date, image.date) &&
        Objects.equals(this.description, image.description) &&
        Objects.equals(this.advertised, image.advertised) &&
        Objects.equals(this.os, image.os) &&
        Objects.equals(this.osType, image.osType) &&
        Objects.equals(this.uuid, image.uuid) &&
        Objects.equals(this.images, image.images) &&
        Objects.equals(this.packageVersions, image.packageVersions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(created, date, description, advertised, os, osType, uuid, images, packageVersions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Image {\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    advertised: ").append(toIndentedString(advertised)).append("\n");
    sb.append("    os: ").append(toIndentedString(os)).append("\n");
    sb.append("    osType: ").append(toIndentedString(osType)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    images: ").append(toIndentedString(images)).append("\n");
    sb.append("    packageVersions: ").append(toIndentedString(packageVersions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

