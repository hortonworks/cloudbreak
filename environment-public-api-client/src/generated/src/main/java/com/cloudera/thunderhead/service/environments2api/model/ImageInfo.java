/*
 * Cloudera Environments Service
 * Cloudera Environments Service is a web service that manages cloud provider access.
 *
 * The version of the OpenAPI document: __API_VERSION__
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudera.thunderhead.service.environments2api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Basic information about an image.
 */
@JsonPropertyOrder({
  ImageInfo.JSON_PROPERTY_IMAGE_ID,
  ImageInfo.JSON_PROPERTY_IMAGE_CATALOG_NAME,
  ImageInfo.JSON_PROPERTY_IMAGE_OS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.5.0")
public class ImageInfo {
  public static final String JSON_PROPERTY_IMAGE_ID = "imageId";
  private String imageId;

  public static final String JSON_PROPERTY_IMAGE_CATALOG_NAME = "imageCatalogName";
  private String imageCatalogName;

  public static final String JSON_PROPERTY_IMAGE_OS = "imageOs";
  private String imageOs;

  public ImageInfo() {
  }

  public ImageInfo imageId(String imageId) {
    
    this.imageId = imageId;
    return this;
  }

   /**
   * The ID of the image.
   * @return imageId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMAGE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getImageId() {
    return imageId;
  }


  @JsonProperty(JSON_PROPERTY_IMAGE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImageId(String imageId) {
    this.imageId = imageId;
  }


  public ImageInfo imageCatalogName(String imageCatalogName) {
    
    this.imageCatalogName = imageCatalogName;
    return this;
  }

   /**
   * The name of the image catalog of the image.
   * @return imageCatalogName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMAGE_CATALOG_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getImageCatalogName() {
    return imageCatalogName;
  }


  @JsonProperty(JSON_PROPERTY_IMAGE_CATALOG_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImageCatalogName(String imageCatalogName) {
    this.imageCatalogName = imageCatalogName;
  }


  public ImageInfo imageOs(String imageOs) {
    
    this.imageOs = imageOs;
    return this;
  }

   /**
   * The OS of the image.
   * @return imageOs
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMAGE_OS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getImageOs() {
    return imageOs;
  }


  @JsonProperty(JSON_PROPERTY_IMAGE_OS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImageOs(String imageOs) {
    this.imageOs = imageOs;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ImageInfo imageInfo = (ImageInfo) o;
    return Objects.equals(this.imageId, imageInfo.imageId) &&
        Objects.equals(this.imageCatalogName, imageInfo.imageCatalogName) &&
        Objects.equals(this.imageOs, imageInfo.imageOs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(imageId, imageCatalogName, imageOs);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ImageInfo {\n");
    sb.append("    imageId: ").append(toIndentedString(imageId)).append("\n");
    sb.append("    imageCatalogName: ").append(toIndentedString(imageCatalogName)).append("\n");
    sb.append("    imageOs: ").append(toIndentedString(imageOs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

