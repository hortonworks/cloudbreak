/*
 * Cloudera Environments Service
 * Cloudera Environments Service is a web service that manages cloud provider access.
 *
 * The version of the OpenAPI document: __API_VERSION__
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudera.thunderhead.service.environments2api.model;

import java.util.Objects;
import java.util.Arrays;
import com.cloudera.thunderhead.service.environments2api.model.IdBrokerSyncStatus;
import com.cloudera.thunderhead.service.environments2api.model.SyncStatus;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.HashMap;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Response object for getting ID Broker mappings sync status.
 */
@JsonPropertyOrder({
  GetIdBrokerMappingsSyncStatusResponse.JSON_PROPERTY_SYNC_NEEDED,
  GetIdBrokerMappingsSyncStatusResponse.JSON_PROPERTY_GLOBAL_STATUS,
  GetIdBrokerMappingsSyncStatusResponse.JSON_PROPERTY_STATUSES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.5.0")
public class GetIdBrokerMappingsSyncStatusResponse {
  public static final String JSON_PROPERTY_SYNC_NEEDED = "syncNeeded";
  private Boolean syncNeeded;

  public static final String JSON_PROPERTY_GLOBAL_STATUS = "globalStatus";
  private SyncStatus globalStatus;

  public static final String JSON_PROPERTY_STATUSES = "statuses";
  private Map<String, IdBrokerSyncStatus> statuses = new HashMap<>();

  public GetIdBrokerMappingsSyncStatusResponse() {
  }

  public GetIdBrokerMappingsSyncStatusResponse syncNeeded(Boolean syncNeeded) {
    
    this.syncNeeded = syncNeeded;
    return this;
  }

   /**
   * Whether a sync is needed to bring in-cluster mappings up-to-date.
   * @return syncNeeded
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SYNC_NEEDED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getSyncNeeded() {
    return syncNeeded;
  }


  @JsonProperty(JSON_PROPERTY_SYNC_NEEDED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSyncNeeded(Boolean syncNeeded) {
    this.syncNeeded = syncNeeded;
  }


  public GetIdBrokerMappingsSyncStatusResponse globalStatus(SyncStatus globalStatus) {
    
    this.globalStatus = globalStatus;
    return this;
  }

   /**
   * Get globalStatus
   * @return globalStatus
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_GLOBAL_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SyncStatus getGlobalStatus() {
    return globalStatus;
  }


  @JsonProperty(JSON_PROPERTY_GLOBAL_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setGlobalStatus(SyncStatus globalStatus) {
    this.globalStatus = globalStatus;
  }


  public GetIdBrokerMappingsSyncStatusResponse statuses(Map<String, IdBrokerSyncStatus> statuses) {
    
    this.statuses = statuses;
    return this;
  }

  public GetIdBrokerMappingsSyncStatusResponse putStatusesItem(String key, IdBrokerSyncStatus statusesItem) {
    this.statuses.put(key, statusesItem);
    return this;
  }

   /**
   * Map of datalake cluster CRN to mappings sync status for each datalake cluster in the environment.
   * @return statuses
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUSES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Map<String, IdBrokerSyncStatus> getStatuses() {
    return statuses;
  }


  @JsonProperty(JSON_PROPERTY_STATUSES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatuses(Map<String, IdBrokerSyncStatus> statuses) {
    this.statuses = statuses;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetIdBrokerMappingsSyncStatusResponse getIdBrokerMappingsSyncStatusResponse = (GetIdBrokerMappingsSyncStatusResponse) o;
    return Objects.equals(this.syncNeeded, getIdBrokerMappingsSyncStatusResponse.syncNeeded) &&
        Objects.equals(this.globalStatus, getIdBrokerMappingsSyncStatusResponse.globalStatus) &&
        Objects.equals(this.statuses, getIdBrokerMappingsSyncStatusResponse.statuses);
  }

  @Override
  public int hashCode() {
    return Objects.hash(syncNeeded, globalStatus, statuses);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetIdBrokerMappingsSyncStatusResponse {\n");
    sb.append("    syncNeeded: ").append(toIndentedString(syncNeeded)).append("\n");
    sb.append("    globalStatus: ").append(toIndentedString(globalStatus)).append("\n");
    sb.append("    statuses: ").append(toIndentedString(statuses)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

