/*
 * Cloudera Environments Service
 * Cloudera Environments Service is a web service that manages cloud provider access.
 *
 * The version of the OpenAPI document: __API_VERSION__
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudera.cdp.environments2.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Request object for Azure environment cloud storage validation.
 */
@JsonPropertyOrder({
  ValidateAzureCloudStorageRequest.JSON_PROPERTY_CREDENTIAL_CRN,
  ValidateAzureCloudStorageRequest.JSON_PROPERTY_STORAGE_LOCATION,
  ValidateAzureCloudStorageRequest.JSON_PROPERTY_MANAGED_IDENTITY,
  ValidateAzureCloudStorageRequest.JSON_PROPERTY_ACCOUNT_KEY,
  ValidateAzureCloudStorageRequest.JSON_PROPERTY_ACCOUNT_NAME,
  ValidateAzureCloudStorageRequest.JSON_PROPERTY_SECURE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-02T16:36:31.330723+02:00[Europe/Budapest]", comments = "Generator version: 7.5.0")
public class ValidateAzureCloudStorageRequest {
  public static final String JSON_PROPERTY_CREDENTIAL_CRN = "credentialCrn";
  private String credentialCrn;

  public static final String JSON_PROPERTY_STORAGE_LOCATION = "storageLocation";
  private String storageLocation;

  public static final String JSON_PROPERTY_MANAGED_IDENTITY = "managedIdentity";
  private String managedIdentity;

  public static final String JSON_PROPERTY_ACCOUNT_KEY = "accountKey";
  private String accountKey;

  public static final String JSON_PROPERTY_ACCOUNT_NAME = "accountName";
  private String accountName;

  public static final String JSON_PROPERTY_SECURE = "secure";
  private Boolean secure;

  public ValidateAzureCloudStorageRequest() { 
  }

  public ValidateAzureCloudStorageRequest credentialCrn(String credentialCrn) {
    this.credentialCrn = credentialCrn;
    return this;
  }

   /**
   * The CRN of the credential.
   * @return credentialCrn
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREDENTIAL_CRN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCredentialCrn() {
    return credentialCrn;
  }


  @JsonProperty(JSON_PROPERTY_CREDENTIAL_CRN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCredentialCrn(String credentialCrn) {
    this.credentialCrn = credentialCrn;
  }


  public ValidateAzureCloudStorageRequest storageLocation(String storageLocation) {
    this.storageLocation = storageLocation;
    return this;
  }

   /**
   * Azure storage location for logging.
   * @return storageLocation
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STORAGE_LOCATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getStorageLocation() {
    return storageLocation;
  }


  @JsonProperty(JSON_PROPERTY_STORAGE_LOCATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStorageLocation(String storageLocation) {
    this.storageLocation = storageLocation;
  }


  public ValidateAzureCloudStorageRequest managedIdentity(String managedIdentity) {
    this.managedIdentity = managedIdentity;
    return this;
  }

   /**
   * Azure managed identity.
   * @return managedIdentity
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MANAGED_IDENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getManagedIdentity() {
    return managedIdentity;
  }


  @JsonProperty(JSON_PROPERTY_MANAGED_IDENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManagedIdentity(String managedIdentity) {
    this.managedIdentity = managedIdentity;
  }


  public ValidateAzureCloudStorageRequest accountKey(String accountKey) {
    this.accountKey = accountKey;
    return this;
  }

   /**
   * Azure account key.
   * @return accountKey
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNT_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccountKey() {
    return accountKey;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountKey(String accountKey) {
    this.accountKey = accountKey;
  }


  public ValidateAzureCloudStorageRequest accountName(String accountName) {
    this.accountName = accountName;
    return this;
  }

   /**
   * Azure account name.
   * @return accountName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccountName() {
    return accountName;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountName(String accountName) {
    this.accountName = accountName;
  }


  public ValidateAzureCloudStorageRequest secure(Boolean secure) {
    this.secure = secure;
    return this;
  }

   /**
   * Azure secure flag.
   * @return secure
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSecure() {
    return secure;
  }


  @JsonProperty(JSON_PROPERTY_SECURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecure(Boolean secure) {
    this.secure = secure;
  }


  /**
   * Return true if this ValidateAzureCloudStorageRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ValidateAzureCloudStorageRequest validateAzureCloudStorageRequest = (ValidateAzureCloudStorageRequest) o;
    return Objects.equals(this.credentialCrn, validateAzureCloudStorageRequest.credentialCrn) &&
        Objects.equals(this.storageLocation, validateAzureCloudStorageRequest.storageLocation) &&
        Objects.equals(this.managedIdentity, validateAzureCloudStorageRequest.managedIdentity) &&
        Objects.equals(this.accountKey, validateAzureCloudStorageRequest.accountKey) &&
        Objects.equals(this.accountName, validateAzureCloudStorageRequest.accountName) &&
        Objects.equals(this.secure, validateAzureCloudStorageRequest.secure);
  }

  @Override
  public int hashCode() {
    return Objects.hash(credentialCrn, storageLocation, managedIdentity, accountKey, accountName, secure);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ValidateAzureCloudStorageRequest {\n");
    sb.append("    credentialCrn: ").append(toIndentedString(credentialCrn)).append("\n");
    sb.append("    storageLocation: ").append(toIndentedString(storageLocation)).append("\n");
    sb.append("    managedIdentity: ").append(toIndentedString(managedIdentity)).append("\n");
    sb.append("    accountKey: ").append(toIndentedString(accountKey)).append("\n");
    sb.append("    accountName: ").append(toIndentedString(accountName)).append("\n");
    sb.append("    secure: ").append(toIndentedString(secure)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `credentialCrn` to the URL query string
    if (getCredentialCrn() != null) {
      joiner.add(String.format("%scredentialCrn%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCredentialCrn()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `storageLocation` to the URL query string
    if (getStorageLocation() != null) {
      joiner.add(String.format("%sstorageLocation%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getStorageLocation()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `managedIdentity` to the URL query string
    if (getManagedIdentity() != null) {
      joiner.add(String.format("%smanagedIdentity%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getManagedIdentity()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `accountKey` to the URL query string
    if (getAccountKey() != null) {
      joiner.add(String.format("%saccountKey%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getAccountKey()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `accountName` to the URL query string
    if (getAccountName() != null) {
      joiner.add(String.format("%saccountName%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getAccountName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `secure` to the URL query string
    if (getSecure() != null) {
      joiner.add(String.format("%ssecure%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSecure()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

