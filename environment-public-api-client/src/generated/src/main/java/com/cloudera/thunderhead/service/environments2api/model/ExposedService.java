/*
 * Cloudera Environments Service
 * Cloudera Environments Service is a web service that manages cloud provider access.
 *
 * The version of the OpenAPI document: __API_VERSION__
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudera.thunderhead.service.environments2api.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.cloudera.thunderhead.service.environments2api.model.EnvValidation;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Exposed CDP DC service object.
 */
@JsonPropertyOrder({
  ExposedService.JSON_PROPERTY_NAME,
  ExposedService.JSON_PROPERTY_TYPE,
  ExposedService.JSON_PROPERTY_DISPLAY_NAME,
  ExposedService.JSON_PROPERTY_SERVICE_URL,
  ExposedService.JSON_PROPERTY_SERVICE_VERSION,
  ExposedService.JSON_PROPERTY_STATUS,
  ExposedService.JSON_PROPERTY_SERVICE_VALIDATION_MESSAGES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.5.0")
public class ExposedService {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_DISPLAY_NAME = "displayName";
  private String displayName;

  public static final String JSON_PROPERTY_SERVICE_URL = "serviceUrl";
  private String serviceUrl;

  public static final String JSON_PROPERTY_SERVICE_VERSION = "serviceVersion";
  private String serviceVersion;

  public static final String JSON_PROPERTY_STATUS = "status";
  private String status;

  public static final String JSON_PROPERTY_SERVICE_VALIDATION_MESSAGES = "serviceValidationMessages";
  private List<EnvValidation> serviceValidationMessages = new ArrayList<>();

  public ExposedService() { 
  }

  public ExposedService name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of service.
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public ExposedService type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Type of service.
   * @return type
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  public ExposedService displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * Display name of service.
   * @return displayName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplayName() {
    return displayName;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public ExposedService serviceUrl(String serviceUrl) {
    this.serviceUrl = serviceUrl;
    return this;
  }

   /**
   * URL of service.
   * @return serviceUrl
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SERVICE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getServiceUrl() {
    return serviceUrl;
  }


  @JsonProperty(JSON_PROPERTY_SERVICE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServiceUrl(String serviceUrl) {
    this.serviceUrl = serviceUrl;
  }


  public ExposedService serviceVersion(String serviceVersion) {
    this.serviceVersion = serviceVersion;
    return this;
  }

   /**
   * Version of service.
   * @return serviceVersion
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SERVICE_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getServiceVersion() {
    return serviceVersion;
  }


  @JsonProperty(JSON_PROPERTY_SERVICE_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServiceVersion(String serviceVersion) {
    this.serviceVersion = serviceVersion;
  }


  public ExposedService status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Status of service.
   * @return status
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(String status) {
    this.status = status;
  }


  public ExposedService serviceValidationMessages(List<EnvValidation> serviceValidationMessages) {
    this.serviceValidationMessages = serviceValidationMessages;
    return this;
  }

  public ExposedService addServiceValidationMessagesItem(EnvValidation serviceValidationMessagesItem) {
    if (this.serviceValidationMessages == null) {
      this.serviceValidationMessages = new ArrayList<>();
    }
    this.serviceValidationMessages.add(serviceValidationMessagesItem);
    return this;
  }

   /**
   * List of service validation message.
   * @return serviceValidationMessages
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SERVICE_VALIDATION_MESSAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<EnvValidation> getServiceValidationMessages() {
    return serviceValidationMessages;
  }


  @JsonProperty(JSON_PROPERTY_SERVICE_VALIDATION_MESSAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServiceValidationMessages(List<EnvValidation> serviceValidationMessages) {
    this.serviceValidationMessages = serviceValidationMessages;
  }


  /**
   * Return true if this ExposedService object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExposedService exposedService = (ExposedService) o;
    return Objects.equals(this.name, exposedService.name) &&
        Objects.equals(this.type, exposedService.type) &&
        Objects.equals(this.displayName, exposedService.displayName) &&
        Objects.equals(this.serviceUrl, exposedService.serviceUrl) &&
        Objects.equals(this.serviceVersion, exposedService.serviceVersion) &&
        Objects.equals(this.status, exposedService.status) &&
        Objects.equals(this.serviceValidationMessages, exposedService.serviceValidationMessages);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, type, displayName, serviceUrl, serviceVersion, status, serviceValidationMessages);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExposedService {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    serviceUrl: ").append(toIndentedString(serviceUrl)).append("\n");
    sb.append("    serviceVersion: ").append(toIndentedString(serviceVersion)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    serviceValidationMessages: ").append(toIndentedString(serviceValidationMessages)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `name` to the URL query string
    if (getName() != null) {
      joiner.add(String.format("%sname%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `type` to the URL query string
    if (getType() != null) {
      joiner.add(String.format("%stype%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getType()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `displayName` to the URL query string
    if (getDisplayName() != null) {
      joiner.add(String.format("%sdisplayName%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDisplayName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `serviceUrl` to the URL query string
    if (getServiceUrl() != null) {
      joiner.add(String.format("%sserviceUrl%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getServiceUrl()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `serviceVersion` to the URL query string
    if (getServiceVersion() != null) {
      joiner.add(String.format("%sserviceVersion%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getServiceVersion()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `status` to the URL query string
    if (getStatus() != null) {
      joiner.add(String.format("%sstatus%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getStatus()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `serviceValidationMessages` to the URL query string
    if (getServiceValidationMessages() != null) {
      for (int i = 0; i < getServiceValidationMessages().size(); i++) {
        if (getServiceValidationMessages().get(i) != null) {
          joiner.add(getServiceValidationMessages().get(i).toUrlQueryString(String.format("%sserviceValidationMessages%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    return joiner.toString();
  }
}

