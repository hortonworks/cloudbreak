/*
 * Cloudera Environments Service
 * Cloudera Environments Service is a web service that manages cloud provider access.
 *
 * The version of the OpenAPI document: __API_VERSION__
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudera.thunderhead.service.environments2api.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.cloudera.thunderhead.service.environments2api.model.AttachedVolumeDetail;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Object for a FreeIPA instance providing specific information about the instance.
 */
@JsonPropertyOrder({
  FreeIpaInstance.JSON_PROPERTY_AVAILABILITY_ZONE,
  FreeIpaInstance.JSON_PROPERTY_DISCOVERY_F_Q_D_N,
  FreeIpaInstance.JSON_PROPERTY_INSTANCE_ID,
  FreeIpaInstance.JSON_PROPERTY_INSTANCE_GROUP,
  FreeIpaInstance.JSON_PROPERTY_INSTANCE_STATUS,
  FreeIpaInstance.JSON_PROPERTY_INSTANCE_STATUS_REASON,
  FreeIpaInstance.JSON_PROPERTY_INSTANCE_TYPE,
  FreeIpaInstance.JSON_PROPERTY_INSTANCE_VM_TYPE,
  FreeIpaInstance.JSON_PROPERTY_LIFE_CYCLE,
  FreeIpaInstance.JSON_PROPERTY_PRIVATE_I_P,
  FreeIpaInstance.JSON_PROPERTY_PUBLIC_I_P,
  FreeIpaInstance.JSON_PROPERTY_SSH_PORT,
  FreeIpaInstance.JSON_PROPERTY_SUBNET_ID,
  FreeIpaInstance.JSON_PROPERTY_ATTACHED_VOLUMES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.5.0")
public class FreeIpaInstance {
  public static final String JSON_PROPERTY_AVAILABILITY_ZONE = "availabilityZone";
  private String availabilityZone;

  public static final String JSON_PROPERTY_DISCOVERY_F_Q_D_N = "discoveryFQDN";
  private String discoveryFQDN;

  public static final String JSON_PROPERTY_INSTANCE_ID = "instanceId";
  private String instanceId;

  public static final String JSON_PROPERTY_INSTANCE_GROUP = "instanceGroup";
  private String instanceGroup;

  public static final String JSON_PROPERTY_INSTANCE_STATUS = "instanceStatus";
  private String instanceStatus;

  public static final String JSON_PROPERTY_INSTANCE_STATUS_REASON = "instanceStatusReason";
  private String instanceStatusReason;

  public static final String JSON_PROPERTY_INSTANCE_TYPE = "instanceType";
  private String instanceType;

  public static final String JSON_PROPERTY_INSTANCE_VM_TYPE = "instanceVmType";
  private String instanceVmType;

  public static final String JSON_PROPERTY_LIFE_CYCLE = "lifeCycle";
  private String lifeCycle;

  public static final String JSON_PROPERTY_PRIVATE_I_P = "privateIP";
  private String privateIP;

  public static final String JSON_PROPERTY_PUBLIC_I_P = "publicIP";
  private String publicIP;

  public static final String JSON_PROPERTY_SSH_PORT = "sshPort";
  private Integer sshPort;

  public static final String JSON_PROPERTY_SUBNET_ID = "subnetId";
  private String subnetId;

  public static final String JSON_PROPERTY_ATTACHED_VOLUMES = "attachedVolumes";
  private List<AttachedVolumeDetail> attachedVolumes = new ArrayList<>();

  public FreeIpaInstance() { 
  }

  public FreeIpaInstance availabilityZone(String availabilityZone) {
    this.availabilityZone = availabilityZone;
    return this;
  }

   /**
   * The availability zone of the instance.
   * @return availabilityZone
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVAILABILITY_ZONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAvailabilityZone() {
    return availabilityZone;
  }


  @JsonProperty(JSON_PROPERTY_AVAILABILITY_ZONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvailabilityZone(String availabilityZone) {
    this.availabilityZone = availabilityZone;
  }


  public FreeIpaInstance discoveryFQDN(String discoveryFQDN) {
    this.discoveryFQDN = discoveryFQDN;
    return this;
  }

   /**
   * The fully qualified domain name of the instance in the service discovery cluster.
   * @return discoveryFQDN
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISCOVERY_F_Q_D_N)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDiscoveryFQDN() {
    return discoveryFQDN;
  }


  @JsonProperty(JSON_PROPERTY_DISCOVERY_F_Q_D_N)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDiscoveryFQDN(String discoveryFQDN) {
    this.discoveryFQDN = discoveryFQDN;
  }


  public FreeIpaInstance instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

   /**
   * The instance ID for the instance.
   * @return instanceId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INSTANCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInstanceId() {
    return instanceId;
  }


  @JsonProperty(JSON_PROPERTY_INSTANCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }


  public FreeIpaInstance instanceGroup(String instanceGroup) {
    this.instanceGroup = instanceGroup;
    return this;
  }

   /**
   * The instance group that contains the instance.
   * @return instanceGroup
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INSTANCE_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInstanceGroup() {
    return instanceGroup;
  }


  @JsonProperty(JSON_PROPERTY_INSTANCE_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInstanceGroup(String instanceGroup) {
    this.instanceGroup = instanceGroup;
  }


  public FreeIpaInstance instanceStatus(String instanceStatus) {
    this.instanceStatus = instanceStatus;
    return this;
  }

   /**
   * The status of the instance.
   * @return instanceStatus
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INSTANCE_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInstanceStatus() {
    return instanceStatus;
  }


  @JsonProperty(JSON_PROPERTY_INSTANCE_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInstanceStatus(String instanceStatus) {
    this.instanceStatus = instanceStatus;
  }


  public FreeIpaInstance instanceStatusReason(String instanceStatusReason) {
    this.instanceStatusReason = instanceStatusReason;
    return this;
  }

   /**
   * The status reason for the instance.
   * @return instanceStatusReason
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INSTANCE_STATUS_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInstanceStatusReason() {
    return instanceStatusReason;
  }


  @JsonProperty(JSON_PROPERTY_INSTANCE_STATUS_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInstanceStatusReason(String instanceStatusReason) {
    this.instanceStatusReason = instanceStatusReason;
  }


  public FreeIpaInstance instanceType(String instanceType) {
    this.instanceType = instanceType;
    return this;
  }

   /**
   * The type of the instance (either GATEWAY or GATEWAY_PRIMARY).
   * @return instanceType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INSTANCE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInstanceType() {
    return instanceType;
  }


  @JsonProperty(JSON_PROPERTY_INSTANCE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInstanceType(String instanceType) {
    this.instanceType = instanceType;
  }


  public FreeIpaInstance instanceVmType(String instanceVmType) {
    this.instanceVmType = instanceVmType;
    return this;
  }

   /**
   * The VM type of the instance. Supported values depend on the cloud platform.
   * @return instanceVmType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INSTANCE_VM_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInstanceVmType() {
    return instanceVmType;
  }


  @JsonProperty(JSON_PROPERTY_INSTANCE_VM_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInstanceVmType(String instanceVmType) {
    this.instanceVmType = instanceVmType;
  }


  public FreeIpaInstance lifeCycle(String lifeCycle) {
    this.lifeCycle = lifeCycle;
    return this;
  }

   /**
   * The life cycle type for the instance (either NORMAL or SPOT).
   * @return lifeCycle
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIFE_CYCLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLifeCycle() {
    return lifeCycle;
  }


  @JsonProperty(JSON_PROPERTY_LIFE_CYCLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLifeCycle(String lifeCycle) {
    this.lifeCycle = lifeCycle;
  }


  public FreeIpaInstance privateIP(String privateIP) {
    this.privateIP = privateIP;
    return this;
  }

   /**
   * The private IP of the instance.
   * @return privateIP
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRIVATE_I_P)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPrivateIP() {
    return privateIP;
  }


  @JsonProperty(JSON_PROPERTY_PRIVATE_I_P)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrivateIP(String privateIP) {
    this.privateIP = privateIP;
  }


  public FreeIpaInstance publicIP(String publicIP) {
    this.publicIP = publicIP;
    return this;
  }

   /**
   * The public IP of the instance.
   * @return publicIP
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PUBLIC_I_P)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPublicIP() {
    return publicIP;
  }


  @JsonProperty(JSON_PROPERTY_PUBLIC_I_P)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPublicIP(String publicIP) {
    this.publicIP = publicIP;
  }


  public FreeIpaInstance sshPort(Integer sshPort) {
    this.sshPort = sshPort;
    return this;
  }

   /**
   * The SSH port of the instance.
   * @return sshPort
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SSH_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSshPort() {
    return sshPort;
  }


  @JsonProperty(JSON_PROPERTY_SSH_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSshPort(Integer sshPort) {
    this.sshPort = sshPort;
  }


  public FreeIpaInstance subnetId(String subnetId) {
    this.subnetId = subnetId;
    return this;
  }

   /**
   * The subnet ID of the instance.
   * @return subnetId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBNET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSubnetId() {
    return subnetId;
  }


  @JsonProperty(JSON_PROPERTY_SUBNET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubnetId(String subnetId) {
    this.subnetId = subnetId;
  }


  public FreeIpaInstance attachedVolumes(List<AttachedVolumeDetail> attachedVolumes) {
    this.attachedVolumes = attachedVolumes;
    return this;
  }

  public FreeIpaInstance addAttachedVolumesItem(AttachedVolumeDetail attachedVolumesItem) {
    if (this.attachedVolumes == null) {
      this.attachedVolumes = new ArrayList<>();
    }
    this.attachedVolumes.add(attachedVolumesItem);
    return this;
  }

   /**
   * List of volumes attached to this instance.
   * @return attachedVolumes
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ATTACHED_VOLUMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<AttachedVolumeDetail> getAttachedVolumes() {
    return attachedVolumes;
  }


  @JsonProperty(JSON_PROPERTY_ATTACHED_VOLUMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAttachedVolumes(List<AttachedVolumeDetail> attachedVolumes) {
    this.attachedVolumes = attachedVolumes;
  }


  /**
   * Return true if this FreeIpaInstance object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FreeIpaInstance freeIpaInstance = (FreeIpaInstance) o;
    return Objects.equals(this.availabilityZone, freeIpaInstance.availabilityZone) &&
        Objects.equals(this.discoveryFQDN, freeIpaInstance.discoveryFQDN) &&
        Objects.equals(this.instanceId, freeIpaInstance.instanceId) &&
        Objects.equals(this.instanceGroup, freeIpaInstance.instanceGroup) &&
        Objects.equals(this.instanceStatus, freeIpaInstance.instanceStatus) &&
        Objects.equals(this.instanceStatusReason, freeIpaInstance.instanceStatusReason) &&
        Objects.equals(this.instanceType, freeIpaInstance.instanceType) &&
        Objects.equals(this.instanceVmType, freeIpaInstance.instanceVmType) &&
        Objects.equals(this.lifeCycle, freeIpaInstance.lifeCycle) &&
        Objects.equals(this.privateIP, freeIpaInstance.privateIP) &&
        Objects.equals(this.publicIP, freeIpaInstance.publicIP) &&
        Objects.equals(this.sshPort, freeIpaInstance.sshPort) &&
        Objects.equals(this.subnetId, freeIpaInstance.subnetId) &&
        Objects.equals(this.attachedVolumes, freeIpaInstance.attachedVolumes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(availabilityZone, discoveryFQDN, instanceId, instanceGroup, instanceStatus, instanceStatusReason, instanceType, instanceVmType, lifeCycle, privateIP, publicIP, sshPort, subnetId, attachedVolumes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FreeIpaInstance {\n");
    sb.append("    availabilityZone: ").append(toIndentedString(availabilityZone)).append("\n");
    sb.append("    discoveryFQDN: ").append(toIndentedString(discoveryFQDN)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    instanceGroup: ").append(toIndentedString(instanceGroup)).append("\n");
    sb.append("    instanceStatus: ").append(toIndentedString(instanceStatus)).append("\n");
    sb.append("    instanceStatusReason: ").append(toIndentedString(instanceStatusReason)).append("\n");
    sb.append("    instanceType: ").append(toIndentedString(instanceType)).append("\n");
    sb.append("    instanceVmType: ").append(toIndentedString(instanceVmType)).append("\n");
    sb.append("    lifeCycle: ").append(toIndentedString(lifeCycle)).append("\n");
    sb.append("    privateIP: ").append(toIndentedString(privateIP)).append("\n");
    sb.append("    publicIP: ").append(toIndentedString(publicIP)).append("\n");
    sb.append("    sshPort: ").append(toIndentedString(sshPort)).append("\n");
    sb.append("    subnetId: ").append(toIndentedString(subnetId)).append("\n");
    sb.append("    attachedVolumes: ").append(toIndentedString(attachedVolumes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `availabilityZone` to the URL query string
    if (getAvailabilityZone() != null) {
      joiner.add(String.format("%savailabilityZone%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getAvailabilityZone()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `discoveryFQDN` to the URL query string
    if (getDiscoveryFQDN() != null) {
      joiner.add(String.format("%sdiscoveryFQDN%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDiscoveryFQDN()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `instanceId` to the URL query string
    if (getInstanceId() != null) {
      joiner.add(String.format("%sinstanceId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getInstanceId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `instanceGroup` to the URL query string
    if (getInstanceGroup() != null) {
      joiner.add(String.format("%sinstanceGroup%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getInstanceGroup()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `instanceStatus` to the URL query string
    if (getInstanceStatus() != null) {
      joiner.add(String.format("%sinstanceStatus%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getInstanceStatus()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `instanceStatusReason` to the URL query string
    if (getInstanceStatusReason() != null) {
      joiner.add(String.format("%sinstanceStatusReason%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getInstanceStatusReason()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `instanceType` to the URL query string
    if (getInstanceType() != null) {
      joiner.add(String.format("%sinstanceType%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getInstanceType()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `instanceVmType` to the URL query string
    if (getInstanceVmType() != null) {
      joiner.add(String.format("%sinstanceVmType%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getInstanceVmType()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `lifeCycle` to the URL query string
    if (getLifeCycle() != null) {
      joiner.add(String.format("%slifeCycle%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getLifeCycle()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `privateIP` to the URL query string
    if (getPrivateIP() != null) {
      joiner.add(String.format("%sprivateIP%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getPrivateIP()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `publicIP` to the URL query string
    if (getPublicIP() != null) {
      joiner.add(String.format("%spublicIP%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getPublicIP()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `sshPort` to the URL query string
    if (getSshPort() != null) {
      joiner.add(String.format("%ssshPort%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSshPort()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `subnetId` to the URL query string
    if (getSubnetId() != null) {
      joiner.add(String.format("%ssubnetId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSubnetId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `attachedVolumes` to the URL query string
    if (getAttachedVolumes() != null) {
      for (int i = 0; i < getAttachedVolumes().size(); i++) {
        if (getAttachedVolumes().get(i) != null) {
          joiner.add(getAttachedVolumes().get(i).toUrlQueryString(String.format("%sattachedVolumes%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    return joiner.toString();
  }
}

