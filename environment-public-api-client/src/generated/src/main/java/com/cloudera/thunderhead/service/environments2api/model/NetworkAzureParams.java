/*
 * Cloudera Environments Service
 * Cloudera Environments Service is a web service that manages cloud provider access.
 *
 * The version of the OpenAPI document: __API_VERSION__
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudera.thunderhead.service.environments2api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Azure network parameters.
 */
@JsonPropertyOrder({
  NetworkAzureParams.JSON_PROPERTY_NETWORK_ID,
  NetworkAzureParams.JSON_PROPERTY_RESOURCE_GROUP_NAME,
  NetworkAzureParams.JSON_PROPERTY_USE_PUBLIC_IP,
  NetworkAzureParams.JSON_PROPERTY_NETWORK_NAME,
  NetworkAzureParams.JSON_PROPERTY_DATABASE_PRIVATE_DNS_ZONE_ID,
  NetworkAzureParams.JSON_PROPERTY_AKS_PRIVATE_DNS_ZONE_ID,
  NetworkAzureParams.JSON_PROPERTY_ENABLE_OUTBOUND_LOAD_BALANCER,
  NetworkAzureParams.JSON_PROPERTY_FLEXIBLE_SERVER_SUBNET_IDS,
  NetworkAzureParams.JSON_PROPERTY_USE_PUBLIC_DNS_FOR_PRIVATE_AKS
})

public class NetworkAzureParams {
  public static final String JSON_PROPERTY_NETWORK_ID = "networkId";
  @javax.annotation.Nonnull
  private String networkId;

  public static final String JSON_PROPERTY_RESOURCE_GROUP_NAME = "resourceGroupName";
  @javax.annotation.Nonnull
  private String resourceGroupName;

  public static final String JSON_PROPERTY_USE_PUBLIC_IP = "usePublicIp";
  @javax.annotation.Nonnull
  private Boolean usePublicIp;

  public static final String JSON_PROPERTY_NETWORK_NAME = "networkName";
  @javax.annotation.Nullable
  private String networkName;

  public static final String JSON_PROPERTY_DATABASE_PRIVATE_DNS_ZONE_ID = "databasePrivateDnsZoneId";
  @javax.annotation.Nullable
  private String databasePrivateDnsZoneId;

  public static final String JSON_PROPERTY_AKS_PRIVATE_DNS_ZONE_ID = "aksPrivateDnsZoneId";
  @javax.annotation.Nullable
  private String aksPrivateDnsZoneId;

  public static final String JSON_PROPERTY_ENABLE_OUTBOUND_LOAD_BALANCER = "enableOutboundLoadBalancer";
  @javax.annotation.Nullable
  private Boolean enableOutboundLoadBalancer;

  public static final String JSON_PROPERTY_FLEXIBLE_SERVER_SUBNET_IDS = "flexibleServerSubnetIds";
  @javax.annotation.Nullable
  private List<String> flexibleServerSubnetIds = new ArrayList<>();

  public static final String JSON_PROPERTY_USE_PUBLIC_DNS_FOR_PRIVATE_AKS = "usePublicDnsForPrivateAks";
  @javax.annotation.Nullable
  private Boolean usePublicDnsForPrivateAks;

  public NetworkAzureParams() {
  }

  public NetworkAzureParams networkId(@javax.annotation.Nonnull String networkId) {
    
    this.networkId = networkId;
    return this;
  }

  /**
   * The id of the Azure VNet.
   * @return networkId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NETWORK_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getNetworkId() {
    return networkId;
  }


  @JsonProperty(JSON_PROPERTY_NETWORK_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNetworkId(@javax.annotation.Nonnull String networkId) {
    this.networkId = networkId;
  }

  public NetworkAzureParams resourceGroupName(@javax.annotation.Nonnull String resourceGroupName) {
    
    this.resourceGroupName = resourceGroupName;
    return this;
  }

  /**
   * The name of the resource group associated with the VNet.
   * @return resourceGroupName
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RESOURCE_GROUP_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getResourceGroupName() {
    return resourceGroupName;
  }


  @JsonProperty(JSON_PROPERTY_RESOURCE_GROUP_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setResourceGroupName(@javax.annotation.Nonnull String resourceGroupName) {
    this.resourceGroupName = resourceGroupName;
  }

  public NetworkAzureParams usePublicIp(@javax.annotation.Nonnull Boolean usePublicIp) {
    
    this.usePublicIp = usePublicIp;
    return this;
  }

  /**
   * Whether to associate public ip&#39;s to the resources within the network.
   * @return usePublicIp
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_USE_PUBLIC_IP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getUsePublicIp() {
    return usePublicIp;
  }


  @JsonProperty(JSON_PROPERTY_USE_PUBLIC_IP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUsePublicIp(@javax.annotation.Nonnull Boolean usePublicIp) {
    this.usePublicIp = usePublicIp;
  }

  public NetworkAzureParams networkName(@javax.annotation.Nullable String networkName) {
    
    this.networkName = networkName;
    return this;
  }

  /**
   * The name of the Azure VNet.
   * @return networkName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NETWORK_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNetworkName() {
    return networkName;
  }


  @JsonProperty(JSON_PROPERTY_NETWORK_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNetworkName(@javax.annotation.Nullable String networkName) {
    this.networkName = networkName;
  }

  public NetworkAzureParams databasePrivateDnsZoneId(@javax.annotation.Nullable String databasePrivateDnsZoneId) {
    
    this.databasePrivateDnsZoneId = databasePrivateDnsZoneId;
    return this;
  }

  /**
   * The full Azure resource ID of the existing Private DNS Zone used for Flexible Server and Single Server Databases.
   * @return databasePrivateDnsZoneId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATABASE_PRIVATE_DNS_ZONE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDatabasePrivateDnsZoneId() {
    return databasePrivateDnsZoneId;
  }


  @JsonProperty(JSON_PROPERTY_DATABASE_PRIVATE_DNS_ZONE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDatabasePrivateDnsZoneId(@javax.annotation.Nullable String databasePrivateDnsZoneId) {
    this.databasePrivateDnsZoneId = databasePrivateDnsZoneId;
  }

  public NetworkAzureParams aksPrivateDnsZoneId(@javax.annotation.Nullable String aksPrivateDnsZoneId) {
    
    this.aksPrivateDnsZoneId = aksPrivateDnsZoneId;
    return this;
  }

  /**
   * The full Azure resource ID of an existing Private DNS zone used for the AKS.
   * @return aksPrivateDnsZoneId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AKS_PRIVATE_DNS_ZONE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAksPrivateDnsZoneId() {
    return aksPrivateDnsZoneId;
  }


  @JsonProperty(JSON_PROPERTY_AKS_PRIVATE_DNS_ZONE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAksPrivateDnsZoneId(@javax.annotation.Nullable String aksPrivateDnsZoneId) {
    this.aksPrivateDnsZoneId = aksPrivateDnsZoneId;
  }

  public NetworkAzureParams enableOutboundLoadBalancer(@javax.annotation.Nullable Boolean enableOutboundLoadBalancer) {
    
    this.enableOutboundLoadBalancer = enableOutboundLoadBalancer;
    return this;
  }

  /**
   * Whether the outbound load balancer was created for this environment.
   * @return enableOutboundLoadBalancer
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_OUTBOUND_LOAD_BALANCER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnableOutboundLoadBalancer() {
    return enableOutboundLoadBalancer;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_OUTBOUND_LOAD_BALANCER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableOutboundLoadBalancer(@javax.annotation.Nullable Boolean enableOutboundLoadBalancer) {
    this.enableOutboundLoadBalancer = enableOutboundLoadBalancer;
  }

  public NetworkAzureParams flexibleServerSubnetIds(@javax.annotation.Nullable List<String> flexibleServerSubnetIds) {
    
    this.flexibleServerSubnetIds = flexibleServerSubnetIds;
    return this;
  }

  public NetworkAzureParams addFlexibleServerSubnetIdsItem(String flexibleServerSubnetIdsItem) {
    if (this.flexibleServerSubnetIds == null) {
      this.flexibleServerSubnetIds = new ArrayList<>();
    }
    this.flexibleServerSubnetIds.add(flexibleServerSubnetIdsItem);
    return this;
  }

  /**
   * The subnets delegated for Flexible Server database. Accepts either the name or the full resource id.
   * @return flexibleServerSubnetIds
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FLEXIBLE_SERVER_SUBNET_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getFlexibleServerSubnetIds() {
    return flexibleServerSubnetIds;
  }


  @JsonProperty(JSON_PROPERTY_FLEXIBLE_SERVER_SUBNET_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFlexibleServerSubnetIds(@javax.annotation.Nullable List<String> flexibleServerSubnetIds) {
    this.flexibleServerSubnetIds = flexibleServerSubnetIds;
  }

  public NetworkAzureParams usePublicDnsForPrivateAks(@javax.annotation.Nullable Boolean usePublicDnsForPrivateAks) {
    
    this.usePublicDnsForPrivateAks = usePublicDnsForPrivateAks;
    return this;
  }

  /**
   * Use public DNS for all DNS records in a private cluster.
   * @return usePublicDnsForPrivateAks
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USE_PUBLIC_DNS_FOR_PRIVATE_AKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getUsePublicDnsForPrivateAks() {
    return usePublicDnsForPrivateAks;
  }


  @JsonProperty(JSON_PROPERTY_USE_PUBLIC_DNS_FOR_PRIVATE_AKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUsePublicDnsForPrivateAks(@javax.annotation.Nullable Boolean usePublicDnsForPrivateAks) {
    this.usePublicDnsForPrivateAks = usePublicDnsForPrivateAks;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NetworkAzureParams networkAzureParams = (NetworkAzureParams) o;
    return Objects.equals(this.networkId, networkAzureParams.networkId) &&
        Objects.equals(this.resourceGroupName, networkAzureParams.resourceGroupName) &&
        Objects.equals(this.usePublicIp, networkAzureParams.usePublicIp) &&
        Objects.equals(this.networkName, networkAzureParams.networkName) &&
        Objects.equals(this.databasePrivateDnsZoneId, networkAzureParams.databasePrivateDnsZoneId) &&
        Objects.equals(this.aksPrivateDnsZoneId, networkAzureParams.aksPrivateDnsZoneId) &&
        Objects.equals(this.enableOutboundLoadBalancer, networkAzureParams.enableOutboundLoadBalancer) &&
        Objects.equals(this.flexibleServerSubnetIds, networkAzureParams.flexibleServerSubnetIds) &&
        Objects.equals(this.usePublicDnsForPrivateAks, networkAzureParams.usePublicDnsForPrivateAks);
  }

  @Override
  public int hashCode() {
    return Objects.hash(networkId, resourceGroupName, usePublicIp, networkName, databasePrivateDnsZoneId, aksPrivateDnsZoneId, enableOutboundLoadBalancer, flexibleServerSubnetIds, usePublicDnsForPrivateAks);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NetworkAzureParams {\n");
    sb.append("    networkId: ").append(toIndentedString(networkId)).append("\n");
    sb.append("    resourceGroupName: ").append(toIndentedString(resourceGroupName)).append("\n");
    sb.append("    usePublicIp: ").append(toIndentedString(usePublicIp)).append("\n");
    sb.append("    networkName: ").append(toIndentedString(networkName)).append("\n");
    sb.append("    databasePrivateDnsZoneId: ").append(toIndentedString(databasePrivateDnsZoneId)).append("\n");
    sb.append("    aksPrivateDnsZoneId: ").append(toIndentedString(aksPrivateDnsZoneId)).append("\n");
    sb.append("    enableOutboundLoadBalancer: ").append(toIndentedString(enableOutboundLoadBalancer)).append("\n");
    sb.append("    flexibleServerSubnetIds: ").append(toIndentedString(flexibleServerSubnetIds)).append("\n");
    sb.append("    usePublicDnsForPrivateAks: ").append(toIndentedString(usePublicDnsForPrivateAks)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

