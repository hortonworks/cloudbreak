/*
 * Cloudera Environments Service
 * Cloudera Environments Service is a web service that manages cloud provider access.
 *
 * The version of the OpenAPI document: __API_VERSION__
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudera.thunderhead.service.environments2api.model;

import java.util.Objects;
import java.util.Arrays;
import com.cloudera.thunderhead.service.environments2api.model.CreatePrivateEnvironmentRequestDockerUserPass;
import com.cloudera.thunderhead.service.environments2api.model.EnvironmentQuota;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Request object for a create private cloud environment request.
 */
@JsonPropertyOrder({
  CreatePrivateEnvironmentRequest.JSON_PROPERTY_ENVIRONMENT_NAME,
  CreatePrivateEnvironmentRequest.JSON_PROPERTY_ADDRESS,
  CreatePrivateEnvironmentRequest.JSON_PROPERTY_USER,
  CreatePrivateEnvironmentRequest.JSON_PROPERTY_AUTHENTICATION_TOKEN,
  CreatePrivateEnvironmentRequest.JSON_PROPERTY_CLUSTER_NAMES,
  CreatePrivateEnvironmentRequest.JSON_PROPERTY_ENVIRONMENT_QUOTA,
  CreatePrivateEnvironmentRequest.JSON_PROPERTY_KUBE_CONFIG,
  CreatePrivateEnvironmentRequest.JSON_PROPERTY_AUTHENTICATION_TOKEN_TYPE,
  CreatePrivateEnvironmentRequest.JSON_PROPERTY_NAMESPACE_PREFIX,
  CreatePrivateEnvironmentRequest.JSON_PROPERTY_DOMAIN,
  CreatePrivateEnvironmentRequest.JSON_PROPERTY_PLATFORM,
  CreatePrivateEnvironmentRequest.JSON_PROPERTY_DOCKER_CONFIG_JSON,
  CreatePrivateEnvironmentRequest.JSON_PROPERTY_DOCKER_USER_PASS,
  CreatePrivateEnvironmentRequest.JSON_PROPERTY_DESCRIPTION,
  CreatePrivateEnvironmentRequest.JSON_PROPERTY_STORAGE_CLASS
})

public class CreatePrivateEnvironmentRequest {
  public static final String JSON_PROPERTY_ENVIRONMENT_NAME = "environmentName";
  @javax.annotation.Nonnull
  private String environmentName;

  public static final String JSON_PROPERTY_ADDRESS = "address";
  @javax.annotation.Nonnull
  private String address;

  public static final String JSON_PROPERTY_USER = "user";
  @javax.annotation.Nonnull
  private String user;

  public static final String JSON_PROPERTY_AUTHENTICATION_TOKEN = "authenticationToken";
  @javax.annotation.Nonnull
  private String authenticationToken;

  public static final String JSON_PROPERTY_CLUSTER_NAMES = "clusterNames";
  @javax.annotation.Nonnull
  private List<String> clusterNames = new ArrayList<>();

  public static final String JSON_PROPERTY_ENVIRONMENT_QUOTA = "environmentQuota";
  @javax.annotation.Nullable
  private EnvironmentQuota environmentQuota;

  public static final String JSON_PROPERTY_KUBE_CONFIG = "kubeConfig";
  @javax.annotation.Nullable
  private String kubeConfig;

  /**
   * How to interpret the authenticationToken field. Defaults to CLEARTEXT_PASSWORD.
   */
  public enum AuthenticationTokenTypeEnum {
    CLEARTEXT_PASSWORD(String.valueOf("CLEARTEXT_PASSWORD"));

    private String value;

    AuthenticationTokenTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AuthenticationTokenTypeEnum fromValue(String value) {
      for (AuthenticationTokenTypeEnum b : AuthenticationTokenTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_AUTHENTICATION_TOKEN_TYPE = "authenticationTokenType";
  @javax.annotation.Nullable
  private AuthenticationTokenTypeEnum authenticationTokenType;

  public static final String JSON_PROPERTY_NAMESPACE_PREFIX = "namespacePrefix";
  @javax.annotation.Nullable
  private String namespacePrefix = "cdp";

  public static final String JSON_PROPERTY_DOMAIN = "domain";
  @javax.annotation.Nullable
  private String domain;

  public static final String JSON_PROPERTY_PLATFORM = "platform";
  @javax.annotation.Nullable
  private String platform = "OPENSHIFT";

  public static final String JSON_PROPERTY_DOCKER_CONFIG_JSON = "dockerConfigJson";
  @javax.annotation.Nullable
  private String dockerConfigJson;

  public static final String JSON_PROPERTY_DOCKER_USER_PASS = "dockerUserPass";
  @javax.annotation.Nullable
  private CreatePrivateEnvironmentRequestDockerUserPass dockerUserPass;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  @javax.annotation.Nullable
  private String description;

  public static final String JSON_PROPERTY_STORAGE_CLASS = "storageClass";
  @javax.annotation.Nullable
  private String storageClass;

  public CreatePrivateEnvironmentRequest() {
  }

  public CreatePrivateEnvironmentRequest environmentName(@javax.annotation.Nonnull String environmentName) {
    
    this.environmentName = environmentName;
    return this;
  }

  /**
   * The name of the environment. Must contain only lowercase letters, numbers and hyphens.
   * @return environmentName
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ENVIRONMENT_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEnvironmentName() {
    return environmentName;
  }


  @JsonProperty(JSON_PROPERTY_ENVIRONMENT_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEnvironmentName(@javax.annotation.Nonnull String environmentName) {
    this.environmentName = environmentName;
  }

  public CreatePrivateEnvironmentRequest address(@javax.annotation.Nonnull String address) {
    
    this.address = address;
    return this;
  }

  /**
   * The address of the Cloudera Manager managing the Datalake cluster.
   * @return address
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAddress() {
    return address;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAddress(@javax.annotation.Nonnull String address) {
    this.address = address;
  }

  public CreatePrivateEnvironmentRequest user(@javax.annotation.Nonnull String user) {
    
    this.user = user;
    return this;
  }

  /**
   * User name for accessing the Cloudera Manager.
   * @return user
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_USER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUser() {
    return user;
  }


  @JsonProperty(JSON_PROPERTY_USER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUser(@javax.annotation.Nonnull String user) {
    this.user = user;
  }

  public CreatePrivateEnvironmentRequest authenticationToken(@javax.annotation.Nonnull String authenticationToken) {
    
    this.authenticationToken = authenticationToken;
    return this;
  }

  /**
   * A string (text or json) used to authenticate to the Cloudera Manager.
   * @return authenticationToken
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AUTHENTICATION_TOKEN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAuthenticationToken() {
    return authenticationToken;
  }


  @JsonProperty(JSON_PROPERTY_AUTHENTICATION_TOKEN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAuthenticationToken(@javax.annotation.Nonnull String authenticationToken) {
    this.authenticationToken = authenticationToken;
  }

  public CreatePrivateEnvironmentRequest clusterNames(@javax.annotation.Nonnull List<String> clusterNames) {
    
    this.clusterNames = clusterNames;
    return this;
  }

  public CreatePrivateEnvironmentRequest addClusterNamesItem(String clusterNamesItem) {
    if (this.clusterNames == null) {
      this.clusterNames = new ArrayList<>();
    }
    this.clusterNames.add(clusterNamesItem);
    return this;
  }

  /**
   * The name of the cluster(s) to use as a Datalake for the environment.
   * @return clusterNames
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CLUSTER_NAMES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getClusterNames() {
    return clusterNames;
  }


  @JsonProperty(JSON_PROPERTY_CLUSTER_NAMES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setClusterNames(@javax.annotation.Nonnull List<String> clusterNames) {
    this.clusterNames = clusterNames;
  }

  public CreatePrivateEnvironmentRequest environmentQuota(@javax.annotation.Nullable EnvironmentQuota environmentQuota) {
    
    this.environmentQuota = environmentQuota;
    return this;
  }

  /**
   * Get environmentQuota
   * @return environmentQuota
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENVIRONMENT_QUOTA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EnvironmentQuota getEnvironmentQuota() {
    return environmentQuota;
  }


  @JsonProperty(JSON_PROPERTY_ENVIRONMENT_QUOTA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnvironmentQuota(@javax.annotation.Nullable EnvironmentQuota environmentQuota) {
    this.environmentQuota = environmentQuota;
  }

  public CreatePrivateEnvironmentRequest kubeConfig(@javax.annotation.Nullable String kubeConfig) {
    
    this.kubeConfig = kubeConfig;
    return this;
  }

  /**
   * Name of credentials holding kubeconfig for access to the kubernetes cluster paired with this Environment.
   * @return kubeConfig
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_KUBE_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getKubeConfig() {
    return kubeConfig;
  }


  @JsonProperty(JSON_PROPERTY_KUBE_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKubeConfig(@javax.annotation.Nullable String kubeConfig) {
    this.kubeConfig = kubeConfig;
  }

  public CreatePrivateEnvironmentRequest authenticationTokenType(@javax.annotation.Nullable AuthenticationTokenTypeEnum authenticationTokenType) {
    
    this.authenticationTokenType = authenticationTokenType;
    return this;
  }

  /**
   * How to interpret the authenticationToken field. Defaults to CLEARTEXT_PASSWORD.
   * @return authenticationTokenType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTHENTICATION_TOKEN_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AuthenticationTokenTypeEnum getAuthenticationTokenType() {
    return authenticationTokenType;
  }


  @JsonProperty(JSON_PROPERTY_AUTHENTICATION_TOKEN_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthenticationTokenType(@javax.annotation.Nullable AuthenticationTokenTypeEnum authenticationTokenType) {
    this.authenticationTokenType = authenticationTokenType;
  }

  public CreatePrivateEnvironmentRequest namespacePrefix(@javax.annotation.Nullable String namespacePrefix) {
    
    this.namespacePrefix = namespacePrefix;
    return this;
  }

  /**
   * Prefix for all namespaces created by Cloudera Data Platform within this cluster.
   * @return namespacePrefix
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAMESPACE_PREFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNamespacePrefix() {
    return namespacePrefix;
  }


  @JsonProperty(JSON_PROPERTY_NAMESPACE_PREFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNamespacePrefix(@javax.annotation.Nullable String namespacePrefix) {
    this.namespacePrefix = namespacePrefix;
  }

  public CreatePrivateEnvironmentRequest domain(@javax.annotation.Nullable String domain) {
    
    this.domain = domain;
    return this;
  }

  /**
   * default domain suffix to work workload applications to use.
   * @return domain
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDomain() {
    return domain;
  }


  @JsonProperty(JSON_PROPERTY_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDomain(@javax.annotation.Nullable String domain) {
    this.domain = domain;
  }

  public CreatePrivateEnvironmentRequest platform(@javax.annotation.Nullable String platform) {
    
    this.platform = platform;
    return this;
  }

  /**
   * the K8s cluster type used for the environment.
   * @return platform
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PLATFORM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPlatform() {
    return platform;
  }


  @JsonProperty(JSON_PROPERTY_PLATFORM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlatform(@javax.annotation.Nullable String platform) {
    this.platform = platform;
  }

  public CreatePrivateEnvironmentRequest dockerConfigJson(@javax.annotation.Nullable String dockerConfigJson) {
    
    this.dockerConfigJson = dockerConfigJson;
    return this;
  }

  /**
   * docker pull secrets for the K8s cluster. This is expected to be a docker config json.
   * @return dockerConfigJson
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOCKER_CONFIG_JSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDockerConfigJson() {
    return dockerConfigJson;
  }


  @JsonProperty(JSON_PROPERTY_DOCKER_CONFIG_JSON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDockerConfigJson(@javax.annotation.Nullable String dockerConfigJson) {
    this.dockerConfigJson = dockerConfigJson;
  }

  public CreatePrivateEnvironmentRequest dockerUserPass(@javax.annotation.Nullable CreatePrivateEnvironmentRequestDockerUserPass dockerUserPass) {
    
    this.dockerUserPass = dockerUserPass;
    return this;
  }

  /**
   * Get dockerUserPass
   * @return dockerUserPass
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOCKER_USER_PASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreatePrivateEnvironmentRequestDockerUserPass getDockerUserPass() {
    return dockerUserPass;
  }


  @JsonProperty(JSON_PROPERTY_DOCKER_USER_PASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDockerUserPass(@javax.annotation.Nullable CreatePrivateEnvironmentRequestDockerUserPass dockerUserPass) {
    this.dockerUserPass = dockerUserPass;
  }

  public CreatePrivateEnvironmentRequest description(@javax.annotation.Nullable String description) {
    
    this.description = description;
    return this;
  }

  /**
   * An description of the environment.
   * @return description
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = description;
  }

  public CreatePrivateEnvironmentRequest storageClass(@javax.annotation.Nullable String storageClass) {
    
    this.storageClass = storageClass;
    return this;
  }

  /**
   * An existing storage class on this kubernetes cluster. If not specified, the default storage class will be used.
   * @return storageClass
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STORAGE_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStorageClass() {
    return storageClass;
  }


  @JsonProperty(JSON_PROPERTY_STORAGE_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStorageClass(@javax.annotation.Nullable String storageClass) {
    this.storageClass = storageClass;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreatePrivateEnvironmentRequest createPrivateEnvironmentRequest = (CreatePrivateEnvironmentRequest) o;
    return Objects.equals(this.environmentName, createPrivateEnvironmentRequest.environmentName) &&
        Objects.equals(this.address, createPrivateEnvironmentRequest.address) &&
        Objects.equals(this.user, createPrivateEnvironmentRequest.user) &&
        Objects.equals(this.authenticationToken, createPrivateEnvironmentRequest.authenticationToken) &&
        Objects.equals(this.clusterNames, createPrivateEnvironmentRequest.clusterNames) &&
        Objects.equals(this.environmentQuota, createPrivateEnvironmentRequest.environmentQuota) &&
        Objects.equals(this.kubeConfig, createPrivateEnvironmentRequest.kubeConfig) &&
        Objects.equals(this.authenticationTokenType, createPrivateEnvironmentRequest.authenticationTokenType) &&
        Objects.equals(this.namespacePrefix, createPrivateEnvironmentRequest.namespacePrefix) &&
        Objects.equals(this.domain, createPrivateEnvironmentRequest.domain) &&
        Objects.equals(this.platform, createPrivateEnvironmentRequest.platform) &&
        Objects.equals(this.dockerConfigJson, createPrivateEnvironmentRequest.dockerConfigJson) &&
        Objects.equals(this.dockerUserPass, createPrivateEnvironmentRequest.dockerUserPass) &&
        Objects.equals(this.description, createPrivateEnvironmentRequest.description) &&
        Objects.equals(this.storageClass, createPrivateEnvironmentRequest.storageClass);
  }

  @Override
  public int hashCode() {
    return Objects.hash(environmentName, address, user, authenticationToken, clusterNames, environmentQuota, kubeConfig, authenticationTokenType, namespacePrefix, domain, platform, dockerConfigJson, dockerUserPass, description, storageClass);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreatePrivateEnvironmentRequest {\n");
    sb.append("    environmentName: ").append(toIndentedString(environmentName)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    authenticationToken: ").append(toIndentedString(authenticationToken)).append("\n");
    sb.append("    clusterNames: ").append(toIndentedString(clusterNames)).append("\n");
    sb.append("    environmentQuota: ").append(toIndentedString(environmentQuota)).append("\n");
    sb.append("    kubeConfig: ").append(toIndentedString(kubeConfig)).append("\n");
    sb.append("    authenticationTokenType: ").append(toIndentedString(authenticationTokenType)).append("\n");
    sb.append("    namespacePrefix: ").append(toIndentedString(namespacePrefix)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("    dockerConfigJson: ").append(toIndentedString(dockerConfigJson)).append("\n");
    sb.append("    dockerUserPass: ").append(toIndentedString(dockerUserPass)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    storageClass: ").append(toIndentedString(storageClass)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

