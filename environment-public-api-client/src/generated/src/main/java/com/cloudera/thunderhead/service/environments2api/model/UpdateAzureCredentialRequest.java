/*
 * Cloudera Environments Service
 * Cloudera Environments Service is a web service that manages cloud provider access.
 *
 * The version of the OpenAPI document: __API_VERSION__
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudera.thunderhead.service.environments2api.model;

import java.util.Objects;
import java.util.Arrays;
import com.cloudera.thunderhead.service.environments2api.model.UpdateAzureCredentialRequestAppBased;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Request object for an update Azure credential request.
 */
@JsonPropertyOrder({
  UpdateAzureCredentialRequest.JSON_PROPERTY_CREDENTIAL_NAME,
  UpdateAzureCredentialRequest.JSON_PROPERTY_SUBSCRIPTION_ID,
  UpdateAzureCredentialRequest.JSON_PROPERTY_TENANT_ID,
  UpdateAzureCredentialRequest.JSON_PROPERTY_APP_BASED,
  UpdateAzureCredentialRequest.JSON_PROPERTY_DESCRIPTION
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.5.0")
public class UpdateAzureCredentialRequest {
  public static final String JSON_PROPERTY_CREDENTIAL_NAME = "credentialName";
  private String credentialName;

  public static final String JSON_PROPERTY_SUBSCRIPTION_ID = "subscriptionId";
  private String subscriptionId;

  public static final String JSON_PROPERTY_TENANT_ID = "tenantId";
  private String tenantId;

  public static final String JSON_PROPERTY_APP_BASED = "appBased";
  private UpdateAzureCredentialRequestAppBased appBased;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public UpdateAzureCredentialRequest() {
  }

  public UpdateAzureCredentialRequest credentialName(String credentialName) {
    
    this.credentialName = credentialName;
    return this;
  }

   /**
   * The name of the credential.
   * @return credentialName
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREDENTIAL_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCredentialName() {
    return credentialName;
  }


  @JsonProperty(JSON_PROPERTY_CREDENTIAL_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCredentialName(String credentialName) {
    this.credentialName = credentialName;
  }


  public UpdateAzureCredentialRequest subscriptionId(String subscriptionId) {
    
    this.subscriptionId = subscriptionId;
    return this;
  }

   /**
   * The Azure subscription ID.
   * @return subscriptionId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSubscriptionId() {
    return subscriptionId;
  }


  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSubscriptionId(String subscriptionId) {
    this.subscriptionId = subscriptionId;
  }


  public UpdateAzureCredentialRequest tenantId(String tenantId) {
    
    this.tenantId = tenantId;
    return this;
  }

   /**
   * The Azure AD tenant ID for the Azure subscription.
   * @return tenantId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTenantId() {
    return tenantId;
  }


  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTenantId(String tenantId) {
    this.tenantId = tenantId;
  }


  public UpdateAzureCredentialRequest appBased(UpdateAzureCredentialRequestAppBased appBased) {
    
    this.appBased = appBased;
    return this;
  }

   /**
   * Get appBased
   * @return appBased
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_APP_BASED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UpdateAzureCredentialRequestAppBased getAppBased() {
    return appBased;
  }


  @JsonProperty(JSON_PROPERTY_APP_BASED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAppBased(UpdateAzureCredentialRequestAppBased appBased) {
    this.appBased = appBased;
  }


  public UpdateAzureCredentialRequest description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * A description for the credential.
   * @return description
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateAzureCredentialRequest updateAzureCredentialRequest = (UpdateAzureCredentialRequest) o;
    return Objects.equals(this.credentialName, updateAzureCredentialRequest.credentialName) &&
        Objects.equals(this.subscriptionId, updateAzureCredentialRequest.subscriptionId) &&
        Objects.equals(this.tenantId, updateAzureCredentialRequest.tenantId) &&
        Objects.equals(this.appBased, updateAzureCredentialRequest.appBased) &&
        Objects.equals(this.description, updateAzureCredentialRequest.description);
  }

  @Override
  public int hashCode() {
    return Objects.hash(credentialName, subscriptionId, tenantId, appBased, description);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateAzureCredentialRequest {\n");
    sb.append("    credentialName: ").append(toIndentedString(credentialName)).append("\n");
    sb.append("    subscriptionId: ").append(toIndentedString(subscriptionId)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    appBased: ").append(toIndentedString(appBased)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

