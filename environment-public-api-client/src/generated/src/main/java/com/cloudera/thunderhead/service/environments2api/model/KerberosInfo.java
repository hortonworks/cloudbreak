/*
 * Cloudera Environments Service
 * Cloudera Environments Service is a web service that manages cloud provider access.
 *
 * The version of the OpenAPI document: __API_VERSION__
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudera.thunderhead.service.environments2api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The kerberos information for on premises datalake cluster.
 */
@JsonPropertyOrder({
  KerberosInfo.JSON_PROPERTY_KDC_TYPE,
  KerberosInfo.JSON_PROPERTY_KERBEROS_REALM,
  KerberosInfo.JSON_PROPERTY_KDC_HOST,
  KerberosInfo.JSON_PROPERTY_KDC_HOST_IP,
  KerberosInfo.JSON_PROPERTY_KERBERIZED
})

public class KerberosInfo {
  public static final String JSON_PROPERTY_KDC_TYPE = "kdcType";
  @javax.annotation.Nullable
  private String kdcType;

  public static final String JSON_PROPERTY_KERBEROS_REALM = "kerberosRealm";
  @javax.annotation.Nullable
  private String kerberosRealm;

  public static final String JSON_PROPERTY_KDC_HOST = "kdcHost";
  @javax.annotation.Nullable
  private String kdcHost;

  public static final String JSON_PROPERTY_KDC_HOST_IP = "kdcHostIp";
  @javax.annotation.Nullable
  private String kdcHostIp;

  public static final String JSON_PROPERTY_KERBERIZED = "kerberized";
  @javax.annotation.Nullable
  private Boolean kerberized;

  public KerberosInfo() {
  }

  public KerberosInfo kdcType(@javax.annotation.Nullable String kdcType) {
    
    this.kdcType = kdcType;
    return this;
  }

  /**
   * Type of KDC.
   * @return kdcType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_KDC_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getKdcType() {
    return kdcType;
  }


  @JsonProperty(JSON_PROPERTY_KDC_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKdcType(@javax.annotation.Nullable String kdcType) {
    this.kdcType = kdcType;
  }

  public KerberosInfo kerberosRealm(@javax.annotation.Nullable String kerberosRealm) {
    
    this.kerberosRealm = kerberosRealm;
    return this;
  }

  /**
   * Kerberos realm.
   * @return kerberosRealm
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_KERBEROS_REALM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getKerberosRealm() {
    return kerberosRealm;
  }


  @JsonProperty(JSON_PROPERTY_KERBEROS_REALM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKerberosRealm(@javax.annotation.Nullable String kerberosRealm) {
    this.kerberosRealm = kerberosRealm;
  }

  public KerberosInfo kdcHost(@javax.annotation.Nullable String kdcHost) {
    
    this.kdcHost = kdcHost;
    return this;
  }

  /**
   * KDC host.
   * @return kdcHost
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_KDC_HOST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getKdcHost() {
    return kdcHost;
  }


  @JsonProperty(JSON_PROPERTY_KDC_HOST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKdcHost(@javax.annotation.Nullable String kdcHost) {
    this.kdcHost = kdcHost;
  }

  public KerberosInfo kdcHostIp(@javax.annotation.Nullable String kdcHostIp) {
    
    this.kdcHostIp = kdcHostIp;
    return this;
  }

  /**
   * KDC host IP address.
   * @return kdcHostIp
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_KDC_HOST_IP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getKdcHostIp() {
    return kdcHostIp;
  }


  @JsonProperty(JSON_PROPERTY_KDC_HOST_IP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKdcHostIp(@javax.annotation.Nullable String kdcHostIp) {
    this.kdcHostIp = kdcHostIp;
  }

  public KerberosInfo kerberized(@javax.annotation.Nullable Boolean kerberized) {
    
    this.kerberized = kerberized;
    return this;
  }

  /**
   * Whether kerberized or not.
   * @return kerberized
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_KERBERIZED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getKerberized() {
    return kerberized;
  }


  @JsonProperty(JSON_PROPERTY_KERBERIZED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKerberized(@javax.annotation.Nullable Boolean kerberized) {
    this.kerberized = kerberized;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KerberosInfo kerberosInfo = (KerberosInfo) o;
    return Objects.equals(this.kdcType, kerberosInfo.kdcType) &&
        Objects.equals(this.kerberosRealm, kerberosInfo.kerberosRealm) &&
        Objects.equals(this.kdcHost, kerberosInfo.kdcHost) &&
        Objects.equals(this.kdcHostIp, kerberosInfo.kdcHostIp) &&
        Objects.equals(this.kerberized, kerberosInfo.kerberized);
  }

  @Override
  public int hashCode() {
    return Objects.hash(kdcType, kerberosRealm, kdcHost, kdcHostIp, kerberized);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KerberosInfo {\n");
    sb.append("    kdcType: ").append(toIndentedString(kdcType)).append("\n");
    sb.append("    kerberosRealm: ").append(toIndentedString(kerberosRealm)).append("\n");
    sb.append("    kdcHost: ").append(toIndentedString(kdcHost)).append("\n");
    sb.append("    kdcHostIp: ").append(toIndentedString(kdcHostIp)).append("\n");
    sb.append("    kerberized: ").append(toIndentedString(kerberized)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

