/*
 * Cloudera Environments Service
 * Cloudera Environments Service is a web service that manages cloud provider access.
 *
 * The version of the OpenAPI document: __API_VERSION__
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudera.thunderhead.service.environments2api.model;

import java.util.Objects;
import java.util.Arrays;
import com.cloudera.thunderhead.service.environments2api.model.AnonymizationRuleRequest;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Request object for testing text input against provided account telemetry anonymization rules.
 */
@JsonPropertyOrder({
  TestAccountTelemetryRulesRequest.JSON_PROPERTY_TEST_INPUT,
  TestAccountTelemetryRulesRequest.JSON_PROPERTY_RULES
})

public class TestAccountTelemetryRulesRequest {
  public static final String JSON_PROPERTY_TEST_INPUT = "testInput";
  @javax.annotation.Nonnull
  private String testInput;

  public static final String JSON_PROPERTY_RULES = "rules";
  @javax.annotation.Nonnull
  private List<AnonymizationRuleRequest> rules = new ArrayList<>();

  public TestAccountTelemetryRulesRequest() {
  }

  public TestAccountTelemetryRulesRequest testInput(@javax.annotation.Nonnull String testInput) {
    
    this.testInput = testInput;
    return this;
  }

  /**
   * Text input that will be tested against the provided account telemetry anonymization rules.
   * @return testInput
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TEST_INPUT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTestInput() {
    return testInput;
  }


  @JsonProperty(JSON_PROPERTY_TEST_INPUT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTestInput(@javax.annotation.Nonnull String testInput) {
    this.testInput = testInput;
  }

  public TestAccountTelemetryRulesRequest rules(@javax.annotation.Nonnull List<AnonymizationRuleRequest> rules) {
    
    this.rules = rules;
    return this;
  }

  public TestAccountTelemetryRulesRequest addRulesItem(AnonymizationRuleRequest rulesItem) {
    if (this.rules == null) {
      this.rules = new ArrayList<>();
    }
    this.rules.add(rulesItem);
    return this;
  }

  /**
   * List of anonymization rules that are applied on logs that are shipped to Cloudera
   * @return rules
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RULES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<AnonymizationRuleRequest> getRules() {
    return rules;
  }


  @JsonProperty(JSON_PROPERTY_RULES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRules(@javax.annotation.Nonnull List<AnonymizationRuleRequest> rules) {
    this.rules = rules;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestAccountTelemetryRulesRequest testAccountTelemetryRulesRequest = (TestAccountTelemetryRulesRequest) o;
    return Objects.equals(this.testInput, testAccountTelemetryRulesRequest.testInput) &&
        Objects.equals(this.rules, testAccountTelemetryRulesRequest.rules);
  }

  @Override
  public int hashCode() {
    return Objects.hash(testInput, rules);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestAccountTelemetryRulesRequest {\n");
    sb.append("    testInput: ").append(toIndentedString(testInput)).append("\n");
    sb.append("    rules: ").append(toIndentedString(rules)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

