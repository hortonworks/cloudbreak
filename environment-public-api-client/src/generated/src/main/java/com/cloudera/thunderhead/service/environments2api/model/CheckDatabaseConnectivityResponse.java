/*
 * Cloudera Environments Service
 * Cloudera Environments Service is a web service that manages cloud provider access.
 *
 * The version of the OpenAPI document: __API_VERSION__
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudera.thunderhead.service.environments2api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Response object for checking Database connectivity.
 */
@JsonPropertyOrder({
  CheckDatabaseConnectivityResponse.JSON_PROPERTY_RESULT,
  CheckDatabaseConnectivityResponse.JSON_PROPERTY_MESSAGE
})

public class CheckDatabaseConnectivityResponse {
  /**
   * Result of the connectivity check.
   */
  public enum ResultEnum {
    SUCCESS(String.valueOf("SUCCESS")),
    
    FAILURE(String.valueOf("FAILURE"));

    private String value;

    ResultEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ResultEnum fromValue(String value) {
      for (ResultEnum b : ResultEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_RESULT = "result";
  @javax.annotation.Nonnull
  private ResultEnum result;

  public static final String JSON_PROPERTY_MESSAGE = "message";
  @javax.annotation.Nullable
  private String message;

  public CheckDatabaseConnectivityResponse() {
  }

  public CheckDatabaseConnectivityResponse result(@javax.annotation.Nonnull ResultEnum result) {
    
    this.result = result;
    return this;
  }

  /**
   * Result of the connectivity check.
   * @return result
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RESULT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ResultEnum getResult() {
    return result;
  }


  @JsonProperty(JSON_PROPERTY_RESULT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setResult(@javax.annotation.Nonnull ResultEnum result) {
    this.result = result;
  }

  public CheckDatabaseConnectivityResponse message(@javax.annotation.Nullable String message) {
    
    this.message = message;
    return this;
  }

  /**
   * Message explaining the result.
   * @return message
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMessage() {
    return message;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessage(@javax.annotation.Nullable String message) {
    this.message = message;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CheckDatabaseConnectivityResponse checkDatabaseConnectivityResponse = (CheckDatabaseConnectivityResponse) o;
    return Objects.equals(this.result, checkDatabaseConnectivityResponse.result) &&
        Objects.equals(this.message, checkDatabaseConnectivityResponse.message);
  }

  @Override
  public int hashCode() {
    return Objects.hash(result, message);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CheckDatabaseConnectivityResponse {\n");
    sb.append("    result: ").append(toIndentedString(result)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

