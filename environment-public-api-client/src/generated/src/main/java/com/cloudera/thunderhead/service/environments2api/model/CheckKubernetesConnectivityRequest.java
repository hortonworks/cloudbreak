/*
 * Cloudera Environments Service
 * Cloudera Environments Service is a web service that manages cloud provider access.
 *
 * The version of the OpenAPI document: __API_VERSION__
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudera.thunderhead.service.environments2api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Request object for checking Kubernetes connectivity.
 */
@JsonPropertyOrder({
  CheckKubernetesConnectivityRequest.JSON_PROPERTY_KUBE_CONFIG,
  CheckKubernetesConnectivityRequest.JSON_PROPERTY_FORMAT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.5.0")
public class CheckKubernetesConnectivityRequest {
  public static final String JSON_PROPERTY_KUBE_CONFIG = "kubeConfig";
  private String kubeConfig;

  /**
   * Format of Kubernetes configuration file. Defaults to YAML.
   */
  public enum FormatEnum {
    YAML("YAML");

    private String value;

    FormatEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static FormatEnum fromValue(String value) {
      for (FormatEnum b : FormatEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_FORMAT = "format";
  private FormatEnum format;

  public CheckKubernetesConnectivityRequest() {
  }

  public CheckKubernetesConnectivityRequest kubeConfig(String kubeConfig) {
    
    this.kubeConfig = kubeConfig;
    return this;
  }

   /**
   * Content of Kubernetes configuration file as a text blob in YAML format.
   * @return kubeConfig
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_KUBE_CONFIG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getKubeConfig() {
    return kubeConfig;
  }


  @JsonProperty(JSON_PROPERTY_KUBE_CONFIG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setKubeConfig(String kubeConfig) {
    this.kubeConfig = kubeConfig;
  }


  public CheckKubernetesConnectivityRequest format(FormatEnum format) {
    
    this.format = format;
    return this;
  }

   /**
   * Format of Kubernetes configuration file. Defaults to YAML.
   * @return format
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FormatEnum getFormat() {
    return format;
  }


  @JsonProperty(JSON_PROPERTY_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFormat(FormatEnum format) {
    this.format = format;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CheckKubernetesConnectivityRequest checkKubernetesConnectivityRequest = (CheckKubernetesConnectivityRequest) o;
    return Objects.equals(this.kubeConfig, checkKubernetesConnectivityRequest.kubeConfig) &&
        Objects.equals(this.format, checkKubernetesConnectivityRequest.format);
  }

  @Override
  public int hashCode() {
    return Objects.hash(kubeConfig, format);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CheckKubernetesConnectivityRequest {\n");
    sb.append("    kubeConfig: ").append(toIndentedString(kubeConfig)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

