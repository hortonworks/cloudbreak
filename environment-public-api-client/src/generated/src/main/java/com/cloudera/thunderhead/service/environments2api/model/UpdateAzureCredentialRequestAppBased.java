/*
 * Cloudera Environments Service
 * Cloudera Environments Service is a web service that manages cloud provider access.
 *
 * The version of the OpenAPI document: __API_VERSION__
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudera.thunderhead.service.environments2api.model;

import java.util.Objects;
import java.util.Arrays;
import com.cloudera.thunderhead.service.environments2api.model.AzureAuthenticationTypeProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Additional configurations needed for app-based authentication.
 */
@JsonPropertyOrder({
  UpdateAzureCredentialRequestAppBased.JSON_PROPERTY_AUTHENTICATION_TYPE,
  UpdateAzureCredentialRequestAppBased.JSON_PROPERTY_APPLICATION_ID
})
@JsonTypeName("UpdateAzureCredentialRequest_appBased")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.5.0")
public class UpdateAzureCredentialRequestAppBased {
  public static final String JSON_PROPERTY_AUTHENTICATION_TYPE = "authenticationType";
  private AzureAuthenticationTypeProperties authenticationType;

  public static final String JSON_PROPERTY_APPLICATION_ID = "applicationId";
  private String applicationId;

  public UpdateAzureCredentialRequestAppBased() {
  }

  public UpdateAzureCredentialRequestAppBased authenticationType(AzureAuthenticationTypeProperties authenticationType) {
    
    this.authenticationType = authenticationType;
    return this;
  }

   /**
   * Get authenticationType
   * @return authenticationType
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AUTHENTICATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AzureAuthenticationTypeProperties getAuthenticationType() {
    return authenticationType;
  }


  @JsonProperty(JSON_PROPERTY_AUTHENTICATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAuthenticationType(AzureAuthenticationTypeProperties authenticationType) {
    this.authenticationType = authenticationType;
  }


  public UpdateAzureCredentialRequestAppBased applicationId(String applicationId) {
    
    this.applicationId = applicationId;
    return this;
  }

   /**
   * The id of the application registered in Azure.
   * @return applicationId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_APPLICATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getApplicationId() {
    return applicationId;
  }


  @JsonProperty(JSON_PROPERTY_APPLICATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setApplicationId(String applicationId) {
    this.applicationId = applicationId;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateAzureCredentialRequestAppBased updateAzureCredentialRequestAppBased = (UpdateAzureCredentialRequestAppBased) o;
    return Objects.equals(this.authenticationType, updateAzureCredentialRequestAppBased.authenticationType) &&
        Objects.equals(this.applicationId, updateAzureCredentialRequestAppBased.applicationId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authenticationType, applicationId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateAzureCredentialRequestAppBased {\n");
    sb.append("    authenticationType: ").append(toIndentedString(authenticationType)).append("\n");
    sb.append("    applicationId: ").append(toIndentedString(applicationId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

