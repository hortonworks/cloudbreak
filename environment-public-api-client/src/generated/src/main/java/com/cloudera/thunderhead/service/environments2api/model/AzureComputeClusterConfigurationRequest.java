/*
 * Cloudera Environments Service
 * Cloudera Environments Service is a web service that manages cloud provider access.
 *
 * The version of the OpenAPI document: __API_VERSION__
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudera.thunderhead.service.environments2api.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Request object for creating Externalized compute cluster for the environment.
 */
@JsonPropertyOrder({
  AzureComputeClusterConfigurationRequest.JSON_PROPERTY_PRIVATE_CLUSTER,
  AzureComputeClusterConfigurationRequest.JSON_PROPERTY_KUBE_API_AUTHORIZED_IP_RANGES,
  AzureComputeClusterConfigurationRequest.JSON_PROPERTY_OUTBOUND_TYPE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.5.0")
public class AzureComputeClusterConfigurationRequest {
  public static final String JSON_PROPERTY_PRIVATE_CLUSTER = "privateCluster";
  private Boolean privateCluster;

  public static final String JSON_PROPERTY_KUBE_API_AUTHORIZED_IP_RANGES = "kubeApiAuthorizedIpRanges";
  private String kubeApiAuthorizedIpRanges;

  /**
   * Customize cluster egress with defined outbound type in Azure Kubernetes Service.
   */
  public enum OutboundTypeEnum {
    UDR("udr");

    private String value;

    OutboundTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OutboundTypeEnum fromValue(String value) {
      for (OutboundTypeEnum b : OutboundTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_OUTBOUND_TYPE = "outboundType";
  private OutboundTypeEnum outboundType;

  public AzureComputeClusterConfigurationRequest() { 
  }

  public AzureComputeClusterConfigurationRequest privateCluster(Boolean privateCluster) {
    this.privateCluster = privateCluster;
    return this;
  }

   /**
   * If true, creates private cluster
   * @return privateCluster
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRIVATE_CLUSTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getPrivateCluster() {
    return privateCluster;
  }


  @JsonProperty(JSON_PROPERTY_PRIVATE_CLUSTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrivateCluster(Boolean privateCluster) {
    this.privateCluster = privateCluster;
  }


  public AzureComputeClusterConfigurationRequest kubeApiAuthorizedIpRanges(String kubeApiAuthorizedIpRanges) {
    this.kubeApiAuthorizedIpRanges = kubeApiAuthorizedIpRanges;
    return this;
  }

   /**
   * Kubernetes API authorized IP ranges in CIDR notation. Mutually exclusive with privateCluster. Default value is 0.0.0.0/0.
   * @return kubeApiAuthorizedIpRanges
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_KUBE_API_AUTHORIZED_IP_RANGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getKubeApiAuthorizedIpRanges() {
    return kubeApiAuthorizedIpRanges;
  }


  @JsonProperty(JSON_PROPERTY_KUBE_API_AUTHORIZED_IP_RANGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKubeApiAuthorizedIpRanges(String kubeApiAuthorizedIpRanges) {
    this.kubeApiAuthorizedIpRanges = kubeApiAuthorizedIpRanges;
  }


  public AzureComputeClusterConfigurationRequest outboundType(OutboundTypeEnum outboundType) {
    this.outboundType = outboundType;
    return this;
  }

   /**
   * Customize cluster egress with defined outbound type in Azure Kubernetes Service.
   * @return outboundType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OUTBOUND_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OutboundTypeEnum getOutboundType() {
    return outboundType;
  }


  @JsonProperty(JSON_PROPERTY_OUTBOUND_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOutboundType(OutboundTypeEnum outboundType) {
    this.outboundType = outboundType;
  }


  /**
   * Return true if this AzureComputeClusterConfigurationRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AzureComputeClusterConfigurationRequest azureComputeClusterConfigurationRequest = (AzureComputeClusterConfigurationRequest) o;
    return Objects.equals(this.privateCluster, azureComputeClusterConfigurationRequest.privateCluster) &&
        Objects.equals(this.kubeApiAuthorizedIpRanges, azureComputeClusterConfigurationRequest.kubeApiAuthorizedIpRanges) &&
        Objects.equals(this.outboundType, azureComputeClusterConfigurationRequest.outboundType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(privateCluster, kubeApiAuthorizedIpRanges, outboundType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AzureComputeClusterConfigurationRequest {\n");
    sb.append("    privateCluster: ").append(toIndentedString(privateCluster)).append("\n");
    sb.append("    kubeApiAuthorizedIpRanges: ").append(toIndentedString(kubeApiAuthorizedIpRanges)).append("\n");
    sb.append("    outboundType: ").append(toIndentedString(outboundType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `privateCluster` to the URL query string
    if (getPrivateCluster() != null) {
      joiner.add(String.format("%sprivateCluster%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getPrivateCluster()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `kubeApiAuthorizedIpRanges` to the URL query string
    if (getKubeApiAuthorizedIpRanges() != null) {
      joiner.add(String.format("%skubeApiAuthorizedIpRanges%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getKubeApiAuthorizedIpRanges()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `outboundType` to the URL query string
    if (getOutboundType() != null) {
      joiner.add(String.format("%soutboundType%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getOutboundType()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

