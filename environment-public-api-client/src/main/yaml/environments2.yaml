swagger: '2.0'
x-endpoint-name: environments2
x-display-name: environments
x-products: CDP
x-form-factors: public,private
x-cdp-releases: PUBLIC
x-audit: true
info:
  version: __API_VERSION__
  title: Cloudera Environments Service
  license:
    name: Apache 2.0
  description: Cloudera Environments Service is a web service that manages cloud provider access.
  termsOfService: https://www.cloudera.com/legal/commercial-terms-and-conditions.html
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /api/v1/environments2/getCredentialPrerequisites:
    post:
      summary: This API provides the credential prerequisites for the given cloud provider.
      description: Provides the the credential prerequisites for the given cloud provider.
      operationId: getCredentialPrerequisites
      x-mutating: false
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetCredentialPrerequisitesRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetCredentialPrerequisitesResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/getGovCloudCredentialPrerequisites:
    post:
      summary: This API provides the credential prerequisites for GovCloud for the enabled providers.
      description: Provides the the credential prerequisites for GovCloud for the enabled providers.
      operationId: getGovCloudCredentialPrerequisites
      x-mutating: false
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetGovCloudCredentialPrerequisitesRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetGovCloudCredentialPrerequisitesResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/createAWSEnvironment:
    post:
      summary: Creates a new AWS environment by providing the cloud provider access and network information. A FreeIPA server will be automatically provisioned when an environment is created.
      description: Creates a new AWS environment.
      operationId: createAWSEnvironment
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateAWSEnvironmentRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/CreateAWSEnvironmentResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/createYARNEnvironment:
    post:
      summary: Creates a new YCLOUD environment by providing the cloud provider access and network information.
      description: Creates a new YCLOUD environment.
      operationId: createYARNEnvironment
      x-hidden: true
      x-hidden-reason: 'FOR_CLOUDERA_USE_ONLY: This is an internal Cloudera feature.'
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateYARNEnvironmentRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/CreateYARNEnvironmentResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/createAWSGovCloudEnvironment:
    post:
      summary: Creates a new AWS GovCloud environment by providing the cloud provider access and network information. A FreeIPA server will be automatically provisioned when an environment is created.
      description: Creates a new AWS GovCloud environment.
      operationId: createAWSGovCloudEnvironment
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateAWSGovCloudEnvironmentRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/CreateAWSGovCloudEnvironmentResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/createAzureEnvironment:
    post:
      summary: Creates a new Azure environment by providing the cloud provider access and network information. A FreeIPA server will be automatically provisioned when an environment is created.
      description: Creates a new Azure environment.
      operationId: createAzureEnvironment
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateAzureEnvironmentRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/CreateAzureEnvironmentResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/createGCPEnvironment:
    post:
      summary: Creates a new GCP environment by providing the cloud provider access and network information. A FreeIPA server will be automatically provisioned when an environment is created.
      description: Creates a new GCP environment.
      operationId: createGCPEnvironment
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateGCPEnvironmentRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/CreateGCPEnvironmentResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/createPrivateEnvironment:
    post:
      summary: Creates a new Private Cloud environment by providing the Cloudera Manager address and credentials.
      description: Creates a new Private Cloud environment.
      operationId: createPrivateEnvironment
      x-form-factors: private
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreatePrivateEnvironmentRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/CreatePrivateEnvironmentResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/createYARNCredential:
    post:
      summary: Creates a new YCLOUD credential that can be attatched to an environment. The credential is used for authorization to provision resources such as compute instances within your cloud provider account.
      description: Creates a new YCLOUD credential.
      operationId: createYARNCredential
      x-hidden: true
      x-hidden-reason: 'FOR_CLOUDERA_USE_ONLY: This is an internal Cloudera feature.'
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateYARNCredentialRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/CreateYARNCredentialResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/createAWSCredential:
    post:
      summary: Creates a new AWS credential that can be attatched to an environment. The credential is used for authorization to provision resources such as compute instances within your cloud provider account.
      description: Creates a new AWS credential.
      operationId: createAWSCredential
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateAWSCredentialRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/CreateAWSCredentialResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/createAWSGovCloudCredential:
    post:
      summary: Creates a new AWS credential for GovCloud that can be attatched to an environment. The credential is used for authorization to provision resources such as compute instances within your cloud provider account.
      description: Creates a new AWS credential for GovCloud.
      operationId: createAWSGovCloudCredential
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateAWSGovCloudCredentialRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/CreateAWSGovCloudCredentialResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/createAzureCredential:
    post:
      summary: Creates a new Azure credential that can be attached to an environment. The credential is used for authorization to provision resources such as compute instances within your cloud provider account.
      description: Creates a new Azure credential.
      operationId: createAzureCredential
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateAzureCredentialRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/CreateAzureCredentialResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/updateAzureCredential:
    post:
      summary: Updates a new certificate based Azure credential that can be attached to an environment. The credential is used for authorization to provision resources such as compute instances within your cloud provider account.
      description: Updates a certificate based Azure credential.
      operationId: updateAzureCredential
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateAzureCredentialRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpdateAzureCredentialResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/updateAwsCredential:
    post:
      summary: Updates an AWS credential that can be attached to an environment. The credential is used for authorization to provision resources such as compute instances within your cloud provider account.
      description: Updates an AWS credential.
      operationId: updateAwsCredential
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateAwsCredentialRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpdateAwsCredentialResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/createGCPCredential:
    post:
      summary: Creates a new GCP credential that can be attatched to an environment. The credential is used for authorization to provision resources such as compute instances within your cloud provider account.
      description: Creates a new GCP credential.
      operationId: createGCPCredential
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateGCPCredentialRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/CreateGCPCredentialResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/changeEnvironmentCredential:
    post:
      summary: Changes the credential for an environment.
      description: Changes the credential for an environment.
      operationId: changeEnvironmentCredential
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ChangeEnvironmentCredentialRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ChangeEnvironmentCredentialResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/updateAzureEncryptionResources:
    post:
      summary: Update the Azure encryption resources for the environment.
      description: Updates the Azure encryption resources for the environment. Enables the SSE with CMK for newly created Azure resources for the existing environment.
      operationId: updateAzureEncryptionResources
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateAzureEncryptionResourcesRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpdateAzureEncryptionResourcesResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/updateAzureDatabaseResources:
    post:
      summary: Update the Azure database resources for the environment.
      description: Updates the Azure database resources for the environment. Enables deploying private Flexible Server for the existing environment.
      operationId: updateAzureDatabaseResources
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateAzureDatabaseResourcesRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpdateAzureDatabaseResourcesResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/updateAzureAvailabilityZones:
    post:
      summary: Update the Availability Zones for the Azure environment.
      description: Updates the Availability Zones for the Azure environment.
      operationId: updateAzureAvailabilityZones
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateAzureAvailabilityZonesRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpdateAzureAvailabilityZonesResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/updateGcpAvailabilityZones:
    post:
      summary: Update the Availability Zones for the GCP environment.
      description: Updates the Availability Zones for the GCP environment.
      operationId: updateGcpAvailabilityZones
      x-hidden: true
      x-hidden-reason: IN_DEVELOPMENT
      x-hidden-retention: BETA
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateGcpAvailabilityZonesRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpdateGcpAvailabilityZonesResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/disableS3Guard:
    post:
      summary: Disable the S3Guard for an environment.
      description: Disables the S3Guard for an environment.
      operationId: disableS3Guard
      x-hidden: true
      x-hidden-reason: IN_DEVELOPMENT
      x-mutating: true
      x-entitlement: CDP_RAW_S3
      x-hidden-retention: BETA
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DisableS3GuardRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DisableS3GuardResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/updateAwsDiskEncryptionParameters:
    post:
      summary: Update the AWS encryption key ARN for the environment.
      description: Updates the AWS encryption key ARN for the environment. Enables the server side encryption with CMK for newly created AWS resources for the existing environment.
      operationId: updateAwsDiskEncryptionParameters
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateAwsDiskEncryptionParametersRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpdateAwsDiskEncryptionParametersResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/deleteEnvironment:
    post:
      summary: Deletes an environment.
      description: Deletes an environment.
      operationId: deleteEnvironment
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteEnvironmentRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DeleteEnvironmentResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/deleteCredential:
    post:
      summary: Deletes a credential.
      description: Deletes a credential.
      operationId: deleteCredential
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteCredentialRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DeleteCredentialResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/listEnvironments:
    post:
      summary: Lists environments.
      description: Lists environments.
      operationId: listEnvironments
      x-mutating: false
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListEnvironmentsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListEnvironmentsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/listCredentials:
    post:
      summary: Lists credentials.
      description: Lists credentials.
      operationId: listCredentials
      x-mutating: false
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListCredentialsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListCredentialsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/describeEnvironment:
    post:
      summary: Describes an environment.
      description: Describes an environment.
      operationId: describeEnvironment
      x-mutating: false
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeEnvironmentRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DescribeEnvironmentResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/syncAllUsers:
    post:
      summary: Synchronizes environments with all users and groups state with CDP.
      description: Synchronizes environments with all users and groups state with CDP.
      operationId: syncAllUsers
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/SyncAllUsersRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/SyncAllUsersResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/syncUser:
    post:
      summary: Synchronizes environments with single user to the FreeIPA servers.
      description: Synchronizes environments with single user to the FreeIPA servers.
      operationId: syncUser
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/SyncUserRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/SyncUserResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/syncStatus:
    post:
      summary: Returns status of the sync operation for the operation id.
      description: Returns status of the sync operation for the operation id. Operation Id should be one of the previously request sync operation.
      operationId: syncStatus
      x-mutating: false
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/SyncStatusRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/SyncStatusResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/lastSyncStatus:
    post:
      summary: Returns status of the sync operation for the environment crn.
      description: Returns status of the sync operation for the environment based on crn.
      operationId: lastSyncStatus
      x-mutating: false
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/LastSyncStatusRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/LastSyncStatusResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/listConnectedDataServices:
    post:
      summary: Returns the list of Data Services and their cluster names that are attached the given environment.
      description: Returns the list of Data Services and their cluster names that are attached to the given environment.
      operationId: listConnectedDataServices
      x-mutating: false
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListConnectedDataServicesRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListConnectedDataServicesResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/getEnvironmentUserSyncState:
    post:
      summary: Returns the user synchronization state for an environment.
      description: Returns the user synchronization state for an environment.
      operationId: getEnvironmentUserSyncState
      x-mutating: false
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetEnvironmentUserSyncStateRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetEnvironmentUserSyncStateResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/getIdBrokerMappingsCliForEnv:
    post:
      summary: Endpoint to obtain the cli command to be able to recreate the IDBroker mapping of the given environment.
      description: Get cli command to be able to recreate the IDBroker mapping of the given environment.
      x-hidden: true
      x-hidden-reason: FOR_CLOUDERA_USE_ONLY
      operationId: getIdBrokerMappingsCliForEnv
      x-mutating: false
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetIdBrokerMappingsCliForEnvRequest'
      responses:
        200:
          description: Response object which contains the valid CLI command to (re)create the IDBroker mapping of the given environment.
          schema:
            $ref: '#/definitions/GetIdBrokerMappingsCliForEnvResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/setPassword:
    post:
      summary: Sets workload user's password and updates into all environments.
      description: Deprecated. Use 'iam set-workload-password' command instead.
      operationId: setPassword
      x-deprecated: true
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetPasswordRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/SetPasswordResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/getRootCertificate:
    post:
      summary: This API provides contents of public certificate for an environment.
      description: This API provides the contents of the root public certificate for an environment. The contents are a base64 encoded blob between -----BEGIN CERTIFICATE----- and -----END CERTIFICATE-----. This certificate can be imported by end users to establish trust with environment resources.
      operationId: getRootCertificate
      x-mutating: false
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetRootCertificateRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetRootCertificateResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/getKeytab:
    post:
      summary: Retrieves a keytab for a user or machine user.
      description: Retrieves a keytab for a user or machine user.
      operationId: getKeytab
      x-mutating: false
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetKeytabRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetKeytabResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/getAutomatedSyncEnvironmentStatus:
    post:
      summary: Gets the the automated sync status for the environment.
      description: Gets the the automated sync status for the environment.
      operationId: getAutomatedSyncEnvironmentStatus
      x-hidden: true
      x-hidden-reason: IN_DEVELOPMENT
      x-hidden-retention: BETA
      x-no-compatibility-guarantee: true
      x-entitlement: WORKLOAD_IAM_SYNC
      x-mutating: false
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetAutomatedSyncEnvironmentStatusRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetAutomatedSyncEnvironmentStatusResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/synchronizeAllEnvironments:
    post:
      summary: Synchronizes all environments in the calling account.
      description: Invokes the automated user sync service to synchronize all environments in the calling account.
      operationId: synchronizeAllEnvironments
      x-hidden: true
      x-hidden-reason: IN_DEVELOPMENT
      x-no-compatibility-guarantee: true
      x-hidden-retention: BETA
      x-right: environments/synchronizeAllEnvironments
      x-entitlement: WORKLOAD_IAM_SYNC
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/SynchronizeAllEnvironmentsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/SynchronizeAllEnvironmentsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/getIdBrokerMappings:
    post:
      summary: Gets all ID Broker mappings for an environment.
      description: Gets all ID Broker mappings for an environment.
      operationId: getIdBrokerMappings
      x-mutating: false
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetIdBrokerMappingsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetIdBrokerMappingsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/setIdBrokerMappings:
    post:
      summary: Sets all ID Broker mappings for an environment.
      description: Sets all ID Broker mappings for an environment. Overwrites all existing mappings.
      operationId: setIdBrokerMappings
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetIdBrokerMappingsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/SetIdBrokerMappingsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/deleteIdBrokerMappings:
    post:
      summary: Deletes all ID Broker mappings for an environment.
      description: Deletes all ID Broker mappings for an environment.
      operationId: deleteIdBrokerMappings
      x-hidden: true
      x-hidden-reason: 'FOR_CLOUDERA_USE_ONLY: Mappings are deleted automatically when the environment is deleted, so there is no need to call this API in normal production use. Used only for debugging and testing.'
      x-no-compatibility-guarantee: true
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteIdBrokerMappingsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DeleteIdBrokerMappingsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/syncIdBrokerMappings:
    post:
      summary: Syncs all ID Broker mappings for an environment.
      description: Syncs all ID Broker mappings to all datalake clusters in an environment.
      operationId: syncIdBrokerMappings
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/SyncIdBrokerMappingsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/SyncIdBrokerMappingsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/getIdBrokerMappingsSyncStatus:
    post:
      summary: Gets ID Broker mappings sync status.
      description: Gets the status of the most recent ID Broker mappings sync operation, if any.
      operationId: getIdBrokerMappingsSyncStatus
      x-mutating: false
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetIdBrokerMappingsSyncStatusRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetIdBrokerMappingsSyncStatusResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/startEnvironment:
    post:
      summary: Start an environment.
      description: Start an environment.
      operationId: startEnvironment
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/StartEnvironmentRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/StartEnvironmentResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/stopEnvironment:
    post:
      summary: Stop an environment.
      description: Stop an environment.
      operationId: stopEnvironment
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/StopEnvironmentRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/StopEnvironmentResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/getConfigFiles:
    post:
      description: Get the client configs for a Datalake.
      summary: Get the client configs for a Datalake.
      operationId: getConfigFiles
      x-mutating: false
      produces:
        - application/json
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetConfigFilesRequest'
      responses:
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
        200:
          description: search results matching criteria
          schema:
            $ref: '#/definitions/GetConfigFilesResponse'
      x-hidden: true
      x-hidden-reason: FOR_CLOUDERA_USE_ONLY
      x-no-compatibility-guarantee: true
  /api/v1/environments2/getTruststorePassword:
    post:
      description: Get the truststore password for a Datalake.
      summary: Get the truststore password for a Datalake.
      operationId: getTruststorePassword
      x-mutating: false
      produces:
        - application/json
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetTruststorePasswordRequest'
      responses:
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
        200:
          description: search results matching criteria
          schema:
            $ref: '#/definitions/GetTruststorePasswordResponse'
      x-hidden: true
      x-hidden-reason: FOR_CLOUDERA_USE_ONLY
      x-no-compatibility-guarantee: true
  /api/v1/environments2/getOperation:
    post:
      summary: Get the latest (in progress or finished) operation for the environment resource.
      description: Get the latest (in progress or finished) operation for the environment resource.
      operationId: getOperation
      x-mutating: false
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetOperationRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetOperationResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/checkEnvironmentConnectivity:
    post:
      summary: Checks connectivity to a new Private Cloud environment by trying to access the Cloudera Manager address with provided credentials.
      description: Checks connectivity to a Private Cloud environment.
      operationId: checkEnvironmentConnectivity
      x-form-factors: private
      x-mutating: false
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/CheckEnvironmentConnectivityRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/CheckEnvironmentConnectivityResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/checkDatabaseConnectivity:
    post:
      summary: Checks Database connectivity based on the input parameters.
      description: Checks Database connectivity based on the input parameters.
      operationId: checkDatabaseConnectivity
      x-form-factors: private
      x-mutating: false
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/CheckDatabaseConnectivityRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/CheckDatabaseConnectivityResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/checkKubernetesConnectivity:
    post:
      summary: Checks connectivity to a Kubernetes address with provided kubeconfig files.
      description: Checks connectivity to a Kubernetes address with provided kubeconfig files.
      operationId: checkKubernetesConnectivity
      x-form-factors: private
      x-mutating: false
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/CheckKubernetesConnectivityRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/CheckKubernetesConnectivityResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/getFreeipaStatus:
    post:
      summary: Get the status of the FreeIPA services
      description: Gets the status of the FreeIPA nodes services and connectivity.
      operationId: getFreeipaStatus
      x-mutating: false
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetFreeipaStatusRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetFreeipaStatusResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/attachFreeIpaRecipes:
    post:
      summary: Attach recipes to FreeIPA.
      description: Attach recipes to FreeIPA.
      operationId: attachFreeIpaRecipes
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/AttachFreeIpaRecipesRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/AttachFreeIpaRecipesResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/detachFreeIpaRecipes:
    post:
      summary: Detach recipes from FreeIPA.
      description: Detach recipes from FreeIPA.
      operationId: detachFreeIpaRecipes
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DetachFreeIpaRecipesRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DetachFreeIpaRecipesResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/repairFreeipa:
    post:
      summary: Repairs the FreeIPA nodes.
      description: Repairs the FreeIPA nodes if they are in a non working state.
      operationId: repairFreeipa
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/RepairFreeipaRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/RepairFreeipaResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/rebuildFreeipa:
    post:
      summary: Recreate FreeIPA in case of disaster.
      description: If FreeIPA backups are available and all of the FreeIPA nodes are lost, this command recreates FreeIPA from scratch and restores backup.
      operationId: rebuildFreeipa
      x-mutating: true
      x-hidden: true
      x-hidden-reason: IN_DEVELOPMENT
      x-hidden-retention: BETA
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/RebuildFreeipaRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/RebuildFreeipaResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/getRepairFreeipaStatus:
    post:
      summary: Returns status of the repair operation for the operation id.
      description: Returns status of the repair operation for the operation id. Operation Id should be one of the previously requested repair operation ids.
      operationId: getRepairFreeipaStatus
      x-mutating: false
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetRepairFreeipaStatusRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetRepairFreeipaStatusResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/createProxyConfig:
    post:
      summary: Creates a new proxy config that can be attatched to an environment.
      description: Creates a new proxy config.
      operationId: createProxyConfig
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateProxyConfigRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/CreateProxyConfigResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/listProxyConfigs:
    post:
      summary: Lists proxy configs.
      description: Lists proxy configs.
      operationId: listProxyConfigs
      x-mutating: false
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListProxyConfigsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListProxyConfigsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/deleteProxyConfig:
    post:
      summary: Deletes a proxy config.
      description: Deletes a proxy config.
      operationId: deleteProxyConfig
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteProxyConfigRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DeleteProxyConfigResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/setTelemetryFeatures:
    post:
      summary: Configure environment level telemetry feature setting.
      description: Configure environment level telemetry feature setting.
      operationId: setTelemetryFeatures
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetTelemetryFeaturesRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/SetTelemetryFeaturesResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/getEnvironmentSetting:
    post:
      x-form-factors: private
      summary: Read a configuration setting from the environment service.
      description: Read a configuration setting from the environment service.
      operationId: getEnvironmentSetting
      x-mutating: false
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetEnvironmentSettingRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetEnvironmentSettingResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/setEnvironmentSetting:
    post:
      x-form-factors: private
      summary: Read a configuration setting from the environment service.
      description: Read a configuration setting from the environment service.
      operationId: setEnvironmentSetting
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetEnvironmentSettingRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/SetEnvironmentSettingResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/setAccountTelemetry:
    post:
      summary: Set account level telemetry settings. (telemetry features and anonymization rules)
      description: Set account level telemetry settings. (telemetry features and anonymization rules)
      operationId: setAccountTelemetry
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetAccountTelemetryRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/SetAccountTelemetryResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/getAccountTelemetry:
    post:
      summary: Get account level telemetry settings. (telemetry features and anonymization rules)
      description: Get account level telemetry settings. (telemetry features and anonymization rules)
      operationId: getAccountTelemetry
      x-mutating: false
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetAccountTelemetryRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetAccountTelemetryResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/getAccountTelemetryDefault:
    post:
      summary: Get default account level telemetry settings. Helps to set back the default values.
      description: Get default account level telemetry settings. Helps to set back the default values.
      operationId: getAccountTelemetryDefault
      x-mutating: false
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetAccountTelemetryDefaultRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetAccountTelemetryDefaultResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/testAccountTelemetryRules:
    post:
      summary: Test anonymization rules (for account telemetry) against text input.
      description: Test anonymization rules (for account telemetry) against text input.
      operationId: testAccountTelemetryRules
      x-mutating: false
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/TestAccountTelemetryRulesRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/TestAccountTelemetryRulesResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/getFreeipaLogDescriptors:
    post:
      summary: Gather log descriptors that are used for diagnostics collection.
      description: Gather log descriptors that are used for diagnostics collection.
      operationId: getFreeipaLogDescriptors
      x-mutating: false
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetFreeipaLogDescriptorsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetFreeipaLogDescriptorsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/collectFreeipaDiagnostics:
    post:
      summary: Start FreeIPA diagnostics collection
      description: Start FreeIPA diagnostics collection
      operationId: collectFreeipaDiagnostics
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/CollectFreeipaDiagnosticsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/CollectFreeipaDiagnosticsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/listFreeipaDiagnostics:
    post:
      summary: List recent FreeIPA diagnostics collections
      description: List recent FreeIPA diagnostics collection
      operationId: listFreeipaDiagnostics
      x-mutating: false
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListFreeipaDiagnosticsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListFreeipaDiagnosticsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/cancelFreeipaDiagnostics:
    post:
      summary: Cancel running FreeIPA diagnostics collections
      description: Cancel running FreeIPA diagnostics collection
      operationId: cancelFreeipaDiagnostics
      x-mutating: false
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/CancelFreeipaDiagnosticsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/CancelFreeipaDiagnosticsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/getCliForCredential:
    post:
      summary: Get create credential CLI command based on private API request or response object
      description: Get create credential CLI command based on private API request or response object
      x-hidden: true
      x-hidden-reason: FOR_CLOUDERA_USE_ONLY
      operationId: getCliForCredential
      x-mutating: false
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetCliForCredentialRequest'
      responses:
        200:
          description: Create credential CLI command for valid request.
          schema:
            $ref: '#/definitions/GetCliForCredentialResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/getCliForEnvironment:
    post:
      summary: Get create environment CLI command based on private API request or response object
      description: Get create environment CLI command based on private API request or response object
      x-hidden: true
      x-hidden-reason: FOR_CLOUDERA_USE_ONLY
      operationId: getCliForEnvironment
      x-mutating: false
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetCliForEnvironmentRequest'
      responses:
        200:
          description: Create environment CLI command for valid request.
          schema:
            $ref: '#/definitions/GetCliForEnvironmentResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/getAuditCredentialPrerequisites:
    post:
      summary: This API provides the audit credential prerequisites for the given cloud provider.
      description: Provides the the audit credential prerequisites for the given cloud provider.
      operationId: getAuditCredentialPrerequisites
      x-mutating: false
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetAuditCredentialPrerequisitesRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetAuditCredentialPrerequisitesResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/getGovCloudAuditCredentialPrerequisites:
    post:
      summary: This API provides the audit credential prerequisites for GovCloud for the enabled providers.
      description: Provides the the audit credential prerequisites for GovCloud for the enabled providers.
      operationId: getGovCloudAuditCredentialPrerequisites
      x-mutating: false
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetGovCloudAuditCredentialPrerequisitesRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetGovCloudAuditCredentialPrerequisitesResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/listAuditCredentials:
    post:
      summary: Lists audit credentials.
      description: Lists audit credentials.
      operationId: listAuditCredentials
      x-mutating: false
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListAuditCredentialsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListAuditCredentialsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/setAWSAuditCredential:
    post:
      summary: Creates or updates the AWS audit credential for the account. The credential is used for authorization to archive audit events to your cloud storage.
      description: Creates or updates the AWS audit credential for the account. The response will only contain details appropriate to AWS.
      operationId: setAWSAuditCredential
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetAWSAuditCredentialRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/SetAWSAuditCredentialResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/setAWSGovCloudAuditCredential:
    post:
      summary: Creates or updates the AWS GovCloud audit credential for the account. The credential is used for authorization to archive audit events to your cloud storage.
      description: Creates or updates the AWS GovCloud audit credential for the account. The response will only contain details appropriate to AWS.
      operationId: setAWSGovCloudAuditCredential
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetAWSGovCloudAuditCredentialRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/SetAWSGovCloudAuditCredentialResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/setAzureAuditCredential:
    post:
      summary: Creates or updates the Azure audit credential for the account. The credential is used for authorization to archive audit events to your cloud storage.
      description: Creates or updates the Azure audit credential for the account. The response will only contain details appropriate to Azure.
      operationId: setAzureAuditCredential
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetAzureAuditCredentialRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/SetAzureAuditCredentialResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/setGCPAuditCredential:
    post:
      summary: Creates or updates the GCP audit credential for the account. The credential is used for authorization to archive audit events to your cloud storage.
      description: Creates or updates the GCP audit credential for the account. The response will only contain details appropriate to GCP.
      operationId: setGCPAuditCredential
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetGCPAuditCredentialRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/SetGCPAuditCredentialResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/deleteAuditCredential:
    post:
      summary: Deletes an audit credential.
      description: Deletes an audit credential.
      operationId: deleteAuditCredential
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteAuditCredentialRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DeleteAuditCredentialResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/setEndpointAccessGateway:
    post:
      summary: Sets endpoint access gateway settings for the environment.
      description: Sets endpoint access gateway settings for the environment.
      operationId: setEndpointAccessGateway
      x-mutating: true
      x-entitlement: CDP_PUBLIC_ENDPOINT_ACCESS_GATEWAY_FOR_EXISTING_ENVIRONMENTS
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetEndpointAccessGatewayRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/SetEndpointAccessGatewayResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/updateSshKey:
    post:
      summary: Updates the designated SSH key for the given environment. The newly added SSH key will only be used for the Cloudera Data Hub clusters created within the environment after the new SSH key were added. All the existing environment resources such as the Data Lake, FreeIPA, and any existing Cloudera Data Hub clusters will remain within the SSH key originally defined during environment creation.
      description: Updates the designated SSH key for the given environment. The newly added SSH key will only be used for the Cloudera Data Hub clusters created within the environment after the new SSH key were added. All the existing environment resources such as the Data Lake, FreeIPA, and any existing Cloudera Data Hub clusters will remain within the SSH key originally defined during environment creation.
      operationId: updateSshKey
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateSshKeyRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpdateSshKeyResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/updateSubnet:
    post:
      summary: Updates the subnet(s) of the given environment. The newly added subnets will only be used for the Cloudera Data Hub clusters created within the environment after the new subnets were added. All the existing environment resources such as the Data Lake, FreeIPA, and any existing Cloudera Data Hub clusters will remain within the subnets originally defined during environment creation.
      description: Updates the subnet(s) of the given environment. The newly added subnets will only be used for the Cloudera Data Hub clusters created within the environment after the new subnets were added. All the existing environment resources such as the Data Lake, FreeIPA, and any existing Cloudera Data Hub clusters will remain within the subnets originally defined during environment creation.
      operationId: updateSubnet
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateSubnetRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpdateSubnetResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/updateSecurityAccess:
    post:
      summary: Updates the security access settings of the given environment. The newly added security groups will only be used for the Cloudera Data Hub clusters created within the environment after the new security groups were added. All the existing environment resources such as the Data Lake, FreeIPA, and any existing Cloudera Data Hub clusters will remain within the security groups originally defined during environment creation.
      description: Updates the security access settings of the given environment. The newly added security groups will only be used for the Cloudera Data Hub clusters created within the environment after the new security groups were added. All the existing environment resources such as the Data Lake, FreeIPA, and any existing Cloudera Data Hub clusters will remain within the security groups originally defined during environment creation.
      operationId: updateSecurityAccess
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateSecurityAccessRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpdateSecurityAccessResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/updateTags:
    post:
      summary: Updates the user defined tags of the given environment. The newly added tags will only be used for the Cloudera Data Hub clusters created within the environment after the new tags were added. All the existing environment resources such as the Data Lake, FreeIPA, and any existing Cloudera Data Hub clusters will remain with the tags originally defined during environment creation.
      description: Updates the user defined tags of the given environment. The newly added tags will only be used for the Cloudera Data Hub clusters created within the environment after the new tags were added. All the existing environment resources such as the Data Lake, FreeIPA, and any existing Cloudera Data Hub clusters will remain with the tags originally defined during environment creation.
      operationId: updateTags
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateTagsRequest'
      responses:
        200:
          description: Expected response to valid request.
          schema:
            $ref: '#/definitions/UpdateTagsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/validateAwsCloudStorage:
    post:
      summary: Validates AWS cloud storage settings of the given environment.
      description: Validates AWS cloud storage settings of the given environment.
      operationId: validateAwsCloudStorage
      x-mutating: false
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ValidateAwsCloudStorageRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ValidateAwsCloudStorageResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/validateAzureCloudStorage:
    post:
      summary: Validates Azure cloud storage settings of the given environment.
      description: Validates Azure cloud storage settings of the given environment.
      operationId: validateAzureCloudStorage
      x-mutating: false
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ValidateAzureCloudStorageRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ValidateAzureCloudStorageResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/setCatalog:
    post:
      summary: Sets a catalog for a FreeIPA installation.
      description: Sets a catalog for a FreeIPA installation.
      operationId: setCatalog
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetCatalogRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/SetCatalogResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/extractCatalog:
    post:
      summary: Extracts a portion of the image catalog currently used by the environment containing only the FreeIPA image that is in use.
      description: Extracts a portion of the image catalog currently used by the environment containing only the FreeIPA image that is in use.
      operationId: extractCatalog
      x-mutating: false
      x-hidden: true
      x-hidden-reason: IN_DEVELOPMENT
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ExtractCatalogRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ExtractCatalogResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/upgradeFreeipa:
    post:
      summary: Upgrades FreeIPA to the latest or defined image.
      description: FreeIPA is an integrated Identity and Authentication solution that can be used for any of CM, CDP services.
      operationId: upgradeFreeipa
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpgradeFreeipaRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpgradeFreeipaResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/getFreeipaUpgradeOptions:
    post:
      summary: Get available images for FreeIPA upgrade.
      description: Get available images for FreeIPA upgrade. If catalog is defined use the catalog as image source.
      operationId: getFreeipaUpgradeOptions
      x-mutating: false
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetFreeipaUpgradeOptionsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetFreeipaUpgradeOptionsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/upscaleFreeipa:
    post:
      summary: Upscales FreeIPA instances.
      description: FreeIPA is an integrated Identity and Authentication solution that can be used for any of CM, CDP services.
      operationId: upscaleFreeipa
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpscaleFreeipaRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpscaleFreeipaResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/downscaleFreeipa:
    post:
      summary: Downscales FreeIPA instances.
      description: FreeIPA is an integrated Identity and Authentication solution that can be used for any of CM, CDP services.
      operationId: downscaleFreeipa
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DownscaleFreeipaRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DownscaleFreeipaResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/retryFreeipa:
    post:
      summary: Retries the last failed operation on a FreeIPA.
      description: Retries the last failed operation on a FreeIPA.
      operationId: retryFreeipa
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/RetryFreeipaRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/RetryFreeipaResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/startFreeIpaVerticalScaling:
    post:
      summary: Initiates the vertical scaling on FreeIPA.
      description: Initiates the vertical scaling on FreeIPA.
      operationId: startFreeIpaVerticalScaling
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/StartFreeIpaVerticalScalingRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/StartFreeIpaVerticalScalingResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/upgradeCcm:
    post:
      summary: Upgrades Cluster Connectivity Manager on the environment to the latest available version.
      description: Upgrades Cluster Connectivity Manager on the environment to the latest available version.
      operationId: upgradeCcm
      x-mutating: true
      x-no-compatibility-guarantee: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpgradeCcmRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpgradeCcmResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/rotateSaltPassword:
    post:
      summary: Rotate SaltStack user password on FreeIPA instances.
      description: Deprecated, please use rotateFreeipaSecrets with SALT_PASSWORD secretType instead.
      operationId: rotateSaltPassword
      x-mutating: true
      x-deprecated: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/RotateSaltPasswordRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/RotateSaltPasswordResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/rotateFreeipaSecrets:
    post:
      summary: Rotate FreeIPA related secret for FreeIPA instances.
      description: Rotate FreeIPA related secrets for FreeIPA instances.
      operationId: rotateFreeipaSecrets
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/RotateFreeipaSecretsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/RotateFreeipaSecretsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/listFreeipaSecretTypes:
    post:
      summary: Lists all FreeIPA related secret types.
      description: Lists FreeIPA related secret types for FreeIPA instances.
      operationId: listFreeipaSecretTypes
      x-mutating: false
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListFreeipaSecretTypesRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListFreeipaSecretTypesResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/updateOrchestratorState:
    post:
      summary: Run orchestrator engine state update on the FreeIPA cluster.
      description: Run orchestrator engine state update on the FreeIPA cluster.
      operationId: updateOrchestratorState
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateOrchestratorStateRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpdateOrchestratorStateResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/updateProxyConfig:
    post:
      summary: Updates the proxy config of the given environment. The newly added proxy configs will only be used for the Cloudera Data Hub clusters created within the environment after the new proxy configs were added. All the existing environment resources such as the Data Lake, FreeIPA, and any existing Cloudera Data Hub clusters will remain with the proxy configs originally defined during environment creation.
      description: Updates the proxy config of the given environment. The newly added proxy configs will only be used for the Cloudera Data Hub clusters created within the environment after the new proxy configs were added. All the existing environment resources such as the Data Lake, FreeIPA, and any existing Cloudera Data Hub clusters will remain with the proxy configs originally defined during environment creation.
      operationId: updateProxyConfig
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateProxyConfigRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpdateProxyConfigResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/updateAzureImageTermsPolicy:
    post:
      summary: Updates account level Azure Marketplace image policy. CDP is capable to automatically accept Azure Marketplace image terms during cluster deployment. You can use this setting in your account to opt in or opt out this behaviour.
      description: Updates account level Azure Marketplace image policy. CDP is capable to automatically accept Azure Marketplace image terms during cluster deployment. You can use this setting in your account to opt in or opt out this behaviour.
      operationId: updateAzureImageTermsPolicy
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateAzureImageTermsPolicyRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpdateAzureImageTermsPolicyResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/getAzureImageTermsPolicy:
    post:
      summary: Gets account level Azure Marketplace image policy. CDP is capable to automatically accept Azure Marketplace image terms during cluster deployment. You can use this setting in your account to opt in or opt out this behaviour.
      description: Gets account level Azure Marketplace image policy. CDP is capable to automatically accept Azure Marketplace image terms during cluster deployment. You can use this setting in your account to opt in or opt out this behaviour.
      operationId: getAzureImageTermsPolicy
      x-mutating: false
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetAzureImageTermsPolicyRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetAzureImageTermsPolicyResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/updateDataServiceResources:
    post:
      summary: Updates Data Service resources of an environment.
      description: Updates Data Service resources of an environment.
      operationId: updateDataServiceResources
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateDataServiceResourcesRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpdateDataServiceResourcesResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/updateCustomDockerRegistry:
    post:
      summary: Updates custom docker registry CRN of an environment.
      description: Updates custom docker registry CRN of an environment.
      operationId: updateCustomDockerRegistry
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateCustomDockerRegistryRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpdateCustomDockerRegistryResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/updateFreeipaToAwsImdsV2:
    post:
      summary: Updates FreeIPA AWS cluster to use IMDSv2.
      description: Updates FreeIPA AWS cluster to use IMDSv2.
      operationId: updateFreeipaToAwsImdsV2
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateFreeipaToAwsImdsV2Request'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpdateFreeipaToAwsImdsV2Response'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/updateFreeipaToAwsImdsV1:
    post:
      summary: Updates FreeIPA AWS cluster to use IMDSv1.
      description: Updates FreeIPA AWS cluster to use IMDSv1.
      operationId: updateFreeipaToAwsImdsV1
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateFreeipaToAwsImdsV1Request'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpdateFreeipaToAwsImdsV1Response'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/initializeAWSComputeCluster:
    post:
      summary: Initialize compute cluster for AWS environment.
      description: Initialize compute cluster for AWS environment.
      operationId: initializeAWSComputeCluster
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/InitializeAWSComputeClusterRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/InitializeAWSComputeClusterResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/initializeAzureComputeCluster:
    post:
      summary: Initialize compute cluster for Azure environment.
      description: Initialize compute cluster for Azure environment.
      operationId: initializeAzureComputeCluster
      x-mutating: true
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/InitializeAzureComputeClusterRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/InitializeAzureComputeClusterResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/getFreeipaSecretEncryptionKeyIds:
    post:
      summary: Get the secret encryption keys' IDs of the FreeIPA cluster.
      description: Get the secret encryption keys' IDs of the FreeIPA cluster.
      operationId: getFreeipaSecretEncryptionKeyIds
      x-mutating: false
      x-hidden: true
      x-hidden-reason: IN_DEVELOPMENT
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetFreeipaSecretEncryptionKeyIdsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetFreeipaSecretEncryptionKeyIdsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/updateRootVolumeFreeipa:
    post:
      summary: Update root volume size and type in FreeIPA instances.
      description: This updates the root volume size and type for the FreeIPA instances.
      operationId: updateRootVolumeFreeipa
      x-mutating: true
      x-hidden: true
      x-hidden-reason: IN_DEVELOPMENT
      x-form-factors: public
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateRootVolumeFreeipaRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/UpdateRootVolumeFreeipaResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /api/v1/environments2/modifySelinux:
    post:
      summary: Modifies SELinux mode on FreeIPA instances of the environment.
      description: Modifies SELinux mode on FreeIPA instances of the environment.
      operationId: modifySelinux
      x-mutating: true
      x-hidden: true
      x-hidden-reason: IN_DEVELOPMENT
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ModifySelinuxRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ModifySelinuxResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
definitions:
  GetIdBrokerMappingsCliForEnvRequest:
    x-hidden: true
    x-hidden-reason: FOR_CLOUDERA_USE_ONLY
    type: object
    description: Request object to create an IDBroker mapping creation command
    required:
      - environmentName
    properties:
      environmentName:
        type: string
        description: The name of the environment which has the desired IDBroker mapping - to recreate/-use it somewhere else -.
      commandRequestInput:
        type: string
        description: The base64-encoded IDBroker mapping request for a new environment which does not exist yet. Can be null in which case the environment is treated as existing.
  GetIdBrokerMappingsCliForEnvResponse:
    x-hidden: true
    x-hidden-reason: FOR_CLOUDERA_USE_ONLY
    type: object
    description: Response object which contains the IDBroker mapping creation CLI command
    properties:
      command:
        type: string
        description: cdp cli command string
  GetCliForCredentialRequest:
    x-hidden: true
    x-hidden-reason: FOR_CLOUDERA_USE_ONLY
    type: object
    description: Request object for generating a create credential CLI command.
    properties:
      commandCloudProvider:
        description: cloud provider for the command
        $ref: '#/definitions/CloudProviderType'
      commandRequestInput:
        type: string
        description: cloudbreak credential request object of the private API, encoded in base64
      commandResponseInput:
        type: string
        description: cloudbreak credential response object of the private API, encoded in base64
  GetCliForCredentialResponse:
    x-hidden: true
    x-hidden-reason: FOR_CLOUDERA_USE_ONLY
    type: object
    description: Response object for generating a create credential CLI command.
    properties:
      command:
        type: string
        description: cdp cli command string for creating the credential
      additionalCommands:
        type: array
        description: additional cdp cli commands for creating the credential
        items:
          type: string
  GetCliForEnvironmentRequest:
    x-hidden: true
    x-hidden-reason: FOR_CLOUDERA_USE_ONLY
    type: object
    description: Request object for generating a create environment CLI command.
    properties:
      commandCloudProvider:
        description: cloud provider for the command
        $ref: '#/definitions/CloudProviderType'
      commandRequestInput:
        type: string
        description: cloudbreak environment request object of the private API, encoded in base64
      commandResponseInput:
        type: string
        description: cloudbreak environment response object of the private API, encoded in base64
  GetCliForEnvironmentResponse:
    x-hidden: true
    x-hidden-reason: FOR_CLOUDERA_USE_ONLY
    type: object
    description: Response object for generating a create environment CLI command.
    properties:
      command:
        type: string
        description: cdp cli command string for creating the environment
  Error:
    type: object
    description: An object returned on an error.
    properties:
      code:
        type: string
        description: The error code.
      message:
        type: string
        description: The error message.
  UpdateSshKeyRequest:
    type: object
    description: The request object for updating the environment SSH key.
    required:
      - environment
    properties:
      environment:
        type: string
        description: The name or the CRN of the environment.
      newPublicKey:
        type: string
        description: A new SSH public key that is stored locally. Either this or an existing public key ID has to be given.
      existingPublicKeyId:
        type: string
        description: The ID of the existing SSH public key that is stored on the cloud provider side. Either this or a new public key has to be given.
  UpdateSshKeyResponse:
    type: object
    description: Response object for an update environment SSH key request.
    required:
      - environment
    properties:
      environment:
        $ref: '#/definitions/Environment'
        description: The environment.
  UpdateSubnetRequest:
    type: object
    description: The request for updating subnets of the given environment.
    required:
      - environment
    properties:
      environment:
        type: string
        description: The name or the CRN of the environment.
      subnetIds:
        type: array
        items:
          type: string
        description: The selected subnets to update the given environment to.
      endpointAccessGatewaySubnetIds:
        type: array
        items:
          type: string
        description: The selected subnets to update for the given environment's endpoint access gateway.
  UpdateSubnetResponse:
    type: object
    description: Response object for an update environment subnet request.
    required:
      - environment
    properties:
      environment:
        $ref: '#/definitions/Environment'
        description: The environment.
  UpdateSecurityAccessRequest:
    type: object
    description: The request object for updating security access of the given environment.
    required:
      - environment
      - gatewayNodeSecurityGroupId
      - defaultSecurityGroupId
    properties:
      environment:
        type: string
        description: The name or the CRN of the environment.
      gatewayNodeSecurityGroupId:
        type: string
        description: Security group ID where Knox-enabled hosts are placed.
      defaultSecurityGroupId:
        type: string
        description: Security group ID for non-gateway nodes.
  UpdateSecurityAccessResponse:
    type: object
    description: Response object for an update environment security access request.
    required:
      - environment
    properties:
      environment:
        $ref: '#/definitions/Environment'
        description: The environment.
  UpdateTagsRequest:
    type: object
    description: The request object for updating the tags of the given environment.
    required:
      - environment
      - tags
    properties:
      environment:
        type: string
        description: The name or the CRN of the environment.
      tags:
        type: object
        description: Map of tag names to values for the environment.
        additionalProperties:
          type: string
          description: An individual tag value.
  UpdateTagsResponse:
    type: object
    description: Response object for an update environment tags request.
    required:
      - environment
    properties:
      environment:
        $ref: '#/definitions/Environment'
        description: The environment.
  CreateAWSCredentialResponse:
    type: object
    description: Response object for a create AWS credential request.
    required:
      - credential
    properties:
      credential:
        description: The credential object.
        $ref: '#/definitions/Credential'
  CreateYARNCredentialRequest:
    type: object
    description: Request object for a createYARNCredential method.
    x-hidden: true
    x-hidden-reason: 'FOR_CLOUDERA_USE_ONLY: This is an internal Cloudera feature.'
    required:
      - credentialName
      - endpointValue
    properties:
      credentialName:
        type: string
        description: The name of the credential.
      endpointValue:
        type: string
        x-no-paramfile: true
        description: The endpoint of YARN.
      description:
        type: string
        description: A description for the credential.
  CreateYARNCredentialResponse:
    type: object
    description: Response object for a createYARNCredential method.
    x-hidden: true
    x-hidden-reason: 'FOR_CLOUDERA_USE_ONLY: This is an internal Cloudera feature.'
    required:
      - credential
    properties:
      credential:
        description: The credential object.
        $ref: '#/definitions/Credential'
  CreateAWSCredentialRequest:
    type: object
    description: Request object for a create AWS credential request.
    required:
      - credentialName
      - roleArn
    properties:
      credentialName:
        type: string
        description: The name of the credential.
      roleArn:
        type: string
        description: The ARN of the delegated access role.
      description:
        type: string
        description: A description for the credential.
  CreateAWSGovCloudCredentialRequest:
    type: object
    description: Request object for a create AWS credential request for GovCloud.
    required:
      - credentialName
      - roleArn
    properties:
      credentialName:
        type: string
        description: The name of the credential.
      roleArn:
        type: string
        description: The ARN of the delegated access role.
      description:
        type: string
        description: A description for the credential.
  CreateAWSGovCloudCredentialResponse:
    type: object
    description: Response object for a create AWS credential request for GovCloud.
    required:
      - credential
    properties:
      credential:
        description: The credential object.
        $ref: '#/definitions/Credential'
  CreateAzureCredentialRequest:
    type: object
    description: Request object for a create Azure credential request.
    required:
      - credentialName
      - appBased
    properties:
      credentialName:
        type: string
        description: The name of the credential.
      appBased:
        type: object
        description: Additional configurations needed for app-based authentication.
        properties:
          authenticationType:
            $ref: '#/definitions/AzureAuthenticationTypeProperties'
            description: Authentication type of the credential
          applicationId:
            type: string
            description: The id of the application registered in Azure.
          secretKey:
            type: string
            x-sensitive: true
            description: The client secret key (also referred to as application password) for the registered application.
      subscriptionId:
        type: string
        description: The Azure subscription ID. Required for secret based credentials and optional for certificate based ones.
      tenantId:
        type: string
        description: The Azure AD tenant ID for the Azure subscription. Required for secret based credentials and optional for certificate based ones.
      description:
        type: string
        description: A description for the credential.
  UpdateAzureCredentialRequest:
    type: object
    description: Request object for an update Azure credential request.
    required:
      - credentialName
      - subscriptionId
      - tenantId
      - appBased
    properties:
      credentialName:
        type: string
        description: The name of the credential.
      subscriptionId:
        type: string
        description: The Azure subscription ID.
      tenantId:
        type: string
        description: The Azure AD tenant ID for the Azure subscription.
      appBased:
        type: object
        description: Additional configurations needed for app-based authentication.
        required:
          - authenticationType
          - applicationId
        properties:
          authenticationType:
            $ref: '#/definitions/AzureAuthenticationTypeProperties'
            description: Authentication type of the credential
          applicationId:
            type: string
            description: The id of the application registered in Azure.
      description:
        type: string
        description: A description for the credential.
  UpdateAwsCredentialRequest:
    type: object
    description: Request object for an update AWS credential request.
    required:
      - credentialName
      - roleArn
    properties:
      credentialName:
        type: string
        description: The name of the credential.
      roleArn:
        type: string
        description: The ARN of the delegated access role.
      description:
        type: string
        description: A description for the credential.
      skipOrgPolicyDecisions:
        type: boolean
        default: false
        description: Whether to skip organizational policy decision checks or not.
      verifyPermissions:
        type: boolean
        default: false
        description: Whether to verify permissions upon saving or not.
      defaultRegion:
        type: string
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        x-hidden-retention: BETA
        description: The default region for the Credential to be used during API interactions.
  UpdateAwsCredentialResponse:
    type: object
    properties:
      credential:
        description: The credential object.
        $ref: '#/definitions/Credential'
    description: Response object for an update AWS credential request.
  CreateGCPCredentialResponse:
    type: object
    description: Response object for a create GCP credential request.
    required:
      - credential
    properties:
      credential:
        description: The credential object.
        $ref: '#/definitions/Credential'
  CreateGCPCredentialRequest:
    type: object
    description: Request object for a create GCP credential request.
    required:
      - credentialName
      - credentialKey
    properties:
      credentialName:
        type: string
        description: The name of the credential.
      credentialKey:
        type: string
        x-sensitive: true
        description: The JSON key for the service account. Please use local path when using the CLI (e.g. file:///absolute/path/to/cred.json) to avoid exposing the keys in the command line history.
      description:
        type: string
        description: A description for the credential.
  CreateAzureCredentialResponse:
    type: object
    description: Response object for a create Azure credential request.
    required:
      - credential
    properties:
      credential:
        description: The credential object.
        $ref: '#/definitions/Credential'
  Credential:
    type: object
    description: A credential object.
    required:
      - credentialName
      - crn
      - cloudPlatform
    properties:
      credentialName:
        type: string
        description: The name of the credential.
      crn:
        type: string
        description: The CRN of the credential.
      cloudPlatform:
        type: string
        description: The cloud provider.
      created:
        type: string
        format: date-time
        description: Creation date
      description:
        type: string
        description: A description for the credential.
      skipOrgPolicyDecisions:
        type: boolean
        default: false
        description: Skips organization policy decisions during cloud storage validation.
      verifyPermissions:
        type: boolean
        default: false
        description: When true, verifies credential permissions.
      awsCredentialProperties:
        description: The credential properties that closely related to those that have been created on AWS.
        $ref: '#/definitions/AwsCredentialProperties'
      azureCredentialProperties:
        description: The credential properties that closely related to those that have been created on Azure.
        $ref: '#/definitions/AzureCredentialProperties'
      gcpCredentialProperties:
        description: The credential properties that closely related to those that have been created on GCP.
        $ref: '#/definitions/GCPCredentialProperties'
  UpdateAzureCredentialResponse:
    type: object
    properties:
      credential:
        description: The credential object.
        $ref: '#/definitions/Credential'
    description: Response object for an update Azure credential request.
  AwsCredentialProperties:
    type: object
    description: The credential properties that closely related to those that have been created on AWS.
    properties:
      roleArn:
        type: string
        description: The AWS role arn for the given credential.
      govCloud:
        type: boolean
        description: Flag that indicates that the given AWS credential is GovCloud specific.
      defaultRegion:
        type: string
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        x-hidden-retention: BETA
        description: The default region for the Credential to be used during API interactions.
  AzureCredentialProperties:
    type: object
    description: The credential properties that closely related to those that have been created on Azure.
    properties:
      subscriptionId:
        type: string
        description: The Azure subscription ID for the given credential.
      tenantId:
        type: string
        description: The Azure tenant ID for the given credential.
      appId:
        type: string
        description: The ID of the created Azure app.
      authenticationType:
        $ref: '#/definitions/AzureAuthenticationTypeProperties'
        description: Authentication type of the credential
      certificate:
        $ref: '#/definitions/AzureCredentialCertificateProperties'
        description: The public certificate used by the Azure credential.
  AzureAuthenticationTypeProperties:
    type: string
    description: Authentication type of the credential
    enum:
      - CERTIFICATE
      - SECRET
  AzureCredentialCertificateProperties:
    type: object
    description: The certificate used for the credential
    properties:
      status:
        type: string
        description: The status of an Azure credential.
        enum:
          - KEY_GENERATED
          - ACTIVE
      expiration:
        type: string
        description: the expiration timestamp
      expirationDate:
        type: string
        format: date-time
        description: the expiration in date format
      sha512:
        type: string
        description: The SHA512 digest of the certificate
      base64:
        type: string
        description: The certificate (PEM) encoded in base64 format
  GCPCredentialProperties:
    type: object
    description: The credential properties that closely related to those that have created on GCP.
    properties:
      keyType:
        type: string
        description: The GCP credential key type. Json is the only supported key type.
  GetCredentialPrerequisitesRequest:
    type: object
    description: Request object for getting the credential prerequisites for the given cloud platform.
    required:
      - cloudPlatform
    properties:
      cloudPlatform:
        type: string
        enum:
          - AWS
          - AZURE
        description: The kind of cloud platform.
  GetCredentialPrerequisitesResponse:
    type: object
    description: The credential prerequisites for AWS.
    required:
      - cloudPlatform
    properties:
      cloudPlatform:
        type: string
        description: The name of the given cloud platform
      accountId:
        type: string
        description: The provider specific identifier of the account/subscription/project that is used by Cloudbreak.
      aws:
        description: Provides the external id and policy JSON (this one encoded in base64) for AWS credential creation.
        $ref: '#/definitions/AwsCredentialPrerequisitesResponse'
      azure:
        description: Provides the app creation command and role definition Json for Azure credential creation.
        $ref: '#/definitions/AzureCredentialPrerequisitesResponse'
  AwsCredentialPrerequisitesResponse:
    type: object
    description: Response object for getting AWS credential prerequisites.
    required:
      - externalId
      - policyJson
    properties:
      externalId:
        type: string
        description: The cross-account external ID.
      policyJson:
        type: string
        description: The related policy json encoded in base64
      policies:
        type: array
        description: The fine-grained policies related to each service.
        items:
          $ref: '#/definitions/CredentialGranularPolicyResponse'
  AzureCredentialPrerequisitesResponse:
    type: object
    description: Response object for getting Azure credential prerequisites.
    required:
      - appCreationCommand
      - roleDefinitionJson
    properties:
      appCreationCommand:
        type: string
        description: Azure CLI command to create Azure AD Application encoded in base64.
      roleDefinitionJson:
        type: string
        description: The related role definition json encoded in base64
      policies:
        type: array
        description: The fine-grained policies related to each service.
        items:
          $ref: '#/definitions/CredentialGranularPolicyResponse'
  GcpCredentialPrerequisitesResponse:
    type: object
    description: Response object for getting GCP credential prerequisites.
    required:
      - serviceAccountCreationCommand
    properties:
      serviceAccountCreationCommand:
        type: string
        description: GCP CLI command to create service account encoded in base64.
  GetGovCloudCredentialPrerequisitesRequest:
    type: object
    description: Request object for getting the credential prerequisites for GovCloud for the enabled providers.
    required:
      - cloudPlatform
    properties:
      cloudPlatform:
        type: string
        description: The kind of cloud platform. As of now, the following cloud provider is accepted as the value of this field - AWS
  GetGovCloudCredentialPrerequisitesResponse:
    type: object
    description: The credential prerequisites for GovCloud for the enabled providers.
    properties:
      accountId:
        type: string
        description: The provider specific identifier of the account/subscription/project.
      aws:
        description: Provides the external id and policy JSON (this one encoded in base64) for AWS GovCloud credential creation.
        $ref: '#/definitions/AwsCredentialPrerequisitesResponse'
  CredentialGranularPolicyResponse:
    type: object
    description: Response object for the granular policy for the given service or experience.
    required:
      - service
      - policyJson
    properties:
      service:
        type: string
        description: The name of the service that requires the given policy for resource management.
      policyJson:
        type: string
        description: The policy JSON encoded in base64.
  InitializeAWSComputeClusterRequest:
    type: object
    description: Request object for a initialize AWS default compute cluster.
    required:
      - environmentName
    properties:
      environmentName:
        type: string
        description: The name of the environment.
      computeClusterConfiguration:
        description: The Externalized k8s configuration create request for the environment
        $ref: '#/definitions/AWSComputeClusterConfigurationRequest'
  InitializeAzureComputeClusterRequest:
    type: object
    description: Request object for a initialize Azure default compute cluster.
    required:
      - environmentName
    properties:
      environmentName:
        type: string
        description: The name of the environment.
      computeClusterConfiguration:
        description: The Externalized k8s configuration create request for the environment
        $ref: '#/definitions/AzureComputeClusterConfigurationRequest'
  CreateYARNEnvironmentRequest:
    type: object
    description: Request object for a create createYARNEnvironment method.
    x-hidden: true
    x-hidden-reason: 'FOR_CLOUDERA_USE_ONLY: This is an internal Cloudera feature.'
    required:
      - inputJson
    properties:
      inputJson:
        type: string
        description: Provides the input values for YCLOUD environment creation in JSON format.
  CreateAWSEnvironmentRequest:
    type: object
    description: Request object for a create AWS environment request.
    required:
      - environmentName
      - credentialName
      - region
      - securityAccess
      - authentication
      - logStorage
    properties:
      environmentName:
        type: string
        description: The name of the environment. Must contain only lowercase letters, numbers and hyphens.
      credentialName:
        type: string
        description: Name of the credential to use for the environment.
      region:
        type: string
        description: The region of the environment.
      securityAccess:
        description: Security control for FreeIPA and Data Lake deployment.
        $ref: '#/definitions/SecurityAccessRequest'
      authentication:
        description: SSH authentication information for accessing cluster node instances. Users with access to this authentication information have root level access to the Data Lake and Data Hub cluster instances.
        $ref: '#/definitions/AuthenticationRequest'
      logStorage:
        description: AWS storage configuration for cluster and audit logs.
        $ref: '#/definitions/AwsLogStorageRequest'
      vpcId:
        type: string
        description: The Amazon VPC ID.
      subnetIds:
        type: array
        description: One or more subnet IDs within the VPC.
        uniqueItems: true
        items:
          type: string
      networkCidr:
        type: string
        x-hidden: true
        x-deprecated: true
        x-no-compatibility-guarantee: true
        x-hidden-reason: 'FOR_CLOUDERA_USE_ONLY: For testing purposes'
        description: '[Deprecated] The network CIDR. This will create a VPC along with subnets in multiple Availability Zones.'
      createPrivateSubnets:
        type: boolean
        description: Whether to create private subnets or not.
      createServiceEndpoints:
        type: boolean
        description: Whether to create service endpoints or not.
      endpointAccessGatewayScheme:
        type: string
        description: The scheme for the endpoint gateway. PUBLIC creates an external endpoint that can be accessed over the Internet. Defaults to PRIVATE which restricts the traffic to be internal to the VPC.
        enum:
          - PUBLIC
          - PRIVATE
      endpointAccessGatewaySubnetIds:
        type: array
        items:
          type: string
        description: The subnets to use for endpoint access gateway.
      s3GuardTableName:
        type: string
        description: Deprecated. S3Guard was used to ensure consistent S3 updates when S3 was still eventually consistent. With the introduction of Consistent S3, the goal and usage of S3 Guard have become superfluous and defunct.
        x-deprecated: true
      description:
        type: string
        description: An description of the environment.
      enableTunnel:
        type: boolean
        default: true
        description: Whether to enable SSH tunneling for the environment.
      workloadAnalytics:
        type: boolean
        description: When this is enabled, diagnostic information about job and query execution is sent to Workload Manager for Data Hub clusters created within this environment.
      reportDeploymentLogs:
        type: boolean
        default: false
        x-deprecated: true
        description: '[Deprecated] When true, this will report additional diagnostic information back to Cloudera.'
      tunnelType:
        x-hidden: true
        x-hidden-reason: 'FOR_CLOUDERA_USE_ONLY: For testing purposes'
        x-no-compatibility-guarantee: true
        description: The CCM version that will be used for tunneling
        $ref: '#/definitions/TunnelType'
      ccmV2TlsType:
        x-hidden: true
        x-hidden-reason: 'FOR_CLOUDERA_USE_ONLY: For testing purposes'
        x-no-compatibility-guarantee: true
        description: CCM V2 TLS connectivity types
        $ref: '#/definitions/CcmV2TlsType'
      cloudStorageLogging:
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        x-no-compatibility-guarantee: true
        type: boolean
        description: When this is enabled, logs from the VMs will end up on the pre-defined cloud storage (enabled by default).
      freeIpa:
        $ref: '#/definitions/AWSFreeIpaCreationRequest'
        description: The FreeIPA creation request for the environment
      enableComputeCluster:
        description: Enable compute clusters for environment
        type: boolean
      computeClusterConfiguration:
        description: The Externalized k8s configuration create request for the environment
        $ref: '#/definitions/AWSComputeClusterConfigurationRequest'
      image:
        $ref: '#/definitions/FreeIpaImageRequest'
        description: The FreeIPA image request for the environment
      tags:
        type: array
        description: Tags associated with the resources.
        items:
          $ref: '#/definitions/TagRequest'
      proxyConfigName:
        type: string
        description: Name of the proxy config to use for the environment.
      encryptionKeyArn:
        type: string
        description: ARN of the AWS KMS CMK to use for the server-side encryption of AWS storage resources.
      idBrokerMappingSource:
        description: This is an optional field. This is for QE testing purposes and internal use only.
        x-hidden: true
        x-hidden-reason: 'FOR_CLOUDERA_USE_ONLY: This is for QE testing purposes and internal use only.'
        type: string
      customDockerRegistry:
        description: Configures the desired custom docker registry for data services.
        $ref: '#/definitions/CustomDockerRegistryRequest'
      security:
        $ref: '#/definitions/SecurityRequest'
        description: Security related configurations for Data Hub clusters.
        x-no-compatibility-guarantee: true
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        x-hidden-retention: BETA
  CreateAWSGovCloudEnvironmentRequest:
    type: object
    description: Request object for a create AWS GovCloud environment request.
    required:
      - environmentName
      - credentialName
      - region
      - securityAccess
      - authentication
      - logStorage
    properties:
      environmentName:
        type: string
        description: The name of the environment. Must contain only lowercase letters, numbers and hyphens.
      credentialName:
        type: string
        description: Name of the credential to use for the environment.
      region:
        type: string
        description: The region of the environment.
      securityAccess:
        description: Security control for FreeIPA and Data Lake deployment.
        $ref: '#/definitions/SecurityAccessRequest'
      authentication:
        description: SSH authentication information for accessing cluster node instances. Users with access to this authentication information have root level access to the Data Lake and Data Hub cluster instances.
        $ref: '#/definitions/AuthenticationRequest'
      logStorage:
        description: AWS storage configuration for cluster and audit logs.
        $ref: '#/definitions/AwsLogStorageRequest'
      vpcId:
        type: string
        description: The Amazon VPC ID.
      subnetIds:
        type: array
        description: One or more subnet IDs within the VPC.
        uniqueItems: true
        items:
          type: string
      networkCidr:
        type: string
        x-deprecated: true
        description: '[Deprecated] The network CIDR. This will create a VPC along with subnets in multiple Availability Zones.'
      createPrivateSubnets:
        type: boolean
        description: Whether to create private subnets or not.
      createServiceEndpoints:
        type: boolean
        description: Whether to create service endpoints or not.
      endpointAccessGatewayScheme:
        type: string
        description: The scheme for the endpoint gateway. PUBLIC creates an external endpoint that can be accessed over the Internet. Defaults to PRIVATE which restricts the traffic to be internal to the VPC.
        enum:
          - PUBLIC
          - PRIVATE
      endpointAccessGatewaySubnetIds:
        type: array
        items:
          type: string
        description: The subnets to use for endpoint access gateway.
      s3GuardTableName:
        type: string
        description: Deprecated. S3Guard was used to ensure consistent S3 updates when S3 was still eventually consistent. With the introduction of Consistent S3, the goal and usage of S3 Guard have become superfluous and defunct.
        x-deprecated: true
      description:
        type: string
        description: An description of the environment.
      enableTunnel:
        type: boolean
        default: true
        description: Whether to enable SSH tunneling for the environment.
      enableWorkloadAnalytics:
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        x-no-compatibility-guarantee: true
        type: boolean
        description: When this is enabled, diagnostic information about job and query execution is sent to Workload Manager for Data Hub clusters created within this environment.
      workloadAnalytics:
        type: boolean
        description: When this is enabled, diagnostic information about job and query execution is sent to Workload Manager for Data Hub clusters created within this environment.
      reportDeploymentLogs:
        type: boolean
        default: false
        x-deprecated: true
        description: '[Deprecated] When true, this will report additional diagnostic information back to Cloudera.'
      tunnelType:
        x-hidden: true
        x-hidden-reason: 'FOR_CLOUDERA_USE_ONLY: For testing purposes'
        x-no-compatibility-guarantee: true
        description: The CCM version that will be used for tunneling
        $ref: '#/definitions/TunnelType'
      ccmV2TlsType:
        x-hidden: true
        x-hidden-reason: 'FOR_CLOUDERA_USE_ONLY: For testing purposes'
        x-no-compatibility-guarantee: true
        description: CCM V2 TLS connectivity types
        $ref: '#/definitions/CcmV2TlsType'
      cloudStorageLogging:
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        x-no-compatibility-guarantee: true
        type: boolean
        description: When this is enabled, logs from the VMs will end up on the pre-defined cloud storage (enabled by default).
      freeIpa:
        $ref: '#/definitions/AWSFreeIpaCreationRequest'
        description: The FreeIPA creation request for the environment
      security:
        $ref: '#/definitions/SecurityRequest'
        description: Security related configurations for Data Hub clusters.
        x-no-compatibility-guarantee: true
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        x-hidden-retention: BETA
      image:
        $ref: '#/definitions/FreeIpaImageRequest'
        description: The FreeIPA image request for the environment
      tags:
        type: array
        description: Tags associated with the resources.
        items:
          $ref: '#/definitions/TagRequest'
      proxyConfigName:
        type: string
        description: Name of the proxy config to use for the environment.
      encryptionKeyArn:
        type: string
        description: ARN of the AWS KMS CMK to use for the server-side encryption of AWS storage resources.
      idBrokerMappingSource:
        description: This is an optional field. This is for QE testing purposes and internal use only.
        x-hidden: true
        x-hidden-reason: 'FOR_CLOUDERA_USE_ONLY: This is for QE testing purposes and internal use only.'
        type: string
      customDockerRegistry:
        description: Configures the desired custom docker registry for data services.
        $ref: '#/definitions/CustomDockerRegistryRequest'
  CreateAWSGovCloudEnvironmentResponse:
    type: object
    description: Response object for a create AWS GovCloud environment request.
    required:
      - environment
    properties:
      environment:
        $ref: '#/definitions/Environment'
        description: Created environment object.
  CreatePrivateEnvironmentRequest:
    type: object
    description: Request object for a create private cloud environment request.
    x-form-factors: private
    required:
      - environmentName
      - address
      - user
      - authenticationToken
      - clusterNames
    properties:
      environmentName:
        type: string
        description: The name of the environment. Must contain only lowercase letters, numbers and hyphens.
      address:
        x-no-paramfile: true
        type: string
        description: The address of the Cloudera Manager managing the Datalake cluster.
      user:
        type: string
        description: User name for accessing the Cloudera Manager.
      authenticationToken:
        type: string
        description: A string (text or json) used to authenticate to the Cloudera Manager.
        x-sensitive: true
      clusterNames:
        type: array
        description: The name of the cluster(s) to use as a Datalake for the environment.
        items:
          type: string
      environmentQuota:
        description: Set quota for resources in this Environment.
        $ref: '#/definitions/EnvironmentQuota'
      kubeConfig:
        type: string
        description: Name of credentials holding kubeconfig for access to the kubernetes cluster paired with this Environment.
        x-sensitive: true
      authenticationTokenType:
        type: string
        description: How to interpret the authenticationToken field. Defaults to CLEARTEXT_PASSWORD.
        enum:
          - CLEARTEXT_PASSWORD
      namespacePrefix:
        type: string
        default: cdp
        description: Prefix for all namespaces created by Cloudera Data Platform within this cluster.
      domain:
        type: string
        description: default domain suffix to work workload applications to use.
      platform:
        type: string
        default: OPENSHIFT
        description: the K8s cluster type used for the environment.
      dockerConfigJson:
        type: string
        description: docker pull secrets for the K8s cluster. This is expected to be a docker config json.
        x-sensitive: true
      dockerUserPass:
        type: object
        description: Alternative to dockerConfigJson.
        required:
          - username
          - password
          - server
        properties:
          username:
            type: string
            description: Docker username.
          password:
            type: string
            description: Docker password.
            x-sensitive: true
          email:
            type: string
            description: Docker email.
          server:
            type: string
            description: Docker Registry FQDN.
      description:
        type: string
        description: An description of the environment.
      storageClass:
        type: string
        description: An existing storage class on this kubernetes cluster. If not specified, the default storage class will be used.
  CheckEnvironmentConnectivityRequest:
    type: object
    description: Request object to check connectivity to private cloud environment.
    x-form-factors: private
    required:
      - address
      - user
      - authenticationToken
    properties:
      address:
        type: string
        description: The address of the Cloudera Manager managing the Datalake cluster.
      user:
        type: string
        description: User name for accessing the Cloudera Manager.
      authenticationToken:
        type: string
        description: A string (text or json) used to authenticate to the Cloudera Manager.
        x-sensitive: true
      authenticationTokenType:
        type: string
        description: How to interpret the authenticationToken field. Defaults to CLEARTEXT_PASSWORD.
        enum:
          - CLEARTEXT_PASSWORD
      clusterNames:
        type: array
        description: The name of the cluster(s) to use as a Datalake for the environment.
        items:
          type: string
  AwsLogStorageRequest:
    type: object
    required:
      - storageLocationBase
      - instanceProfile
    description: AWS storage configuration for cluster and audit logs.
    properties:
      storageLocationBase:
        type: string
        description: The base location to store logs in S3. This should be an s3a:// url.
      instanceProfile:
        type: string
        description: The AWS instance profile that which contains the necessary permissions to access the S3 storage location.
      backupStorageLocationBase:
        type: string
        description: The base location to store backup in S3. This should be an s3a:// url.
  AzureLogStorageRequest:
    type: object
    description: Azure storage configuration for cluster and audit logs.
    required:
      - storageLocationBase
      - managedIdentity
    properties:
      storageLocationBase:
        type: string
        description: The storage location to use. The location has to be in the following format abfs://filesystem@storage-account-name.dfs.core.windows.net. The filesystem must already exist and the storage account must be StorageV2.
      managedIdentity:
        type: string
        description: The managed identity associated with the logger. This identity should have Storage Blob Data Contributor role on the given storage account.
      backupStorageLocationBase:
        type: string
        description: The storage location to use. The location has to be in the following format abfs://filesystem@storage-account-name.dfs.core.windows.net. The filesystem must already exist and the storage account must be StorageV2.
  GcpLogStorageRequest:
    type: object
    description: GCP storage configuration for cluster and audit logs.
    required:
      - storageLocationBase
      - serviceAccountEmail
    properties:
      storageLocationBase:
        type: string
        description: The Google storage bucket to use. This should be a gs:// url.
      serviceAccountEmail:
        type: string
        description: Email id of the service account to be associated with the instances. This service account should have "storage.ObjectCreator" role on the given storage bucket.
      backupStorageLocationBase:
        type: string
        description: The Google storage bucket to use. This should be a gs:// url.
  LogStorage:
    type: object
    description: Storage configuration for cluster and audit logs.
    required:
      - enabled
    properties:
      enabled:
        type: boolean
        description: Whether external log storage is enabled.
      awsDetails:
        type: object
        description: AWS-specific log storage configuration information.
        properties:
          storageLocationBase:
            type: string
            description: The base location to store logs in S3. This should be an s3a:// url.
          instanceProfile:
            type: string
            description: The AWS instance profile that which contains the necessary permissions to access the S3 storage location.
      azureDetails:
        type: object
        description: Azure-specific log storage configuration information.
        properties:
          storageLocationBase:
            type: string
            description: The storage location to use. The location has to be in the following format abfs://filesystem@storage-account-name.dfs.core.windows.net.
          managedIdentity:
            type: string
            description: The managed identity associated with the logger. This identity should have Storage Blob Data Contributor role on the given storage account.
      gcpDetails:
        type: object
        description: GCP-specific log storage configuration information.
        properties:
          storageLocationBase:
            type: string
            description: The storage location to use. This should be a gs:// url.
          serviceAccountEmail:
            type: string
            description: Email ID of the service account associated with the logging instances.
  BackupStorage:
    type: object
    description: Storage configuration for backup.
    properties:
      enabled:
        type: boolean
        description: Whether external backup storage is enabled. The default value is disabled.
      awsDetails:
        type: object
        description: AWS-specific backup storage configuration information.
        properties:
          storageLocationBase:
            type: string
            description: The base location to store backup in S3. This should be an s3a:// url.
          instanceProfile:
            type: string
            description: The AWS instance profile which contains the necessary permissions to access the S3 storage location.
      azureDetails:
        type: object
        description: Azure-specific backup storage configuration information.
        properties:
          storageLocationBase:
            type: string
            description: The storage location to use. The location has to be in the following format abfs://filesystem@storage-account-name.dfs.core.windows.net.
          managedIdentity:
            type: string
            description: The managed identity associated with the backup. This identity should have Storage Blob Data Contributor role on the given storage account.
      gcpDetails:
        type: object
        description: GCP-specific backup storage configuration information.
        properties:
          storageLocationBase:
            type: string
            description: The storage location to use. This should be a gs:// url.
          serviceAccountEmail:
            type: string
            description: Email ID of the service account associated with the backup instances.
  SecurityAccessRequest:
    type: object
    description: Security control configuration for FreeIPA and Datalake deployment. Choosing a CIDR will automatically create security groups. Alternatively existing security groups can be specified.
    properties:
      cidr:
        type: string
        description: CIDR range which is allowed for inbound traffic. Either IPv4 or IPv6 is allowed.
      securityGroupIdForKnox:
        type: string
        description: Security group where Knox-enabled hosts are placed. Mutually exclusive with cidr.
      defaultSecurityGroupId:
        type: string
        description: Security group where all other hosts are placed. Mutually exclusive with cidr.
      securityGroupIDsForKnox:
        type: array
        description: Security group IDs where Knox-enabled hosts are placed. Mutually exclusive with CIDR.
        uniqueItems: true
        items:
          type: string
      defaultSecurityGroupIDs:
        type: array
        description: Security group IDs where all other hosts are placed. Mutually exclusive with CIDR.
        uniqueItems: true
        items:
          type: string
  GcpSecurityAccessRequest:
    type: object
    description: Firewall rules for FreeIPA, Data Lake and Data Hub deployment.
    properties:
      securityGroupIdForKnox:
        type: string
        minLength: 1
        description: Firewall rule for Knox hosts.
      defaultSecurityGroupId:
        type: string
        minLength: 1
        description: Firewall rule for other hosts.
      securityGroupIDsForKnox:
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        x-no-compatibility-guarantee: true
        type: array
        description: Security group IDs where Knox-enabled hosts are placed. Mutually exclusive with CIDR.
        uniqueItems: true
        items:
          type: string
      defaultSecurityGroupIDs:
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        x-no-compatibility-guarantee: true
        type: array
        description: Security group IDs where all other hosts are placed. Mutually exclusive with CIDR.
        uniqueItems: true
        items:
          type: string
  SecurityAccess:
    type: object
    description: Security control configuration for FreeIPA and Datalake deployment.
    properties:
      cidr:
        type: string
        description: CIDR range which is allowed for inbound traffic. Either IPv4 or IPv6 is allowed.
      securityGroupIdForKnox:
        type: string
        description: Security group where Knox-enabled hosts are placed.
      defaultSecurityGroupId:
        type: string
        description: Security group where all other hosts are placed.
  CreateAWSEnvironmentResponse:
    type: object
    description: Response object for a create AWS environment request.
    required:
      - environment
    properties:
      environment:
        $ref: '#/definitions/Environment'
        description: Created environment object.
  CreateYARNEnvironmentResponse:
    type: object
    description: Response object for a createYARNEnvironment method.
    x-hidden: true
    x-hidden-reason: 'FOR_CLOUDERA_USE_ONLY: This is an internal Cloudera feature.'
    required:
      - environment
    properties:
      environment:
        $ref: '#/definitions/Environment'
        description: Created environment object.
  InitializeAWSComputeClusterResponse:
    type: object
    description: Response object for an initialize AWS default compute cluster request.
    properties:
      operationId:
        type: string
        description: The id of the related operation.
  InitializeAzureComputeClusterResponse:
    type: object
    description: Response object for an initialize Azure default compute cluster request.
    properties:
      operationId:
        type: string
        description: The id of the related operation.
  CreateAzureEnvironmentResponse:
    type: object
    description: Response object for a create Azure environment request.
    required:
      - environment
    properties:
      environment:
        $ref: '#/definitions/Environment'
        description: Created environment object.
  CreateGCPEnvironmentResponse:
    type: object
    description: Response object for a create GCP environment request.
    required:
      - environment
    properties:
      environment:
        $ref: '#/definitions/Environment'
        description: Created environment object.
  CreatePrivateEnvironmentResponse:
    type: object
    description: Response object for a create private cloud environment request.
    x-form-factors: private
    required:
      - environment
    properties:
      environment:
        $ref: '#/definitions/Environment'
        description: Created environment object.
  CheckEnvironmentConnectivityResponse:
    type: object
    description: Response object to check connectivity to private cloud environment.
    x-form-factors: private
    required:
      - clusters
    properties:
      clusters:
        type: array
        description: List of discovered clusters
        items:
          $ref: '#/definitions/CdpCluster'
          description: Discovered CdpCluster object.
  ListEnvironmentsRequest:
    type: object
    description: Request object for a list environments request.
  ListEnvironmentsResponse:
    type: object
    description: Response object for a list environments request.
    required:
      - environments
    properties:
      environments:
        type: array
        items:
          $ref: '#/definitions/EnvironmentSummary'
        description: The environment.
  ListCredentialsRequest:
    type: object
    description: Request object for a list credentials request.
    properties:
      credentialName:
        type: string
        description: An optional credential name to search by.
  ListCredentialsResponse:
    type: object
    description: Response object for a list credentials request.
    required:
      - credentials
    properties:
      credentials:
        type: array
        items:
          $ref: '#/definitions/Credential'
        description: The credentials.
  CreateAzureEnvironmentRequest:
    type: object
    description: Request object for a create Azure environment request.
    required:
      - environmentName
      - credentialName
      - region
      - publicKey
      - securityAccess
      - usePublicIp
      - logStorage
    properties:
      environmentName:
        type: string
        description: The name of the environment. Must contain only lowercase letters, numbers and hyphens.
      credentialName:
        type: string
        description: Name of the credential to use for the environment.
      region:
        type: string
        description: The region of the environment.
      publicKey:
        type: string
        description: Public SSH key string. The associated private key can be used to get root-level access to the Data Lake instance and Data Hub cluster instances.
      securityAccess:
        description: Security control for FreeIPA and Data Lake deployment.
        $ref: '#/definitions/SecurityAccessRequest'
      usePublicIp:
        type: boolean
        description: Whether to associate public ip's to the resources within the network.
      logStorage:
        description: Azure storage configuration for cluster and audit logs.
        $ref: '#/definitions/AzureLogStorageRequest'
      existingNetworkParams:
        description: Parameters needed to use an existing VNet and Subnets.
        $ref: '#/definitions/ExistingAzureNetworkRequest'
      newNetworkParams:
        type: object
        x-deprecated: true
        x-hidden: true
        x-hidden-reason: 'FOR_CLOUDERA_USE_ONLY: For testing purposes'
        x-no-compatibility-guarantee: true
        description: '[Deprecated] Parameteres needed to automatically create VNet and Subnets.'
        required:
          - networkCidr
        properties:
          networkCidr:
            type: string
            description: The range of private IPv4 addresses that resources will use under the created VNet.
      description:
        type: string
        description: An description of the environment.
      enableTunnel:
        type: boolean
        default: true
        description: Whether to enable SSH tunneling for the environment.
      tunnelType:
        x-hidden: true
        x-hidden-reason: 'FOR_CLOUDERA_USE_ONLY: For testing purposes'
        x-no-compatibility-guarantee: true
        description: The CCM version that will be used for tunneling
        $ref: '#/definitions/TunnelType'
      ccmV2TlsType:
        x-hidden: true
        x-hidden-reason: 'FOR_CLOUDERA_USE_ONLY: For testing purposes'
        x-no-compatibility-guarantee: true
        description: CCM V2 TLS connectivity types
        $ref: '#/definitions/CcmV2TlsType'
      enableWorkloadAnalytics:
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        x-no-compatibility-guarantee: true
        type: boolean
        description: When this is enabled, diagnostic information about job and query execution is sent to Workload Manager for Data Hub clusters created within this environment.
      workloadAnalytics:
        type: boolean
        description: When this is enabled, diagnostic information about job and query execution is sent to Workload Manager for Data Hub clusters created within this environment.
      reportDeploymentLogs:
        type: boolean
        default: false
        x-deprecated: true
        description: '[Deprecated] When true, this will report additional diagnostic information back to Cloudera.'
      cloudStorageLogging:
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        x-no-compatibility-guarantee: true
        type: boolean
        description: When this is enabled, logs from the VMs will end up on the pre-defined cloud storage (enabled by default).
      freeIpa:
        $ref: '#/definitions/AzureFreeIpaCreationRequest'
        description: The FreeIPA creation request for the environment
      enableComputeCluster:
        description: Enable compute clusters for environment
        type: boolean
      computeClusterConfiguration:
        description: The Externalized k8s configuration create request for the environment.
        $ref: '#/definitions/AzureComputeClusterConfigurationRequest'
      image:
        $ref: '#/definitions/FreeIpaImageRequest'
        description: The FreeIPA image request for the environment
      tags:
        type: array
        description: Tags associated with the resources.
        items:
          $ref: '#/definitions/TagRequest'
      proxyConfigName:
        type: string
        description: Name of the proxy config to use for the environment.
      resourceGroupName:
        type: string
        description: Name of an existing Azure resource group to be used for the environment. If it is not specified then new resource groups will be generated.
      dedicatedStorageAccount:
        type: boolean
        description: When this is enabled, a dedicated storage account will be used in a pre-defined resource group for storing the images in each region.
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
      createPrivateEndpoints:
        type: boolean
        description: When this is enabled, then Azure Postgres will be configured with Private Endpoint and a Private DNS Zone. When this is disabled, then Azure Service Endpoints will be created. The default value is disabled.
      endpointAccessGatewayScheme:
        type: string
        description: The scheme for the endpoint gateway. PUBLIC creates an external endpoint that can be accessed over the Internet. Defaults to PRIVATE which restricts the traffic to be internal to the VNet.
        enum:
          - PUBLIC
          - PRIVATE
      endpointAccessGatewaySubnetIds:
        type: array
        items:
          type: string
        description: The subnets to use for endpoint access gateway.
      encryptionAtHost:
        type: boolean
        description: When this is enabled, we will provision resources with host encrypted true flag.
      userManagedIdentity:
        type: string
        description: User managed identity for encryption. (deprecated)
        x-deprecated: true
      encryptionUserManagedIdentity:
        type: string
        description: User managed identity for encryption.
      encryptionKeyUrl:
        type: string
        description: URL of the key which will be used to encrypt the Azure Managed Disks, if entitlement has been granted.
        x-no-paramfile: true
      encryptionKeyResourceGroupName:
        type: string
        description: Name of the existing Azure resource group hosting the Azure Key Vault containing customer managed key which will be used to encrypt the Azure Managed Disks. It is required only when the entitlement is granted and the resource group of the key vault is different from the resource group in which the environment is to be created. Omitting it implies that, the key vault containing the encryption key is present in the same resource group where the environment would be created.
      idBrokerMappingSource:
        description: This is an optional field. This is for QE testing purposes and internal use only.
        x-hidden: true
        x-hidden-reason: 'FOR_CLOUDERA_USE_ONLY: This is for QE testing purposes and internal use only.'
        type: string
      enableLoadBalancers:
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        type: boolean
        description: Whether or not Knox and Oozie load balancers are enabled for all Data Lakes and Data Hubs in the environment. This will override the load balancer creation mode at the cluster level. The default behavior is to create load balancers on all Data Lakes, and on HA Data Hubs.
      enableOutboundLoadBalancer:
        type: boolean
        description: Whether or not outbound load balancers should be created for Azure environments. The default behavior is to not create the outbound load balancer.
      availabilityZones:
        description: The zones of the environment in the given region.
        type: array
        items:
          type: string
      flexibleServerSubnetIds:
        type: array
        items:
          type: string
        description: The subnets delegated for Flexible Server database. Accepts either the name or the full resource id.
      dataServices:
        description: Data Services parameters of the environment.
        $ref: '#/definitions/DataServicesRequest'
      customDockerRegistry:
        description: Configures the desired custom docker registry for data services.
        $ref: '#/definitions/CustomDockerRegistryRequest'
      security:
        $ref: '#/definitions/SecurityRequest'
        description: Security related configurations for Data Hub clusters.
        x-no-compatibility-guarantee: true
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        x-hidden-retention: BETA
  CreateGCPEnvironmentRequest:
    type: object
    description: Request object for a create GCP environment request.
    required:
      - environmentName
      - credentialName
      - region
      - publicKey
      - usePublicIp
      - existingNetworkParams
    properties:
      environmentName:
        type: string
        description: The name of the environment. Must contain only lowercase letters, numbers and hyphens.
      credentialName:
        type: string
        description: Name of the credential to use for the environment.
      region:
        type: string
        description: The region of the environment.
      publicKey:
        type: string
        description: Public SSH key string. The associated private key can be used to get root-level access to the Data Lake instance and Data Hub cluster instances.
      usePublicIp:
        type: boolean
        description: Whether to associate public ip's to the resources within the network.
      existingNetworkParams:
        description: Parameters needed to use an existing VPC and Subnets. For now only existing network params is supported.
        $ref: '#/definitions/ExistingGCPNetworkRequest'
      securityAccess:
        description: Firewall rules for FreeIPA, Data Lake and Data Hub deployment.
        $ref: '#/definitions/GcpSecurityAccessRequest'
      logStorage:
        description: GCP storage configuration for cluster and audit logs.
        $ref: '#/definitions/GcpLogStorageRequest'
      description:
        type: string
        description: A description of the environment.
      enableTunnel:
        type: boolean
        default: true
        description: Whether to enable SSH tunneling for the environment.
      workloadAnalytics:
        type: boolean
        description: When this is enabled, diagnostic information about job and query execution is sent to Workload Manager for Data Hub clusters created within this environment.
      reportDeploymentLogs:
        type: boolean
        default: false
        x-deprecated: true
        description: '[Deprecated] When true, this will report additional diagnostic information back to Cloudera.'
      tunnelType:
        x-hidden: true
        x-hidden-reason: 'FOR_CLOUDERA_USE_ONLY: For testing purposes'
        x-no-compatibility-guarantee: true
        description: The CCM version that will be used for tunneling
        $ref: '#/definitions/TunnelType'
      ccmV2TlsType:
        x-hidden: true
        x-hidden-reason: 'FOR_CLOUDERA_USE_ONLY: For testing purposes'
        x-no-compatibility-guarantee: true
        description: CCM V2 TLS connectivity types
        $ref: '#/definitions/CcmV2TlsType'
      cloudStorageLogging:
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        x-no-compatibility-guarantee: true
        type: boolean
        description: When this is enabled, logs from the VMs will end up on the pre-defined cloud storage (enabled by default).
      freeIpa:
        $ref: '#/definitions/GCPFreeIpaCreationRequest'
        description: The FreeIPA creation request for the environment
      endpointAccessGatewayScheme:
        type: string
        description: The scheme for the endpoint gateway. PUBLIC creates an external endpoint that can be accessed over the Internet. Defaults to PRIVATE which restricts the traffic to be internal to the VPC.
        enum:
          - PUBLIC
          - PRIVATE
      endpointAccessGatewaySubnetIds:
        type: array
        items:
          type: string
        description: The subnets to use for endpoint access gateway.
      image:
        $ref: '#/definitions/FreeIpaImageRequest'
        description: The FreeIPA image request for the environment.
        x-hidden: true
        x-hidden-retention: BETA
        x-hidden-reason: IN_DEVELOPMENT
      tags:
        type: array
        description: Tags that can be attached to GCP resources. Please refer to Google documentation for the rules https://cloud.google.com/compute/docs/labeling-resources#label_format.
        items:
          $ref: '#/definitions/GcpTagRequest'
      proxyConfigName:
        type: string
        description: Name of the proxy config to use for the environment.
      idBrokerMappingSource:
        type: string
        description: This is an optional field. This is for QE testing purposes and internal use only. QE can pass this to set idbroker mapping source as "MOCK" until cloud storage is implemented for GCP. "IDBMMS" is the default value.
        x-hidden: true
        x-hidden-reason: 'FOR_CLOUDERA_USE_ONLY: This is for QE testing purposes and internal use only. QE can pass this to set idbroker mapping source as "MOCK" until cloud storage is implemented for GCP. "IDBMMS" is the default value.'
      encryptionKey:
        type: string
        description: Key Resource ID of the customer managed encryption key to encrypt GCP resources.
      availabilityZones:
        description: The zones of the environment in the given region. Multi-zone selection is not supported in GCP yet. It accepts only one zone until support is added.
        type: array
        items:
          type: string
      customDockerRegistry:
        description: Configures the desired custom docker registry for data services.
        $ref: '#/definitions/CustomDockerRegistryRequest'
      security:
        $ref: '#/definitions/SecurityRequest'
        description: Security related configurations for Data Hub clusters.
        x-no-compatibility-guarantee: true
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        x-hidden-retention: BETA
  ExistingAzureNetworkRequest:
    type: object
    description: Request object for creating an Azure environment using existing VNet and subnets.
    required:
      - networkId
      - resourceGroupName
      - subnetIds
    properties:
      networkId:
        type: string
        description: The id of the Azure VNet.
      resourceGroupName:
        type: string
        description: The name of the resource group associated with the VNet.
      subnetIds:
        type: array
        description: One or more subnet ids within the VNet.
        uniqueItems: true
        items:
          type: string
      networkName:
        type: string
        description: The name of the Azure VNet.
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
      subnetNames:
        type: array
        description: One or more subnet names within the VNet.
        uniqueItems: true
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        items:
          type: string
      databasePrivateDnsZoneId:
        type: string
        description: The full Azure resource ID of the existing Private DNS Zone used for Flexible Server and Single Server Databases.
      aksPrivateDnsZoneId:
        type: string
        description: The full Azure resource ID of an existing Private DNS zone used for the AKS.
      usePublicDnsForPrivateAks:
        type: boolean
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        description: Use public DNS for all DNS records in a private cluster.
  ExistingGCPNetworkRequest:
    type: object
    description: Request object for creating an GCP environment using existing VPC and subnets.
    required:
      - networkName
      - subnetNames
    properties:
      networkName:
        type: string
        description: The name of the GCP VPC.
      subnetNames:
        type: array
        description: One or more subnet names within the VPC. Google VPC's are global, please give subnets from single geographic region only to reduce latency.
        uniqueItems: true
        items:
          type: string
      sharedProjectId:
        type: string
        description: The ID of the Google project associated with the VPC.
  ChangeEnvironmentCredentialRequest:
    type: object
    description: Request object for a change environment credentials request.
    required:
      - environmentName
      - credentialName
    properties:
      environmentName:
        type: string
        description: The name or CRN of the environment.
      credentialName:
        type: string
        description: The credential name to set for the environment. This must be a credential that already exists.
  ChangeEnvironmentCredentialResponse:
    type: object
    description: Response object for a change environment credentials request.
    required:
      - environment
    properties:
      environment:
        $ref: '#/definitions/EnvironmentSummary'
        description: The environment summary.
  UpdateAzureEncryptionResourcesRequest:
    type: object
    description: Request object for updating Azure encryption resources.
    required:
      - environment
      - encryptionKeyUrl
    properties:
      environment:
        type: string
        description: The name or CRN of the environment.
      encryptionKeyUrl:
        type: string
        description: The URL of an encryption key, which will be used to encrypt the Azure Managed Disks, if the entitlement has been granted.
        x-no-paramfile: true
      encryptionKeyResourceGroupName:
        type: string
        description: Name of the existing Azure resource group hosting the Azure Key Vault containing customer managed key which will be used to encrypt the Azure Managed Disks. It is required only when the entitlement is granted and the resource group of the key vault is different from the resource group in which the environment is to be created. Omitting it implies that, the key vault containing the encryption key is present in the same resource group where the environment would be created.
      encryptionUserManagedIdentity:
        type: string
        description: User managed identity for encryption.
  UpdateAzureEncryptionResourcesResponse:
    type: object
    description: Response object for a update Azure encryption resources request.
    required:
      - environment
    properties:
      environment:
        $ref: '#/definitions/Environment'
        description: The environment summary.
      resourceEncryptionParameters:
        $ref: '#/definitions/AzureResourceEncryptionParameters'
        description: Object containing details of encryption parameters for Azure cloud.
  UpdateAzureDatabaseResourcesRequest:
    type: object
    description: Request object for updating Azure Database resources.
    required:
      - environment
    properties:
      environment:
        type: string
        description: The name or CRN of the environment.
      databasePrivateDnsZoneId:
        type: string
        description: The full Azure resource ID of the existing Private DNS Zone used for Flexible Server and Single Server Databases.
        x-no-paramfile: true
      flexibleServerSubnetIds:
        type: array
        items:
          type: string
        description: The subnets delegated for Flexible Server database. Accepts either the name or the full resource id.
      serviceEndpointsCreation:
        $ref: '#/definitions/ServiceEndpointsCreation'
        description: The access pattern for the database; options are to create private endpoints, service endpoints or a public setup.
        x-no-compatibility-guarantee: true
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
  UpdateAzureDatabaseResourcesResponse:
    type: object
    description: Response object for a update Azure Database resources request.
    required:
      - environment
    properties:
      environment:
        $ref: '#/definitions/Environment'
        description: The environment summary.
      azureDatabaseResources:
        $ref: '#/definitions/AzureDatabaseResources'
        description: Object containing details of database resources for Azure cloud.
  UpdateAzureAvailabilityZonesRequest:
    type: object
    description: Request object to update Availability Zones for Azure environment.
    required:
      - environment
      - availabilityZones
    properties:
      environment:
        type: string
        description: The name or CRN of the environment.
      availabilityZones:
        type: array
        items:
          type: string
        description: List of availability zones for the environment.
  UpdateAzureAvailabilityZonesResponse:
    type: object
    description: Response object for a update Azure Availability Zones request.
    required:
      - environment
    properties:
      environment:
        $ref: '#/definitions/Environment'
        description: The environment summary.
  UpdateGcpAvailabilityZonesRequest:
    type: object
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    x-hidden-retention: BETA
    description: Request object to update Availability Zones for GCP environment.
    required:
      - environment
      - availabilityZones
    properties:
      environment:
        type: string
        description: The name or CRN of the environment.
      availabilityZones:
        type: array
        items:
          type: string
        description: List of availability zones for the environment.
  UpdateGcpAvailabilityZonesResponse:
    type: object
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    x-hidden-retention: BETA
    description: Response object for a update GCP Availability Zones request.
    required:
      - environment
    properties:
      environment:
        $ref: '#/definitions/Environment'
        description: The environment summary.
  UpdateAwsDiskEncryptionParametersRequest:
    type: object
    description: Request object for updating AWS encryption parameters.
    required:
      - environment
      - encryptionKeyArn
    properties:
      environment:
        type: string
        description: The name or CRN of the environment.
      encryptionKeyArn:
        type: string
        description: The ARN of an encryption key, which will be used to encrypt the AWS EBS volumes, if the entitlement has been granted.
        x-no-paramfile: true
  UpdateAwsDiskEncryptionParametersResponse:
    type: object
    description: Response object for an update AWS encryption parameters request.
    required:
      - environment
    properties:
      environment:
        $ref: '#/definitions/Environment'
        description: The environment summary.
      awsDiskEncryptionParameters:
        $ref: '#/definitions/AwsDiskEncryptionParameters'
        description: Object containing details of encryption parameters for AWS cloud.
  AwsDiskEncryptionParameters:
    type: object
    description: Object containing details of encryption parameters for AWS cloud.
    properties:
      encryptionKeyArn:
        type: string
        description: ARN of the CMK which is used to encrypt the AWS EBS volumes.
        x-no-paramfile: true
  AzureResourceEncryptionParameters:
    type: object
    description: Object containing details of encryption parameters for Azure cloud.
    properties:
      encryptionKeyUrl:
        type: string
        description: URL of the key which is used to encrypt the Azure Managed Disks.
        x-no-paramfile: true
      encryptionKeyResourceGroupName:
        type: string
        description: Name of the existing Azure resource group hosting the Azure Key Vault containing customer managed key which is used to encrypt the Azure Managed Disks.
      diskEncryptionSetId:
        type: string
        description: ID of the Disk Encryption Set created in Azure which is used to encrypt Managed Disks of FreeIPA, Data Lake, Data Hub and PostgreSQL.
      encryptionUserManagedIdentity:
        type: string
        description: User managed identity for encryption.
  AzureDatabaseResources:
    type: object
    description: Object containing details of database resources for Azure cloud.
    properties:
      databasePrivateDnsZoneId:
        type: string
        description: The full Azure resource ID of the existing Private DNS Zone used for Flexible Server and Single Server Databases.
        x-no-paramfile: true
      flexibleServerSubnetIds:
        type: array
        items:
          type: string
        description: The subnets delegated for Flexible Server database. Accepts either the name or the full resource id.
  DisableS3GuardRequest:
    type: object
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    x-hidden-retention: BETA
    description: Request object for disabling S3Guard in an environment.
    required:
      - environmentName
    properties:
      environmentName:
        type: string
        description: The name or CRN of the environment.
  DisableS3GuardResponse:
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    x-hidden-retention: BETA
    type: object
    description: Response object for disabling S3Guard in an environment.
    properties:
      s3GuardResponse:
        type: string
        description: Response status for disabling S3Guard in an environment.
  DescribeEnvironmentRequest:
    type: object
    description: Request object for a describe environment request.
    required:
      - environmentName
    properties:
      environmentName:
        type: string
        description: The names or CRN of the environment. In case of hybrid environments this can be only CRN.
      outputView:
        type: string
        description: The level of output to be returned. 'FULL' is only applicable in Private Cloud and does not affect Public Cloud. If left empty, it defaults to 'SUMMARY'.
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        enum:
          - SUMMARY
          - FULL
  DescribeEnvironmentResponse:
    type: object
    description: Response object for a describe environment request.
    required:
      - environment
    properties:
      environment:
        $ref: '#/definitions/Environment'
        description: The environment.
  EnvironmentSummary:
    type: object
    description: The environment summary.
    required:
      - environmentName
      - crn
      - status
      - region
      - cloudPlatform
      - credentialName
    properties:
      environmentName:
        type: string
        description: Name of the environment.
      crn:
        type: string
        description: CRN of the environment.
      status:
        type: string
        description: Status of the environment,
      region:
        type: string
        description: Region of the environment.
      cloudPlatform:
        type: string
        description: Cloud platform of the environment.
      credentialName:
        type: string
        description: Name of the credential of the environment. Must contain only lowercase letters, numbers and hyphens.
      description:
        type: string
        description: Description of the environment.
      created:
        type: string
        format: date-time
        description: Creation date
      proxyConfigName:
        type: string
        description: Name of the proxy config of the environment.
      vmEncryptionDetails:
        description: VM encryption related environment configuration information.
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        $ref: '#/definitions/VmEncryptionDetails'
      cdpRuntimeVersion:
        type: string
        description: The version of CDP runtime.
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
      clouderaManagerVersion:
        type: string
        description: The version of Cloudera Manager that the environment is registered with.
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
      cdpPvcVersion:
        type: string
        description: The version of CDP PVC.
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
      computeClusterEnabled:
        description: Compute clusters enabled
        type: boolean
  VmEncryptionDetails:
    type: object
    description: VM encryption related environment configuration information.
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    properties:
      enableSecretEncryption:
        type: boolean
        description: True if the secret encryption feature is enabled for the environment.
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
  Environment:
    type: object
    description: The environment.
    required:
      - environmentName
      - crn
      - status
      - region
      - cloudPlatform
      - credentialName
      - network
      - logStorage
    properties:
      environmentName:
        type: string
        description: Name of the environment.
      crn:
        type: string
        description: CRN of the environment.
      status:
        type: string
        description: Status of the environment.
      region:
        type: string
        description: Region of the environment.
      cloudPlatform:
        type: string
        description: Cloud platform of the environment.
      credentialName:
        type: string
        description: Name of the credential of the environment.
      network:
        description: Network related specifics of the environment.
        $ref: '#/definitions/Network'
      logStorage:
        description: Storage configuration for cluster and audit logs.
        $ref: '#/definitions/LogStorage'
      backupStorage:
        description: Storage configuration for backup.
        $ref: '#/definitions/BackupStorage'
      authentication:
        description: SSH key for accessing cluster node instances.
        $ref: '#/definitions/Authentication'
      securityAccess:
        description: Security control for FreeIPA and Data Lake deployment.
        $ref: '#/definitions/SecurityAccess'
      description:
        type: string
        description: Description of the environment
      statusReason:
        type: string
        description: The status reason.
      created:
        type: string
        format: date-time
        description: Creation date
      creator:
        type: string
        description: The CRN of the user who has created the given environment.
      tunnelEnabled:
        type: boolean
        description: Whether tunneling is enabled for the environment.
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        x-hidden-retention: BETA
        x-no-compatibility-guarantee: true
      tunnelType:
        description: CCM version
        $ref: '#/definitions/TunnelType'
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        x-hidden-retention: BETA
        x-no-compatibility-guarantee: true
      awsDetails:
        type: object
        description: AWS-specific environment configuration information.
        properties:
          s3GuardTableName:
            type: string
            description: Deprecated. S3Guard was used to ensure consistent S3 updates when S3 was still eventually consistent. With the introduction of Consistent S3, the goal and usage of S3 Guard have become superfluous and defunct.
            x-deprecated: true
      azureDetails:
        type: object
        description: Azure specific environment configuration information.
        properties:
          resourceGroupName:
            type: string
            description: Name of an existing Azure resource group to be used for the environment. If it is not specified then new resource groups will be generated.
          resourceEncryptionParameters:
            $ref: '#/definitions/AzureResourceEncryptionParameters'
            description: Object containing details of encryption parameters for Azure cloud.
      gcpDetails:
        type: object
        description: GCP specific environment configuration information.
        properties:
          sharedProjectId:
            type: string
            description: ID of the Google project where the resources are created.
      enableWorkloadAnalytics:
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        x-no-compatibility-guarantee: true
        type: boolean
        description: When this is enabled, diagnostic information about job and query execution is sent to Workload Manager for Data Hub clusters created within this environment.
      workloadAnalytics:
        type: boolean
        description: When this is enabled, diagnostic information about job and query execution is sent to Workload Manager for Data Hub clusters created within this environment.
      reportDeploymentLogs:
        type: boolean
        default: false
        x-deprecated: true
        description: '[Deprecated] When true, this will report additional diagnostic information back to Cloudera.'
      cloudStorageLogging:
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        x-no-compatibility-guarantee: true
        type: boolean
        description: When this is enabled, logs from the VMs will end up on the pre-defined cloud storage (enabled by default).
      freeipa:
        description: Details of FreeIPA instance associated with this environment.
        $ref: '#/definitions/FreeipaDetails'
      proxyConfig:
        description: The proxy config.
        $ref: '#/definitions/ProxyConfig'
      tags:
        description: Environment tags object containing the tag values defined for the environment.
        $ref: '#/definitions/EnvironmentTags'
      parentEnvironmentName:
        type: string
        description: If the environment is a hybrid environment (on YCloud), this contains the name of the parent environment (on a cloud provider) tied to it.
        x-hidden: true
        x-hidden-reason: 'FOR_CLOUDERA_USE_ONLY: Hybrid environments using YCloud are not customer facing.'
        x-no-compatibility-guarantee: true
      cloudbreakVersion:
        type: string
        description: The Cloudbreak version used to create the environment.
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        x-no-compatibility-guarantee: true
      vmEncryptionDetails:
        description: VM encryption related environment configuration information.
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        $ref: '#/definitions/VmEncryptionDetails'
      dataServices:
        description: Data Services parameters of the environment.
        $ref: '#/definitions/DataServices'
      customDockerRegistry:
        description: The configured custom docker registry for data services on the environment.
        $ref: '#/definitions/CustomDockerRegistryResponse'
      pvcEnvironmentDetails:
        description: Configuration details specific to the Private Cloud environment. Only returned when the output view is set to 'FULL'.
        $ref: '#/definitions/PvcEnvironmentDetails'
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
      cdpRuntimeVersion:
        type: string
        description: The version of CDP runtime.
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
      clouderaManagerVersion:
        type: string
        description: The version of Cloudera Manager that the environment is registered with.
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
      cdpPvcVersion:
        type: string
        description: The version of CDP PVC.
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
      awsComputeClusterConfiguration:
        description: The Externalized AWS k8s configuration for the environment.
        $ref: '#/definitions/AWSComputeClusterConfiguration'
      azureComputeClusterConfiguration:
        description: The Externalized Azure k8s configuration for the environment.
        $ref: '#/definitions/AzureComputeClusterConfiguration'
      computeClusterEnabled:
        description: Compute clusters enabled
        type: boolean
      security:
        $ref: '#/definitions/SecurityResponse'
        description: Security related configurations for Data Hub clusters.
        x-no-compatibility-guarantee: true
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        x-hidden-retention: BETA
  PvcEnvironmentDetails:
    type: object
    description: Configuration details specific to the Private Cloud environment. Only returned when the output view is set to 'FULL'.
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    properties:
      cmHost:
        type: string
        description: The CM host.
      cmlSummary:
        $ref: '#/definitions/CmlSummary'
        description: The CML summary.
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        x-nullable: true
      cdwSummary:
        $ref: '#/definitions/CdwSummary'
        description: The CDW summary.
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        x-nullable: true
      cdeSummary:
        $ref: '#/definitions/CdeSummary'
        description: The CDE summary.
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        x-nullable: true
      applications:
        type: object
        description: A map of applications that provide services for the Service Discovery
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        additionalProperties:
          $ref: '#/definitions/Application'
          description: The application details.
      knoxGatewayUrl:
        type: string
        description: The knox gateway url in the base cluster.
      privateDatalakeDetails:
        $ref: '#/definitions/PrivateDatalakeDetails'
        description: Configuration details specific to the Private Cloud base datalake cluster.
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
  ServiceEndPoint:
    type: object
    description: Endpoint of an Service Discovery Service
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    properties:
      host:
        type: string
        description: The endpoints hostname or ip address.
      port:
        type: integer
        format: int32
        description: The endpoints port.
      uri:
        type: string
        description: The connection uri for the endpoint.
  Service:
    type: object
    description: A Service Discovery Service definition
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    properties:
      type:
        type: string
        description: The type the service represents
      endpoints:
        type: array
        description: The endpoints that the service presents
        items:
          $ref: '#/definitions/ServiceEndPoint'
      config:
        type: object
        description: Configuration key values for a service
        x-sensitive: true
        additionalProperties:
          type: string
          description: The configuration value.
  Application:
    type: object
    description: A Service Discovery Application grouping
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    properties:
      name:
        type: string
        description: The name of the service
      services:
        type: object
        description: The services provided by the application
        additionalProperties:
          $ref: '#/definitions/Service'
          description: The service information.
      config:
        type: object
        description: Configuration key values for an application
        x-sensitive: true
        additionalProperties:
          type: string
          description: The configuration value.
  CmlSummary:
    type: object
    description: The CML summary.
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    properties:
      cmlWorkspaces:
        type: array
        description: List of CML workspaces based on the environment.
        x-nullable: true
        items:
          $ref: '#/definitions/CmlWorkspace'
  CmlWorkspace:
    type: object
    description: The CML workspace.
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    properties:
      instanceName:
        type: string
        description: The name of the workspace.
      environmentName:
        type: string
        description: The name of the workspace's environment.
      instanceStatus:
        type: string
        description: The workspace's current status.
      instanceUrl:
        type: string
        description: URL of the workspace's user interface.
      environmentCrn:
        type: string
        description: CRN of the environment.
      crn:
        type: string
        description: The CRN of the workspace.
  CdwSummary:
    type: object
    description: The CDW summary.
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    properties:
      cdwCluster:
        description: The CDW Cluster.
        x-nullable: true
        $ref: '#/definitions/CdwCluster'
      cdwDbc:
        description: The CDW Database Catalog.
        x-nullable: true
        $ref: '#/definitions/CdwDbc'
  CdwCluster:
    type: object
    description: The CDW Cluster.
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    properties:
      crn:
        type: string
        description: The CRN of the cluster.
      id:
        type: string
        description: The ID of the cluster.
      environmentCrn:
        type: string
        description: CRN of the environment.
      name:
        type: string
        description: Name of the cluster.
      status:
        type: string
        description: Status of the cluster.
  CdwDbc:
    type: object
    description: The CDW database catalog.
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    properties:
      crn:
        type: string
        description: The CRN of the Database Catalog.
      id:
        type: string
        description: The ID of the Database Catalog.
      name:
        type: string
        description: The name of the Database Catalog.
      status:
        type: string
        description: The status of the Database Catalog.
      cdwVws:
        type: array
        description: List of virtual warehouse based on the Database Catalog.
        x-nullable: true
        items:
          $ref: '#/definitions/CdwVw'
  CdwVw:
    type: object
    description: The CDW virtual warehouse.
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    properties:
      crn:
        type: string
        description: The CRN of the Virtual Warehouse.
      id:
        type: string
        description: The ID of the Virtual Warehouse.
      name:
        type: string
        description: Name of the Virtual Warehouse.
      vwType:
        type: string
        description: The type of the Virtual Warehouse.
      dbcId:
        type: string
        description: ID of Database Catalog that the Virtual Warehouse is attached to.
  CdeSummary:
    type: object
    description: The CDE summary.
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    properties:
      cdeServices:
        type: array
        description: The list of CDE services associated with the environment.
        x-nullable: true
        items:
          $ref: '#/definitions/CdeService'
  CdeService:
    type: object
    description: The CDE service.
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    properties:
      name:
        type: string
        description: Name of the CDE service
      clusterId:
        type: string
        description: Cluster Id of the CDE Service.
      environmentName:
        type: string
        description: The name of the service's environment.
      status:
        type: string
        description: Status of the CDE service.
      cdeVcs:
        type: array
        description: List of virtual clusters associated with the CDE service.
        x-nullable: true
        items:
          $ref: '#/definitions/CdeVc'
  CdeVc:
    type: object
    description: The CML virtual cluster.
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    properties:
      vcId:
        type: string
        description: Virtual Cluster ID.
      vcName:
        type: string
        description: Virtual Cluster Name.
      clusterId:
        type: string
        description: Cluster ID of the CDE service that contains the virtual cluster.
      status:
        type: string
        description: Status of the Virtual Cluster.
      vcUiUrl:
        type: string
        description: Url for the Virtual Cluster UI.
  KerberosInfo:
    type: object
    description: The kerberos information for on premises datalake cluster.
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    properties:
      kdcType:
        type: string
        description: Type of KDC.
      kerberosRealm:
        type: string
        description: Kerberos realm.
      kdcHost:
        type: string
        description: KDC host.
      kdcHostIp:
        type: string
        description: KDC host IP address.
      kerberized:
        type: boolean
        description: Whether kerberized or not.
  Instance:
    type: object
    description: Host information for instances within the on premises datalake cluster.
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    properties:
      instanceId:
        type: string
        description: ID of the instance
      discoveryFQDN:
        type: string
        description: The fully qualified domain name of the instance in the cluster.
      privateIp:
        type: string
        description: The private IP of the instance
  PrivateDatalakeDetails:
    type: object
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    description: Configuration details specific to the on premises datalake cluster. Only returned when the output view is set to 'FULL'.
    properties:
      datalakeName:
        type: string
        description: Name of the datalake.
      enableRangerRaz:
        type: boolean
        description: Whether Ranger RAZ is enabled for the datalake.
      creationTimeEpochMillis:
        type: integer
        format: int64
        description: The timestamp in Unix epoch when the datalake was created.
      cmFQDN:
        type: string
        description: The Cloudera Manager FQDN.
      cmIP:
        type: string
        description: The Cloudera Manager IP.
      cmServerId:
        type: string
        description: The Cloudera Manager server ID.
      status:
        type: string
        description: Status of the datalake.
        enum:
          - AVAILABLE
          - NOT_AVAILABLE
      instances:
        type: array
        items:
          $ref: '#/definitions/Instance'
        description: Hosts information for instances within the on premises datalake cluster.
      kerberosInfo:
        $ref: '#/definitions/KerberosInfo'
        description: The kerberos information on private cloud base datalake cluster.
  AuthenticationRequest:
    type: object
    description: Additional SSH key authentication configuration for accessing cluster node.
    properties:
      publicKey:
        type: string
        description: Public SSH key string. Mutually exclusive with publicKeyId.
      publicKeyId:
        type: string
        description: Public SSH key ID already registered in the cloud provider. Mutually exclusive with publicKey.
  Authentication:
    type: object
    description: Additional SSH key authentication configuration for accessing cluster node instances.
    properties:
      publicKey:
        type: string
        description: SSH Public key string.
      publicKeyId:
        type: string
        description: Public SSH key ID already registered in the cloud provider.
      loginUserName:
        type: string
        description: The SSH user name created on the nodes for SSH access.
  Network:
    type: object
    description: The network.
    required:
      - networkName
      - subnetIds
    properties:
      networkName:
        type: string
        description: Name or id of the network
      subnetIds:
        type: array
        description: Subnet names or ids of the network.
        uniqueItems: true
        items:
          type: string
      endpointAccessGatewayScheme:
        type: string
        description: The scheme for the endpoint gateway. PUBLIC indicates an external endpoint that can be accessed over the Internet.
        enum:
          - PUBLIC
          - PRIVATE
      endpointAccessGatewaySubnetIds:
        type: array
        items:
          type: string
        description: The subnets to use for endpoint access gateway.
        uniqueItems: true
      aws:
        description: AWS network parameters.
        $ref: '#/definitions/NetworkAwsParams'
      azure:
        description: Azure network parameters.
        $ref: '#/definitions/NetworkAzureParams'
      gcp:
        description: GCP network parameters.
        $ref: '#/definitions/NetworkGcpParams'
      networkCidr:
        type: string
        description: The range of private IPv4 addresses that resources will use under this network.
      dwxSubnets:
        type: object
        description: DWX subnet parameters.
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        x-no-compatibility-guarantee: true
        additionalProperties:
          description: DWX subnet parameters.
          $ref: '#/definitions/CloudSubnet'
      liftieSubnets:
        type: object
        description: Subnet parameters for experiences that managed by Liftie.
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        x-no-compatibility-guarantee: true
        additionalProperties:
          description: The subnet parameters.
          $ref: '#/definitions/CloudSubnet'
      subnetMetadata:
        type: object
        description: Additional subnet metadata of the network.
        additionalProperties:
          description: The subnet information.
          $ref: '#/definitions/CloudSubnet'
      serviceEndpointsCreation:
        description: Whether to create service endpoints or not.
        $ref: '#/definitions/ServiceEndpointsCreation'
        x-no-compatibility-guarantee: true
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
      enableLoadBalancers:
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        type: boolean
        description: The load balancer creation mode for all Data Lakes and Data Hubs in the environment. This will override the load balancer creation mode at the cluster level.
  ServiceEndpointsCreation:
    type: string
    description: Whether to create service endpoints or not.
    enum:
      - ENABLED
      - ENABLED_PRIVATE_ENDPOINT
      - DISABLED
    x-no-compatibility-guarantee: true
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
  CloudSubnet:
    type: object
    description: Information about a cloud provider subnet.
    properties:
      subnetId:
        description: The id of the subnet.
        type: string
      subnetName:
        description: The name of the subnet.
        type: string
      availabilityZone:
        description: The availability zone of the subnet.
        type: string
      cidr:
        description: The CIDR IP range of the subnet.
        type: string
      secondaryCidrs:
        type: array
        description: The Secondary CIDR IP ranges of the subnet (currently only available on Google Cloud).
        items:
          type: string
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        x-no-compatibility-guarantee: true
      secondaryCidrsWithNames:
        type: array
        description: The Secondary CIDR IP ranges and names of the subnet (currently only available on Google Cloud).
        items:
          $ref: '#/definitions/SecondaryCidrWithName'
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        x-no-compatibility-guarantee: true
  SecondaryCidrWithName:
    type: object
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    x-no-compatibility-guarantee: true
    description: A single entry that contains secondary cidr and name.
    required:
      - name
      - cidr
    properties:
      name:
        type: string
        description: The name of the secondary range.
      cidr:
        type: string
        description: The cidr of the secondary range.
  NetworkAwsParams:
    type: object
    description: AWS network parameters.
    required:
      - vpcId
    properties:
      vpcId:
        type: string
        description: VPC ids of the specified networks.
  NetworkAzureParams:
    type: object
    description: Azure network parameters.
    required:
      - networkId
      - resourceGroupName
      - usePublicIp
    properties:
      networkId:
        type: string
        description: The id of the Azure VNet.
      resourceGroupName:
        type: string
        description: The name of the resource group associated with the VNet.
      usePublicIp:
        type: boolean
        description: Whether to associate public ip's to the resources within the network.
      networkName:
        type: string
        description: The name of the Azure VNet.
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
      databasePrivateDnsZoneId:
        type: string
        description: The full Azure resource ID of the existing Private DNS Zone used for Flexible Server and Single Server Databases.
      aksPrivateDnsZoneId:
        type: string
        description: The full Azure resource ID of an existing Private DNS zone used for the AKS.
      enableOutboundLoadBalancer:
        type: boolean
        description: Whether the outbound load balancer was created for this environment.
      flexibleServerSubnetIds:
        type: array
        items:
          type: string
        description: The subnets delegated for Flexible Server database. Accepts either the name or the full resource id.
      usePublicDnsForPrivateAks:
        type: boolean
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        description: Use public DNS for all DNS records in a private cluster.
  NetworkGcpParams:
    type: object
    description: GCP network parameters.
    required:
      - networkName
      - usePublicIp
    properties:
      networkName:
        type: string
        description: The name of the GCP VPC.
      usePublicIp:
        type: boolean
        description: Whether to associate public ip's to the resources within the network.
      sharedProjectId:
        type: string
        description: The ID of the Google project associated with the VPC.
  DeleteEnvironmentRequest:
    type: object
    description: Request object for a delete environment request.
    required:
      - environmentName
    properties:
      environmentName:
        type: string
        description: The name or CRN of the environment.
      cascading:
        type: boolean
        description: Delete all connected resources too.
      forced:
        type: boolean
        description: Force delete action removes CDP resources and may leave cloud provider resources running even if the deletion did not succeed.
  DeleteEnvironmentResponse:
    type: object
    description: Response object for a delete environment request.
  StartEnvironmentRequest:
    type: object
    description: Request object for a start environment request.
    required:
      - environmentName
    properties:
      environmentName:
        type: string
        description: The name or CRN of the environment.
      withDatahubStart:
        type: boolean
        description: Whether the Data Hub clusters should start or not at the environment (re-)start
  StartEnvironmentResponse:
    type: object
    description: Response object for a start environment request.
    properties:
      operationId:
        type: string
        description: Unique operation ID assigned to this command execution. Use this identifier with 'get-operation' to track status and retrieve detailed results.
  StopEnvironmentRequest:
    type: object
    description: Request object for a stop environment request.
    required:
      - environmentName
    properties:
      environmentName:
        type: string
        description: The name or CRN of the environment.
  StopEnvironmentResponse:
    type: object
    description: Response object for a stop environment request.
    properties:
      operationId:
        type: string
        description: Unique operation ID assigned to this command execution. Use this identifier with 'get-operation' to track status and retrieve detailed results.
  DeleteCredentialRequest:
    type: object
    description: Request object for a delete credential request.
    required:
      - credentialName
    properties:
      credentialName:
        type: string
        description: The name or CRN of the credential.
  DeleteCredentialResponse:
    type: object
    description: Response object for a delete credential request.
  SyncAllUsersRequest:
    type: object
    description: Request object for a All Users and Groups Sync.
    properties:
      environmentNames:
        type: array
        description: List of environments to be synced. If not present, all environments will be synced.
        items:
          type: string
      actorCrns:
        type: array
        description: List of actor crns to be synced. If not present, all actors with environment access will be synced.
        items:
          type: string
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        x-no-compatibility-guarantee: true
  SyncAllUsersResponse:
    type: object
    description: All Users and Groups Sync Response Object
    required:
      - operationId
    properties:
      operationId:
        type: string
        description: Unique operation ID assigned to this command execution. Use this identifier with 'get-operation' to track status and retrieve detailed results.
      operationType:
        description: Operation type, set password or user sync
        $ref: '#/definitions/OperationType'
      status:
        description: Status of this operation. Status can be one of these values (REQUESTED, RUNNING, COMPLETED, FAILED, REJECTED, TIMEDOUT)
        $ref: '#/definitions/SyncStatus'
      success:
        type: array
        description: List of sync operation details for all succeeded environments.
        items:
          $ref: '#/definitions/SyncOperationDetails'
      failure:
        type: array
        description: List of sync operation details for all failed envs.
        items:
          $ref: '#/definitions/SyncOperationDetails'
      error:
        type: string
        description: If there is any error associated.
      startTime:
        type: string
        description: Sync operation start timestamp.
      endTime:
        type: string
        description: Sync operation end timestamp.
      startDate:
        type: string
        format: date-time
        description: Date when the sync operation started.
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        x-no-compatibility-guarantee: true
      endDate:
        type: string
        format: date-time
        description: Date when the sync operation ended. Omitted if operation has not ended.
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        x-no-compatibility-guarantee: true
  SyncUserRequest:
    type: object
    description: Request Object for single user sync operation.
  SyncUserResponse:
    type: object
    description: Response Object for single user sync operation.
    required:
      - operationId
    properties:
      operationId:
        type: string
        description: Unique operation ID assigned to this command execution. Use this identifier with 'get-operation' to track status and retrieve detailed results.
      operationType:
        description: Operation type, set password or user sync
        $ref: '#/definitions/OperationType'
      status:
        description: Status of this operation. Status can be one of these values (REQUESTED, RUNNING, COMPLETED, FAILED, REJECTED, TIMEDOUT)
        $ref: '#/definitions/SyncStatus'
      success:
        type: array
        description: List of sync operation details for all succeeded environments.
        items:
          $ref: '#/definitions/SyncOperationDetails'
      failure:
        type: array
        description: List of sync operation details for all failed envs.
        items:
          $ref: '#/definitions/SyncOperationDetails'
      error:
        type: string
        description: If there is any error associated.
      startTime:
        type: string
        description: Sync operation start timestamp.
      endTime:
        type: string
        description: Sync operation end timestamp.
      startDate:
        type: string
        format: date-time
        description: Date when the sync operation started.
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        x-no-compatibility-guarantee: true
      endDate:
        type: string
        format: date-time
        description: Date when the sync operation ended. Omitted if operation has not ended.
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        x-no-compatibility-guarantee: true
  SetPasswordRequest:
    type: object
    description: Request object for set password request. (deprecated)
    x-deprecated: true
    required:
      - password
    properties:
      password:
        type: string
        description: password field.
        x-sensitive: true
      environmentCRNs:
        type: array
        description: Optional list of environment CRNs. Only the passed environments user's password will be affected. If this field is not present, all environments will be affected.
        items:
          type: string
  SetPasswordResponse:
    type: object
    description: Response object for set password request. (deprecated)
    x-deprecated: true
    required:
      - operationId
    properties:
      operationId:
        type: string
        description: Unique operation ID assigned to this command execution. Use this identifier with 'get-operation' to track status and retrieve detailed results.
      operationType:
        description: Operation type, set password or user sync
        $ref: '#/definitions/OperationType'
      status:
        description: Status of this operation. Status can be one of these values (REQUESTED, RUNNING, COMPLETED, FAILED, REJECTED, TIMEDOUT)
        $ref: '#/definitions/SyncStatus'
      success:
        type: array
        description: List of sync operation details for all succeeded environments.
        items:
          $ref: '#/definitions/SyncOperationDetails'
      failure:
        type: array
        description: List of sync operation details for all failed envs.
        items:
          $ref: '#/definitions/SyncOperationDetails'
      error:
        type: string
        description: If there is any error associated.
      startTime:
        type: string
        description: Sync operation start timestamp.
      endTime:
        type: string
        description: Sync operation end timestamp.
      startDate:
        type: string
        format: date-time
        description: Date when the sync operation started.
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        x-no-compatibility-guarantee: true
      endDate:
        type: string
        format: date-time
        description: Date when the sync operation ended. Omitted if operation has not ended.
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        x-no-compatibility-guarantee: true
  SyncStatusRequest:
    type: object
    description: Request object for Sync Status.
    required:
      - operationId
    properties:
      operationId:
        type: string
        description: operationId for the previously requested sync operation for user sync or password.
  SyncStatusResponse:
    type: object
    description: Response object for Sync Operation.
    required:
      - operationId
    properties:
      operationId:
        type: string
        description: Unique operation ID assigned to this command execution. Use this identifier with 'get-operation' to track status and retrieve detailed results.
      operationType:
        description: Operation type, set password or user sync
        $ref: '#/definitions/OperationType'
      status:
        description: Status of this operation. Status can be one of these values (REQUESTED, RUNNING, COMPLETED, FAILED, REJECTED, TIMEDOUT)
        $ref: '#/definitions/SyncStatus'
      success:
        type: array
        description: List of sync operation details for all succeeded environments.
        items:
          $ref: '#/definitions/SyncOperationDetails'
      failure:
        type: array
        description: List of sync operation details for all failed envs.
        items:
          $ref: '#/definitions/SyncOperationDetails'
      error:
        type: string
        description: If there is any error associated.
      startTime:
        type: string
        description: Sync operation start timestamp.
      endTime:
        type: string
        description: Sync operation end timestamp.
      startDate:
        type: string
        format: date-time
        description: Date when the sync operation started.
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        x-no-compatibility-guarantee: true
      endDate:
        type: string
        format: date-time
        description: Date when the sync operation ended. Omitted if operation has not ended.
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        x-no-compatibility-guarantee: true
  LastSyncStatusRequest:
    type: object
    description: Request object for Sync Status.
    required:
      - envNameOrCrn
    properties:
      envNameOrCrn:
        type: string
        description: Name or Crn of the environment.
  ListConnectedDataServicesRequest:
    type: object
    description: Request object for listing connected Data Service(s) for a given environment.
    required:
      - environment
    properties:
      environment:
        type: string
        description: Name or CRN of the environment.
  ListConnectedDataServicesResponse:
    type: object
    description: Response object for listing connected Data Service(s) for a given environment.
    required:
      - result
    properties:
      result:
        type: array
        description: List of connected Data Service for the given environment.
        items:
          $ref: '#/definitions/ConnectedDataService'
  ConnectedDataService:
    type: object
    description: A single entry that contains the name of the given Data Service and its related resource(s).
    required:
      - name
      - clusters
    properties:
      name:
        type: string
        description: The name of the given Data Service.
      clusters:
        type: array
        description: List of resource names for the given Data Service.
        items:
          type: string
  LastSyncStatusResponse:
    type: object
    description: Response object for Sync Operation.
    required:
      - operationId
    properties:
      operationId:
        type: string
        description: Unique operation ID assigned to this command execution. Use this identifier with 'get-operation' to track status and retrieve detailed results.
      operationType:
        description: Operation type, set password or user sync
        $ref: '#/definitions/OperationType'
      status:
        description: Status of this operation. Status can be one of these values (REQUESTED, RUNNING, COMPLETED, FAILED, REJECTED, TIMEDOUT)
        $ref: '#/definitions/SyncStatus'
      success:
        type: array
        description: List of sync operation details for all succeeded environments.
        items:
          $ref: '#/definitions/SyncOperationDetails'
      failure:
        type: array
        description: List of sync operation details for all failed environments.
        items:
          $ref: '#/definitions/SyncOperationDetails'
      error:
        type: string
        description: If there is any error associated. The error will be populated on any error and it may be populated when the operation failure details are empty.
      startDate:
        type: string
        format: date-time
        description: Date when the sync operation started.
      endDate:
        type: string
        format: date-time
        description: Date when the sync operation ended. Omitted if operation has not ended.
  GetEnvironmentUserSyncStateRequest:
    type: object
    description: Request object for retrieving the user sync state of an environment.
    required:
      - environmentName
    properties:
      environmentName:
        type: string
        description: The name or CRN of the environment.
  GetEnvironmentUserSyncStateResponse:
    type: object
    description: Response object for retrieving the user sync state of an environment.
    required:
      - state
    properties:
      state:
        type: string
        enum:
          - UP_TO_DATE
          - STALE
          - SYNC_IN_PROGRESS
          - SYNC_FAILED
        description: The user sync state of the environment.
      userSyncOperationId:
        type: string
        description: Operation Id for the latest user sync operation, if any, run for this environment.
  GetRootCertificateRequest:
    type: object
    description: Request object for obtaining public certificate of an environment.
    required:
      - environmentName
    properties:
      environmentName:
        type: string
        description: The name or CRN of the environment.
  GetRootCertificateResponse:
    type: object
    description: Response object with base64 encoded contents of the public certificate for an environment.
    properties:
      contents:
        type: string
        description: Contents of a certificate.
  GetKeytabRequest:
    type: object
    description: Request object for get keytab request.
    required:
      - environmentName
    properties:
      environmentName:
        type: string
        description: The name or CRN of the environment.
      actorCrn:
        type: string
        description: The CRN of the user or machine user to retrieve the keytab for. If it is not included, it defaults to the user making the request.
  GetKeytabResponse:
    type: object
    description: Request object for get keytab request.
    properties:
      contents:
        type: string
        description: The contents of the keytab encoded as a base64 string.
  GetAutomatedSyncEnvironmentStatusRequest:
    type: object
    description: Request object for getting automated sync environment status.
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    x-hidden-retention: BETA
    required:
      - environmentName
    properties:
      environmentName:
        type: string
        description: The name or CRN of the environment.
  GetAutomatedSyncEnvironmentStatusResponse:
    type: object
    description: Response object for getting automated sync environment status.
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    x-hidden-retention: BETA
    properties:
      environmentCrn:
        type: string
        description: The CRN of the environment.
      syncPendingState:
        type: string
        description: The state to indicate whether the environment is synced or has a sync pending.
        x-hidden-enum-values: QUARANTINED
        enum:
          - UNKNOWN
          - SYNC_PENDING
          - SYNCED
          - SYNC_HALTED
          - QUARANTINED
      lastSyncStatus:
        description: Status of the last automated sync operation for the environment.
        $ref: '#/definitions/LastAutomatedSyncDetails'
  SynchronizeAllEnvironmentsRequest:
    type: object
    description: Request object for synchronizing all environments.
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    x-no-compatibility-guarantee: true
    x-hidden-retention: BETA
  SynchronizeAllEnvironmentsResponse:
    type: object
    description: Response object for synchronizing all environments.
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    x-no-compatibility-guarantee: true
    x-hidden-retention: BETA
  GetIdBrokerMappingsRequest:
    type: object
    description: Request object for getting ID Broker mappings for an environment.
    required:
      - environmentName
    properties:
      environmentName:
        type: string
        description: The name or CRN of the environment.
  GetIdBrokerMappingsResponse:
    type: object
    description: Response object for getting ID Broker mappings for an environment.
    required:
      - mappingsVersion
      - dataAccessRole
      - rangerAuditRole
    properties:
      mappingsVersion:
        type: integer
        format: int64
        description: The version of the mappings.
      dataAccessRole:
        type: string
        description: The cloud provider role to which data access services will be mapped (e.g. an ARN in AWS, a Resource ID in Azure).
      rangerAuditRole:
        type: string
        description: The cloud provider role to which services that write to Ranger audit logs will be mapped (e.g. an ARN in AWS, a Resource ID in Azure). Note that some data access services also write to Ranger audit logs; such services will be mapped to the dataAccessRole, not the rangerAuditRole.
      rangerCloudAccessAuthorizerRole:
        type: string
        description: The cloud provider role to which the Ranger RAZ service will be mapped (e.g. an ARN in AWS, a Resource ID in Azure).
      baselineRole:
        type: string
        description: Deprecated. Please use rangerAuditRole instead.
        x-deprecated: true
      mappings:
        type: array
        description: ID Broker mappings for individual actors and groups. Does not include mappings for data access services. May be empty if no individual mappings are needed.
        items:
          $ref: '#/definitions/IdBrokerMapping'
  SetIdBrokerMappingsRequest:
    type: object
    description: Request object for setting ID Broker mappings for an environment. Overwrites all existing mappings.
    required:
      - environmentName
      - dataAccessRole
    properties:
      environmentName:
        type: string
        description: The name or CRN of the environment.
      dataAccessRole:
        type: string
        description: The cloud provider role to which data access services will be mapped (e.g. an ARN in AWS, a Resource ID in Azure).
      rangerAuditRole:
        type: string
        description: The cloud provider role to which services that write to Ranger audit logs will be mapped (e.g. an ARN in AWS, a Resource ID in Azure). Note that some data access services also write to Ranger audit logs; such services will be mapped to the dataAccessRole, not the rangerAuditRole. ``THIS PARAMETER IS REQUIRED.``
      rangerCloudAccessAuthorizerRole:
        type: string
        description: The cloud provider role to which the Ranger RAZ service will be mapped (e.g. an ARN in AWS, a Resource ID in Azure). This is required in RAZ-enabled environments.
      baselineRole:
        type: string
        description: Deprecated. Please use rangerAuditRole instead.
        x-deprecated: true
      mappings:
        type: array
        description: ID Broker mappings for individual actors and groups. Does not include mappings for data access services. If omitted or set to an empty list, you must also specify the ``--set-empty-mappings`` option, to confirm that you want to remove any existing individual mappings.
        items:
          $ref: '#/definitions/IdBrokerMappingRequest'
      setEmptyMappings:
        type: boolean
        default: false
        description: Whether to install an empty set of individual mappings, deleting any existing mappings. The ``--set-empty-mappings`` option is required if ``--mappings`` is omitted or if its value is an empty list, and disallowed otherwise.
  SetIdBrokerMappingsResponse:
    type: object
    description: Response object for setting ID Broker mappings for an environment.
    required:
      - mappingsVersion
      - dataAccessRole
      - rangerAuditRole
    properties:
      mappingsVersion:
        type: integer
        format: int64
        description: The version of the mappings.
      dataAccessRole:
        type: string
        description: The cloud provider role to which data access services will be mapped (e.g. an ARN in AWS, a Resource ID in Azure).
      rangerAuditRole:
        type: string
        description: The cloud provider role to which services that write to Ranger audit logs will be mapped (e.g. an ARN in AWS, a Resource ID in Azure). Note that some data access services also write to Ranger audit logs; such services will be mapped to the dataAccessRole, not the rangerAuditRole.
      rangerCloudAccessAuthorizerRole:
        type: string
        description: The cloud provider role to which the Ranger RAZ service will be mapped (e.g. an ARN in AWS, a Resource ID in Azure).
      baselineRole:
        type: string
        description: Deprecated. Please use rangerAuditRole instead.
        x-deprecated: true
      mappings:
        type: array
        description: ID Broker mappings for individual actors and groups. Does not include mappings for data access services. May be empty if no individual mappings are needed.
        items:
          $ref: '#/definitions/IdBrokerMapping'
  DeleteIdBrokerMappingsRequest:
    type: object
    description: Request object for deleting ID Broker mappings for an environment.
    x-hidden: true
    x-hidden-reason: 'FOR_CLOUDERA_USE_ONLY: Mappings are deleted automatically when the environment is deleted, so there is no need to call this API in normal production use. Used only for debugging and testing.'
    x-no-compatibility-guarantee: true
    required:
      - environmentCrn
    properties:
      environmentCrn:
        type: string
        description: The CRN of the environment.
  DeleteIdBrokerMappingsResponse:
    type: object
    description: Response object for deleting ID Broker mappings for an environment.
    x-hidden: true
    x-hidden-reason: 'FOR_CLOUDERA_USE_ONLY: Mappings are deleted automatically when the environment is deleted, so there is no need to call this API in normal production use. Used only for debugging and testing.'
    x-no-compatibility-guarantee: true
  SyncIdBrokerMappingsRequest:
    type: object
    description: Request object for synchronizing ID Broker mappings for an environment.
    required:
      - environmentName
    properties:
      environmentName:
        type: string
        description: The name or CRN of the environment.
  SyncIdBrokerMappingsResponse:
    type: object
    description: Response object for synchronizing ID Broker mappings for an environment.
  GetIdBrokerMappingsSyncStatusRequest:
    type: object
    description: Request object for getting ID Broker mappings sync status.
    required:
      - environmentName
    properties:
      environmentName:
        type: string
        description: The name or CRN of the environment.
  GetIdBrokerMappingsSyncStatusResponse:
    type: object
    description: Response object for getting ID Broker mappings sync status.
    required:
      - syncNeeded
      - globalStatus
      - statuses
    properties:
      syncNeeded:
        type: boolean
        description: Whether a sync is needed to bring in-cluster mappings up-to-date.
      globalStatus:
        description: The overall mappings sync status for all datalake clusters in the environment.
        $ref: '#/definitions/SyncStatus'
      statuses:
        type: object
        description: Map of datalake cluster CRN to mappings sync status for each datalake cluster in the environment.
        additionalProperties:
          description: ID Broker sync status.
          $ref: '#/definitions/IdBrokerSyncStatus'
  IdBrokerMapping:
    type: object
    description: A mapping of an actor or group to a cloud provider role.
    required:
      - accessorCrn
      - role
    properties:
      accessorCrn:
        type: string
        description: The CRN of the actor or group.
      role:
        type: string
        description: The cloud provider role (e.g., ARN in AWS, Resource ID in Azure) to which the actor or group is mapped.
  IdBrokerMappingRequest:
    type: object
    description: A mapping of an actor or group to a cloud provider role, used in request objects.
    required:
      - accessorCrn
      - role
    properties:
      accessorCrn:
        type: string
        description: The CRN of the actor or group.
      role:
        type: string
        description: The cloud provider role (e.g., ARN in AWS, Resource ID in Azure) to which the actor or group is mapped.
  IdBrokerSyncStatus:
    type: object
    description: Status of an ID Broker mappings sync operation.
    required:
      - status
    properties:
      status:
        description: The mappings sync summary status.
        $ref: '#/definitions/SyncStatus'
      startDate:
        type: string
        format: date-time
        description: The date when the mappings sync started executing. Omitted if status is NEVER_RUN.
      endDate:
        type: string
        format: date-time
        description: The date when the mappings sync completed or was terminated. Omitted if status is NEVER_RUN or RUNNING.
      errorDetail:
        type: string
        description: The detail of the error. Omitted if status is not FAILED.
  SyncOperationDetails:
    type: object
    description: Details object of the sync operation for success or falure.
    required:
      - environmentCrn
    properties:
      environmentCrn:
        description: environment crn.
        type: string
      message:
        type: string
        description: The detail of the success or failure.
      additionalDetails:
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        type: array
        description: List of additional details for a sync operation.
        items:
          $ref: '#/definitions/SyncOperationAdditionalDetail'
  SyncOperationAdditionalDetail:
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    type: object
    description: Additional detail object for a sync operation.
    required:
      - message
      - details
    properties:
      message:
        description: The message string for an additional detail.
        type: string
      details:
        description: The array of details strings.
        type: array
        items:
          type: string
  SyncStatus:
    type: string
    description: Status of a sync operation.
    enum:
      - NEVER_RUN
      - REQUESTED
      - REJECTED
      - RUNNING
      - COMPLETED
      - FAILED
      - TIMEDOUT
  OperationType:
    type: string
    description: Operation Type.
    enum:
      - SET_PASSWORD
      - USER_SYNC
  RepairOperationDetails:
    type: object
    description: Details object of the repair operation for success or falure.
    required:
      - environmentCrn
    properties:
      environmentCrn:
        description: environment crn.
        type: string
      message:
        type: string
        description: The detail of the success or failure.
  RepairStatus:
    type: string
    description: Status of a repair operation.
    enum:
      - NEVER_RUN
      - REQUESTED
      - REJECTED
      - RUNNING
      - COMPLETED
      - FAILED
      - TIMEDOUT
  GetConfigFilesRequest:
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    x-no-compatibility-guarantee: true
    type: object
    description: Request object for Datalake client configs.
    required:
      - datalakeCrn
    properties:
      datalakeCrn:
        type: string
        description: The CRN of the Datalake
      configSet:
        type: string
        description: config file set to retrieve.
        enum:
          - CLIENT
          - KRB
          - TRUSTSTORE_PEM
          - TRUSTSTORE_JKS
          - VAULT_TRUSTSTORE_PEM
          - VAULT_TRUSTSTORE_JKS
          - DATABASE_TRUSTSTORE_PEM
          - DOCKER_TRUSTSTORE_PEM
          - DWX_DB_HOST
          - DWX_DB_PORT
          - DWX_DB_NAME
          - DWX_DB_USERNAME
          - DWX_DB_PASSWORD
      serviceOverrideList:
        type: array
        description: The Datalakservices to collect client configs.
        items:
          type: string
      additionalServices:
        type: string
        description: A list of service types and role types to get their process configs. The input format must be "serviceType1,roleType1;serviceType2,roleType2". Each service type and its role type maps to a process. Different service type and role type groups are separated by ";" and each service type and its associated role type is separated by ",". The input is case sensitive. If the format is wrong or service is not found, exceptions will be thrown. If no roles are found for the service, no config files for that role and service will be returned. e.g. "HIVE,HIVESERVER2;HUE,HUE_SERVER".
  GetConfigFilesResponse:
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    x-no-compatibility-guarantee: true
    description: Response object for a Datalake client configs response.
    type: object
    properties:
      versionHash:
        type: string
        description: an opaque string (sha or similar) to detect config changes.
      file:
        type: string
        description: config files for the data lake including root cert and krb.conf
        x-sensitive: true
  GetTruststorePasswordRequest:
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    x-no-compatibility-guarantee: true
    type: object
    description: Request object for Datalake truststore password.
    required:
      - datalakeCrn
    properties:
      datalakeCrn:
        type: string
        description: The CRN of the Datalake
  GetTruststorePasswordResponse:
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    x-no-compatibility-guarantee: true
    description: Response object for a Datalake truststore password response.
    type: object
    properties:
      password:
        type: string
        description: truststore password.
        x-sensitive: true
  GetOperationRequest:
    type: object
    description: Request object for tracking the latest (current/last) operation on the environment resource.
    required:
      - environmentName
    properties:
      environmentName:
        type: string
        description: Name of the environment resource.
      operationId:
        type: string
        description: Filter by operation id.
  GetOperationResponse:
    type: object
    description: Response object for tracking the latest (current/last) operation on the environment resource.
    properties:
      operationId:
        type: string
        description: Identifier of the operation.
      operationName:
        type: string
        description: Name of the operation.
      operationStatus:
        type: string
        description: Status of the operation.
        enum:
          - UNKNOWN
          - RUNNING
          - FAILED
          - FINISHED
          - CANCELLED
      started:
        type: string
        format: date-time
        description: Start time of the operation.
      ended:
        type: string
        format: date-time
        description: End time of the operation.
  ExposedService:
    x-form-factors: private
    description: Exposed CDP DC service object.
    type: object
    properties:
      name:
        type: string
        description: Name of service.
      type:
        type: string
        description: Type of service.
      displayName:
        type: string
        description: Display name of service.
      serviceUrl:
        type: string
        description: URL of service.
      serviceVersion:
        type: string
        description: Version of service.
      status:
        type: string
        description: Status of service.
      serviceValidationMessages:
        type: array
        description: List of service validation message.
        items:
          $ref: '#/definitions/EnvValidation'
  CdpCluster:
    x-form-factors: private
    description: Discovered CdpCluster object.
    type: object
    properties:
      name:
        type: string
        description: Name of cluster.
      displayName:
        type: string
        description: Display name of cluster.
      cmUrl:
        type: string
        description: The Url to Cloudera Manager.
      version:
        type: string
        description: Version of Cloudera Manager.
      exposedServices:
        type: array
        description: List of exposed CDP DC services
        items:
          $ref: '#/definitions/ExposedService'
      clusterValidationMessages:
        type: array
        description: List of cluster validation message.
        items:
          $ref: '#/definitions/EnvValidation'
  EnvValidation:
    x-form-factors: private
    description: Object for validating services.
    type: object
    properties:
      severity:
        description: The level of validation severity.
        type: string
        enum:
          - INFO
          - WARNING
          - ERROR
      message:
        type: string
        description: Validation message.
  CheckKubernetesConnectivityRequest:
    x-form-factors: private
    type: object
    description: Request object for checking Kubernetes connectivity.
    required:
      - kubeConfig
    properties:
      kubeConfig:
        type: string
        description: Content of Kubernetes configuration file as a text blob in YAML format.
        x-sensitive: true
      format:
        type: string
        description: Format of Kubernetes configuration file. Defaults to YAML.
        enum:
          - YAML
  CheckKubernetesConnectivityResponse:
    x-form-factors: private
    type: object
    description: Response object for checking Kubernetes connectivity.
    required:
      - status
    properties:
      status:
        type: string
        description: Status of Kubernetes cluster. Also indicates connectivity.
        enum:
          - SUCCESS
          - FAILURE
      message:
        type: string
        description: Message explaining the status. Used for Errors.
  CheckDatabaseConnectivityRequest:
    x-form-factors: private
    type: object
    description: Request object for checking Database connectivity.
    required:
      - host
      - port
      - name
      - username
      - password
    properties:
      host:
        type: string
        description: Host value.
      port:
        type: integer
        format: int32
        description: Port value.
      name:
        type: string
        description: Database name value.
      username:
        type: string
        description: Username value.
      password:
        type: string
        description: Password value.
  CheckDatabaseConnectivityResponse:
    x-form-factors: private
    type: object
    description: Response object for checking Database connectivity.
    required:
      - result
    properties:
      result:
        type: string
        description: Result of the connectivity check.
        enum:
          - SUCCESS
          - FAILURE
      message:
        type: string
        description: Message explaining the result.
  GetFreeipaStatusRequest:
    type: object
    description: Request object for getting the status of the FreeIPA servers.
    required:
      - environmentName
    properties:
      environmentName:
        type: string
        description: The environment name or CRN of the FreeIPA to repair
  FreeIPANodeStatus:
    type: object
    description: The status and issues of an individual FreeIPA node.
    required:
      - hostname
      - status
    properties:
      hostname:
        type: string
        description: The hostname of the ipa instance.
      status:
        type: string
        description: The status of the individual node
        enum:
          - REQUESTED
          - CREATED
          - UNREGISTERED
          - REGISTERED
          - DECOMMISSIONED
          - TERMINATED
          - DELETED_ON_PROVIDER_SIDE
          - DELETED_BY_PROVIDER
          - FAILED
          - STOPPED
          - REBOOTING
          - UNREACHABLE
          - UNHEALTHY
          - DELETE_REQUESTED
      issues:
        type: array
        description: A list of issues the node is having
        items:
          type: string
      instanceId:
        type: string
        description: The instance ID for the instance.
  GetFreeipaStatusResponse:
    type: object
    description: The overall status of the FreeIPA cluster.
    required:
      - environmentCrn
      - environmentName
      - status
      - instances
    properties:
      environmentCrn:
        type: string
        description: The CRN of the environment
      environmentName:
        type: string
        description: The name of the Environment
      status:
        type: string
        description: The overall status of the FreeIPA cluster
        enum:
          - REQUESTED
          - CREATE_IN_PROGRESS
          - AVAILABLE
          - STACK_AVAILABLE
          - UPDATE_IN_PROGRESS
          - UPDATE_REQUESTED
          - UPDATE_FAILED
          - CREATE_FAILED
          - DELETE_IN_PROGRESS
          - DELETE_FAILED
          - DELETE_COMPLETED
          - STOPPED
          - STOP_REQUESTED
          - START_REQUESTED
          - STOP_IN_PROGRESS
          - START_IN_PROGRESS
          - START_FAILED
          - STOP_FAILED
          - WAIT_FOR_SYNC
          - MAINTENANCE_MODE_ENABLED
          - UNREACHABLE
          - UNHEALTHY
          - DELETED_ON_PROVIDER_SIDE
          - UNKNOWN
      instances:
        type: object
        description: Status of individual nodes in the FreeIPA cluster
        additionalProperties:
          description: An Individual Node Status
          $ref: '#/definitions/FreeIPANodeStatus'
  AttachFreeIpaRecipesRequest:
    type: object
    description: Request object for attaching recipes to FreeIPA.
    required:
      - environment
      - recipes
    properties:
      environment:
        type: string
        description: The environment name or CRN of the FreeIPA.
      recipes:
        type: array
        items:
          type: string
        description: The list of recipes to attach.
  AttachFreeIpaRecipesResponse:
    type: object
    description: Response object for attaching recipes to FreeIPA.
  DetachFreeIpaRecipesRequest:
    type: object
    description: Request object for detaching recipes from FreeIPA.
    required:
      - environment
      - recipes
    properties:
      environment:
        type: string
        description: The environment name or CRN of the FreeIPA.
      recipes:
        type: array
        items:
          type: string
        description: The list of recipes to detach.
  DetachFreeIpaRecipesResponse:
    type: object
    description: Response object for detaching recipes from FreeIPA.
  RepairFreeipaRequest:
    type: object
    description: Request object for repairing the FreeIPA servers.
    required:
      - environmentName
    properties:
      environmentName:
        type: string
        description: The environment name or CRN of the FreeIPA to repair
      force:
        type: boolean
        description: Force the repair even if the status if the FreeIPA nodes are good.
        default: false
      instances:
        type: array
        items:
          type: string
        description: The instance Ids to repair. If not provided then all instances are looked at for repair.
      repairType:
        type: string
        description: The type of FreeIPA repair to perform. * AUTO - Currently, this is the same as reboot but this may change in the future. * REBOOT - Repair the failed instances by rebooting them. * REBUILD - Repair the failed instances by deleting them and creating new instances, then replicate data from an existing instance to the new instances.
        enum:
          - AUTO
          - REBOOT
          - REBUILD
  RepairFreeipaResponse:
    type: object
    description: Response object for an FreeIPA repair request.
    properties:
      operationId:
        type: string
        description: Operation ID of the request for this operation. This ID can be used for geting status on the operation.
      status:
        description: Status of this operation.
        $ref: '#/definitions/RepairStatus'
      successfulOperationDetails:
        type: array
        description: List of operation details for all successes. If the repair is only partially successful both successful and failure operation details will be populated.
        items:
          $ref: '#/definitions/RepairOperationDetails'
      failureOperationDetails:
        type: array
        description: List of operation details for failures. If the repair is only partially successful both successful and failure operation details will be populated.
        items:
          $ref: '#/definitions/RepairOperationDetails'
      error:
        type: string
        description: If there is any error associated. The error will be populated on any error and it may be populated when the operation failure details are empty. The error will typically contain the high level information such as the assocated repair failure phase.
      startDate:
        type: string
        format: date-time
        description: Date when the operation started.
      endDate:
        type: string
        format: date-time
        description: Date when the operation ended. Omitted if operation has not ended.
  GetRepairFreeipaStatusRequest:
    type: object
    description: Request object for Repair Status.
    required:
      - operationId
    properties:
      operationId:
        type: string
        description: operationId for the previously requested repair operation.
  GetRepairFreeipaStatusResponse:
    type: object
    description: Response object for Repair Operation.
    properties:
      status:
        description: Status of this operation.
        $ref: '#/definitions/RepairStatus'
      successfulOperationDetails:
        type: array
        description: List of operation details for all successes. If the repair is only partially successful both successful and failure operation details will be populated.
        items:
          $ref: '#/definitions/RepairOperationDetails'
      failureOperationDetails:
        type: array
        description: List of operation details for failures. If the repair is only partially successful both successful and failure operation details will be populated.
        items:
          $ref: '#/definitions/RepairOperationDetails'
      error:
        type: string
        description: If there is any error associated. The error will be populated on any error and it may be populated when the operation failure details are empty. The error will typically contain the high level information such as the assocated repair failure phase.
      startDate:
        type: string
        format: date-time
        description: Date when the operation started.
      endDate:
        type: string
        format: date-time
        description: Date when the operation ended. Omitted if operation has not ended.
  RebuildFreeipaRequest:
    type: object
    description: Request object for rebuilding the FreeIPA servers.
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    x-hidden-retention: BETA
    required:
      - environment
      - freeipaCrn
      - instanceToRestoreFqdn
      - fullBackupStorageLocation
      - dataBackupStorageLocation
    properties:
      environment:
        type: string
        description: The environment name or CRN.
      freeipaCrn:
        type: string
        description: CRN of the FreeIPA to rebuild. Must be in the environment specified in 'environmentName'.
      instanceToRestoreFqdn:
        type: string
        description: The instance's Fully Qualified Domain Name (FQDN) that will be restored from the backups. This must match the FQDN of the instance from which the backup was taken.
      fullBackupStorageLocation:
        type: string
        description: Full backup location on the cloud storage. This backup was created during the provisioning of the instance. By default, no additional full backups are created for a single instance.
      dataBackupStorageLocation:
        type: string
        description: Data/hourly backup location on the cloud storage. These are created in every hour. Usually the lastest one is required, so there won't be any data loss.
  RebuildFreeipaResponse:
    type: object
    description: Response object for a FreeIPA rebuild request.
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    x-hidden-retention: BETA
    properties:
      operation:
        $ref: '#/definitions/OperationResponse'
        description: Operation response of the request for this operation.
      environmentCrn:
        type: string
        description: The environment CRN of the FreeIPA to rebuild
      freeipaCrn:
        type: string
        description: CRN of the FreeIPA to rebuild. Must be in the environment specified in 'environmentName'.
      instanceToRestoreFqdn:
        type: string
        description: The instance's Fully Qualified Domain Name (FQDN) that will be restored from the backups. This must match the FQDN of the instance from which the backup was taken.
      fullBackupStorageLocation:
        type: string
        description: Full backup location on the cloud storage. This backup was created during the provisioning of the instance. By default, no additional full backups are created for a single instance.
      dataBackupStorageLocation:
        type: string
        description: Data/hourly backup location on the cloud storage. These are created in every hour. Usually the lastest one is required, so there won't be any data loss.
  AWSFreeIpaCreationRequest:
    description: Request object for creating FreeIPA in the environment.
    type: object
    properties:
      instanceCountByGroup:
        type: integer
        format: int32
        description: The number of FreeIPA instances to create per group when creating FreeIPA in the environment
      recipes:
        type: array
        items:
          type: string
        description: The recipes for the FreeIPA cluster.
      instanceType:
        type: string
        description: Custom instance type of FreeIPA instances.
      useCloudFormation:
        type: boolean
        x-hidden: true
        x-hidden-reason: FOR_CLOUDERA_USE_ONLY
        description: Flag which when enabled uses AWS as cloud platform variant and uses cloud formation.
      multiAz:
        type: boolean
        description: Flag which marks that the FreeIPA will be deployed in a multi-availability zone way or not.
      spotPercentage:
        type: integer
        format: int32
        minimum: 0
        maximum: 100
        description: Percentage of spot instances.
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
      spotMaxPrice:
        type: number
        format: double
        minimum: 0.001
        maximum: 255
        description: Max hourly price of spot instances.
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
      architecture:
        type: string
        x-hidden: true
        x-hidden-retention: BETA
        x-hidden-reason: IN_DEVELOPMENT
        description: Specifies the CPU architecture of freeipa instance type. Values are ARM64, X86_64.
        enum:
          - ARM64
          - X86_64
  AzureFreeIpaCreationRequest:
    description: Request object for creating FreeIPA in the environment.
    type: object
    properties:
      instanceCountByGroup:
        type: integer
        format: int32
        description: The number of FreeIPA instances to create per group when creating FreeIPA in the environment
      recipes:
        type: array
        items:
          type: string
        description: The recipes for the FreeIPA cluster.
      instanceType:
        type: string
        description: Custom instance type of FreeIPA instances.
      multiAz:
        type: boolean
        default: false
        description: Flag that enables deployment of the FreeIPA in a multi-availability zone.
  GCPFreeIpaCreationRequest:
    description: Request object for creating FreeIPA in the environment.
    type: object
    properties:
      instanceCountByGroup:
        type: integer
        format: int32
        description: The number of FreeIPA instances to create per group when creating FreeIPA in the environment
      recipes:
        type: array
        items:
          type: string
        description: The recipes for the FreeIPA cluster.
      instanceType:
        type: string
        description: Custom instance type of FreeIPA instances.
      multiAz:
        type: boolean
        default: false
        description: Flag that enables deployment of the FreeIPA in a multi-availability zone.
  FreeIpaImageRequest:
    description: Request object for FreeIPA image.
    type: object
    properties:
      catalog:
        type: string
        description: Image catalog to use for FreeIPA image selection.
        x-no-paramfile: true
      id:
        type: string
        description: Image ID to use for creating FreeIPA instances.
      os:
        type: string
        description: The OS to use for creating FreeIPA instances.
  TagRequest:
    description: A label that can be attached to some resources.
    type: object
    required:
      - key
      - value
    properties:
      key:
        type: string
        description: The tag's name.
      value:
        type: string
        description: The associated value of the tag.
  GcpTagRequest:
    description: A label that can be attached to GCP resources. Please refer to Google documentation for the rules https://cloud.google.com/compute/docs/labeling-resources#label_format.
    type: object
    required:
      - key
      - value
    properties:
      key:
        type: string
        description: The tag's name.
      value:
        type: string
        description: The associated value of the tag.
  FreeipaDetails:
    description: Details of a FreeIPA cluster.
    type: object
    properties:
      crn:
        type: string
        description: CRN of the FreeIPA cluster.
      domain:
        type: string
        description: The domain name of the FreeIPA cluster.
      hostname:
        type: string
        description: The hostname of the FreeIPA cluster.
      serverIP:
        type: array
        description: The IP addresses of the FreeIPA cluster.
        uniqueItems: true
        items:
          type: string
      recipes:
        type: array
        description: The recipes for the FreeIPA cluster.
        items:
          type: string
      instances:
        type: array
        description: The instances of the FreeIPA cluster.
        uniqueItems: true
        items:
          $ref: '#/definitions/FreeIpaInstance'
      instanceCountByGroup:
        type: integer
        format: int32
        description: The number of FreeIPA instances to create per group when creating FreeIPA in environment.
      multiAz:
        type: boolean
        description: Whether the given FreeIPA is deployed in a multi-availability zone way or not.
      loadBalancer:
        $ref: '#/definitions/FreeIpaLoadBalancer'
        description: Details of a FreeIPA load balancer.
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
      imageDetails:
        $ref: '#/definitions/ImageInfo'
        description: The image details.
  FreeIpaInstance:
    type: object
    description: Object for a FreeIPA instance providing specific information about the instance.
    properties:
      availabilityZone:
        type: string
        description: The availability zone of the instance.
      discoveryFQDN:
        type: string
        description: The fully qualified domain name of the instance in the service discovery cluster.
      instanceId:
        type: string
        description: The instance ID for the instance.
      instanceGroup:
        type: string
        description: The instance group that contains the instance.
      instanceStatus:
        type: string
        description: The status of the instance.
      instanceStatusReason:
        type: string
        description: The status reason for the instance.
      instanceType:
        type: string
        description: The type of the instance (either GATEWAY or GATEWAY_PRIMARY).
      instanceVmType:
        type: string
        description: The VM type of the instance. Supported values depend on the cloud platform.
      lifeCycle:
        type: string
        description: The life cycle type for the instance (either NORMAL or SPOT).
      privateIP:
        type: string
        description: The private IP of the instance.
      publicIP:
        type: string
        description: The public IP of the instance.
      sshPort:
        type: integer
        format: int32
        description: The SSH port of the instance.
      subnetId:
        type: string
        description: The subnet ID of the instance.
      attachedVolumes:
        type: array
        description: List of volumes attached to this instance.
        items:
          $ref: '#/definitions/AttachedVolumeDetail'
  FreeIpaLoadBalancer:
    description: Details of a FreeIPA load balancer.
    type: object
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    properties:
      resourceId:
        type: string
        description: The cloud resource ID of the provisioned load balancer.
      fqdn:
        type: string
        description: The fully qualified domain name of the load balancer.
      privateIps:
        type: array
        items:
          type: string
        description: The private IP addresses of the load balancer.
  AWSComputeClusterConfigurationRequest:
    description: Request object for creating Externalized compute cluster for the environment.
    type: object
    properties:
      privateCluster:
        type: boolean
        description: If true, creates private cluster.
      kubeApiAuthorizedIpRanges:
        type: array
        items:
          type: string
        description: Kubernetes API authorized IP ranges in CIDR notation. Mutually exclusive with privateCluster.
      workerNodeSubnets:
        type: array
        items:
          type: string
        description: Specify subnets for Kubernetes Worker Nodes
  AzureComputeClusterConfigurationRequest:
    description: Request object for creating Externalized compute cluster for the environment.
    type: object
    properties:
      privateCluster:
        type: boolean
        description: If true, creates private cluster
      kubeApiAuthorizedIpRanges:
        type: array
        items:
          type: string
        description: Kubernetes API authorized IP ranges in CIDR notation. Mutually exclusive with privateCluster.
      outboundType:
        type: string
        enum:
          - udr
        description: Customize cluster egress with defined outbound type in Azure Kubernetes Service.
      workerNodeSubnets:
        type: array
        items:
          type: string
        description: Specify subnets for Kubernetes Worker Nodes
  AWSComputeClusterConfiguration:
    description: Externalized compute cluster configuration for the environment.
    type: object
    properties:
      privateCluster:
        type: boolean
        description: If true, creates private cluster.
      kubeApiAuthorizedIpRanges:
        type: array
        items:
          type: string
        description: Kubernetes API authorized IP ranges in CIDR notation.
      workerNodeSubnets:
        type: array
        items:
          type: string
        description: Subnets for Kubernetes Worker Nodes
  AzureComputeClusterConfiguration:
    description: Externalized compute cluster configuration for the environment.
    type: object
    properties:
      privateCluster:
        type: boolean
        description: If true, creates private cluster.
      kubeApiAuthorizedIpRanges:
        type: array
        items:
          type: string
        description: Kubernetes API authorized IP ranges in CIDR notation.
      outboundType:
        type: string
        description: Cluster egress with defined outbound type in Azure Kubernetes Service.
      workerNodeSubnets:
        type: array
        items:
          type: string
        description: Subnets for Kubernetes Worker Nodes
  AttachedVolumeDetail:
    type: object
    description: The attached volume configuration.
    properties:
      count:
        type: integer
        format: int32
        description: The number of volumes.
      volumeType:
        type: string
        description: The type of volumes.
      size:
        type: integer
        format: int32
        description: The size of each volume in GB.
  ProxyConfig:
    type: object
    description: A proxy config object.
    required:
      - proxyConfigName
      - crn
      - protocol
      - host
      - port
    properties:
      proxyConfigName:
        type: string
        description: The name of the proxy config.
      crn:
        type: string
        description: The CRN of the proxy config.
      protocol:
        type: string
        description: The protocol.
      host:
        type: string
        description: The proxy host.
      port:
        type: integer
        format: int32
        description: The proxy port.
      description:
        type: string
        description: A description for the proxy config.
      noProxyHosts:
        type: string
        description: Comma-separated list of 'CIDR', '[.]host[:port]' (can be a subdomain as well) and 'IP[:port]' entries that should not be proxied. Wildcards are not accepted. For example .cloudera.com,192.168.1.1
      user:
        type: string
        description: The proxy user.
      password:
        type: string
        description: The proxy password.
      inboundProxyCidr:
        type: array
        items:
          type: string
          x-hidden: true
          x-hidden-reason: IN_DEVELOPMENT
        description: Allow these CIDR for Inbound communication.
  CreateProxyConfigRequest:
    type: object
    description: Request object for a create proxy config request.
    required:
      - proxyConfigName
      - protocol
      - host
      - port
    properties:
      proxyConfigName:
        type: string
        description: The name of the proxy config.
      protocol:
        type: string
        description: The protocol.
      host:
        type: string
        description: The proxy host.
      port:
        type: integer
        format: int32
        description: The proxy port.
      description:
        type: string
        description: A description for the proxy config.
      noProxyHosts:
        type: string
        description: Comma-separated list of 'CIDR', '[.]host[:port]' (can be a subdomain as well) and 'IP[:port]' entries that should not be proxied. Wildcards are not accepted. For example .cloudera.com,192.168.1.1
      user:
        type: string
        description: The proxy user.
      password:
        type: string
        description: The proxy password.
      inboundProxyCidr:
        type: array
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        items:
          type: string
        description: Allow these CIDR for Inbound communication.
  CreateProxyConfigResponse:
    type: object
    description: Response object for a create proxy config request.
    required:
      - proxyConfig
    properties:
      proxyConfig:
        description: The proxy config object.
        $ref: '#/definitions/ProxyConfig'
  ListProxyConfigsRequest:
    type: object
    description: Request object for a list proxy configs request.
    properties:
      proxyConfigName:
        type: string
        description: An optional proxy config name to search by.
  ListProxyConfigsResponse:
    type: object
    description: Response object for a list proxy configs request.
    required:
      - proxyConfigs
    properties:
      proxyConfigs:
        type: array
        items:
          $ref: '#/definitions/ProxyConfig'
        description: The proxy configs.
  DeleteProxyConfigRequest:
    type: object
    description: Request object for a delete proxy config request.
    required:
      - proxyConfigName
    properties:
      proxyConfigName:
        type: string
        description: The name or CRN of the proxy config.
  DeleteProxyConfigResponse:
    type: object
    description: Response object for a delete proxy config request.
  SetTelemetryFeaturesRequest:
    type: object
    description: Request object to enable environment level telemetry features.
    required:
      - environmentName
    properties:
      environmentName:
        type: string
        description: The name or CRN of the environment.
      workloadAnalytics:
        type: boolean
        description: Flag to enable environment level workload analytics.
      reportDeploymentLogs:
        type: boolean
        default: false
        x-deprecated: true
        description: '[Deprecated] Flag to enable environment level deployment log collection.'
      cloudStorageLogging:
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        x-no-compatibility-guarantee: true
        type: boolean
        description: Flag to enable environment level cloud storage logging (enabled by default).
  SetTelemetryFeaturesResponse:
    type: object
    description: Response object to enable environment level telemetry features.
  UpdateAzureImageTermsPolicyRequest:
    type: object
    description: Request object to enable or disable automatic acceptance of Azure Marketplace image terms.
    required:
      - accepted
    properties:
      accepted:
        type: boolean
        description: Flag to enable or disable automatic acceptance of Azure Marketplace image terms.
  UpdateAzureImageTermsPolicyResponse:
    type: object
    description: Response object to enable or disable automatic acceptance of Azure Marketplace image terms.
  GetAzureImageTermsPolicyRequest:
    type: object
    description: Request object to retrieve current value of setting that controls automatic acceptance of Azure Marketplace image terms.
  GetAzureImageTermsPolicyResponse:
    type: object
    description: Response object to retrieve current value of setting that controls automatic acceptance of Azure Marketplace image terms.
    required:
      - accepted
    properties:
      accepted:
        type: boolean
        description: Flag denoting whether automatic Azure Marketplace image terms acceptance is enabled or disabled.
  GetEnvironmentSettingRequest:
    x-form-factors: private
    type: object
    description: Request object to query environment configuration settings.
    required:
      - attrs
    properties:
      attrs:
        type: array
        items:
          type: string
        description: List of attributes to query settings for. Non-existant settings will be ignored.
      environmentName:
        type: string
        description: The name or CRN of the environment. Empty to get system wide settings.
  GetEnvironmentSettingResponse:
    x-form-factors: private
    type: object
    properties:
      settings:
        type: object
        additionalProperties:
          type: string
          description: Dictionary of settings found.
        description: Dictionary of settings found.
    description: Response object containing configuration settings.
  SetEnvironmentSettingRequest:
    x-form-factors: private
    type: object
    description: Request object to set environment configuration settings.
    required:
      - settings
    properties:
      settings:
        type: object
        additionalProperties:
          type: string
          description: Dictionary of settings to set.
        description: Dictionary of settings to set.
      environmentName:
        type: string
        description: The name or CRN of the environment. Empty to set system wide settings.
  SetEnvironmentSettingResponse:
    x-form-factors: private
    type: object
    description: Response object to set configuration.
  SetAccountTelemetryRequest:
    type: object
    description: Request object to enable environment level telemetry features.
    properties:
      workloadAnalytics:
        type: boolean
        description: Flag to enable account level workload analytics. (that will be used as a default for environment)
      reportDeploymentLogs:
        type: boolean
        default: false
        x-deprecated: true
        description: '[Deprecated] Flag to enable environment level deployment log collection.'
      cloudStorageLogging:
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        x-no-compatibility-guarantee: true
        type: boolean
        description: Flag to enable account level cloud storage logging. (that will be used as a default for environment)
      rules:
        type: array
        description: List of anonymization rules that are applied on logs that are shipped to Cloudera
        items:
          $ref: '#/definitions/AnonymizationRuleRequest'
  SetAccountTelemetryResponse:
    type: object
    description: Response object for set account level telemetry settings.
    properties:
      workloadAnalytics:
        type: boolean
        description: Flag to enable account level workload analytics. (that will be used as a default for environment)
      reportDeploymentLogs:
        type: boolean
        default: false
        x-deprecated: true
        description: '[Deprecated] Flag to enable account level deployment log collection. (that will be used as a default for environment)'
      cloudStorageLogging:
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        x-no-compatibility-guarantee: true
        type: boolean
        description: Flag to enable account level cloud storage logging. (that will be used as a default for environment)
      rules:
        type: array
        description: List of anonymization rules that are applied on logs that are shipped to Cloudera
        items:
          $ref: '#/definitions/AnonymizationRuleResponse'
  GetAccountTelemetryRequest:
    type: object
    description: Request object for get account level telemetry settings.
  GetAccountTelemetryResponse:
    type: object
    description: Response object for get account level telemetry settings.
    properties:
      workloadAnalytics:
        type: boolean
        description: Flag to enable account level workload analytics. (that will be used as a default for environment)
      reportDeploymentLogs:
        type: boolean
        default: false
        x-deprecated: true
        description: '[Deprecated] Flag to enable account level deployment log collection. (that will be used as a default for environment)'
      cloudStorageLogging:
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        x-no-compatibility-guarantee: true
        type: boolean
        description: Flag to enable account level cloud storage logging. (that will be used as a default for environment)
      rules:
        type: array
        description: List of anonymization rules that are applied on logs that are shipped to Cloudera
        items:
          $ref: '#/definitions/AnonymizationRuleResponse'
  GetAccountTelemetryDefaultRequest:
    type: object
    description: Request object for get default account level telemetry settings.
  GetAccountTelemetryDefaultResponse:
    type: object
    description: Response object for get default account level telemetry settings.
    properties:
      workloadAnalytics:
        type: boolean
        description: Flag to enable account level workload analytics. (that will be used as a default for environment)
      reportDeploymentLogs:
        type: boolean
        default: false
        x-deprecated: true
        description: '[Deprecated] Flag to enable account level deployment log collection. (that will be used as a default for environment)'
      cloudStorageLogging:
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        x-no-compatibility-guarantee: true
        type: boolean
        description: Flag to enable account level cloud storage logging. (that will be used as a default for environment)
      rules:
        type: array
        description: List of anonymization rules that are applied on logs that are shipped to Cloudera
        items:
          $ref: '#/definitions/AnonymizationRuleResponse'
  AnonymizationRuleRequest:
    type: object
    description: Anonymization rule request object that is applied on logs that are sent to Cloudera.
    required:
      - value
    properties:
      value:
        type: string
        description: Pattern of the rule that should be redacted.
      replacement:
        type: string
        default: '[REDACTED]'
        description: If rule pattern (value) matches, that will be replaced for this string (default [REDACTED])
  AnonymizationRuleResponse:
    type: object
    description: Anonymization rule response object rule that is applied on logs that are sent to Cloudera.
    properties:
      value:
        type: string
        description: Pattern of the rule that should be redacted.
      replacement:
        type: string
        description: If rule pattern (value) matches, that will be replaced for this string (default [REDACTED])
  TestAccountTelemetryRulesRequest:
    type: object
    description: Request object for testing text input against provided account telemetry anonymization rules.
    required:
      - testInput
      - rules
    properties:
      testInput:
        type: string
        description: Text input that will be tested against the provided account telemetry anonymization rules.
      rules:
        type: array
        description: List of anonymization rules that are applied on logs that are shipped to Cloudera
        items:
          $ref: '#/definitions/AnonymizationRuleRequest'
  TestAccountTelemetryRulesResponse:
    type: object
    description: Response object for testing anonymization rules for account telemetry.
    properties:
      output:
        type: string
        description: Output text after applying the anonymization rules on the test input.
  FreeipaVmLogRequest:
    type: object
    description: Log descriptor, contains a path and label pair. Used for diagnostics collections.
    required:
      - path
      - label
    properties:
      path:
        type: string
        description: Path of the log file(s) that needs to be collected. (Can be glob wildcard)
      label:
        type: string
        description: Label that will be used to identify a log descriptor. (will be used as a folder inside logs folder)
  FreeipaVmLogResponse:
    type: object
    description: Log descriptor, contains a path and label pair. Used for diagnostics collections.
    properties:
      path:
        type: string
        description: Path of the log file(s) that needs to be collected. (Can be glob wildcard)
      label:
        type: string
        description: Label that will be used to identify a log descriptor. (will be used as a folder inside logs folder)
  CollectFreeipaDiagnosticsRequest:
    type: object
    description: Request object for collecting FreeIPA diagnostics.
    required:
      - environmentName
      - destination
      - description
    properties:
      environmentName:
        type: string
        description: The name or CRN of the environment.
      destination:
        type: string
        enum:
          - SUPPORT
          - CLOUD_STORAGE
          - ENG
          - LOCAL
        description: Destination of the diagnostics collection (Support, Own cloud storage, Engineering or collect only on the nodes)
      description:
        type: string
        description: Additional information / title for the diagnostics collection.
      caseNumber:
        type: string
        description: Optional support case number in case of SUPPORT destination, otherwise only act as additional data.
      labels:
        type: array
        description: Array of labels that can filter logs that are collected during diagnostics collection.
        uniqueItems: true
        items:
          type: string
      startDate:
        type: string
        format: date-time
        description: Date timestamp - collect files only for diagnostics that has higher last modified timestamp value than this.
      endDate:
        type: string
        format: date-time
        description: Date timestamp - collect files only for diagnostics that has lower created timestamp value than this.
      additionalLogs:
        type: array
        description: Array of log descriptors that should be additionally collected during diagnostics collection.
        items:
          $ref: '#/definitions/FreeipaVmLogRequest'
      hosts:
        type: array
        description: Array of host names (fqdn), collection will run only on the dedicated hosts.
        uniqueItems: true
        items:
          type: string
      hostGroups:
        type: array
        description: Array of host groups, collection will run only on the dedicated hosts that belongs to these host groups.
        uniqueItems: true
        items:
          type: string
      excludeHosts:
        type: array
        description: Array of host names (fqdn or IP address), collection will not run on the excluded hosts.
        uniqueItems: true
        items:
          type: string
      skipUnresponsiveHosts:
        type: boolean
        description: Skip unhealthy hosts from the diagnostics collection.
      includeNginxReport:
        type: boolean
        description: Include Nginx report generated by GoAccess (if available).
      includeSaltLogs:
        type: boolean
        description: Include salt minion/master/api system logs in the diagnostics collection.
      includeSarOutput:
        type: boolean
        description: Include SAR (System Activity Report) generated outputs in the diagnostics collection (if available).
      updatePackage:
        type: boolean
        default: false
        description: If enabled, required package (cdp-telemetry) will be upgraded or installed on the nodes. (useful if package is not installed or needs to be upgraded) Network is required for this operation.
      storageValidation:
        type: boolean
        default: false
        description: Enable/disable node level storage validation (can be disabled for example, if you have too many hosts and do not want to do too much parallel writes to s3/abfs)
  CollectFreeipaDiagnosticsResponse:
    type: object
    description: Response object for collecting FreeIPA diagnostics.
    properties:
      operationId:
        type: string
        description: Unique operation ID assigned to this command execution. Use this identifier with 'get-operation' to track status and retrieve detailed results.
  ListFreeipaDiagnosticsRequest:
    type: object
    description: Request object for listing recent FreeIPA diagnostics collections.
    required:
      - environmentName
    properties:
      environmentName:
        type: string
        description: The name or CRN of the environment.
  ListFreeipaDiagnosticsResponse:
    type: object
    description: Response object for listing recent FreeIPA diagnostics collections.
    properties:
      collections:
        type: array
        description: description.
        items:
          $ref: '#/definitions/FreeipaDiagnosticsCollectionResponse'
  FreeipaDiagnosticsCollectionResponse:
    type: object
    description: Response object for diagnostic collection flow details.
    properties:
      status:
        type: string
        description: Status of the diagnostics collection flow.
        enum:
          - RUNNING
          - FAILED
          - FINISHED
          - CANCELLED
      flowId:
        type: string
        description: Flow ID of the diagnostics collection flow.
      flowState:
        type: string
        description: Current state of the diagnostics collection flow.
      created:
        type: string
        format: date-time
        description: Creation date of the diagnostics collection flow.
      progressPercentage:
        type: integer
        description: Progress percentage of the diagnostics collection flow (maximum value if finished).
        format: int32
      collectionDetails:
        $ref: '#/definitions/FreeipaDiagnosticsCollectionDetailsResponse'
        description: Additional details about the diagnostics collection.
  FreeipaDiagnosticsCollectionDetailsResponse:
    type: object
    description: Response object for diagnostic collection details.
    properties:
      case:
        type: string
        description: Case number for the diagnostics collection.
      output:
        type: string
        description: Output destination of the diagnostics collection.
      destination:
        type: string
        description: Destination type of the diagnostics collection.
      description:
        type: string
        description: Description of the diagnostics collection.
      accountId:
        type: string
        description: Account Id that was used for the diagnostics collection.
      resourceCrn:
        type: string
        description: Crn of the Freeipa cluster.
      clusterVersion:
        type: string
        description: Version of the cluster that was used for the diagnostics collection.
      statusReason:
        type: string
        x-hidden: true
        x-hidden-reason: IN_DEVELOPMENT
        description: Status message of a failed diagnostics.
  CancelFreeipaDiagnosticsRequest:
    type: object
    description: Request object for cancel running FreeIPA diagnostics collections.
    required:
      - environmentName
    properties:
      environmentName:
        type: string
        description: The name or CRN of the environment.
  CancelFreeipaDiagnosticsResponse:
    type: object
    description: Response object for cancel running FreeIPA diagnostics collections.
  GetFreeipaLogDescriptorsRequest:
    type: object
    description: Request object for obtaining log descriptors. (that are used for diagnostics collection)
  GetFreeipaLogDescriptorsResponse:
    type: object
    description: Response object for obtaining log descriptors. (useful for diagnostics collection filtering)
    properties:
      logs:
        type: array
        description: Array of log descriptors. (useful for diagnostics collection filtering)
        items:
          $ref: '#/definitions/FreeipaVmLogResponse'
  EnvironmentTags:
    type: object
    description: Environment tags object containing the tag values defined for the environment.
    properties:
      userDefined:
        type: object
        description: Map of tag names to values, for user-defined tags.
        additionalProperties:
          type: string
          description: Tag value for the user-defined tag.
      defaults:
        type: object
        description: Map of tag names to values, for default tags.
        additionalProperties:
          type: string
          description: Tag value for the default tag.
  CloudProviderType:
    type: string
    description: Supported cloud providers in CLI generate commands
    x-hidden: true
    x-hidden-reason: FOR_CLOUDERA_USE_ONLY
    enum:
      - AWS
      - AWS_GOV
      - AZURE
      - GCP
  TunnelType:
    type: string
    description: Supported CCM versions
    enum:
      - CCM
      - CCMV2
      - CCMV2_JUMPGATE
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    x-hidden-retention: BETA
  CcmV2TlsType:
    type: string
    description: CCM V2 TLS connectivity types
    x-hidden: true
    x-hidden-reason: FOR_CLOUDERA_USE_ONLY
    enum:
      - ONE_WAY_TLS
      - TWO_WAY_TLS
  GetAuditCredentialPrerequisitesRequest:
    type: object
    description: Request object for getting the audit credential prerequisites for the given cloud platform.
    required:
      - cloudPlatform
    properties:
      cloudPlatform:
        type: string
        enum:
          - AWS
          - AZURE
          - GCP
        description: The kind of cloud platform.
  GetAuditCredentialPrerequisitesResponse:
    type: object
    description: The audit credential prerequisites.
    required:
      - cloudPlatform
    properties:
      cloudPlatform:
        type: string
        description: The name of the given cloud platform
      accountId:
        type: string
        description: The provider specific identifier of the account/subscription/project that is used by Cloudbreak.
      aws:
        description: Provides the external id and policy JSON (this one encoded in base64) for AWS credential creation.
        $ref: '#/definitions/AwsCredentialPrerequisitesResponse'
      azure:
        description: Provides the app creation command and role definition Json for Azure credential creation.
        $ref: '#/definitions/AzureCredentialPrerequisitesResponse'
      gcp:
        description: Provides the service account creation command for GCP credential creation.
        $ref: '#/definitions/GcpCredentialPrerequisitesResponse'
  GetGovCloudAuditCredentialPrerequisitesRequest:
    type: object
    description: Request object for getting the audit credential prerequisites for GovCloud for the enabled providers.
    required:
      - cloudPlatform
    properties:
      cloudPlatform:
        type: string
        description: The kind of cloud platform. As of now, the following cloud provider is accepted as the value of this field - AWS
  GetGovCloudAuditCredentialPrerequisitesResponse:
    type: object
    description: The audit credential prerequisites for GovCloud for the enabled providers.
    properties:
      accountId:
        type: string
        description: The provider specific identifier of the account/subscription/project.
      aws:
        description: Provides the external id and policy JSON (this one encoded in base64) for AWS credential creation.
        $ref: '#/definitions/AwsCredentialPrerequisitesResponse'
  ListAuditCredentialsRequest:
    type: object
    description: Request object for a list audit credentials request.
  ListAuditCredentialsResponse:
    type: object
    description: Response object for a list audit credentials request.
    required:
      - credentials
    properties:
      credentials:
        type: array
        items:
          $ref: '#/definitions/Credential'
        description: The credentials.
  SetAWSAuditCredentialRequest:
    type: object
    description: Request object for a set AWS audit credential request.
    required:
      - roleArn
    properties:
      roleArn:
        type: string
        description: The ARN of the delegated access role.
  SetAWSAuditCredentialResponse:
    type: object
    description: Response object for a set AWS audit credential request.
    required:
      - credential
    properties:
      credential:
        description: The credential object.
        $ref: '#/definitions/Credential'
  SetAWSGovCloudAuditCredentialRequest:
    type: object
    description: Request object for a set AWS GovCloud audit credential request.
    required:
      - roleArn
    properties:
      roleArn:
        type: string
        description: The ARN of the delegated access role.
  SetAWSGovCloudAuditCredentialResponse:
    type: object
    description: Response object for a set AWS GovCloud audit credential request.
    required:
      - credential
    properties:
      credential:
        description: The credential object.
        $ref: '#/definitions/Credential'
  SetAzureAuditCredentialRequest:
    type: object
    description: Request object for a set Azure audit credential request.
    required:
      - subscriptionId
      - tenantId
      - appBased
    properties:
      subscriptionId:
        type: string
        description: The Azure subscription ID.
      tenantId:
        type: string
        description: The Azure AD tenant ID for the Azure subscription.
      appBased:
        type: object
        description: Additional configurations needed for app-based authentication.
        required:
          - applicationId
          - secretKey
        properties:
          applicationId:
            type: string
            description: The id of the application registered in Azure.
          secretKey:
            type: string
            x-sensitive: true
            description: The client secret key (also referred to as application password) for the registered application.
  SetAzureAuditCredentialResponse:
    type: object
    description: Response object for a set Azure audit credential request.
    required:
      - credential
    properties:
      credential:
        description: The credential object.
        $ref: '#/definitions/Credential'
  SetGCPAuditCredentialRequest:
    type: object
    description: Request object for a set GCP audit credential request.
    required:
      - credentialKey
    properties:
      credentialKey:
        type: string
        x-sensitive: true
        description: The JSON key for the service account. Please use the local path when using the CLI (e.g. file:///absolute/path/to/cred.json) to avoid exposing the keys in the command line history.
  SetGCPAuditCredentialResponse:
    type: object
    description: Response object for a set GCP audit credential request.
    required:
      - credential
    properties:
      credential:
        description: The credential object.
        $ref: '#/definitions/Credential'
  DeleteAuditCredentialRequest:
    type: object
    description: Request object for a delete audit credential request.
    required:
      - credentialName
    properties:
      credentialName:
        type: string
        description: The name or CRN of the credential.
  DeleteAuditCredentialResponse:
    type: object
    description: Response object for a delete audit credential request.
  SetEndpointAccessGatewayRequest:
    type: object
    description: Request object to set endpoint access gateway settings.
    required:
      - environment
      - endpointAccessGatewayScheme
    properties:
      environment:
        type: string
        description: The name or CRN of the environment. Empty to get system wide settings.
      endpointAccessGatewayScheme:
        type: string
        description: The scheme for the endpoint gateway. PUBLIC creates an external endpoint that can be accessed over internet. Defaults to PRIVATE which restricts the traffic to be internal to the VPC / Vnet.
        enum:
          - PUBLIC
          - PRIVATE
      endpointAccessGatewaySubnetIds:
        type: array
        items:
          type: string
        description: The subnets to use for endpoint access gateway.
  SetEndpointAccessGatewayResponse:
    type: object
    description: Response object for set endpoint access gateway request.
    properties:
      operationId:
        type: string
        description: Unique operation ID assigned to this command execution. Use this identifier with 'get-operation' to track status and retrieve detailed results.
  LastAutomatedSyncDetails:
    type: object
    description: The details of the last sync performed by automated user sync.
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    x-hidden-retention: BETA
    required:
      - timestamp
      - status
    properties:
      timestamp:
        type: string
        format: date-time
        description: The time when the sync was processed.
      status:
        type: string
        description: The status of the sync.
        enum:
          - UNKNOWN
          - SUCCESS
          - FAILED
      statusMessages:
        type: array
        description: Additional detail related to the status.
        items:
          type: string
  ValidateAwsCloudStorageRequest:
    type: object
    description: Request object for AWS environment cloud storage validation.
    required:
      - credentialCrn
      - storageLocation
      - instanceProfile
    properties:
      credentialCrn:
        type: string
        description: The CRN of the credential.
      storageLocation:
        type: string
        description: AWS S3 storage bucket location for logging.
      instanceProfile:
        type: string
        description: AWS instance profile.
  ValidateAwsCloudStorageResponse:
    type: object
    description: Response object for AWS environment cloud storage validation.
    properties:
      status:
        description: Validation result. Allowed values are "OK", "ACCESS_DENIED", "ERROR", "RESOURCE_NOT_FOUND".
        type: string
      error:
        description: Error message if validation failed.
        type: string
  ValidateAzureCloudStorageRequest:
    type: object
    description: Request object for Azure environment cloud storage validation.
    required:
      - credentialCrn
      - storageLocation
    properties:
      credentialCrn:
        type: string
        description: The CRN of the credential.
      storageLocation:
        type: string
        description: Azure storage location for logging.
      managedIdentity:
        type: string
        description: Azure managed identity.
      accountKey:
        description: Azure account key.
        type: string
      accountName:
        description: Azure account name.
        type: string
      secure:
        description: Azure secure flag.
        type: boolean
  ValidateAzureCloudStorageResponse:
    type: object
    description: Response object for Azure environment cloud storage validation.
    properties:
      status:
        description: Validation result. Allowed values are "OK", "ACCESS_DENIED", "ERROR", "RESOURCE_NOT_FOUND".
        type: string
      error:
        description: Error message if validation failed.
        type: string
  SetCatalogRequest:
    type: object
    description: The request object to set catalog for a FreeIPA.
    required:
      - environment
      - catalog
    properties:
      environment:
        type: string
        description: The name or CRN of the affected environment that holds the FreeIPA installation.
      catalog:
        type: string
        description: URL of the FreeIPA catalog to be used.
        x-no-paramfile: true
  SetCatalogResponse:
    type: object
    description: The response object to set catalog for a FreeIPA request.
  ExtractCatalogRequest:
    type: object
    description: The request object to extract catalog for a FreeIPA installation.
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    required:
      - environment
    properties:
      environment:
        type: string
        description: The name or CRN of the affected environment that holds the FreeIPA installation.
  ExtractCatalogResponse:
    type: object
    description: The response object to extract catalog for a FreeIPA request.
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    properties:
      images:
        $ref: '#/definitions/Images'
        description: Images in the catalog.
      versions:
        $ref: '#/definitions/Versions'
        description: Versions in the catalog.
  Images:
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    type: object
    description: List of the images.
    properties:
      freeIpaImages:
        type: array
        items:
          $ref: '#/definitions/Image'
        description: List of the FreeIPA-related images.
  Versions:
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    type: object
    description: List of the versions.
    properties:
      freeipa:
        type: array
        items:
          $ref: '#/definitions/FreeIpaVersions'
        description: List of the FreeIPA-related versions.
  Image:
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    type: object
    description: Basic information about an image.
    properties:
      created:
        type: integer
        format: int64
        description: Image creation timestamp.
      date:
        type: string
        description: The date when the image was created.
      description:
        type: string
        description: Description of the image.
      advertised:
        x-nullable: true
        type: boolean
        description: Indicates the visibility of the imgae in the catalog.
      os:
        type: string
        description: Installed OS of the image.
      osType:
        type: string
        description: The distribution family of OS installed on the image.
      uuid:
        type: string
        description: The UUID of the image.
      images:
        $ref: '#/definitions/ImageReferenceSet'
        description: Available regions and images for each cloud provider.
      packageVersions:
        type: object
        description: Package versions.
        additionalProperties:
          type: string
  ImageReferenceSet:
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    type: object
    description: Detailed set of cloud providers region to image mappings.
    properties:
      aws:
        type: object
        description: AWS-related region-to-image mappings.
        additionalProperties:
          type: string
      azure:
        type: object
        description: Azure-related region-to-image mappings.
        additionalProperties:
          type: string
      gcp:
        type: object
        description: GCP-related region-to-image mappings.
        additionalProperties:
          type: string
  FreeIpaVersions:
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    type: object
    description: FreeIPA-related versions and images.
    properties:
      images:
        type: array
        description: List of image UUIDs.
        items:
          type: string
      defaults:
        type: array
        description: List of default image UUIDs.
        items:
          type: string
      versions:
        type: array
        description: List of versions.
        items:
          type: string
  UpgradeFreeipaRequest:
    type: object
    description: The request object for FreeIPA upgrade.
    required:
      - environmentName
    properties:
      environmentName:
        type: string
        description: The name or CRN of the environment.
      imageId:
        type: string
        description: Target image ID for upgrade.
      allowMajorOsUpgrade:
        type: boolean
        description: Allows the upgrade to a subsequent major OS version in the series.
  UpgradeFreeipaResponse:
    type: object
    description: The response object for FreeIPA upgrade.
    properties:
      targetImage:
        description: Image selected for upgrade.
        $ref: '#/definitions/ImageInfoResponse'
      originalImage:
        description: Original, current image.
        $ref: '#/definitions/ImageInfoResponse'
      operationId:
        description: Unique operation ID assigned to this command execution. Use this identifier with 'get-operation' to track status and retrieve detailed results.
        type: string
  GetFreeipaUpgradeOptionsRequest:
    type: object
    description: The request object for retrieving FreeIPA upgrade candidates.
    required:
      - environment
    properties:
      environment:
        type: string
        description: The name or the CRN of the environment.
      catalog:
        type: string
        description: The URL of the source image catalog. If not specify this option we'll use image catalog of the current image.
      allowMajorOsUpgrade:
        type: boolean
        description: Allows the upgrade to a subsequent major OS version in the series.
  GetFreeipaUpgradeOptionsResponse:
    type: object
    description: The response object with available FreeIPA upgrade candidates.
    properties:
      images:
        type: array
        description: The list of the upgrade candidates.
        items:
          $ref: '#/definitions/ImageInfoResponse'
      currentImage:
        description: The current image.
        $ref: '#/definitions/ImageInfoResponse'
  UpscaleFreeipaRequest:
    type: object
    description: The request object for FreeIPA upscale.
    required:
      - environmentName
      - targetAvailabilityType
    properties:
      environmentName:
        type: string
        description: The name or CRN of the environment.
      targetAvailabilityType:
        type: string
        enum:
          - TWO_NODE_BASED
          - HA
        description: The target FreeIPA availability type.
  UpscaleFreeipaResponse:
    type: object
    description: The response object for FreeIPA upscale.
    properties:
      originalAvailabilityType:
        type: string
        enum:
          - NON_HA
          - TWO_NODE_BASED
        description: The original FreeIPA availability type.
      targetAvailabilityType:
        type: string
        enum:
          - HA
        description: The target FreeIPA availability type.
      operationId:
        description: UUID of the request for this operation. This ID can be used to get the status of the operation.
        type: string
  DownscaleFreeipaRequest:
    type: object
    description: The request object for FreeIPA downscale. Either targetAvailabilityType or instances
    required:
      - environmentName
    properties:
      environmentName:
        type: string
        description: The name or CRN of the environment.
      targetAvailabilityType:
        type: string
        enum:
          - HA
          - TWO_NODE_BASED
        description: The target FreeIPA availability type.
      instances:
        type: array
        items:
          type: string
        description: The instance Ids to downscale.
      force:
        type: boolean
        description: Force the downscale regardless of the status of the FreeIPA nodes and skip some validations.
        default: false
  DownscaleFreeipaResponse:
    type: object
    description: The response object for FreeIPA downscale.
    properties:
      originalAvailabilityType:
        type: string
        enum:
          - HA
        description: The target FreeIPA availability type.
      targetAvailabilityType:
        type: string
        enum:
          - HA
          - TWO_NODE_BASED
        description: The target FreeIPA availability type.
      operationId:
        description: UUID of the request for this operation. This ID can be used to get the status of the operation.
        type: string
  StartFreeIpaVerticalScalingRequest:
    type: object
    description: The request object for FreeIPA vertical scaling.
    required:
      - environment
      - instanceTemplate
    properties:
      environment:
        type: string
        description: The name or CRN of the environment.
      instanceTemplate:
        description: Instance template that specifies the core information for the vertical scale.
        $ref: '#/definitions/InstanceTemplate'
  StartFreeIpaVerticalScalingResponse:
    type: object
    description: The response object for FreeIPA vertical scaling.
    properties:
      result:
        type: string
        description: The result of the operation.
      operationId:
        type: string
        description: Unique operation ID assigned to this command execution. Use this identifier with 'get-operation' to track status and retrieve detailed results.
  InstanceTemplate:
    type: object
    description: Instance template that specifies the core information for the instances.
    properties:
      attachedVolumes:
        type: array
        description: The attached volume configuration(s).
        items:
          $ref: '#/definitions/AttachedVolume'
      awsProperties:
        description: AWS specific FreeIPA parameters.
        $ref: '#/definitions/AwsFreeIpaInstanceTemplateParams'
      instanceType:
        type: string
        description: The type of the instance.
  AttachedVolume:
    type: object
    description: The attached volume configuration.
    properties:
      count:
        type: integer
        format: int32
        description: The number of volumes.
      volumeType:
        type: string
        description: The type of the volumes.
      size:
        type: integer
        format: int64
        description: The size of each volume in GB.
  AwsFreeIpaInstanceTemplateParams:
    type: object
    description: AWS specific FreeIPA parameters.
    properties:
      spotPercentage:
        type: integer
        format: int32
        minimum: 0
        maximum: 100
        description: Percentage of spot instances.
      spotMaxPrice:
        type: number
        format: double
        minimum: 0.001
        maximum: 255
        description: Maximum hourly price of spot instances.
  ImageInfoResponse:
    type: object
    description: Information about FreeIPA image.
    properties:
      catalog:
        type: string
        description: Image catalog URL.
      id:
        type: string
        description: Virtual machine image ID from ImageCatalog, machines of the cluster will be started from this image.
      os:
        type: string
        description: OS type of the image, this property is only considered when no specific image ID is provided.
      imageName:
        type: string
        description: Image name
      date:
        type: string
        description: Creation date of the image from catalog.
      catalogName:
        type: string
        description: Image catalog name.
  ImageInfo:
    type: object
    description: Basic information about an image.
    properties:
      imageId:
        type: string
        description: The ID of the image.
      imageCatalogName:
        type: string
        description: The name of the image catalog of the image.
      imageOs:
        type: string
        description: The OS of the image.
  RetryFreeipaRequest:
    type: object
    description: Request object for retry FreeIPA request.
    required:
      - environment
    properties:
      environment:
        type: string
        description: The name or CRN of the environment.
  RetryFreeipaResponse:
    type: object
    description: Response object for retry FreeIPA operation on an environment.
    properties:
      operationId:
        type: string
        description: Unique operation ID assigned to this command execution. Use this identifier with 'get-operation' to track status and retrieve detailed results.
  UpgradeCcmRequest:
    type: object
    description: Request object for upgrading Cluster Connectivity Manager on an environment.
    x-no-compatibility-guarantee: true
    required:
      - environment
    properties:
      environment:
        type: string
        description: The name or CRN of the environment.
  UpgradeCcmResponse:
    type: object
    description: Response object for upgrading Cluster Connectivity Manager request on an environment.
    x-no-compatibility-guarantee: true
    properties:
      operationId:
        type: string
        description: Unique operation ID assigned to this command execution. Use this identifier with 'get-operation' to track status and retrieve detailed results.
  RotateSaltPasswordRequest:
    type: object
    description: Request object for rotating SaltStack user password on FreeIPA instances (Deprecated).
    x-deprecated: true
    required:
      - environment
    properties:
      environment:
        type: string
        description: The name or CRN of the environment.
  RotateSaltPasswordResponse:
    type: object
    description: Response object for rotating SaltStack user password on FreeIPA instances (Deprecated).
    x-deprecated: true
    properties:
      operationId:
        type: string
        description: Unique operation ID assigned to this command execution. Use this identifier with 'get-operation' to track status and retrieve detailed results.
  RotateFreeipaSecretsRequest:
    type: object
    description: Request object for starting secret rotation for FreeIPA.
    required:
      - environment
      - secretTypes
    properties:
      environment:
        type: string
        description: The environment CRN where FreeIPA is located and we wish to rotate secrets.
      secretTypes:
        type: array
        items:
          type: string
        description: The list of secrets that need replacement.
  RotateFreeipaSecretsResponse:
    type: object
    description: Response object for rotating secrets.
    properties:
      operationId:
        type: string
        description: Unique operation ID assigned to this command execution. Use this identifier with 'get-operation' to track status and retrieve detailed results.
  ListFreeipaSecretTypesRequest:
    type: object
    description: Request for listing possible secret values for Freeipa.
    required:
      - environment
    properties:
      environment:
        type: string
        description: The environment CRN where Freeipa is located.
  ListFreeipaSecretTypesResponse:
    type: object
    description: Response for listing possible secret values for Freeipa.
    required:
      - freeipaSecretTypes
    properties:
      freeipaSecretTypes:
        type: array
        items:
          $ref: '#/definitions/SecretTypeResponse'
        description: The list of secret types supported by FreeIpa.
  SecretTypeResponse:
    x-mutating: false
    type: object
    description: Response object for showing the secret types and descriptions.
    properties:
      secretType:
        type: string
        description: The type of secret that can be used with the rotate-freeipa-secrets command.
      description:
        type: string
        description: The description of the secret type.
  UpdateProxyConfigRequest:
    type: object
    description: Request object for updating the proxy config of the given environment.
    required:
      - environment
    properties:
      environment:
        type: string
        description: The name or CRN of the environment.
      proxyConfigName:
        type: string
        description: The name of the new proxy config for the environment. Either this or the remove proxy flag has to be given.
      removeProxy:
        type: boolean
        description: Flag to indicate that the current proxy config should be removed for the environment. Either this or a proxy config name has to be given.
  UpdateProxyConfigResponse:
    type: object
    description: Response object for updating the proxy config of the given environment.
  UpdateOrchestratorStateRequest:
    type: object
    description: Request object for running orchestrator engine state update on the FreeIPA cluster.
    required:
      - environment
    properties:
      environment:
        type: string
        description: The name or CRN of the environment.
  UpdateOrchestratorStateResponse:
    type: object
    description: Response object for running orchestrator engine state update on the FreeIPA cluster.
    properties:
      operationId:
        type: string
        description: Unique operation ID assigned to this command execution. Use this identifier with 'get-operation' to track status and retrieve detailed results.
  DataServicesRequest:
    type: object
    description: Data Services parameters request of the environment.
    properties:
      azure:
        description: Azure-specific Data Service parameters request.
        $ref: '#/definitions/AzureDataServicesParametersRequest'
  DataServices:
    type: object
    description: Data Services parameters response of the environment.
    properties:
      azure:
        description: Azure-specific Data Service parameters response.
        $ref: '#/definitions/AzureDataServicesParameters'
  AzureDataServicesParametersRequest:
    description: Azure-specific Data Service parameters request.
    type: object
    required:
      - sharedManagedIdentity
    properties:
      sharedManagedIdentity:
        type: string
        description: User-assigned managed identity used by the AKS control plane.
      aksPrivateDnsZoneId:
        type: string
        description: The full Azure resource ID of an existing Private DNS zone used for the AKS.
  AzureDataServicesParameters:
    description: Azure-specific Data Service parameters response.
    type: object
    required:
      - sharedManagedIdentity
    properties:
      sharedManagedIdentity:
        type: string
        description: User-assigned managed identity used by the AKS control plane.
  UpdateDataServiceResourcesRequest:
    type: object
    description: Update Data Services parameters request of the environment.
    required:
      - environment
      - dataServices
    properties:
      environment:
        type: string
        description: The name or CRN of the environment.
      dataServices:
        description: Data Services parameters request of the environment.
        $ref: '#/definitions/DataServicesRequest'
  UpdateDataServiceResourcesResponse:
    type: object
    description: Response object for an update environment Data Service resource request.
    required:
      - environment
    properties:
      environment:
        $ref: '#/definitions/Environment'
        description: The environment.
  CustomDockerRegistryRequest:
    description: The desired custom docker registry for data services to be used.
    type: object
    required:
      - crn
    properties:
      crn:
        type: string
        description: The CRN of the desired custom docker registry for data services to be used.
  CustomDockerRegistryResponse:
    description: The configured custom docker registry for data services.
    type: object
    required:
      - crn
    properties:
      crn:
        type: string
        description: The CRN of the configured custom docker registry for data services on the environment.
  UpdateCustomDockerRegistryRequest:
    description: The desired custom docker registry for data services to be used.
    type: object
    required:
      - environment
      - customDockerRegistry
    properties:
      environment:
        type: string
        description: The name or CRN of the environment.
      customDockerRegistry:
        type: string
        description: The CRN of the desired custom docker registry for data services to be used.
  UpdateCustomDockerRegistryResponse:
    description: The environment with the updated custom docker registry for data services.
    type: object
    required:
      - environment
    properties:
      environment:
        $ref: '#/definitions/Environment'
        description: The environment.
  UpdateFreeipaToAwsImdsV2Request:
    description: The related environment where we update the corresponding FreeIPA to use AWS IMDSv2.
    type: object
    required:
      - environmentCrn
    properties:
      environmentCrn:
        type: string
        description: The CRN of the environment.
  UpdateFreeipaToAwsImdsV2Response:
    type: object
    description: Response object for updating corresponding FreeIPA of the given environment to AWS IMDSv2.
    properties:
      operationId:
        type: string
        description: Unique operation ID assigned to this command execution. Use this identifier with 'get-operation' to track status and retrieve detailed results.
  UpdateFreeipaToAwsImdsV1Request:
    description: The related environment where we update the corresponding FreeIPA to use AWS IMDSv1.
    type: object
    required:
      - environmentCrn
    properties:
      environmentCrn:
        type: string
        description: The CRN of the environment.
  UpdateFreeipaToAwsImdsV1Response:
    type: object
    description: Response object for updating corresponding FreeIPA of the given environment to AWS IMDSv1.
    properties:
      operationId:
        type: string
        description: Unique operation ID assigned to this command execution. Use this identifier with 'get-operation' to track status and retrieve detailed results.
  OperationResponse:
    type: object
    description: Response object for a FreeIPA operation.
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    x-hidden-retention: BETA
    properties:
      operationId:
        type: string
        description: Operation ID of the request for this operation. This ID can be used for getting status of the operation.
      status:
        description: Status of this operation.
        $ref: '#/definitions/OperationStatus'
      successfulOperationDetails:
        type: array
        description: List of details for all successful operations. If the operation is only partially successful both successful and failure operation details will be populated.
        items:
          $ref: '#/definitions/OperationDetails'
      failureOperationDetails:
        type: array
        description: List of details for failed operations. If the operation is only partially successful both successful and failure operation details will be populated.
        items:
          $ref: '#/definitions/OperationDetails'
      error:
        type: string
        description: The error will be populated on any error and it may be populated when the operation failure details are empty. Typically contains high level information such as the associated failure phase.
      startDate:
        type: string
        format: date-time
        description: Date when the operation started.
      endDate:
        type: string
        format: date-time
        description: Date when the operation ended. Omitted if operation has not ended.
  OperationStatus:
    type: string
    description: Status of an operation.
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    x-hidden-retention: BETA
    enum:
      - NEVER_RUN
      - REQUESTED
      - REJECTED
      - RUNNING
      - COMPLETED
      - FAILED
      - TIMEDOUT
  OperationDetails:
    type: object
    description: Details object of the operation for success or falure.
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    x-hidden-retention: BETA
    required:
      - environmentCrn
    properties:
      environmentCrn:
        description: environment crn.
        type: string
      message:
        type: string
        description: The detail of the success or failure.
  GetFreeipaSecretEncryptionKeyIdsRequest:
    type: object
    description: Request object for getting the secret encryption keys' IDs of the FreeIPA cluster.
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    required:
      - environmentCrn
    properties:
      environmentCrn:
        type: string
        description: The CRN of the environment.
  GetFreeipaSecretEncryptionKeyIdsResponse:
    type: object
    description: Response object containing the secret encryption keys' IDs of the FreeIPA cluster.
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    properties:
      encryptionKeyLuks:
        type: string
        description: The LUKS (Linux Unified Key Setup) encryption key of the cluster.
      encryptionKeyCloudSecretManager:
        type: string
        description: The Cloud Secret Manager encryption key of the cluster.
  EnvironmentQuota:
    type: object
    description: Resource pool quota for the Environment.
    properties:
      cpuQuota:
        type: integer
        format: int64
        minimum: 1
        description: CPU quota (in Cores) for the Environment. Must be a positive number. By default, a quota won't be set for this resource type in the environment.
      memoryQuota:
        type: integer
        format: int64
        minimum: 1
        description: Memory quota (in GigaBytes) for the Environment. Must be a positive number. By default, a quota won't be set for this resource type in the environment.
      gpuQuota:
        type: integer
        format: int64
        minimum: 1
        description: GPU quota (in Cores) for the Environment. Must be a positive number. By default, a quota won't be set for this resource type in the environment.
  SecurityRequest:
    type: object
    description: Security related configuration for Data Hub cluster.
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    x-hidden-retention: BETA
    properties:
      seLinux:
        x-entitlement: CDP_SECURITY_ENFORCING_SELINUX
        type: string
        description: Override default SELinux configuration which is PERMISSIVE by default
        enum:
          - PERMISSIVE
          - ENFORCING
  SecurityResponse:
    type: object
    description: Security related configuration for Data Hub cluster.
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    x-hidden-retention: BETA
    properties:
      seLinux:
        x-entitlement: CDP_SECURITY_ENFORCING_SELINUX
        type: string
        description: Override default SELinux configuration which is PERMISSIVE by default
        enum:
          - PERMISSIVE
          - ENFORCING
  UpdateRootVolumeFreeipaRequest:
    type: object
    description: Request object for FreeIpa root volume update.
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    required:
      - environmentCrn
    properties:
      environmentCrn:
        type: string
        description: The CRN of the environment.
      rootDiskOptions:
        description: Disk options for modifying disks.
        $ref: '#/definitions/RootDiskOptions'
  RootDiskOptions:
    type: object
    description: Root volume properties to modify.
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    properties:
      modifyDisks:
        description: Modifies root volume attached to all instances in a group.
        $ref: '#/definitions/ModifyDisks'
  ModifyDisks:
    type: object
    description: Volume configuration.
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    required:
      - size
      - volumeType
    properties:
      size:
        type: integer
        format: int32
        description: Size of disks to modify to on all the instances in GB.
      volumeType:
        type: string
        description: Type of disks to modify to on all the instances.
  UpdateRootVolumeFreeipaResponse:
    type: object
    description: The response object for FreeIpa root volume update.
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    properties:
      result:
        type: string
        description: The result of the operation.
  ModifySelinuxRequest:
    type: object
    description: Request object for modifying SELinux mode on FreeIPA.
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    required:
      - environment
      - selinux
    properties:
      environment:
        type: string
        description: The Environment CRN.
      selinux:
        type: string
        description: SELinux Mode.
        enum:
          - ENFORCING
          - PERMISSIVE
  ModifySelinuxResponse:
    type: object
    description: Response object for modifying SELinux mode on FreeIPA.
    x-hidden: true
    x-hidden-reason: IN_DEVELOPMENT
    required:
      - flowId
      - type
    properties:
      flowId:
        type: string
        description: Flow ID of the modify SELinux flow.
      type:
        type: string
        description: Flow Type of the modify SELinux flow.