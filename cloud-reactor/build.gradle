plugins {
    id "java-library"
}

repositories {
    maven { url = "$repoUrl" }
    maven { url '= "$springRepoUrl"' }
    mavenCentral()
}

jar {
    archiveBaseName = 'cloud-reactor'
    archiveFileName= 'cloud-reactor.jar'
}

dependencies {
    api project(':cloud-reactor-api')
    implementation project(':common-model')
    implementation project(':flow')
    implementation project(':auth-connector')

    implementation group: 'org.slf4j',                     name: 'slf4j-api',                      version: slf4jApiVersion
    implementation group: 'org.springframework',           name: 'spring-tx',                      version: springFrameworkVersion
    implementation group: 'org.springframework',           name: 'spring-aspects',                 version: springFrameworkVersion
    implementation group: 'org.freemarker',                name: 'freemarker',                     version: freemarkerVersion
    implementation group: 'com.google.code.findbugs',      name: 'jsr305',                         version: '3.0.2'
    implementation group: 'com.dyngr',                     name: 'polling',                        version: dyngrPollingVersion

    testImplementation group: 'org.mockito',               name: 'mockito-core',                   version: mockitoVersion
    testImplementation group: 'org.springframework.boot',  name: 'spring-boot-starter',            version: springBootVersion
    testImplementation group: 'org.springframework.boot',  name: 'spring-boot-starter-test',       version: springBootVersion
}

task testJar(type: Jar, dependsOn: testClasses) {
    archiveBaseName = "test-${project.archivesBaseName}"
    archiveClassifier = 'test'
    from sourceSets.test.output
    from sourceSets.main.output
}

configurations {
    tests
}

test {
    if (project.hasProperty("componentTest")) {
        include "com/sequenceiq/cloudbreak/cloud/**"
    } else {
        include "com/sequenceiq/cloudbreak/cloud/**"
    }
}

artifacts {
    tests testJar
}
