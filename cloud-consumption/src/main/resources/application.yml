server:
  servlet:
    context-path: /consumption
  shutdown: graceful
  tomcat:
    mbeanregistry:
      enabled: true

management:
  endpoints:
    web:
      base-path: "/"
      exposure:
        include: info,health,prometheus
      path-mapping:
        prometheus: metrics
  endpoint:
    metrics:
      enabled: true
      export:
        prometheus:
          enabled: true
    prometheus:
      enabled: true
    health:
      probes:
        enabled: true
      group:
        readiness:
          include: "readinessState,hikariState"
  metrics:
    distribution:
      sla:
        "[http.server.requests]": "125ms, 250ms, 500ms, 1s, 2s"
      percentiles:
        "[http.server.requests]": "0.5, 0.95"
cdp.structuredevent:
  rest:
    contentlogging: true
consumption:
  schema.migration.auto: true
  cert.dir: /certs/
  client.id: consumption
  structuredevent:
    rest:
      enabled: false
  db:
    host: localhost
    port: 5432
    env:
      user: postgres
      pass:
      db: consumptiondb
      schema: public
      cert.file: database.crt
      ssl: false
    postgres:
      major:
        version: 10
  threadpool:
    core.size: 40
    capacity.size: 4000
  cloudbreak:
    url: http://localhost:9091
    contextPath: /cb
  environment:
    url: http://localhost:8088
    contextPath: /environmentservice
  intermediate.threadpool:
    core.size: 40
    capacity.size: 4000
  container.threadpool:
    core.size: 40
    capacity.size: 4000
  etc.config.dir: /etc/consumption

spring:
  application:
    name: ConsumptionService
  freemarker:
    template-loader-path: file:/etc/consumption,classpath:/
    prefer-file-system-access: false
  lifecycle:
    timeout-per-shutdown-phase: 60s

rest:
  debug: false

cert:
  validation: true
  ignorePreValidation: false

secret:
  application: consumption/shared
  engine: "com.sequenceiq.cloudbreak.service.secret.vault.VaultKvV2Engine"

vault:
  addr: localhost
  port: 8200
  ssl.enabled: false
  kv.engine.v2.path: secret
  config.enabled: true
  auth:
    type: "token"
    kubernetes:
      service.account.token.path: /var/run/secrets/kubernetes.io/serviceaccount/token
      mount.path: "dps-dev"
      login.role: "cloudbreak.default"

cb:
  enabledplatforms: AWS,AZURE,YARN,GCP,MOCK
  enabledgovplatforms: AWS
  cert:
    dir: /certs/

  address.resolving.timeout: 60000

  cloud.api.executorservice.pool.size: 40
  max:
    azure.resource.name.length: 120
    gcp.resource.name.length: 63
    aws.resource.name.length: 50
    aws.loadbalancer.resource.name.length: 32
    yarn.resource.name.length: 63
  structuredevent:
    rest:
      enabled: true
      contentlogging: true
  aws:
    stopStart.batch.size: 10
    create.batch.size: 8
    spotinstances.enabled: true
    disabled.instance.types:
    hostkey.verify: false
    credential.cache.ttl: 60
    external.id: provision-ambari
    role.session.name: cdp-provisioning
    cf.template.new.path: templates/aws-cf-stack.ftl
    cf.template.newdb.path: templates/aws-cf-dbstack.ftl
    vpcendpoints:
      enabled.gateway.services:

  azure:
    host.name.prefix.length: 255
    database.template.batchSize: 1

  gcp:
    hostkey.verify: false
    disk.encryption.url: https://cloud-certs.storage.googleapis.com/google-cloud-csek-ingress.pem
    stopStart.batch.size: 10
    create.batch.size: 5

  platform.default:
    variants: AWS:AWS
    regions: AWS:eu-west-1,AZURE:North Europe,GCP:europe-west1,YARN:default,MOCK:USA

altus:
  ums:
    host: localhost
    caller: consumption
  audit:
    enabled: true
    endpoint: localhost:8982

crn:
  partition: cdp
  region: us-west-1
